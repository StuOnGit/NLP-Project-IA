{"original_description": "Cette applet permet de passer votre heatzy pilote en mode programmation hebdomadaire lorsque la température extérieure passe en dessous d'une certaine valeur.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Heatzy", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "heatzy.a-set-auto-mode", "Filter code method": "Heatzy.aSetAutoMode.skip(string?: reason)", "Runtime method": "runAction(\"heatzy.a-set-auto-mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "Select supported device.", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the temperature in Paris drops below 5°C, switch my Heatzy pilot to weekly programming mode on the device named \"Living Room Thermostat\"."}
{"original_description": "Every time there is a new completed task in a project., a Signal will be sent to your Das Keyboard.", "trigger_channel": "Asana", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "asana.new_task_completed"}, "trigger_details": [{"section": "Trigger fields", "title": "Which workspace\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which workspace is the project in?", "Slug": "which_workspace", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Project name\nText input", "description": "Text input", "details": {"Label": "Project name or URL:", "Helper text": "Enter the project name exactly as it appears in Asana. The project URL is also accepted.", "Slug": "project_name", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Asana.newTaskCompleted.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Project name\nThe name of the project the task is for.", "description": "The name of the project the task is for.", "details": {"Slug": "project_name", "Filter code": "Asana.newTaskCompleted.ProjectName", "Type": "String", "Example": "Trip to Japan"}}, {"section": "Ingredients", "title": "Task name\nThe name of the task.", "description": "The name of the task.", "details": {"Slug": "task_name", "Filter code": "Asana.newTaskCompleted.TaskName", "Type": "String", "Example": "Build the Asana Channel on IFTTT"}}, {"section": "Ingredients", "title": "Task notes\nThe notes associated with the task.", "description": "The notes associated with the task.", "details": {"Slug": "task_notes", "Filter code": "Asana.newTaskCompleted.TaskNotes", "Type": "String", "Example": "Make it one of the best on IFTTT!"}}, {"section": "Ingredients", "title": "Completed at\nThe date and time the task was completed.", "description": "The date and time the task was completed.", "details": {"Slug": "completed_at", "Filter code": "Asana.newTaskCompleted.CompletedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Assignee\nThe name of the assignee for the project.", "description": "The name of the assignee for the project.", "details": {"Slug": "assignee", "Filter code": "Asana.newTaskCompleted.Assignee", "Type": "String", "Example": "Biff McIFTTT"}}, {"section": "Ingredients", "title": "Workspace\nThe name of the workspace.", "description": "The name of the workspace.", "details": {"Slug": "workspace", "Filter code": "Asana.newTaskCompleted.Workspace", "Type": "String", "Example": "Team Asana"}}, {"section": "Ingredients", "title": "Tags\nThe tags associated with the task. Comma separated if more than one.", "description": "The tags associated with the task. Comma separated if more than one.", "details": {"Slug": "tags", "Filter code": "Asana.newTaskCompleted.Tags", "Type": "String", "Example": "IFTTT, Integrations Save Ingredient"}}, {"section": "Ingredients", "title": "Task url\nThe URL to the task on Asana.", "description": "The URL to the task on Asana.", "details": {"Slug": "task_url", "Filter code": "Asana.newTaskCompleted.TaskURL", "Type": "Web URL", "Example": "asana.com/"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a new task is completed in the \"Trip to Japan\" project on Asana, located in the \"Team Asana\" workspace, send a Signal to the \"Office Keyboard\" device on Das Keyboard Q, coloring the \"Top\" zone with the color \"Red\", and displaying the message \"Task completed: Build the Asana Channel on IFTTT\" with a \"Blink\" effect."}
{"original_description": "Once you home's PM levels return to healthy levels, this sets your Lennox iComfort central air fan back to Auto.", "trigger_channel": "HAVEN IAQ", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "haven_iaq.pm25_event"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which CAM?", "Helper text": "The nickname of the Central Air Monitor", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Rising\nDropdown list", "description": "Dropdown list", "details": {"Label": "Above or Below Threshold?", "Helper text": "The particulate matter Trigger is activated by either crossing over or under the specified threshold value.", "Slug": "rising", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Other", "description": "Text input > Other", "details": {"Label": "Threshold Value", "Helper text": "HAVEN recommended ranges: Good = 0-12, Fair = 12-33, Poor = 33-200. Please consult your HAVEN Pro to determine what range is best for your home.", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Value\nPM 2.5 value when the event was triggered.", "description": "PM 2.5 value when the event was triggered.", "details": {"Slug": "value", "Filter code": "HavenIaq.pm25Event.Value", "Type": "String", "Example": "7.3"}}, {"section": "Ingredients", "title": "Timestamp\nWhen the PM2.5 event was triggered.", "description": "When the PM2.5 event was triggered.", "details": {"Slug": "timestamp", "Filter code": "HavenIaq.pm25Event.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Cam name\nName of the CAM that triggered the event.", "description": "Name of the CAM that triggered the event.", "details": {"Slug": "cam_name", "Filter code": "HavenIaq.pm25Event.CamName", "Type": "String", "Example": "Basement"}}, {"section": "Ingredients", "title": "Threshold\nThreshold crossed that triggered the event.", "description": "Threshold crossed that triggered the event.", "details": {"Slug": "threshold", "Filter code": "HavenIaq.pm25Event.Threshold", "Type": "String", "Example": "11.7"}}, {"section": "Ingredients", "title": "Rising\nWas the value rising or not to trigger the event.", "description": "Was the value rising or not to trigger the event.", "details": {"Slug": "rising", "Filter code": "HavenIaq.pm25Event.Rising", "Type": "String", "Example": "True"}}], "action_channel": "Lennox iComfort", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lennoxicomfort.fanmodeauto", "Filter code method": "Lennoxicomfort.fanmodeauto.skip(string?: reason)", "Runtime method": "runAction(\"lennoxicomfort.fanmodeauto\", {})"}, "action_details": [{"section": "Action fields", "title": "Systems\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Slug": "systems", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the PM2.5 level in my home, as reported by the Central Air Monitor named \"Living Room\", falls below the threshold of 12, which indicates healthy air quality according to HAVEN recommended ranges, then set my Lennox iComfort central air fan, associated with the system named \"Home Heating and Cooling\", back to Auto mode."}
{"original_description": "Once you home's PM levels return to healthy levels, this turns off the Kasa smart switch attached to your purification device.", "trigger_channel": "HAVEN IAQ", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "haven_iaq.pm25_event"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which CAM?", "Helper text": "The nickname of the Central Air Monitor", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Rising\nDropdown list", "description": "Dropdown list", "details": {"Label": "Above or Below Threshold?", "Helper text": "The particulate matter Trigger is activated by either crossing over or under the specified threshold value.", "Slug": "rising", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Other", "description": "Text input > Other", "details": {"Label": "Threshold Value", "Helper text": "HAVEN recommended ranges: Good = 0-12, Fair = 12-33, Poor = 33-200. Please consult your HAVEN Pro to determine what range is best for your home.", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Value\nPM 2.5 value when the event was triggered.", "description": "PM 2.5 value when the event was triggered.", "details": {"Slug": "value", "Filter code": "HavenIaq.pm25Event.Value", "Type": "String", "Example": "7.3"}}, {"section": "Ingredients", "title": "Timestamp\nWhen the PM2.5 event was triggered.", "description": "When the PM2.5 event was triggered.", "details": {"Slug": "timestamp", "Filter code": "HavenIaq.pm25Event.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Cam name\nName of the CAM that triggered the event.", "description": "Name of the CAM that triggered the event.", "details": {"Slug": "cam_name", "Filter code": "HavenIaq.pm25Event.CamName", "Type": "String", "Example": "Basement"}}, {"section": "Ingredients", "title": "Threshold\nThreshold crossed that triggered the event.", "description": "Threshold crossed that triggered the event.", "details": {"Slug": "threshold", "Filter code": "HavenIaq.pm25Event.Threshold", "Type": "String", "Example": "11.7"}}, {"section": "Ingredients", "title": "Rising\nWas the value rising or not to trigger the event.", "description": "Was the value rising or not to trigger the event.", "details": {"Slug": "rising", "Filter code": "HavenIaq.pm25Event.Rising", "Type": "String", "Example": "True"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_off", "Filter code method": "Kasa.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn off", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the Kasa smart switch attached to the purification device when the PM2.5 level drops below 12 at the Basement Central Air Monitor."}
{"original_description": "If your home's PM levels are too high, this sets your Lennox iComfort fan to on, allowing more air to be filtered by your central system. Note: Use a second applet to turn off the device once levels are healthy again.", "trigger_channel": "HAVEN IAQ", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "haven_iaq.pm25_event"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which CAM?", "Helper text": "The nickname of the Central Air Monitor", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Rising\nDropdown list", "description": "Dropdown list", "details": {"Label": "Above or Below Threshold?", "Helper text": "The particulate matter Trigger is activated by either crossing over or under the specified threshold value.", "Slug": "rising", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Other", "description": "Text input > Other", "details": {"Label": "Threshold Value", "Helper text": "HAVEN recommended ranges: Good = 0-12, Fair = 12-33, Poor = 33-200. Please consult your HAVEN Pro to determine what range is best for your home.", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Value\nPM 2.5 value when the event was triggered.", "description": "PM 2.5 value when the event was triggered.", "details": {"Slug": "value", "Filter code": "HavenIaq.pm25Event.Value", "Type": "String", "Example": "7.3"}}, {"section": "Ingredients", "title": "Timestamp\nWhen the PM2.5 event was triggered.", "description": "When the PM2.5 event was triggered.", "details": {"Slug": "timestamp", "Filter code": "HavenIaq.pm25Event.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Cam name\nName of the CAM that triggered the event.", "description": "Name of the CAM that triggered the event.", "details": {"Slug": "cam_name", "Filter code": "HavenIaq.pm25Event.CamName", "Type": "String", "Example": "Basement"}}, {"section": "Ingredients", "title": "Threshold\nThreshold crossed that triggered the event.", "description": "Threshold crossed that triggered the event.", "details": {"Slug": "threshold", "Filter code": "HavenIaq.pm25Event.Threshold", "Type": "String", "Example": "11.7"}}, {"section": "Ingredients", "title": "Rising\nWas the value rising or not to trigger the event.", "description": "Was the value rising or not to trigger the event.", "details": {"Slug": "rising", "Filter code": "HavenIaq.pm25Event.Rising", "Type": "String", "Example": "True"}}], "action_channel": "Lennox iComfort", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lennoxicomfort.fanmodeon", "Filter code method": "Lennoxicomfort.fanmodeon.skip(string?: reason)", "Runtime method": "runAction(\"lennoxicomfort.fanmodeon\", {})"}, "action_details": [{"section": "Action fields", "title": "Systems\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Slug": "systems", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the PM2.5 level in your home exceeds 12, as detected by the Central Air Monitor named \"Living Room\", turn on the Lennox iComfort fan in the system labeled \"Upstairs\" to increase air filtration."}
{"original_description": "If your home's PM levels are too high, this sets your Honeywell Total Connect central blower fan to On, ensuring that more air is moved through your filter. Note: Use a second applet to turn off the fan once levels are healthy again.", "trigger_channel": "HAVEN IAQ", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "haven_iaq.pm25_event"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which CAM?", "Helper text": "The nickname of the Central Air Monitor", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Rising\nDropdown list", "description": "Dropdown list", "details": {"Label": "Above or Below Threshold?", "Helper text": "The particulate matter Trigger is activated by either crossing over or under the specified threshold value.", "Slug": "rising", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Other", "description": "Text input > Other", "details": {"Label": "Threshold Value", "Helper text": "HAVEN recommended ranges: Good = 0-12, Fair = 12-33, Poor = 33-200. Please consult your HAVEN Pro to determine what range is best for your home.", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Value\nPM 2.5 value when the event was triggered.", "description": "PM 2.5 value when the event was triggered.", "details": {"Slug": "value", "Filter code": "HavenIaq.pm25Event.Value", "Type": "String", "Example": "7.3"}}, {"section": "Ingredients", "title": "Timestamp\nWhen the PM2.5 event was triggered.", "description": "When the PM2.5 event was triggered.", "details": {"Slug": "timestamp", "Filter code": "HavenIaq.pm25Event.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Cam name\nName of the CAM that triggered the event.", "description": "Name of the CAM that triggered the event.", "details": {"Slug": "cam_name", "Filter code": "HavenIaq.pm25Event.CamName", "Type": "String", "Example": "Basement"}}, {"section": "Ingredients", "title": "Threshold\nThreshold crossed that triggered the event.", "description": "Threshold crossed that triggered the event.", "details": {"Slug": "threshold", "Filter code": "HavenIaq.pm25Event.Threshold", "Type": "String", "Example": "11.7"}}, {"section": "Ingredients", "title": "Rising\nWas the value rising or not to trigger the event.", "description": "Was the value rising or not to trigger the event.", "details": {"Slug": "rising", "Filter code": "HavenIaq.pm25Event.Rising", "Type": "String", "Example": "True"}}], "action_channel": "Honeywell Total Connect Comfort", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "honeywell_total_connect_comfort.setfan", "Filter code method": "HoneywellTotalConnectComfort.setfan.skip(string?: reason)", "Runtime method": "runAction(\"honeywell_total_connect_comfort.setfan\", {})"}, "action_details": [{"section": "Action fields", "title": "System\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Slug": "system", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fan state\nDropdown list", "description": "Dropdown list", "details": {"Label": "Fan state", "Slug": "fan_state", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setfan.setFan State(string: fan_state)"}}], "filter_code": "", "intent": "When the PM2.5 level in your home exceeds 12, as detected by the Central Air Monitor named \"Living Room\", turn on the Honeywell Total Connect central blower fan to ensure more air is filtered, and keep it on until the levels drop below 11.7."}
{"original_description": "Sets a new indefinite temperature point on the Ecobee thermostat you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.hold_indefinite", "Filter code method": "Ecobee.holdIndefinite.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.hold_indefinite\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Thermostat Name", "Helper text": "Select which thermostat will execute the hold.", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Desired temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Desired Temperature", "Helper text": "The temperature to set the hold to.", "Slug": "desired_temperature", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Set the Ecobee thermostat named \"Living Room Thermostat\" to a new indefinite temperature point of 22°C when the Apilio event \"run_only_at_nighttime\" is triggered between 20:00 and 06:00 with a custom value of \"Green\" for Apilio value1."}
{"original_description": "Turn on light switch at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.turn_switch_off", "Filter code method": "Ecobee.turnSwitchOff.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.turn_switch_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nDropdown list", "description": "Dropdown list", "details": {"Label": "For which light switch?", "Helper text": "This is the name of the light switch you'd like to turn on.", "Slug": "name", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Living Room Light switch at sunset when the temperature is 72 degrees Fahrenheit and the condition is Sunny."}
{"original_description": "Turn a light switch off at sunrise.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.turn_switch_off", "Filter code method": "Ecobee.turnSwitchOff.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.turn_switch_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nDropdown list", "description": "Dropdown list", "details": {"Label": "For which light switch?", "Helper text": "This is the name of the light switch you'd like to turn on.", "Slug": "name", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the living room light switch at sunrise when the outside temperature is above 18 degrees Celsius."}
{"original_description": "Whenever the price hits my threshold, set my ecobee thermostat comfort profile.\n\nThis can be used with other applets to change your ecobee thermostat to a specific Comfort Profile whenever the price goes above of below your set threshold.", "trigger_channel": "ComEd", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ComEd.average_price_change"}, "trigger_details": [{"section": "Trigger fields", "title": "Which season\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which season do you want this to trigger?", "Slug": "which_season", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Which price threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Which price threshold do you want this to trigger?", "Slug": "which_price_threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Trigger type\nDropdown list", "description": "Dropdown list", "details": {"Label": "When to trigger?", "Helper text": "Whether this should trigger when the price exceeds or goes under the provided price threshold", "Slug": "trigger_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "How often to trigger\nDropdown list", "description": "Dropdown list", "details": {"Label": "How often do you want this to trigger?", "Helper text": "Whether this should trigger every time a new average price is above or below the set price or just the first time it goes above or below the value", "Slug": "how_often_to_trigger", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Timestamp\nDate and time the price change occurred.", "description": "Date and time the price change occurred.", "details": {"Slug": "timestamp", "Filter code": "ComEd.averagePriceChange.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Average price\nThe current average price in cents for the hour.", "description": "The current average price in cents for the hour.", "details": {"Slug": "average_price", "Filter code": "ComEd.averagePriceChange.AveragePrice", "Type": "String", "Example": "14.4"}}, {"section": "Ingredients", "title": "From hour\nThe start hour in which this average is applicable.", "description": "The start hour in which this average is applicable.", "details": {"Slug": "from_hour", "Filter code": "ComEd.averagePriceChange.FromHour", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "To hour\nThe end hour in which this average is applicable.", "description": "The end hour in which this average is applicable.", "details": {"Slug": "to_hour", "Filter code": "ComEd.averagePriceChange.ToHour", "Type": "String", "Example": "4"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.climate_hours", "Filter code method": "Ecobee.climateHours.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.climate_hours\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Thermostat Name", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Hold hours\nDropdown list", "description": "Dropdown list", "details": {"Label": "Number of Hours", "Helper text": "The number of hours to hold for", "Slug": "hold_hours", "Required": "true", "Can have default value": "true", "Filter code method": "Ecobee.climateHours.setHold Hours(string: hold_hours)"}}, {"section": "Action fields", "title": "Comfort profile\nDropdown list", "description": "Dropdown list", "details": {"Label": "Comfort Profile", "Helper text": "Select which comfort profile to use for the hold.", "Slug": "comfort_profile", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the average electricity price exceeds 15 cents per hour during the summer season, set my ecobee thermostat to the \"Home\" comfort profile for 4 hours."}
{"original_description": "What's Elon up to? Every Friday you'll get a digest of the latest NY Times reporting on SpaceX. 🖖", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_article_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Term\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "term", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newArticleMatchingSearch.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newArticleMatchingSearch.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.newArticleMatchingSearch.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.newArticleMatchingSearch.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.newArticleMatchingSearch.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Keywords\nA comma separated list of article keywords", "description": "A comma separated list of article keywords", "details": {"Slug": "Keywords", "Filter code": "Nytimes.newArticleMatchingSearch.Keywords", "Type": "String", "Example": "fish, tanks, biology"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.newArticleMatchingSearch.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": "", "intent": "Send a weekly email digest every Friday at 10:00 AM with the title \"SpaceX Weekly News\" to subscribers, containing a list of New York Times articles published between Monday and Friday of the same week, where the search term is \"SpaceX\" and the section is \"Business\" or \"Technology\", including the article title, author, blurb, and URL, and an optional image URL if available."}
{"original_description": "Capture all those great \"on the fly\" blog ideas! Just jot down your note to the notebook of your choice and it'll be in your Wordpress \"Drafts\" folder when you have time to sit down, refine, and publish. ", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "WordPress", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wordpress.create_post_wp", "Filter code method": "Wordpress.createPostWp.skip(string?: reason)", "Runtime method": "runAction(\"wordpress.create_post_wp\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setTitle(string: title)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Helper text": "Some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setBody(string: body)"}}, {"section": "Action fields", "title": "Categories\nText input > Other", "description": "Text input > Other", "details": {"Label": "Categories", "Helper text": "Comma separated", "Slug": "categories", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setCategories(string: categories)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setTags(string: tags)"}}, {"section": "Action fields", "title": "Post status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Post status", "Slug": "post_status", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setPost Status(string: post_status)"}}], "filter_code": "", "intent": "When a new note titled \"Blog Idea\" is created in my Evernote \"Ideas\" notebook with the tags \"blog, idea, draft\", and containing the text \"Connect Evernote to hundreds of apps\" in the body, create a new draft post in WordPress with the title \"New Blog Post\", body \"<p>This is a great idea for a blog post</p>\", categories \"drafts, ideas\", tags \"blog, writing, evernote\", and set the post status to \"draft\"."}
{"original_description": "When a SmartThings device is turned off, turn on/off 1-channel switch or plug.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.switched_on_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Switched on at\nThe date and time the switch was turned on.", "description": "The date and time the switch was turned on.", "details": {"Slug": "SwitchedOnAt", "Filter code": "SmartthingsV2.switchedOnSmartthings.SwitchedOnAt", "Type": "String", "Example": "January 1st, 2023 at 11:11PM"}}, {"section": "Ingredients", "title": "Switch name\nThe name of the switch device.", "description": "The name of the switch device.", "details": {"Slug": "SwitchName", "Filter code": "SmartthingsV2.switchedOnSmartthings.SwitchName", "Type": "String", "Example": "Bedroom switch"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.light_switch_action", "Filter code method": "Ewelink.lightSwitchAction.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.light_switch_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Light switch action device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "light_switch_action_device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "true", "Filter code method": "Ewelink.lightSwitchAction.setOnoff Act Query(string: onoff_act_query)"}}], "filter_code": "", "intent": "When the \"Living Room Lamp\" SmartThings device is turned off between 18:00 and 22:00, turn on the \"Kitchen Light\" eWeLink Smart Home 1-channel switch."}
{"original_description": "When a SmartThings device is turned on, turn on/off an eWeLink Support 1-channel switch.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.switched_on_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Switched on at\nThe date and time the switch was turned on.", "description": "The date and time the switch was turned on.", "details": {"Slug": "SwitchedOnAt", "Filter code": "SmartthingsV2.switchedOnSmartthings.SwitchedOnAt", "Type": "String", "Example": "January 1st, 2023 at 11:11PM"}}, {"section": "Ingredients", "title": "Switch name\nThe name of the switch device.", "description": "The name of the switch device.", "details": {"Slug": "SwitchName", "Filter code": "SmartthingsV2.switchedOnSmartthings.SwitchName", "Type": "String", "Example": "Bedroom switch"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.light_switch_action", "Filter code method": "Ewelink.lightSwitchAction.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.light_switch_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Light switch action device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "light_switch_action_device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "true", "Filter code method": "Ewelink.lightSwitchAction.setOnoff Act Query(string: onoff_act_query)"}}], "filter_code": "", "intent": "When the \"Bedroom switch\" SmartThings device is turned on at 8:00 PM, turn on the \"Living Room Light\" eWeLink Support 1-channel switch."}
{"original_description": "If you turn on your hood, your Philips Hue lights will turn on.", "trigger_channel": "Home Connect Hood", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_hood.hood_power_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which hood?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcHood.hoodPowerOn.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the kitchen hood is turned on, turn on all Philips Hue lights in the living room."}
{"original_description": "device gets turned On/Off on scheduled time set by the user.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "ThingaOS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "tantiv4.turn_on_off", "Filter code method": "Tantiv4.turnOnOff.skip(string?: reason)", "Runtime method": "runAction(\"tantiv4.turn_on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Device", "Helper text": "Turn On/Off action will be sent to the device selected by user.", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Turn on off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn device On/Off", "Helper text": "Update device status to be On/Off", "Slug": "turn_on_off", "Required": "true", "Can have default value": "true"}}], "filter_code": "", "intent": "Turn on the \"Living Room Lamp\" device at 07:00 every day and turn it off at 19:00."}
{"original_description": "If you turn off your Hood, your Philips Hue lights will also turn off.", "trigger_channel": "Home Connect Hood", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_hood.hood_power_off"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which hood?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcHood.hoodPowerOff.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the kitchen hood, labeled \"Main Hood\", is turned off between 06:00 and 22:00, turn off all Philips Hue lights in the living room."}
{"original_description": "Just pop in the company name you'd like to track, and articles in TC that mention it will be sent straight to your inbox. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": "", "intent": "Send me an email with the subject \"New Article from TechCrunch\" and the body containing the entry title, entry URL, and entry content whenever a new article is published in the TechCrunch RSS feed that mentions \"Apple\", with the email sent to my inbox between 08:00 and 18:00 every day."}
{"original_description": "A new saved track on Spotify creates a Journal Entry with track information and URL which auto-embeds the player in Day One.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_saved_track"}, "trigger_details": [{"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newSavedTrack.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newSavedTrack.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newSavedTrack.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newSavedTrack.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newSavedTrack.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Saved at\nThe time at which the track was saved.", "description": "The time at which the track was saved.", "details": {"Slug": "saved_at", "Filter code": "Spotify.newSavedTrack.SavedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newSavedTrack.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newSavedTrack.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": "", "intent": "When a new track is saved on Spotify, such as \"Happy\" by Pharrell Williams from the album \"G I R L\", create a new journal entry in Day One's \"Music Diary\" with the track information, including its name, artist, album, and a link to the track, and embed the Spotify player for the track. Additionally, include tags like \"music\", \"spotify\", and \"favorite\", and set the location to \"Home\" with coordinates 37.7749° N, 122.4194° W."}
{"original_description": "Entry contains: title, description, link, tags and a photo if available.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": "", "intent": "When a new item is added to Pocket with a title containing the keyword \"blog\" and has an image, create a new journal entry in Day One's \"Personal\" journal with the body set to the item's excerpt and title, tags set to \"pocket, blog\", and include the item's image URL."}
{"original_description": "Automatically save your Instagram photos to Day One. \nNote: This currently only works with single-photo Instagram posts.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": "", "intent": "Automatically save new Instagram photos to my personal Day One journal, including the photo image from the Source URL, with a body containing the caption and a link to the Instagram post, tagged as \"Instagram\" and \"Photos\", and located at my home coordinates of 37.7749 latitude and -122.4194 longitude, whenever I post between 07:00 and 19:00."}
{"original_description": "Save your completed tasks from Todoist as a new Journal Entry in Day On.", "trigger_channel": "Todoist", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "todoist.new_completed_task"}, "trigger_details": [{"section": "Trigger fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project to watch", "Helper text": "Configure this trigger to fire only when the completed task is in the specified project.", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Task content\nContent of the task.", "description": "Content of the task.", "details": {"Slug": "task_content", "Filter code": "Todoist.newCompletedTask.TaskContent", "Type": "String", "Example": "Pay telephone bill"}}, {"section": "Ingredients", "title": "Task description\nDescription of the task.", "description": "Description of the task.", "details": {"Slug": "task_description", "Filter code": "Todoist.newCompletedTask.TaskDescription", "Type": "String", "Example": "Go to gym website and click renew in account settings"}}, {"section": "Ingredients", "title": "Link to task\nThe URL of the task.", "description": "The URL of the task.", "details": {"Slug": "link_to_task", "Filter code": "Todoist.newCompletedTask.LinkToTask", "Type": "Web URL", "Example": "https://todoist.com/showTask?id=999"}}, {"section": "Ingredients", "title": "Project\nProject to which the task belongs.", "description": "Project to which the task belongs.", "details": {"Slug": "project", "Filter code": "Todoist.newCompletedTask.Project", "Type": "String", "Example": "Household Tasks"}}, {"section": "Ingredients", "title": "Labels\nLabels assigned to the task.", "description": "Labels assigned to the task.", "details": {"Slug": "labels", "Filter code": "Todoist.newCompletedTask.Labels", "Type": "String", "Example": "to_follow_up"}}, {"section": "Ingredients", "title": "Priority\nPriority of the task.", "description": "Priority of the task.", "details": {"Slug": "priority", "Filter code": "Todoist.newCompletedTask.Priority", "Type": "String", "Example": "Priority 1"}}, {"section": "Ingredients", "title": "Completed at\nDate and time the task was completed.", "description": "Date and time the task was completed.", "details": {"Slug": "completed_at", "Filter code": "Todoist.newCompletedTask.CompletedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Due date\nDue date of the task.", "description": "Due date of the task.", "details": {"Slug": "due_date", "Filter code": "Todoist.newCompletedTask.DueDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Section\nSection to which the task belongs (if any).", "description": "Section to which the task belongs (if any).", "details": {"Slug": "section", "Filter code": "Todoist.newCompletedTask.Section", "Type": "String", "Example": "Cleaning tasks"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": "", "intent": "When a new task is completed in the \"Household Tasks\" project on Todoist, with a priority of \"Priority 1\" and labels including \"to_follow_up\", create a new journal entry in Day One's \"Personal\" journal, including the task content, description, and link to the task, and tag it with \"completed_task\" and \"todoist_integration\"."}
{"original_description": "Any link added to Instapaper creates a new entry in Day One with, title, description, link, and tags.", "trigger_channel": "Instapaper", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instapaper.new_link_saved"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the saved item.", "description": "The title of the saved item.", "details": {"Slug": "title", "Filter code": "Instapaper.newLinkSaved.Title", "Type": "String", "Example": "The Computer for the 21st Century"}}, {"section": "Ingredients", "title": "Description\nThe description of the saved item.", "description": "The description of the saved item.", "details": {"Slug": "description", "Filter code": "Instapaper.newLinkSaved.Description", "Type": "String", "Example": "The most profound technologies are those that disappear. They weave themselves into the fabric of everyday life until they are indistinguishable from it. Consider writing, perhaps the first information..."}}, {"section": "Ingredients", "title": "Url\nThe URL of the saved item.", "description": "The URL of the saved item.", "details": {"Slug": "url", "Filter code": "Instapaper.newLinkSaved.URL", "Type": "Web URL", "Example": "http://www.ubiq.com/hypertext/weiser/SciAmDraft3.html"}}, {"section": "Ingredients", "title": "Created at\nDate and time the item was created.", "description": "Date and time the item was created.", "details": {"Slug": "created_at", "Filter code": "Instapaper.newLinkSaved.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": "", "intent": "When a new link is saved to Instapaper with a title like \"The Computer for the 21st Century\", description containing keywords like \"profound technologies\", and a URL such as \"http://www.ubiq.com/hypertext/weiser/SciAmDraft3.html\", create a new entry in Day One's default journal, including the link's title, description, and URL in the body, tagging it with keywords like \"technology, innovation\", and setting the location to the user's current place if available."}
{"original_description": "When you save a new item to Pocket, this will be added as a task in your Todoist account.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Todoist", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "todoist.create_task", "Filter code method": "Todoist.createTask.skip(string?: reason)", "Runtime method": "runAction(\"todoist.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project and section", "Helper text": "Project and section to which the task belongs", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task content\nText input", "description": "Text input", "details": {"Label": "Task content", "Helper text": "<a href=\"https://todoist.com/help/articles/205195102\" target=\"_blank\">Text formatting guide</a> and <a href=\"https://todoist.com/help/articles/360000029000\" target=\"_blank\">label format guide</a>", "Slug": "task_content", "Required": "true", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Content(string: task_content)"}}, {"section": "Action fields", "title": "Note\nText input > Other", "description": "Text input > Other", "details": {"Label": "Note", "Helper text": "Add additional task note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Due date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task's due date", "Helper text": "Check the <a href=\"https://todoist.com/help/articles/205325931\" target=\"_blank\">Due dates and times format guide</a>", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setDue Date(string: due_date)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Helper text": "Task's priority", "Slug": "priority", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setPriority(string: priority)"}}, {"section": "Action fields", "title": "Task description\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task description", "Helper text": "Task's description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Description(string: task_description)"}}], "filter_code": "", "intent": "When a new article titled \"My Morning Routine\" with the URL http://blog.ifttt.com and tags \"productivity, morning\" is saved to Pocket, create a new task in Todoist with the project set to \"Personal Development\", task content \"Read about morning routines\", note \"Interesting article about boosting productivity\", due date \"tomorrow at 8:00 AM\", and priority set to \"High\"."}
{"original_description": "Record Spotify tracks that you save to your Unforgettable Me account.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_saved_track"}, "trigger_details": [{"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newSavedTrack.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newSavedTrack.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newSavedTrack.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newSavedTrack.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newSavedTrack.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Saved at\nThe time at which the track was saved.", "description": "The time at which the track was saved.", "details": {"Slug": "saved_at", "Filter code": "Spotify.newSavedTrack.SavedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newSavedTrack.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newSavedTrack.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": "", "intent": "When a new track is saved on Spotify, such as \"Happy\" by Pharrell Williams from the album \"G I R L\", with an album cover available at https://i.scdn.co/image/ab67616d0000b27306c1f7a6aa5e2fc3b4aa3df9, upload the track details to Unforgettable Me with an augmenter name like \"SpotifySavedTrack\" and a body containing the track's ID, name, artist, album, and save time in JSON format, for instance: {\"track_id\": \"3aibwv5hGXSgw7Yru8IYTO\", \"track_name\": \"Happy\", \"artist_name\": \"Pharrell Williams\", \"album_name\": \"G I R L\", \"saved_at\": \"2024-09-16T14:30:00+02:00\"}."}
{"original_description": "Self explanatory", "trigger_channel": "SoundCloud", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "soundcloud.new_public_favorite_track"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Soundcloud.newPublicFavoriteTrack.Title", "Type": "String", "Example": "A cool track"}}, {"section": "Ingredients", "title": "Description\nThe track's description. May contain HTML.", "description": "The track's description. May contain HTML.", "details": {"Slug": "Description", "Filter code": "Soundcloud.newPublicFavoriteTrack.Description", "Type": "String", "Example": "This track is sweet"}}, {"section": "Ingredients", "title": "Tags\nThe track's tags, comma seperated.", "description": "The track's tags, comma seperated.", "details": {"Slug": "Tags", "Filter code": "Soundcloud.newPublicFavoriteTrack.Tags", "Type": "String", "Example": "killer, noise"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the tracks's Soundcloud page.", "description": "The URL to the tracks's Soundcloud page.", "details": {"Slug": "TrackUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.TrackUrl", "Type": "String", "Example": "http://soundcloud.com/ribbonmusic/john-maus-believer"}}, {"section": "Ingredients", "title": "Username\nThe name of the user who uploaded the track.", "description": "The name of the user who uploaded the track.", "details": {"Slug": "Username", "Filter code": "Soundcloud.newPublicFavoriteTrack.Username", "Type": "String", "Example": "gaga"}}, {"section": "Ingredients", "title": "User profile url\nThe URL to the profile of the user who uploaded the track.", "description": "The URL to the profile of the user who uploaded the track.", "details": {"Slug": "UserProfileUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.UserProfileUrl", "Type": "String", "Example": "http://soundcloud.com/gaga-digi"}}, {"section": "Ingredients", "title": "Image url\nURL to the track's image file.", "description": "URL to the track's image file.", "details": {"Slug": "ImageUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.ImageUrl", "Type": "String", "Example": "http://i1.sndcdn.com/artworks-000006560516-1730pb-large.jpg"}}, {"section": "Ingredients", "title": "Embed code\nHTML embed code for this track.", "description": "HTML embed code for this track.", "details": {"Slug": "EmbedCode", "Filter code": "Soundcloud.newPublicFavoriteTrack.EmbedCode", "Type": "String", "Example": "<object height='81' width='100%'> <param name='movie'..."}}, {"section": "Ingredients", "title": "Created at\nDate and time the track was uploaded.", "description": "Date and time the track was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "Soundcloud.newPublicFavoriteTrack.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "TrackId", "Filter code": "Soundcloud.newPublicFavoriteTrack.TrackId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "User\nThe ID of the user who uploaded the track.", "description": "The ID of the user who uploaded the track.", "details": {"Slug": "UserId", "Filter code": "Soundcloud.newPublicFavoriteTrack.UserId", "Type": "String", "Example": "123"}}], "action_channel": "put.io", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "putio.new_transfer", "Filter code method": "Putio.newTransfer.skip(string?: reason)", "Runtime method": "runAction(\"putio.new_transfer\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Other", "description": "Text input > Other", "details": {"Label": "What URL?", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Putio.newTransfer.setUrl(string: url)"}}, {"section": "Action fields", "title": "Folder\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which folder ID?", "Helper text": "File will be downloaded into this folder. Folder ID can be found in the address bar when the folder is open in your browser. If the folder with given ID does not exist, the files will be downloaded into your default download folder.", "Slug": "folder_id", "Required": "false", "Can have default value": "true"}}], "filter_code": "", "intent": "When a new public favorite track is uploaded to SoundCloud by user \"gaga\" with tags including \"killer\" and description containing the word \"sweet\", download the track from the URL http://soundcloud.com/ribbonmusic/john-maus-believer into folder ID 123456 in put.io."}
{"original_description": "Every time a new file is saved in the specified Dropbox folder, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Dropbox", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dropbox.new_file_in_folder"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subfolder name", "Helper text": "Optional", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "FileUrl", "Filter code": "Dropbox.newFileInFolder.FileUrl", "Type": "String", "Example": "https://www.dropbox.com/s/qp3cqdjqachyr2x/ifttt_wordmark.png"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "Filename", "Filter code": "Dropbox.newFileInFolder.Filename", "Type": "String", "Example": "coolbeans.jpg"}}, {"section": "Ingredients", "title": "Filename no ext\nThe name of the file without extension.", "description": "The name of the file without extension.", "details": {"Slug": "FilenameNoExt", "Filter code": "Dropbox.newFileInFolder.FilenameNoExt", "Type": "String", "Example": "coolbeans"}}, {"section": "Ingredients", "title": "Modified date\nDate file was created or modified in Dropbox.", "description": "Date file was created or modified in Dropbox.", "details": {"Slug": "ModifiedDate", "Filter code": "Dropbox.newFileInFolder.ModifiedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a new file named like \"report\" is saved in the Dropbox folder \"/Office/Documents\", send a Signal to the Das Keyboard device \"My Work Keyboard\" with the name \"New File Alert\", setting the color of the \"Space\" zone to \"#008000\" and displaying the message \"A new file has been uploaded: {{Filename}}\"."}
{"original_description": "Copy links saved in Pocket as Link Cards to Notebook", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Zoho Notebook", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "notebook.create_link_card", "Filter code method": "Notebook.createLinkCard.skip(string?: reason)", "Runtime method": "runAction(\"notebook.create_link_card\", {})"}, "action_details": [{"section": "Action fields", "title": "Notebook name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Notebook", "Slug": "notebook_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Notecard name\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Notecard Name", "Slug": "notecard_name", "Required": "false", "Can have default value": "true", "Filter code method": "Notebook.createLinkCard.setNotecard Name(string: notecard_name)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "LINK URL", "Slug": "link_url", "Required": "true", "Can have default value": "true", "Filter code method": "Notebook.createLinkCard.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Tags\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "TAGS", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Notebook.createLinkCard.setTags(string: tags)"}}], "filter_code": "", "intent": "When a new item is added to Pocket with a title containing the keyword \"article\" and having an excerpt longer than 50 characters, create a new Link Card in the Zoho Notebook named \"My Favorite Articles\" with the notecard name set to the Pocket item's title, the link URL set to the Pocket item's URL, and tags set to the Pocket item's tags plus the additional tag \"read-later\"."}
{"original_description": "Self explanatory", "trigger_channel": "SoundCloud", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "soundcloud.following_new_public_track"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Soundcloud.followingNewPublicTrack.Title", "Type": "String", "Example": "A cool track"}}, {"section": "Ingredients", "title": "Description\nThe track's description. May contain HTML.", "description": "The track's description. May contain HTML.", "details": {"Slug": "Description", "Filter code": "Soundcloud.followingNewPublicTrack.Description", "Type": "String", "Example": "This track is sweet"}}, {"section": "Ingredients", "title": "Tags\nThe track's tags, comma seperated.", "description": "The track's tags, comma seperated.", "details": {"Slug": "Tags", "Filter code": "Soundcloud.followingNewPublicTrack.Tags", "Type": "String", "Example": "killer, noise"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the tracks's Soundcloud page.", "description": "The URL to the tracks's Soundcloud page.", "details": {"Slug": "TrackUrl", "Filter code": "Soundcloud.followingNewPublicTrack.TrackUrl", "Type": "String", "Example": "http://soundcloud.com/ribbonmusic/john-maus-believer"}}, {"section": "Ingredients", "title": "Username\nThe name of the user who uploaded the track.", "description": "The name of the user who uploaded the track.", "details": {"Slug": "Username", "Filter code": "Soundcloud.followingNewPublicTrack.Username", "Type": "String", "Example": "gaga"}}, {"section": "Ingredients", "title": "User profile url\nThe URL to the profile of the user who uploaded the track.", "description": "The URL to the profile of the user who uploaded the track.", "details": {"Slug": "UserProfileUrl", "Filter code": "Soundcloud.followingNewPublicTrack.UserProfileUrl", "Type": "String", "Example": "http://soundcloud.com/gaga-digi"}}, {"section": "Ingredients", "title": "Image url\nURL to the track's image file.", "description": "URL to the track's image file.", "details": {"Slug": "ImageUrl", "Filter code": "Soundcloud.followingNewPublicTrack.ImageUrl", "Type": "String", "Example": "http://i1.sndcdn.com/artworks-000006560516-1730pb-large.jpg"}}, {"section": "Ingredients", "title": "Embed code\nHTML embed code for this track.", "description": "HTML embed code for this track.", "details": {"Slug": "EmbedCode", "Filter code": "Soundcloud.followingNewPublicTrack.EmbedCode", "Type": "String", "Example": "<object height='81' width='100%'> <param name='movie'..."}}, {"section": "Ingredients", "title": "Created at\nDate and time the track was uploaded.", "description": "Date and time the track was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "Soundcloud.followingNewPublicTrack.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "TrackId", "Filter code": "Soundcloud.followingNewPublicTrack.TrackId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "User\nThe ID of the user who uploaded the track.", "description": "The ID of the user who uploaded the track.", "details": {"Slug": "UserId", "Filter code": "Soundcloud.followingNewPublicTrack.UserId", "Type": "String", "Example": "123"}}], "action_channel": "put.io", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "putio.new_transfer", "Filter code method": "Putio.newTransfer.skip(string?: reason)", "Runtime method": "runAction(\"putio.new_transfer\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Other", "description": "Text input > Other", "details": {"Label": "What URL?", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Putio.newTransfer.setUrl(string: url)"}}, {"section": "Action fields", "title": "Folder\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which folder ID?", "Helper text": "File will be downloaded into this folder. Folder ID can be found in the address bar when the folder is open in your browser. If the folder with given ID does not exist, the files will be downloaded into your default download folder.", "Slug": "folder_id", "Required": "false", "Can have default value": "true"}}], "filter_code": "", "intent": "When a new public track is uploaded by a user like \"gaga\" to SoundCloud, with a track title such as \"A cool track\", description containing \"This track is sweet\", and tags including \"killer, noise\", and the track's URL is \"http://soundcloud.com/ribbonmusic/john-maus-believer\", then initiate a new transfer on put.io to download the track into folder ID \"12345\"."}
{"original_description": "An entry is saved with title, description, and URL.", "trigger_channel": "Instapaper", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instapaper.new_liked_item"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the liked item.", "description": "The title of the liked item.", "details": {"Slug": "title", "Filter code": "Instapaper.newLikedItem.Title", "Type": "String", "Example": "The Computer for the 21st Century"}}, {"section": "Ingredients", "title": "Description\nThe description of the liked item.", "description": "The description of the liked item.", "details": {"Slug": "description", "Filter code": "Instapaper.newLikedItem.Description", "Type": "String", "Example": "The most profound technologies are those that disappear. They weave themselves into the fabric of everyday life until they are indistinguishable from it. Consider writing, perhaps the first information..."}}, {"section": "Ingredients", "title": "Url\nThe URL of the liked item.", "description": "The URL of the liked item.", "details": {"Slug": "url", "Filter code": "Instapaper.newLikedItem.URL", "Type": "Web URL", "Example": "http://www.ubiq.com/hypertext/weiser/SciAmDraft3.html"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Instapaper.newLikedItem.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": "", "intent": "When a new item is liked on Instapaper with a title like \"The Computer for the 21st Century\", a description containing keywords like \"technology\" and \"innovation\", and a URL such as \"http://www.ubiq.com/hypertext/weiser/SciAmDraft3.html\", created between 07:00 and 19:00, then create a new journal entry in Day One's \"Personal\" journal with the body containing the liked item's title, description, and URL, add tags like \"instapaper\", \"liked\", and \"technology\", and include an image from the URL if available."}
{"original_description": "When you mark some item as favorite in Pocket, it will be automatically saved to Raindrop.io collection", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_favorite_item_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newFavoriteItemPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newFavoriteItemPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newFavoriteItemPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newFavoriteItemPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newFavoriteItemPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newFavoriteItemPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Raindrop.io", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "raindrop.raindrop", "Filter code method": "Raindrop.raindrop.skip(string?: reason)", "Runtime method": "runAction(\"raindrop.raindrop\", {})"}, "action_details": [{"section": "Action fields", "title": "Link\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "link", "Required": "true", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setLink(string: link)"}}, {"section": "Action fields", "title": "Collectionid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Collection", "Slug": "collectionId", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setTitle(string: title)"}}, {"section": "Action fields", "title": "Note\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Note", "Slug": "note", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Excerpt\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Description", "Slug": "excerpt", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setExcerpt(string: excerpt)"}}, {"section": "Action fields", "title": "Cover\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Slug": "cover", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setCover(string: cover)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Single or multiple separated by comma", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setTags(string: tags)"}}, {"section": "Action fields", "title": "Created\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Creation date", "Slug": "created", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setCreated(string: created)"}}], "filter_code": "", "intent": "When a new item is favorited in Pocket with the title starting with \"My\" and containing the tag \"neato\", save it to the Raindrop.io collection named \"Favorites\" with the URL, excerpt, and image from the Pocket item."}
{"original_description": "Whenever you post a new photo on Instagram, a copy will be saved to a folder in your Google Drive. Auto-pic archive! ", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Google Drive", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_drive.upload_file_from_url_google_drive", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.skip(string?: reason)", "Runtime method": "runAction(\"google_drive.upload_file_from_url_google_drive\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with uploadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setPath(string: path)"}}], "filter_code": "", "intent": "Whenever you post a new photo on Instagram with a caption containing the keyword \"vacation\" and the photo was taken between 08:00 and 18:00, a copy of the image will be saved to a folder named \"Instagram Archives\" in your Google Drive, using the photo's Source URL as the file URL and the filename \"Vacation Photo - {CreatedAt}\" where {CreatedAt} is the date and time the photo was taken."}
{"original_description": "Record to Unforgettable Me any new item saved to pocket ", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": "", "intent": "Record any new item saved to Pocket with the title, URL, excerpt, image URL, tags, and added date, and upload it to Unforgettable Me as a JSON body with an augmenter name \"PocketItem\" including start_date and end_date fields set to the current date."}
{"original_description": "It's easy to automatically backup your Facebook Page photos! For any new photo uploaded by you, a copy will be saved in a Dropbox folder.", "trigger_channel": "Facebook Pages", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "facebook_pages.new_photo_from_page"}, "trigger_details": [{"section": "Ingredients", "title": "Page name\nYour Facebook Page's name.", "description": "Your Facebook Page's name.", "details": {"Slug": "PageName", "Filter code": "FacebookPages.newPhotoFromPage.PageName", "Type": "String", "Example": "The ifttt Office"}}, {"section": "Ingredients", "title": "Link\nThe link to the photo's FacebookPages page, may be private.", "description": "The link to the photo's FacebookPages page, may be private.", "details": {"Slug": "Link", "Filter code": "FacebookPages.newPhotoFromPage.Link", "Type": "String", "Example": "http://www.facebook.com/#!/photo.php?pid=33943077&id=7302486"}}, {"section": "Ingredients", "title": "Image source\nThe URL to the full sized version of the photo itself.", "description": "The URL to the full sized version of the photo itself.", "details": {"Slug": "ImageSource", "Filter code": "FacebookPages.newPhotoFromPage.ImageSource", "Type": "String", "Example": "http://sphotos.ak.fbcdn.net/hphotos-ak-snc1/hs229.snc1/7634_567487423564_7302486_33943077_6068537_n.jpg"}}, {"section": "Ingredients", "title": "Caption\nThe photo's caption.", "description": "The photo's caption.", "details": {"Slug": "Caption", "Filter code": "FacebookPages.newPhotoFromPage.Caption", "Type": "String", "Example": "Wow what a fun night!"}}, {"section": "Ingredients", "title": "Created at\nDate and time photo was uploaded.", "description": "Date and time photo was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "FacebookPages.newPhotoFromPage.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Page url\nThe link to the main Facebook Page.", "description": "The link to the main Facebook Page.", "details": {"Slug": "PageUrl", "Filter code": "FacebookPages.newPhotoFromPage.PageUrl", "Type": "String", "Example": "http://www.facebook.com/pages/The-ifttt-office/108073145941483"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": "", "intent": "When a new photo is uploaded to the Facebook Page named \"My Personal Page\" with a caption containing the keyword \"vacation\", automatically save a copy of the photo to a Dropbox folder named \"Facebook Photos/2024 Vacations\" using the photo's original filename and the full-sized image source URL."}
{"original_description": "Any Article that matches your search will be saved to Instapaper", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_article_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Term\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "term", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newArticleMatchingSearch.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newArticleMatchingSearch.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.newArticleMatchingSearch.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.newArticleMatchingSearch.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.newArticleMatchingSearch.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Keywords\nA comma separated list of article keywords", "description": "A comma separated list of article keywords", "details": {"Slug": "Keywords", "Filter code": "Nytimes.newArticleMatchingSearch.Keywords", "Type": "String", "Example": "fish, tanks, biology"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.newArticleMatchingSearch.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Instapaper", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "instapaper.save_item", "Filter code method": "Instapaper.saveItem.skip(string?: reason)", "Runtime method": "runAction(\"instapaper.save_item\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setUrl(string: url)"}}, {"section": "Action fields", "title": "Description\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setDescription(string: description)"}}, {"section": "Action fields", "title": "Title\nText input > File name", "description": "Text input > File name", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setTitle(string: title)"}}, {"section": "Action fields", "title": "Folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which folder?", "Helper text": "Optional", "Slug": "folder", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Tags\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Which tags?", "Slug": "tags", "Required": "false", "Can have default value": "false"}}], "filter_code": "", "intent": "Save articles from The New York Times to Instapaper when they match the search term \"climate change\" and are published in the section \"World News\" with keywords including \"global warming\" or \"sustainability\", and save them to the folder \"News\" with the tags \"Environment\" and \"Science\"."}
{"original_description": "When public air quality data is available for a location you select, this data is saved in a Google Spreadsheet.", "trigger_channel": "Kaiterra", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kaiterra.location_aqi"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "What is your location?", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Kaiterra.locationAqi.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Aqi\nThe current aqi value in your location", "description": "The current aqi value in your location", "details": {"Slug": "aqi", "Filter code": "Kaiterra.locationAqi.Aqi", "Type": "String", "Example": "20"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": "", "intent": "When the current air quality index (AQI) in New York is 50 or higher, append a new row to a Google Spreadsheet named \"Air Quality Log\" with the formatted row containing the location \"New York\", the current AQI value, and the date and time of the reading, and save this spreadsheet in the Drive folder path \"Environmental Data/Air Quality\"."}
{"original_description": "This trigger will start your dryer at the optimal time. You set which dryer should activate which program. The Trigger will then start the when electricity is cheap.", "trigger_channel": "True Energy Smart Home Denmark", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "True_Energy_DK.electricity_price_cheap"}, "trigger_details": [{"section": "Trigger fields", "title": "Area\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Region", "Helper text": "Region you wish to monitor", "Slug": "area", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Region\nDenmark Region being monitored", "description": "Denmark Region being monitored", "details": {"Slug": "area", "Filter code": "TrueEnergyDK.electricityPriceCheap.Region", "Type": "String", "Example": "West Denmark"}}, {"section": "Ingredients", "title": "Valid from\nTime at which electricity price changes", "description": "Time at which electricity price changes", "details": {"Slug": "valid_from", "Filter code": "TrueEnergyDK.electricityPriceCheap.ValidFrom", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Price\nElectricity price per kWh in DKK", "description": "Electricity price per kWh in DKK", "details": {"Slug": "price", "Filter code": "TrueEnergyDK.electricityPriceCheap.Price", "Type": "String", "Example": "167.17"}}, {"section": "Ingredients", "title": "Co2 emission\nCO2 emission per kWh in grams", "description": "CO2 emission per kWh in grams", "details": {"Slug": "co2_emission", "Filter code": "TrueEnergyDK.electricityPriceCheap.Co2Emission", "Type": "String", "Example": "108.77"}}], "action_channel": "Home Connect Dryer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_dryer.dryer_start_program", "Filter code method": "HcDryer.dryerStartProgram.skip(string?: reason)", "Runtime method": "runAction(\"hc_dryer.dryer_start_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dryer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Program\nDropdown list", "description": "Dropdown list", "details": {"Label": "Program", "Slug": "program", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Drying target\nDropdown list", "description": "Dropdown list", "details": {"Label": "Drying target", "Helper text": "Please note that not every drying target is supported by each program. For more information please check your user manual.", "Slug": "drying_target", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Start the dryer located in the living room with the program set to 'Cotton' and drying target 'Extra Dry' when the electricity price is cheap, specifically below 150 DKK per kWh, in the West Denmark region, between 07:00 and 19:00."}
{"original_description": "Never be left in the dark. Whenever the sun starts to set, your Philips Hue bulbs will automatically turn on. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the sunset at New York occurs, and the current temperature is 18 degrees Celsius with a condition of Sunny, turn on all Philips Hue bulbs in the living room."}
{"original_description": "This Applet will save your Flickr photos in one place.", "trigger_channel": "Flickr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flickr.any_new_public_photo"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Flickr.anyNewPublicPhoto.Title", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Description\nOptional photo description.", "description": "Optional photo description.", "details": {"Slug": "Description", "Filter code": "Flickr.anyNewPublicPhoto.Description", "Type": "String", "Example": "Taken at my birthday party!"}}, {"section": "Ingredients", "title": "Flickr url\nThe long URL to the photo's Flickr page.", "description": "The long URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrl", "Filter code": "Flickr.anyNewPublicPhoto.FlickrUrl", "Type": "String", "Example": "http://www.flickr.com/photos/sh4de/5197127926/"}}, {"section": "Ingredients", "title": "Flickr url short\nThe shortened URL to the photo's Flickr page.", "description": "The shortened URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrlShort", "Filter code": "Flickr.anyNewPublicPhoto.FlickrUrlShort", "Type": "String", "Example": "http://flic.kr/p/4mdhBE"}}, {"section": "Ingredients", "title": "Source url\nURL to the largest available flickr image file.", "description": "URL to the largest available flickr image file.", "details": {"Slug": "SourceUrl", "Filter code": "Flickr.anyNewPublicPhoto.SourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Original source url\nURL to the orginal image file if available.", "description": "URL to the orginal image file if available.", "details": {"Slug": "OriginalSourceUrl", "Filter code": "Flickr.anyNewPublicPhoto.OriginalSourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Uploaded date\nDate and time the photo was uploaded.", "description": "Date and time the photo was uploaded.", "details": {"Slug": "UploadedDate", "Filter code": "Flickr.anyNewPublicPhoto.UploadedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Taken date\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "TakenDate", "Filter code": "Flickr.anyNewPublicPhoto.TakenDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Tags\nTags added to the photo.", "description": "Tags added to the photo.", "details": {"Slug": "Tags", "Filter code": "Flickr.anyNewPublicPhoto.Tags", "Type": "String", "Example": "baby, pumpkin"}}], "action_channel": "Google Drive", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_drive.upload_file_from_url_google_drive", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.skip(string?: reason)", "Runtime method": "runAction(\"google_drive.upload_file_from_url_google_drive\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with uploadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setPath(string: path)"}}], "filter_code": "", "intent": "Save new Flickr photos titled like \"Summer Vacation\" and described as \"Taken at the beach\" to a Google Drive folder named \"Flickr Photos\" at the path \"Photos/Vacations\", using the largest available image file source URL."}
{"original_description": "This Applet will turn your WeMo Light Switch on at sunset every day.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsOnDiscrete", "Filter code method": "WemoLightSwitch.attributeLsOnDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsOnDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo light switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on my WeMo Light Switch located in the living room at sunset every day when the outside temperature is above 18 degrees Celsius and the condition is Sunny."}
{"original_description": "Keep your Facebook Page fresh and up-to-date with your latest Instagram photos. The pictures will be uploaded to an album called Instagram Photos.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Facebook Pages", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "facebook_pages.create_photo_page", "Filter code method": "FacebookPages.createPhotoPage.skip(string?: reason)", "Runtime method": "runAction(\"facebook_pages.create_photo_page\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setMessage(string: message)"}}, {"section": "Action fields", "title": "Album\nText input > Other", "description": "Text input > Other", "details": {"Label": "Album name", "Helper text": "Provide the name of an existing album, or leave blank for no album. If a non-existent album name is provided, you'll receive <a href=\"https://help.ifttt.com/hc/en-us/articles/5343334604187\" target=\"_blank\">this error</a>", "Slug": "album", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setAlbum(string: album)"}}], "filter_code": "", "intent": "When a new photo is posted on Instagram with the caption containing the keyword \"newpost\" and the photo is taken between 08:00 and 18:00, upload the photo to the Facebook Page's album named \"Instagram Photos\" with the message \"Check out my latest Instagram post!\"."}
{"original_description": "Automatically backup your Tumblr photos. For any photo you post, a copy will be uploaded in a Dropbox folder.", "trigger_channel": "Tumblr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tumblr.new_photo_post"}, "trigger_details": [{"section": "Trigger fields", "title": "Tumblelog\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tumblelog", "Helper text": "Enter the tumblelog name that this trigger should fire for", "Slug": "tumblelog", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Post body text\nThe post's body (text only)", "description": "The post's body (text only)", "details": {"Slug": "post_body_text", "Filter code": "Tumblr.newPhotoPost.PostBodyText", "Type": "String", "Example": "This is the body of a post. Neat."}}, {"section": "Ingredients", "title": "Url\nThe post URL", "description": "The post URL", "details": {"Slug": "url", "Filter code": "Tumblr.newPhotoPost.Url", "Type": "Web URL", "Example": "https://staff.tumblr.com/post/659803739627094017"}}, {"section": "Ingredients", "title": "Post body html\nThe post's body (HTML)", "description": "The post's body (HTML)", "details": {"Slug": "post_body_html", "Filter code": "Tumblr.newPhotoPost.PostBodyHtml", "Type": "String", "Example": "<figure class=\"tmblr-full\"><img src=\"https://64.media.tumblr.com/a-photo.jpg\"></figure><p>This is an HTML body.</p>"}}, {"section": "Ingredients", "title": "Thumbnail url\nThe thumbnail image URL for the post", "description": "The thumbnail image URL for the post", "details": {"Slug": "thumbnail_url", "Filter code": "Tumblr.newPhotoPost.ThumbnailUrl", "Type": "Web URL", "Example": "https://64.media.tumblr.com/a18c8063bf9d095d99f12b51d3dd1eda/57803298a6ae7123-0a/s1280x1920/fb2fce67958156e2231da15522ddb6850e1559ff.gifv"}}, {"section": "Ingredients", "title": "Full image url\nThe full size image URL", "description": "The full size image URL", "details": {"Slug": "full_image_url", "Filter code": "Tumblr.newPhotoPost.FullImageUrl", "Type": "Image URL", "Example": "https://64.media.tumblr.com/fd654c32f041cb02c757b5646c1cf9e1/a4c5782524284f82-d5/s1280x1920/8e97caae5a975889b3e170e42ea064b68410300a.jpg"}}, {"section": "Ingredients", "title": "Post tags\nThe post's tags", "description": "The post's tags", "details": {"Slug": "post_tags", "Filter code": "Tumblr.newPhotoPost.PostTags", "Type": "String", "Example": "Sky,Earth,Wind,Fire"}}, {"section": "Ingredients", "title": "Post\nThe ID of the post that has been created", "description": "The ID of the post that has been created", "details": {"Slug": "post_id", "Filter code": "Tumblr.newPhotoPost.PostId", "Type": "String", "Example": "123456789"}}, {"section": "Ingredients", "title": "Tumblelog\nThe name of the Tumblelog that published the post", "description": "The name of the Tumblelog that published the post", "details": {"Slug": "tumblelog", "Filter code": "Tumblr.newPhotoPost.Tumblelog", "Type": "String", "Example": "staff"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Tumblr.newPhotoPost.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": "", "intent": "When a new photo is posted to my Tumblr Tumblelog named \"staff\" with the tag \"Sky\", automatically upload the full-size image from the URL https://64.media.tumblr.com/fd654c32f041cb02c757b5646c1cf9e1/a4c5782524284f82-d5/s1280x1920/8e97caae5a975889b3e170e42ea064b68410300a.jpg to a Dropbox folder named \"Tumblr_Backups\" with the filename \"staff_sky_photo\" if the post body text contains the word \"backup\"."}
{"original_description": "This Applet will blink your Hue lights when Roomba® completes a cleaning job", "trigger_channel": "iRobot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "irobot.mission_report"}, "trigger_details": [{"section": "Trigger fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Square footage\nSquare Footage of the job.", "description": "Square Footage of the job.", "details": {"Slug": "square_footage", "Filter code": "Irobot.missionReport.SquareFootage", "Type": "String", "Example": "975"}}, {"section": "Ingredients", "title": "Timestamp\nTime the job completed.", "description": "Time the job completed.", "details": {"Slug": "iso_timestamp", "Filter code": "Irobot.missionReport.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Start time\nThe time the job started.", "description": "The time the job started.", "details": {"Slug": "start_time", "Filter code": "Irobot.missionReport.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Minutes running\nThe number of minutes the robot spent running.", "description": "The number of minutes the robot spent running.", "details": {"Slug": "minutes_cleaning", "Filter code": "Irobot.missionReport.MinutesRunning", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Minutes paused\nThe number of minutes the robot spent paused.", "description": "The number of minutes the robot spent paused.", "details": {"Slug": "minutes_paused", "Filter code": "Irobot.missionReport.MinutesPaused", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Minutes charging\nThe number of minutes the robot spent charging.", "description": "The number of minutes the robot spent charging.", "details": {"Slug": "minutes_charging", "Filter code": "Irobot.missionReport.MinutesCharging", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Dirt detect events\nThe number of dirt detect events in the job.", "description": "The number of dirt detect events in the job.", "details": {"Slug": "dirt_detect_events", "Filter code": "Irobot.missionReport.DirtDetectEvents", "Type": "String", "Example": "2"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When my Roomba named Living Room Cleaner completes a cleaning job of at least 900 square feet, blink all the Philips Hue lights in the living room."}
{"original_description": "This will automatically turn on the WiZ light(s) of your choice a few minutes before Sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "Turn on the living room WiZ lights to a warm white mode with 75% brightness 15 minutes before sunset when the current weather condition is Sunny and the temperature is above 18°C."}
{"original_description": "When the sun sets, your WeMo switch will turn on. A great way to automatically control your lights.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WeMo Smart Plug", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_switch.attribute_socketToggleDiscrete", "Filter code method": "WemoSwitch.attributeSocketToggleDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_switch.attribute_socketToggleDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Helper text": "Name of your WeMo switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the sunset at New York occurs and the temperature is above 65°F, turn on my Living Room WeMo Smart Plug."}
{"original_description": "Sync your systems: this Applet will transform your new notes to Trello cards on the board and list you specify.", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Trello", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "trello.create_card", "Filter code method": "Trello.createCard.skip(string?: reason)", "Runtime method": "runAction(\"trello.create_card\", {})"}, "action_details": [{"section": "Action fields", "title": "Board\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "List name\nText input > Other", "description": "Text input > Other", "details": {"Label": "List name", "Helper text": "We'll create a new list if one with this name doesn't exist", "Slug": "list_name", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setList Name(string: list_name)"}}, {"section": "Action fields", "title": "Pos\nDropdown list", "description": "Dropdown list", "details": {"Label": "Position", "Slug": "pos", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setPos(string: pos)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setTitle(string: title)"}}, {"section": "Action fields", "title": "Description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setDescription(string: description)"}}, {"section": "Action fields", "title": "Members\nText input > Other", "description": "Text input > Other", "details": {"Label": "Assign members", "Helper text": "Optional comma separated list of @usernames to assign to card", "Slug": "members", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setMembers(string: members)"}}, {"section": "Action fields", "title": "Labels\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Apply labels", "Helper text": "Optional comma separated list of label names — labels that do not exist on the board will be ignored", "Slug": "labels", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setLabels(string: labels)"}}, {"section": "Action fields", "title": "Url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Attachment URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setUrl(string: url)"}}], "filter_code": "", "intent": "When a new note is created in the \"Personal\" notebook on Evernote with the tags \"important, todo\" and containing the keyword \"meeting\", create a new card on the Trello board \"Work Tasks\" in the list \"To-Do\" at the top position, with the note title as the card title, the note body HTML as the card description, and assign it to members @johnDoe and @janeDoe, applying the labels \"Urgent\" and \"High Priority\", and attach the note's public URL as a photo."}
{"original_description": "This applet will mute your phone every time you get into bed. Once muted, your phone will notify you with a quick vibration. Works with Android only.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.mute_device", "Filter code method": "AndroidDevice.muteDevice.skip(string?: reason)", "Runtime method": "runAction(\"android_device.mute_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Vibrate\nDropdown list", "description": "Dropdown list", "details": {"Label": "Vibrate", "Slug": "vibrate", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.muteDevice.setVibrate(string: vibrate)"}}], "filter_code": "", "intent": "Mute my Android device and trigger a quick vibration every time I get into bed, as detected by Tom's Withings Sleep sensor, between 22:00 and 07:00, and send a notification with a vibration pattern."}
{"original_description": "This will automatically turn off the WiZ light(s) of your choice a few minutes before Sunrise.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_off", "Filter code method": "Wiz.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "Select the lights you want to turn off.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the living room WiZ lamp 10 minutes before sunrise when the current weather condition is Sunny and the temperature is above 18 degrees Celsius."}
{"original_description": "Every time Withings Sleep detects you get into bed, the time will be logged in a Google Spreadsheet. ", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": "", "intent": "When Tom's Withings Sleep detects that he gets into bed between 22:00 and 23:59, log the date and time (in ISO8601 format) in a new row of the Google Spreadsheet named \"Sleep Tracker\", with the formatted row containing the values \"Date|||Time|||Device User\" where Date is the current date (e.g., 2020-07-08), Time is the current time (e.g., 22:45), and Device User is Tom, in the folder path \"Health/Withings Data\"."}
{"original_description": "Every time Withings Sleep detects you get out of bed, the time will be logged in a Google Spreadsheet.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": "", "intent": "Every time Tom's Nokia Sleep detects you get out of bed between 07:00 and 22:00, the date and time will be logged in a row of a Google Spreadsheet named \"Sleep Patterns\" with a formatted row containing the date, time, and device user, and saved in the \"Health Tracking\" folder."}
{"original_description": "Whenever you add a file in your specified Dropbox folder, this applet will automatically download that file to your QNAP Device", "trigger_channel": "Dropbox", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dropbox.new_file_in_folder"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subfolder name", "Helper text": "Optional", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "FileUrl", "Filter code": "Dropbox.newFileInFolder.FileUrl", "Type": "String", "Example": "https://www.dropbox.com/s/qp3cqdjqachyr2x/ifttt_wordmark.png"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "Filename", "Filter code": "Dropbox.newFileInFolder.Filename", "Type": "String", "Example": "coolbeans.jpg"}}, {"section": "Ingredients", "title": "Filename no ext\nThe name of the file without extension.", "description": "The name of the file without extension.", "details": {"Slug": "FilenameNoExt", "Filter code": "Dropbox.newFileInFolder.FilenameNoExt", "Type": "String", "Example": "coolbeans"}}, {"section": "Ingredients", "title": "Modified date\nDate file was created or modified in Dropbox.", "description": "Date file was created or modified in Dropbox.", "details": {"Slug": "ModifiedDate", "Filter code": "Dropbox.newFileInFolder.ModifiedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": "", "intent": "When a new file named like \"document_2023\" is added to the \"/Office/Documents\" subfolder in Dropbox, automatically download it from its public URL to the \"Shared/Downloads\" folder on your QNAP device, naming the file as \"document_2023.pdf\" without needing any further extension."}
{"original_description": "When you send #partymode to @IFTTT in Telegram, your Hue lights will start a color loop.", "trigger_channel": "Telegram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "telegram.new_group_text_filter"}, "trigger_details": [{"section": "Trigger fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which group?", "Helper text": "You can use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot to <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">connect new groups</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Filter\nText input", "description": "Text input", "details": {"Label": "Key phrase", "Helper text": "Any #hashtag or keyword. The Trigger fires when anyone sends a message with the command /ifttt and the key phrase to the group.", "Slug": "filter", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Reply text\nText input > Other", "description": "Text input > Other", "details": {"Label": "What to send as a reply?", "Helper text": "The bot will reply to the command with this text. Leave blank for a standard message.", "Slug": "reply_text", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was triggered.", "description": "Date and time event was triggered.", "details": {"Slug": "created_at", "Filter code": "Telegram.newGroupTextFilter.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Group title\nThe title of the group.", "description": "The title of the group.", "details": {"Slug": "group_title", "Filter code": "Telegram.newGroupTextFilter.GroupTitle", "Type": "String", "Example": "Bot News Group"}}, {"section": "Ingredients", "title": "Author name\nThe name of the author who triggered the Applet.", "description": "The name of the author who triggered the Applet.", "details": {"Slug": "author_name", "Filter code": "Telegram.newGroupTextFilter.AuthorName", "Type": "String", "Example": "Pavel Durov"}}, {"section": "Ingredients", "title": "Author username\nAuthor username, when available.", "description": "Author username, when available.", "details": {"Slug": "author_username", "Filter code": "Telegram.newGroupTextFilter.AuthorUsername", "Type": "String", "Example": "durov"}}, {"section": "Ingredients", "title": "Text\nRepresents a plain-text message contents. Does not include the 'Key phrase'.", "description": "Represents a plain-text message contents. Does not include the 'Key phrase'.", "details": {"Slug": "text", "Filter code": "Telegram.newGroupTextFilter.Text", "Type": "String", "Example": "Hello world!"}}, {"section": "Ingredients", "title": "Html\nRepresents HTML-formatted message contents.", "description": "Represents HTML-formatted message contents.", "details": {"Slug": "html", "Filter code": "Telegram.newGroupTextFilter.HTML", "Type": "String", "Example": "Hello <b>world</b>.<br/>This string <i>can</i> contain <pre>some</pre> HTML <code>tags</code>."}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "", "intent": "When the message \"#partymode\" is sent by anyone to the \"@IFTTT\" bot in the \"Friends Chat\" Telegram group, and the message is received between 18:00 and 23:00, then start a color loop on all Philips Hue lights in the living room."}
{"original_description": "This Applet will add all new notes in a notebook as a new doc in a folder under IFTTT/Evernote in your Drive. ", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Google Docs", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_docs.create_google_doc", "Filter code method": "GoogleDocs.createGoogleDoc.skip(string?: reason)", "Runtime method": "runAction(\"google_docs.create_google_doc\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "Document name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.createGoogleDoc.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Content", "Helper text": "Some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.createGoogleDoc.setBody(string: body)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: folders separated by &quot;/&quot; like &quot;Documents/Photos/Receipts&quot; (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDocs.createGoogleDoc.setPath(string: path)"}}], "filter_code": "", "intent": "Create a new Google Doc named \"New Note from Evernote\" in the folder \"IFTTT/Evernote/Notes\" on Google Drive whenever a new note titled \"Meeting Notes\" with tags \"urgent, meeting\" is created in the \"Work\" notebook on Evernote, and include the note's body HTML content."}
{"original_description": "Let the party begin! If your weather station registers noise above a certain threshold it will activate a color loop for your Philips Hue lights.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.noise-rises-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target noise level", "Helper text": "In decibels (dB)", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured noise level\nThe measured noise level in decibels", "description": "The measured noise level in decibels", "details": {"Slug": "MeasuredNoiseLevel", "Filter code": "Netatmo.noiseRisesAbove.MeasuredNoiseLevel", "Type": "String", "Example": "73"}}, {"section": "Ingredients", "title": "Target noise level\nThe target noise level in decibels", "description": "The target noise level in decibels", "details": {"Slug": "TargetNoiseLevel", "Filter code": "Netatmo.noiseRisesAbove.TargetNoiseLevel", "Type": "String", "Example": "53"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.noiseRisesAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the noise", "description": "This is the name of the Netamo device where you are reading the noise", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.noiseRisesAbove.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "", "intent": "When the noise level at my Netatmo Weather Station, named \"My Home - Indoor station\", rises above 60 decibels, activate a color loop on all my Philips Hue lights in the living room, setting them to a vibrant orange color, #FFA07A."}
{"original_description": "This Applet will turn on or off your BroadLink device when the sun sets in your area.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "BroadLink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "broadlink.powerState", "Filter code method": "Broadlink.powerState.skip(string?: reason)", "Runtime method": "runAction(\"broadlink.powerState\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Powercontrol changepowerstate string\nDropdown list", "description": "Dropdown list", "details": {"Label": "On or off?", "Slug": "PowerControl_ChangePowerState_string", "Required": "true", "Can have default value": "true", "Filter code method": "Broadlink.powerState.setPower Control Change Power State String(string: PowerControl_ChangePowerState_string)"}}], "filter_code": "", "intent": "Turn on the Living Room Lamp BroadLink device when the sun sets in New York, if the current temperature is above 18 degrees Celsius and the weather condition is Sunny."}
{"original_description": "Just pick the board and the list, and when a card is added in Trello, a corresponding task will be created in Todoist automatically. Get. More. Done!", "trigger_channel": "Trello", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "trello.card_added_to_list"}, "trigger_details": [{"section": "Trigger fields", "title": "Board\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "List name\nText input", "description": "Text input", "details": {"Label": "List name", "Helper text": "Type a list name as it appears in your Trello board", "Slug": "list_name", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe title of the card.", "description": "The title of the card.", "details": {"Slug": "title", "Filter code": "Trello.cardAddedToList.Title", "Type": "String", "Example": "Book flights"}}, {"section": "Ingredients", "title": "Description\nThe description of the card.", "description": "The description of the card.", "details": {"Slug": "description", "Filter code": "Trello.cardAddedToList.Description", "Type": "String", "Example": "Check various airline websites to find the best deal."}}, {"section": "Ingredients", "title": "Creator full name\nThe full name of the member who added the card.", "description": "The full name of the member who added the card.", "details": {"Slug": "creator_name", "Filter code": "Trello.cardAddedToList.CreatorFullName", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Creator username\nThe username of the member who added the card.", "description": "The username of the member who added the card.", "details": {"Slug": "creator_username", "Filter code": "Trello.cardAddedToList.CreatorUsername", "Type": "String", "Example": "sfjetsetter"}}, {"section": "Ingredients", "title": "List name\nThe name of the list the card was added to.", "description": "The name of the list the card was added to.", "details": {"Slug": "list_name", "Filter code": "Trello.cardAddedToList.ListName", "Type": "String", "Example": "To dos"}}, {"section": "Ingredients", "title": "Board name\nThe name of the board the card was added to.", "description": "The name of the board the card was added to.", "details": {"Slug": "board_name", "Filter code": "Trello.cardAddedToList.BoardName", "Type": "String", "Example": "New Zealand Trip"}}, {"section": "Ingredients", "title": "Card url\nThe URL to the card.", "description": "The URL to the card.", "details": {"Slug": "url", "Filter code": "Trello.cardAddedToList.CardURL", "Type": "Web URL", "Example": "https://trello.com/c/example"}}, {"section": "Ingredients", "title": "Added at\nDate and time the card was added to the list.", "description": "Date and time the card was added to the list.", "details": {"Slug": "added_at", "Filter code": "Trello.cardAddedToList.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Todoist", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "todoist.create_task", "Filter code method": "Todoist.createTask.skip(string?: reason)", "Runtime method": "runAction(\"todoist.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project and section", "Helper text": "Project and section to which the task belongs", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task content\nText input", "description": "Text input", "details": {"Label": "Task content", "Helper text": "<a href=\"https://todoist.com/help/articles/205195102\" target=\"_blank\">Text formatting guide</a> and <a href=\"https://todoist.com/help/articles/360000029000\" target=\"_blank\">label format guide</a>", "Slug": "task_content", "Required": "true", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Content(string: task_content)"}}, {"section": "Action fields", "title": "Note\nText input > Other", "description": "Text input > Other", "details": {"Label": "Note", "Helper text": "Add additional task note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Due date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task's due date", "Helper text": "Check the <a href=\"https://todoist.com/help/articles/205325931\" target=\"_blank\">Due dates and times format guide</a>", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setDue Date(string: due_date)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Helper text": "Task's priority", "Slug": "priority", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setPriority(string: priority)"}}, {"section": "Action fields", "title": "Task description\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task description", "Helper text": "Task's description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Description(string: task_description)"}}], "filter_code": "", "intent": "When a new card titled \"Book Flight\" is added to the list \"To dos\" on the Trello board \"New Zealand Trip\" by John Smith, create a new task in Todoist with the project set to \"Personal\", task content as \"Book flight to New Zealand\", note as \"Check various airline websites for deals\", due date as \"today\", and priority as \"High\"."}
{"original_description": "This applet will turn up the volume on your Sonos speaker when your robot starts cleaning. ", "trigger_channel": "iRobot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "irobot.robot_start"}, "trigger_details": [{"section": "Trigger fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nTime the robot started.", "description": "Time the robot started.", "details": {"Slug": "iso_timestamp", "Filter code": "Irobot.robotStart.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.increase_volume", "Filter code method": "Sonos.increaseVolume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.increase_volume\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to change the volume?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Change volume for this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.increaseVolume.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": "", "intent": "When my iRobot Roomba named \"Kitchen Cleaner\" starts cleaning at any time, turn up the volume on my Sonos speaker in the \"Living Room\" and include all grouped rooms."}
{"original_description": "Your coffee machine with Home Connect will turn on and run the rinsing program when you press the Button widget.\n", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_on", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When you press the Button widget at a location like 37.8267, -122.4230, turn on the Home Connect coffee machine named \"MyMorningBrew\" and run the rinsing program."}
{"original_description": "When your Android device's battery drops below 15%, you will get a text notification as a reminder to plug it in.", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_low"}, "trigger_details": [{"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryLow.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device's battery became low.", "description": "The time the device's battery became low.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryLow.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryLow.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": "", "intent": "When the battery of your Google Pixel 7 drops below 15%, send a text message with the content \"Low Battery: Plug in your device\" to phone number +1234567890."}
{"original_description": "Perfect for adding to a playlist while the party is going — the color loop will let everyone know a new jam is in the mix. 🎉  GET HYPE! ", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_track_added_to_playlist"}, "trigger_details": [{"section": "Trigger fields", "title": "Playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which playlist?", "Helper text": "Only the first 50 playlists shown at <a href=\"https://open.spotify.com/\" target=\"_blank\">open.spotify.com</a> will be displayed here. You can click and drag playlists to reorder them", "Slug": "playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Playlist name\nThe name of the playlist.", "description": "The name of the playlist.", "details": {"Slug": "playlist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.PlaylistName", "Type": "String", "Example": "Mid-2000s Jamz"}}, {"section": "Ingredients", "title": "Added by\nThe name of the user that added this track to the playlist.", "description": "The name of the user that added this track to the playlist.", "details": {"Slug": "added_by", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedBy", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Added at\nThe time at which the track was added to the playlist.", "description": "The time at which the track was added to the playlist.", "details": {"Slug": "added_at", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "", "intent": "When a new track is added to the \"Party Mix\" playlist on Spotify by any user, change the color of all Philips Hue lights in the \"Living Room\" group to a vibrant orange color (#FFA07A)."}
{"original_description": "Twitch alert! The Hue light you select will turn purple when the channel you choose starts streaming. ", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "", "intent": "When the Twitch channel \"Ninja\" starts streaming a game of \"Fortnite\", turn all the lights in the living room to purple."}
{"original_description": "When an abode door or window equipped with a sensor is opened, Arlo will record a video clip.", "trigger_channel": "abode", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "abode.door_opened"}, "trigger_details": [{"section": "Trigger fields", "title": "Select door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select door", "Slug": "select_door", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Abode.doorOpened.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Door name\nName of door which is opened.", "description": "Name of door which is opened.", "details": {"Slug": "name", "Filter code": "Abode.doorOpened.DoorName", "Type": "String", "Example": "Door Name"}}], "action_channel": "Arlo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "arlo.record", "Filter code method": "Arlo.record.skip(string?: reason)", "Runtime method": "runAction(\"arlo.record\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "How long?", "Helper text": "How long Arlo will record in seconds.", "Slug": "duration", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the \"Front Door\" is opened, as detected by the abode sensor, record a 30-second video clip using the \"Living Room Camera\" on Arlo."}
{"original_description": "Whenever you upload a video on Instagram, this applet will automatically download that video to the QNAP Device", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_video_by_you_tagged_instagram"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newVideoByYouTaggedInstagram.Caption", "Type": "String", "Example": "A cool video #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the tag", "description": "The caption without the tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newVideoByYouTaggedInstagram.CaptionNoTag", "Type": "String", "Example": "A cool video"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the video's Instagram page.", "description": "The short URL to the video's Instagram page.", "details": {"Slug": "URL", "Filter code": "Instagram.newVideoByYouTaggedInstagram.URL", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Video source url\nURL to the video file.", "description": "URL to the video file.", "details": {"Slug": "VideoSourceURL", "Filter code": "Instagram.newVideoByYouTaggedInstagram.VideoSourceURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4"}}, {"section": "Ingredients", "title": "Image thumbnail url\nURL to the video's thumbnail image.", "description": "URL to the video's thumbnail image.", "details": {"Slug": "ImageThumbnailURL", "Filter code": "Instagram.newVideoByYouTaggedInstagram.ImageThumbnailURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the video was taken.", "description": "Date and time the video was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newVideoByYouTaggedInstagram.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the video.", "description": "The HTML embed code for the video.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newVideoByYouTaggedInstagram.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": "", "intent": "When you upload a new video to Instagram with the caption containing \"#IFTTT\" and it's between 07:00 and 19:00, automatically download the video file from the URL http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4 to the QNAP device in the shared folder \"MyVideos\" with the file name \"instagram_video_123\" and subfolder path \"videos/2023\"."}
{"original_description": "This Applet will make sure you're not leaving your porch or garden lights on longer than necessary", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Futurehome", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "futurehome.power_off", "Filter code method": "Futurehome.powerOff.skip(string?: reason)", "Runtime method": "runAction(\"futurehome.power_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the porch lights when the sunrise is at 6:00 AM and the current temperature is above 64°F, using the Futurehome device named \"Porch Lights\"."}
{"original_description": "This applet will allow you to turn on your outside light whenever the sun sets", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Futurehome", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "futurehome.power_on", "Filter code method": "Futurehome.powerOn.skip(string?: reason)", "Runtime method": "runAction(\"futurehome.power_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the outside light at my home in New York when the sun sets when the current temperature is 68 degrees Fahrenheit and the weather condition is partly cloudy."}
{"original_description": "This Applet will turn on or off your BroadLink device when the sun rises in your area.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "BroadLink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "broadlink.powerState", "Filter code method": "Broadlink.powerState.skip(string?: reason)", "Runtime method": "runAction(\"broadlink.powerState\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Powercontrol changepowerstate string\nDropdown list", "description": "Dropdown list", "details": {"Label": "On or off?", "Slug": "PowerControl_ChangePowerState_string", "Required": "true", "Can have default value": "true", "Filter code method": "Broadlink.powerState.setPower Control Change Power State String(string: PowerControl_ChangePowerState_string)"}}], "filter_code": "", "intent": "Turn on the Living Room Lamp BroadLink device when the sun rises in New York City and the current temperature is above 18 degrees Celsius."}
{"original_description": "Within 15 minutes of your locations sunset a LightwaveRF dimmer of your choice will switch on", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "LightwaveRF Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lightwaverf_lighting.switch_on_light", "Filter code method": "LightwaverfLighting.switchOnLight.skip(string?: reason)", "Runtime method": "runAction(\"lightwaverf_lighting.switch_on_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Which light\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Light?", "Slug": "which_light", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the sunset at your location is within 15 minutes and the current temperature is above 18 degrees Celsius, switch on the Living Room Dimmer light."}
{"original_description": "Every time  your Android phone's battery is low, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_low"}, "trigger_details": [{"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryLow.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device's battery became low.", "description": "The time the device's battery became low.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryLow.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryLow.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the battery percentage of my Google Pixel 7 falls below 15%, send a Signal to my Das Keyboard named \"Low Battery Alert\" with the message \"Charge your phone\" and set the zone to the numeric keypad, color to red, effect to blink, and device to Office Keyboard."}
{"original_description": "When the sun sets, your eWeLink 4 Channels Switch will turn on or off.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.switches4_action", "Filter code method": "Ewelink.switches4Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.switches4_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Switches4 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 4-Channel Switch?", "Slug": "switches4_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Switches4 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "switches4_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the sun sets at your location, with a temperature of 18°C and a condition of Sunny, turn on channel 1 of your eWeLink 4 Channels Switch."}
{"original_description": "A key on your Das Keyboard will change color when temperature outside is above a certain value.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the temperature in New York is above 75°F, change the color of the top-left key on your Das Keyboard to red."}
{"original_description": "Whenever you upload a photo on Instagram, this applet will automatically download that photo to a specific folder on the QNAP device", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": "", "intent": "Whenever you upload a new photo on Instagram with a caption containing the keyword \"vacation\", download the image file from its source URL to the QNAP device in the shared folder named \"Photos\" and subfolder \"2024 Vacations\", and save it as \"Instagram_Photo_YYYYMMDD_HHMMSS.jpg\" where YYYYMMDD_HHMMSS represents the date and time the photo was taken."}
{"original_description": "When your Android battery drops below 15%, your Nanoleaf Aurora will change color to remind you to plug it in and charge. Red by default.", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_low"}, "trigger_details": [{"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryLow.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device's battery became low.", "description": "The time the device's battery became low.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryLow.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryLow.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.change_color_request", "Filter code method": "Nanoleaf.changeColorRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.change_color_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "Set the color value in hex (00FF00) or by name (Green). The hash (#) is not required for hex value input.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.changeColorRequest.setValue(string: value)"}}], "filter_code": "", "intent": "When the battery of my Google Pixel 7 drops below 15%, change the color of my Nanoleaf Aurora to Red (#FF0000) at 07:00 to remind me to plug it in and charge."}
{"original_description": "Choose the subreddit when you set up the Applet. Your new blog posts will automatically be submitted to the Reddit community you choose as a link post. Sit back, and wait for the upvotes...", "trigger_channel": "WordPress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wordpress.any_new_post_wp"}, "trigger_details": [{"section": "Ingredients", "title": "Post title\nThe post's title.", "description": "The post's title.", "details": {"Slug": "PostTitle", "Filter code": "Wordpress.anyNewPostWp.PostTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Post url\nThe post's URL.", "description": "The post's URL.", "details": {"Slug": "PostUrl", "Filter code": "Wordpress.anyNewPostWp.PostUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Post content\nThe post's content, may contain HTML.", "description": "The post's content, may contain HTML.", "details": {"Slug": "PostContent", "Filter code": "Wordpress.anyNewPostWp.PostContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Post image url\nURL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "details": {"Slug": "PostImageUrl", "Filter code": "Wordpress.anyNewPostWp.PostImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Tags and categories\nThe post's tags and categories, comma seperated.", "description": "The post's tags and categories, comma seperated.", "details": {"Slug": "TagsAndCategories", "Filter code": "Wordpress.anyNewPostWp.TagsAndCategories", "Type": "String", "Example": "neato, really cool"}}, {"section": "Ingredients", "title": "Post published\nDate post was created", "description": "Date post was created", "details": {"Slug": "PostPublished", "Filter code": "Wordpress.anyNewPostWp.PostPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Reddit", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "reddit.submit_link_reddit", "Filter code method": "Reddit.submitLinkReddit.skip(string?: reason)", "Runtime method": "runAction(\"reddit.submit_link_reddit\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "Reddit.submitLinkReddit.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Slug": "link", "Required": "true", "Can have default value": "true", "Filter code method": "Reddit.submitLinkReddit.setLink(string: link)"}}, {"section": "Action fields", "title": "Subreddit\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subreddit", "Helper text": "e.g. worldnews", "Slug": "subreddit", "Required": "true", "Can have default value": "true", "Filter code method": "Reddit.submitLinkReddit.setSubreddit(string: subreddit)"}}], "filter_code": "", "intent": "When a new post titled \"Launch Day!\" is published on my WordPress blog at http://blog.ifttt.com/coming-soon, with the tags \"neato, really cool\" and containing the image http://ifttt.com/images/no_image_card.png, automatically submit it as a link post to the r/technology subreddit on Reddit."}
{"original_description": "If your team uses Google Drive, this Applet will keep your form submissions easily accessible.", "trigger_channel": "Jotform", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "jotform.latest_form_submission"}, "trigger_details": [{"section": "Trigger fields", "title": "Form\nDropdown list", "description": "Dropdown list", "details": {"Label": "Form", "Helper text": "Choose a form", "Slug": "form_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Question filter\nText input > Other", "description": "Text input > Other", "details": {"Label": "Question Filter", "Helper text": "Optional question filter (label text) e.g. Name, Email, Address", "Slug": "question_filter", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Ip\nThe form respondent's detected IP address.", "description": "The form respondent's detected IP address.", "details": {"Slug": "ip", "Filter code": "Jotform.latestFormSubmission.IP", "Type": "String", "Example": "192.168.0.100"}}, {"section": "Ingredients", "title": "Form title\nThe form title.", "description": "The form title.", "details": {"Slug": "form_title", "Filter code": "Jotform.latestFormSubmission.FormTitle", "Type": "String", "Example": "My Contact Form"}}, {"section": "Ingredients", "title": "Submission date time\nThe date and time of the form submission.", "description": "The date and time of the form submission.", "details": {"Slug": "submission_date_time", "Filter code": "Jotform.latestFormSubmission.SubmissionDateTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Total submissions\nThe total submission count.", "description": "The total submission count.", "details": {"Slug": "total_submissions", "Filter code": "Jotform.latestFormSubmission.TotalSubmissions", "Type": "String", "Example": "8"}}, {"section": "Ingredients", "title": "Form\nA number that uniquely identifies the form.", "description": "A number that uniquely identifies the form.", "details": {"Slug": "form_id", "Filter code": "Jotform.latestFormSubmission.FormID", "Type": "String", "Example": "1234567890"}}, {"section": "Ingredients", "title": "Submission\nA number that uniquely identifies the form submission.", "description": "A number that uniquely identifies the form submission.", "details": {"Slug": "submission_id", "Filter code": "Jotform.latestFormSubmission.SubmissionID", "Type": "String", "Example": "850507727987654321"}}, {"section": "Ingredients", "title": "Rich text data\nThe form data in a tabulated HTML format.", "description": "The form data in a tabulated HTML format.", "details": {"Slug": "rich_text_data", "Filter code": "Jotform.latestFormSubmission.RichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Spreadsheet data\nThe form data in a CSV format.", "description": "The form data in a CSV format.", "details": {"Slug": "spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.SpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "Filtered rich text data\nThe filtered form data in a tabulated HTML format.", "description": "The filtered form data in a tabulated HTML format.", "details": {"Slug": "filtered_rich_text_data", "Filter code": "Jotform.latestFormSubmission.FilteredRichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Filtered spreadsheet data\nThe filtered form data in a CSV format.", "description": "The filtered form data in a CSV format.", "details": {"Slug": "filtered_spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.FilteredSpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "File url\nThe URL of the file(s) uploaded on your form.", "description": "The URL of the file(s) uploaded on your form.", "details": {"Slug": "file_url", "Filter code": "Jotform.latestFormSubmission.FileUrl", "Type": "String", "Example": "http://www.jotform.com/uploads/user/1234567890/9876543210/images.zip"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": "", "intent": "When a new submission is received from form 1234567890, specifically the \"My Contact Form\" with an IP address of 192.168.0.100 and where the question filter is set to \"Email\", append the filtered rich text data in a tabulated HTML format to a Google Sheets spreadsheet named \"Contact Submissions\" with a formatted row that includes \"Name|||Email|||Message\" and save it to the \"Submissions/2023\" folder."}
{"original_description": "This will change the WiZ light(s) of your choice to turquoise if Weather Underground records a current temperature below the point you defined. (Only for WiZ Colors lights)", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the current temperature in New York drops below 5°C, turn on the WiZ light in the Living Room to turquoise at 50% brightness."}
{"original_description": "When Wyze Cam detects your smoke alarm ringing, Noonlight will send the fire department to your location", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.smoke_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Smoke detected\nSmoke alarm detected on your wyze camera.", "description": "Smoke alarm detected on your wyze camera.", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.smokeTrigger.SmokeDetected", "Type": "String", "Example": "Smoke alarm detected on your wyze camera."}}, {"section": "Ingredients", "title": "Trigger time\nTime when smoke is triggered.", "description": "Time when smoke is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.smokeTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Noonlight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "safetrek.alert_address", "Filter code method": "Safetrek.alertAddress.skip(string?: reason)", "Runtime method": "runAction(\"safetrek.alert_address\", {})"}, "action_details": [{"section": "Action fields", "title": "Address line 1\nText input > Other", "description": "Text input > Other", "details": {"Label": "Street Address", "Slug": "address_line_1", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Address line 2\nText input > Other", "description": "Text input > Other", "details": {"Label": "Apt, suite, unit, etc.", "Slug": "address_line_2", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "City\nText input > Other", "description": "Text input > Other", "details": {"Label": "City", "Slug": "city", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "State\nText input > Other", "description": "Text input > Other", "details": {"Label": "State", "Slug": "state", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Zip\nText input > Other", "description": "Text input > Other", "details": {"Label": "Zip", "Slug": "zip", "Required": "true", "Can have default value": "true"}}], "filter_code": "", "intent": "When the Wyze Cam named \"Living Room Camera\" detects a smoke alarm ringing, send the fire department to 123 Main Street, Apt 101, New York, NY 10001."}
{"original_description": "This will automatically change the WiZ light(s) of your choice to blue whenever the current condition reported by Weather Underground changes to \"rain\". A simple way to make sure you don't forget your umbrella! (Only for WiZ Colors lights)", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the current weather condition in New York changes to \"rain\" as reported by Weather Underground, turn on the WiZ light in the living room, setting it to blue mode with a brightness of 50%."}
{"original_description": "This Applet will attempt to close your garage door 2 or gate every day at specific time. If the garage door is already closed, it will remain closed.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Gogogate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "gogogate.close_door", "Filter code method": "Gogogate.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"gogogate.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Close the garage door number 1 every day at 8:00 PM, but only if it is currently open, to ensure the garage remains secure overnight."}
{"original_description": "Whenever a specified Twitch channel you follow goes live, your Das Keyboard will receive a notification.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Twitch channel \"Ninja\" goes live and is streaming \"Fortnite\", send a notification to the \"Office Keyboard\" device on the Das Keyboard Q, setting the zone to \"Key 1\" with the color \"#FF0000\" and displaying the message \"Ninja is live on Twitch\" with a \"Breathe\" effect."}
{"original_description": "An easy way to share your favorite tracks on Spotify to the followers of your Telegram channel! Every time you add a track to the playlist you specify, a message will be posted to a Telegram channel that you're an admin of.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_track_added_to_playlist"}, "trigger_details": [{"section": "Trigger fields", "title": "Playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which playlist?", "Helper text": "Only the first 50 playlists shown at <a href=\"https://open.spotify.com/\" target=\"_blank\">open.spotify.com</a> will be displayed here. You can click and drag playlists to reorder them", "Slug": "playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Playlist name\nThe name of the playlist.", "description": "The name of the playlist.", "details": {"Slug": "playlist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.PlaylistName", "Type": "String", "Example": "Mid-2000s Jamz"}}, {"section": "Ingredients", "title": "Added by\nThe name of the user that added this track to the playlist.", "description": "The name of the user that added this track to the playlist.", "details": {"Slug": "added_by", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedBy", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Added at\nThe time at which the track was added to the playlist.", "description": "The time at which the track was added to the playlist.", "details": {"Slug": "added_at", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_photo", "Filter code method": "Telegram.sendPhoto.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_photo\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Caption\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Caption", "Helper text": "Optional, 200 characters max.", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setCaption(string: caption)"}}], "filter_code": "", "intent": "When a new track is added to the \"My Favorites\" playlist on Spotify, send a photo with a caption including the track name and artist to the \"#music-sharing\" chat on Telegram."}
{"original_description": "When you plug in your phone to charge it, your Android's ringtone will be set to mute.", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_plugged_in"}, "trigger_details": [{"section": "Ingredients", "title": "Power source\nThe source of the charge.", "description": "The source of the charge.", "details": {"Slug": "PowerSource", "Filter code": "AndroidBattery.batteryPluggedIn.PowerSource", "Type": "String", "Example": "AC"}}, {"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryPluggedIn.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device was plugged in.", "description": "The time the device was plugged in.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryPluggedIn.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryPluggedIn.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.mute_device", "Filter code method": "AndroidDevice.muteDevice.skip(string?: reason)", "Runtime method": "runAction(\"android_device.mute_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Vibrate\nDropdown list", "description": "Dropdown list", "details": {"Label": "Vibrate", "Slug": "vibrate", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.muteDevice.setVibrate(string: vibrate)"}}], "filter_code": "", "intent": "When the Google Pixel 7 is plugged into an AC power source and the battery percentage is below 80, at any time after 07:00 and before 22:00, set the Android device to mute with vibrate enabled."}
{"original_description": "This will turn on your Phillips Hue lights when you set your mode", "trigger_channel": "Futurehome", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "futurehome.mode_switched"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe Mode the site was set to.", "description": "The Mode the site was set to.", "details": {"Slug": "mode", "Filter code": "Futurehome.modeSwitched.Mode", "Type": "String", "Example": "home"}}, {"section": "Ingredients", "title": "Triggered at\nThe time when the mode was triggered.", "description": "The time when the mode was triggered.", "details": {"Slug": "triggered_at", "Filter code": "Futurehome.modeSwitched.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Site name\nThe name of the site where the trigger was triggered.", "description": "The name of the site where the trigger was triggered.", "details": {"Slug": "site_name", "Filter code": "Futurehome.modeSwitched.SiteName", "Type": "String", "Example": "Home"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Philips Hue living room lights when the Futurehome mode is set to \"home\" between 17:00 and 22:00 at the \"Home\" site."}
{"original_description": "Every time that you miss a call on your phone, a task will be added to Remember The Milk to remind you to follow up on the call.", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.miss_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.missAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.missAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.missAPhoneCall.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.missAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Remember The Milk", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rememberthemilk.tasks_add", "Filter code method": "Rememberthemilk.tasksAdd.skip(string?: reason)", "Runtime method": "runAction(\"rememberthemilk.tasks_add\", {})"}, "action_details": [{"section": "Action fields", "title": "Task\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Helper text": "Task name with properties in <a href=\"https://www.rememberthemilk.com/help/answer/basics-smartadd-howdoiuse\" target=\"_blank\">Smart Add</a> format. E.g. &quot;Call Bob at 9am Monday #work&quot;.", "Slug": "task", "Required": "true", "Can have default value": "true", "Filter code method": "Rememberthemilk.tasksAdd.setTask(string: task)"}}], "filter_code": "", "intent": "When a call from an unknown number, like 14155551234, is missed on my Google Pixel 7 at any time, add a task to Remember The Milk with the name \"Follow up with unknown caller 14155551234\" to remind me to return the call."}
{"original_description": "This will automatically change the WiZ light(s) of your choice to orange if Weather Underground records a current temperature higher than the threshold you define. (Only for WiZ Colors lights)", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "If the current temperature in New York exceeds 75 degrees Fahrenheit, then turn on the living room WiZ light to orange at 80% brightness."}
{"original_description": "Every new Instagram video you post will be automatically added to your Buffer Queue!", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_video_by_you_tagged_instagram"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newVideoByYouTaggedInstagram.Caption", "Type": "String", "Example": "A cool video #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the tag", "description": "The caption without the tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newVideoByYouTaggedInstagram.CaptionNoTag", "Type": "String", "Example": "A cool video"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the video's Instagram page.", "description": "The short URL to the video's Instagram page.", "details": {"Slug": "URL", "Filter code": "Instagram.newVideoByYouTaggedInstagram.URL", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Video source url\nURL to the video file.", "description": "URL to the video file.", "details": {"Slug": "VideoSourceURL", "Filter code": "Instagram.newVideoByYouTaggedInstagram.VideoSourceURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4"}}, {"section": "Ingredients", "title": "Image thumbnail url\nURL to the video's thumbnail image.", "description": "URL to the video's thumbnail image.", "details": {"Slug": "ImageThumbnailURL", "Filter code": "Instagram.newVideoByYouTaggedInstagram.ImageThumbnailURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the video was taken.", "description": "Date and time the video was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newVideoByYouTaggedInstagram.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the video.", "description": "The HTML embed code for the video.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newVideoByYouTaggedInstagram.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Buffer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "buffer.add_to_buffer", "Filter code method": "Buffer.addToBuffer.skip(string?: reason)", "Runtime method": "runAction(\"buffer.add_to_buffer\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Update", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBuffer.setMessage(string: message)"}}], "filter_code": "", "intent": "When I post a new video on Instagram with the caption containing the hashtag #IFTTT and the tag \"newvideo\", add the video's short URL to my Buffer Queue as a new update with the message \"Check out my latest Instagram video: http://instagr.am/p/CTGBw/\"."}
{"original_description": "If your Airthings device detects high radon levels above the set threshold, your Hue light will briefly blink.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.radon-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Measurement unit", "Helper text": "What unit of measurement would you like to receive your radon levels in?", "Slug": "unit", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get radon levels from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.radonAbove.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Radon level\nThe radon level. In the measurement unit specified.", "description": "The radon level. In the measurement unit specified.", "details": {"Slug": "value", "Filter code": "Airthings.radonAbove.RadonLevel", "Type": "String", "Example": "120"}}, {"section": "Ingredients", "title": "Measurement unit\nThe unit of measurement used for radon, Bq/m3 or pCi/L.", "description": "The unit of measurement used for radon, Bq/m3 or pCi/L.", "details": {"Slug": "unit", "Filter code": "Airthings.radonAbove.MeasurementUnit", "Type": "String", "Example": "Bq/m3"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.radonAbove.Device", "Type": "String", "Example": "Home - Living Room"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the radon level from my Airthings device named \"Home - Living Room\" exceeds 150 Bq/m3, briefly blink all Philips Hue lights in the living room."}
{"original_description": "Your Homey will inform you as soon as your washer with Home Connect has finished.", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Homey", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "homey.let_homey_speak", "Filter code method": "Homey.letHomeySpeak.skip(string?: reason)", "Runtime method": "runAction(\"homey.let_homey_speak\", {})"}, "action_details": [{"section": "Action fields", "title": "Which homey\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Homey?", "Slug": "which_homey", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "What text\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What text?", "Slug": "what_text", "Required": "true", "Can have default value": "true", "Filter code method": "Homey.letHomeySpeak.setWhat Text(string: what_text)"}}], "filter_code": "", "intent": "When the Home Connect washer, labeled as \"Laundry Room Washer\", finishes its cycle, Homey, specifically the \"Living Room Homey\" device, will speak the text \"The laundry is done\"."}
{"original_description": "This Action will press SwitchBoth.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.press_bot", "Filter code method": "Switchbot.pressBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.press_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a motion detection event with the text \"Motion Tag: Detected!\" is triggered at any time, press the SwitchBoth device on SwitchBot."}
{"original_description": "When you save an item in Pocket, a task will be added to Remember The Milk to remind you to (actually!) read it later.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Remember The Milk", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rememberthemilk.tasks_add", "Filter code method": "Rememberthemilk.tasksAdd.skip(string?: reason)", "Runtime method": "runAction(\"rememberthemilk.tasks_add\", {})"}, "action_details": [{"section": "Action fields", "title": "Task\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Helper text": "Task name with properties in <a href=\"https://www.rememberthemilk.com/help/answer/basics-smartadd-howdoiuse\" target=\"_blank\">Smart Add</a> format. E.g. &quot;Call Bob at 9am Monday #work&quot;.", "Slug": "task", "Required": "true", "Can have default value": "true", "Filter code method": "Rememberthemilk.tasksAdd.setTask(string: task)"}}], "filter_code": "", "intent": "When a new item titled \"My Weekly News\" with the URL \"http://news.ifttt.com\" and tags \"news, weekly\" is saved in Pocket at 8:00 AM, add a task named \"Read My Weekly News at 7:00 PM today #reading\" to Remember The Milk."}
{"original_description": "Whenever a Trello card is assigned to you, your Das Keyboard will receive a new signal.", "trigger_channel": "Trello", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "trello.card_assigned_to_me"}, "trigger_details": [{"section": "Trigger fields", "title": "Board\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe title of the card.", "description": "The title of the card.", "details": {"Slug": "title", "Filter code": "Trello.cardAssignedToMe.Title", "Type": "String", "Example": "Weigh suitcases before leaving for airport"}}, {"section": "Ingredients", "title": "Description\nThe description of the card.", "description": "The description of the card.", "details": {"Slug": "description", "Filter code": "Trello.cardAssignedToMe.Description", "Type": "String", "Example": "Be sure to check airline maximum weight allowance!"}}, {"section": "Ingredients", "title": "Assigner full name\nThe full name of the member who assigned the card to you.", "description": "The full name of the member who assigned the card to you.", "details": {"Slug": "creator_name", "Filter code": "Trello.cardAssignedToMe.AssignerFullName", "Type": "String", "Example": "Mary Smith"}}, {"section": "Ingredients", "title": "Assigner username\nThe username of the member who assigned the card to you.", "description": "The username of the member who assigned the card to you.", "details": {"Slug": "creator_username", "Filter code": "Trello.cardAssignedToMe.AssignerUsername", "Type": "String", "Example": "sfjetsetbuddy"}}, {"section": "Ingredients", "title": "List name\nThe list that contained the card.", "description": "The list that contained the card.", "details": {"Slug": "list_name", "Filter code": "Trello.cardAssignedToMe.ListName", "Type": "String", "Example": "To dos"}}, {"section": "Ingredients", "title": "Board name\nThe board that contains the card.", "description": "The board that contains the card.", "details": {"Slug": "board_name", "Filter code": "Trello.cardAssignedToMe.BoardName", "Type": "String", "Example": "New Zealand Trip"}}, {"section": "Ingredients", "title": "Card url\nThe URL to the card.", "description": "The URL to the card.", "details": {"Slug": "url", "Filter code": "Trello.cardAssignedToMe.CardURL", "Type": "Web URL", "Example": "https://trello.com/c/hZtPQ5Af"}}, {"section": "Ingredients", "title": "Assigned at\nDate and time the card was assigned to you.", "description": "Date and time the card was assigned to you.", "details": {"Slug": "added_at", "Filter code": "Trello.cardAssignedToMe.AssignedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a new Trello card is assigned to me on the \"New Zealand Trip\" board, specifically in the \"To dos\" list, and the card's title contains the keyword \"URGENT\", send a signal to my Das Keyboard device named \"Office Desk Keyboard\", setting the zone to the numeric keypad, coloring it red, and displaying the message \"New urgent task assigned: Weigh suitcases before leaving for airport\" with a breathing effect."}
{"original_description": "This applet will append Reddit posts to a stream in a data.world dataset.", "trigger_channel": "Reddit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "reddit.new_post_from_search_reddit"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Helper text": "Use reddit's <a target='_blank' class='open-native' href='https://support.reddithelp.com/hc/en-us/articles/19696541895316-Available-search-features'>search operators</a> for advanced search", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nTitle of this post.", "description": "Title of this post.", "details": {"Slug": "Title", "Filter code": "Reddit.newPostFromSearchReddit.Title", "Type": "String", "Example": "Little Bobby Tables!"}}, {"section": "Ingredients", "title": "Image url\nURL to the post's image if one exists.", "description": "URL to the post's image if one exists.", "details": {"Slug": "ImageURL", "Filter code": "Reddit.newPostFromSearchReddit.ImageURL", "Type": "String", "Example": "http://imgs.xkcd.com/comics/exploits_of_a_mom.png"}}, {"section": "Ingredients", "title": "Content\nContent of this post, may be text or external link.", "description": "Content of this post, may be text or external link.", "details": {"Slug": "Content", "Filter code": "Reddit.newPostFromSearchReddit.Content", "Type": "String", "Example": "http://xkcd.com/327"}}, {"section": "Ingredients", "title": "Content html\nContent of this post in HTML.", "description": "Content of this post in HTML.", "details": {"Slug": "ContentHTML", "Filter code": "Reddit.newPostFromSearchReddit.ContentHTML", "Type": "String", "Example": "http://xkcd.com/327"}}, {"section": "Ingredients", "title": "Post url\nURL to this post on reddit.", "description": "URL to this post on reddit.", "details": {"Slug": "PostURL", "Filter code": "Reddit.newPostFromSearchReddit.PostURL", "Type": "String", "Example": "http://www.reddit.com/r/ProgrammerHumor/comments/16dazp/little_bobby_tables_xkcd/"}}, {"section": "Ingredients", "title": "Subreddit\nName of the subreddit where this item was posted.", "description": "Name of the subreddit where this item was posted.", "details": {"Slug": "Subreddit", "Filter code": "Reddit.newPostFromSearchReddit.Subreddit", "Type": "String", "Example": "ifttt"}}, {"section": "Ingredients", "title": "Author\nUsername of this post's author.", "description": "Username of this post's author.", "details": {"Slug": "Author", "Filter code": "Reddit.newPostFromSearchReddit.Author", "Type": "String", "Example": "ltibbets"}}, {"section": "Ingredients", "title": "Posted at\nDate this post was posted.", "description": "Date this post was posted.", "details": {"Slug": "PostedAt", "Filter code": "Reddit.newPostFromSearchReddit.PostedAt", "Type": "String", "Example": "August 23, 2013 at 05:00PM"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.append", "Filter code method": "Datadotworld.append.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.append\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to update? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Stream name\nText input > File name", "description": "Text input > File name", "details": {"Label": "Stream", "Helper text": "Which stream would you like to append records to? IMPORTANT: Stream names can only contain lowercase letters, numbers and dashes (e.g. my-stream).", "Slug": "stream_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setStream Name(string: stream_name)"}}, {"section": "Action fields", "title": "Payload\nText input > Other", "description": "Text input > Other", "details": {"Label": "Record", "Helper text": "Which keys and values would you like in your record? Keys and values must be separated by &quot;||&quot;. Key-value pairs must be separated by &quot;|||&quot;. Example: first||Steve|||last||Rogers", "Slug": "payload", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setPayload(string: payload)"}}], "filter_code": "const post = (Reddit.newPostFromSearchReddit as any)\nconst pairs = Object.getOwnPropertyNames(post).map(prop => prop + \"||\" + post[prop])\nDatadotworld.append.setPayload(pairs.join(\"|||\"))\n\n", "intent": "Append new Reddit posts from the \"programming\" subreddit to the \"social_media_posts\" stream in the \"my_social_media_dataset\" dataset on data.world, where the post contains the keyword \"python\" and was posted after 12:00 PM, with a record including the post title, author, content, and image URL."}
{"original_description": "This will turn on the WiZ lights of your choice in Wake-up mode within 15 minutes of the sunrise in your location. Wake up with the sun!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "Turn on the WiZ lights in the Living Room to Wake-up mode at 75% brightness within 15 minutes of sunrise when the temperature is above 18°C and the weather condition is Sunny."}
{"original_description": "When the temperature is higher than a certain value, your Connector blind will be closed.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Connector", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dooya_connector.close_blinds", "Filter code method": "DooyaConnector.closeBlinds.skip(string?: reason)", "Runtime method": "runAction(\"dooya_connector.close_blinds\", {})"}, "action_details": [{"section": "Action fields", "title": "Which blinds\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which blind?", "Slug": "which_blinds", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the temperature in New York rises above 25 degrees Celsius, close the Living Room blinds using Connector."}
{"original_description": "This will turn off your TV using Logitech Harmony Remote when your mode is set to sleep.", "trigger_channel": "Futurehome", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "futurehome.mode_switched"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe Mode the site was set to.", "description": "The Mode the site was set to.", "details": {"Slug": "mode", "Filter code": "Futurehome.modeSwitched.Mode", "Type": "String", "Example": "home"}}, {"section": "Ingredients", "title": "Triggered at\nThe time when the mode was triggered.", "description": "The time when the mode was triggered.", "details": {"Slug": "triggered_at", "Filter code": "Futurehome.modeSwitched.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Site name\nThe name of the site where the trigger was triggered.", "description": "The name of the site where the trigger was triggered.", "details": {"Slug": "site_name", "Filter code": "Futurehome.modeSwitched.SiteName", "Type": "String", "Example": "Home"}}], "action_channel": "Harmony", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "harmony.end-activity", "Filter code method": "Harmony.endActivity.skip(string?: reason)", "Runtime method": "runAction(\"harmony.end-activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Activity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Helper text": "Activities that include locks are not supported", "Slug": "activity", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the TV using Logitech Harmony Remote when the mode is set to sleep at Home site, specifically when the mode switched to \"sleep\" between 22:00 and 07:00."}
{"original_description": "This applet will change the setpoint temperature of your AC when the outside temperature rises above a selected temperature.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "GE Appliances Window AC", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ge_appliances_wac.wac-set-target-temp", "Filter code method": "GeAppliancesWac.wacSetTargetTemp.skip(string?: reason)", "Runtime method": "runAction(\"ge_appliances_wac.wac-set-target-temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Applianceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which appliance?", "Slug": "applianceId", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Set-target-temp\nDropdown list", "description": "Dropdown list", "details": {"Label": "What temperature?", "Slug": "set-target-temp", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the outside temperature rises above 75°F in New York, change the setpoint temperature of your GE Appliances Window AC to 68°F."}
{"original_description": "This Action will activate the output of your cloudBit for 3 seconds.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "littleBits", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "littlebits.output", "Filter code method": "Littlebits.output.skip(string?: reason)", "Runtime method": "runAction(\"littlebits.output\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which cloudBit?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Activate the output of your cloudBit device named \"Office CloudBit\" for 3 seconds when a motion detection event with the text \"Motion Tag: Detected!\" is triggered at any time."}
{"original_description": "This applet will turn on your 1-channel switch/plug at sunset", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.light_switch_action", "Filter code method": "Ewelink.lightSwitchAction.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.light_switch_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Light switch action device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "light_switch_action_device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "true", "Filter code method": "Ewelink.lightSwitchAction.setOnoff Act Query(string: onoff_act_query)"}}], "filter_code": "", "intent": "Turn on the living room lamp, which is connected to my eWeLink Smart Home 1-channel switch, at sunset when the outside temperature is 18 degrees Celsius and the condition is sunny."}
{"original_description": "If an Airthings device detects high humidity levels above the set threshold your hue lights will briefly blink.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.humidity-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get humidity from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Helper text": "How humid, in percent, do you want it to be when it triggers? Example: 60", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.humidityAbove.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Humidity\nThe humidity, in percent.", "description": "The humidity, in percent.", "details": {"Slug": "value", "Filter code": "Airthings.humidityAbove.Humidity", "Type": "String", "Example": "60"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.humidityAbove.Device", "Type": "String", "Example": "Home - Living room"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the humidity level in the Home - Living room device from Airthings exceeds 60%, briefly blink all Philips Hue lights."}
{"original_description": "This applet will ensure that your Indego Connect will return to the dock when it is raining. Ideal for users that have a Calendar set-up that isn't automatically avoiding when rain is forecast like our SmartMowing feature does.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.rain-has-started"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.rainHasStarted.DeviceName", "Type": "String", "Example": "My Rain gauge"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occured", "description": "The date and time the measurement occured", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.rainHasStarted.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Indego Connect", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "indegoconnect.send_dock", "Filter code method": "Indegoconnect.sendDock.skip(string?: reason)", "Runtime method": "runAction(\"indegoconnect.send_dock\", {})"}, "action_details": [], "filter_code": "", "intent": "When it starts raining, as reported by my Netatmo Rain gauge named \"My Rain gauge\", send my Indego Connect to the dock."}
{"original_description": "This Applet will attempt to close your garage door or gate every day at specific time. If the garage door is already closed, it will remain closed.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Gogogate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "gogogate.close_door", "Filter code method": "Gogogate.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"gogogate.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Close the garage door number 1 every day at 8:00 PM, but only if it is currently open, to ensure the garage remains secure overnight."}
{"original_description": "Every time the temperature drops below the specified value, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the temperature in New York drops below 5°C, send a Signal named \"Cold Weather\" with a red color to the Das Keyboard Q device, specifically to the center zone, displaying the message \"It's getting cold outside\" and applying a breathing effect."}
{"original_description": "This Applet will automatically create a task in Google Tasks with all the details of your note from Evernote. The Task created in Google Tasks will default to a due date of when the Evernote note was created.", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Google Tasks", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_tasks.add_task_to_tasklist", "Filter code method": "GoogleTasks.addTaskToTasklist.skip(string?: reason)", "Runtime method": "runAction(\"google_tasks.add_task_to_tasklist\", {})"}, "action_details": [{"section": "Action fields", "title": "Tasklist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which task list?", "Helper text": "The task list to which the task should be added.", "Slug": "tasklist_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task title\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What is the title of the task?", "Slug": "task_title", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Title(string: task_title)"}}, {"section": "Action fields", "title": "Task notes\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What are the notes to include in the task?", "Helper text": "Notes describing the task", "Slug": "task_notes", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Notes(string: task_notes)"}}, {"section": "Action fields", "title": "Due date\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Does the task have a due date?", "Helper text": "Field only sets the date. Ex. Next Tuesday, Today.", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setDue Date(string: due_date)"}}], "filter_code": "", "intent": "When a new note is created in the \"Personal\" notebook on Evernote with tags including \"urgent\" and \"todo\", create a task in Google Tasks on the \"Today\" task list, setting the task title to the note's title, such as \"Pick up groceries\", adding notes from the note's body HTML, like \"<p>Buy milk and eggs</p>\", and setting the due date to the note's creation time, for example, \"2023-03-15T14:30:00.000Z\"."}
{"original_description": "The Green Light Signal is a UK service that you connect your smart bulb to. It will make your bulb turn green every time the electricity in your area is generated with lowest possible CO2 levels. Simply put: when it turns green you can plug-in!", "trigger_channel": "Green Light Signal", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "green_light_signal.co2_level"}, "trigger_details": [{"section": "Trigger fields", "title": "Postcode\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "What is your postcode?", "Helper text": "Example 'LE6 7TR'", "Slug": "postcode", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Co2 index\nCO2 index", "description": "CO2 index", "details": {"Slug": "co2_index", "Filter code": "GreenLightSignal.co2Level.Co2Index", "Type": "String", "Example": "Low"}}, {"section": "Ingredients", "title": "Co2 level value\nCO2 level value", "description": "CO2 level value", "details": {"Slug": "co2_level_value", "Filter code": "GreenLightSignal.co2Level.Co2LevelValue", "Type": "String", "Example": "0"}}, {"section": "Ingredients", "title": "Date\nDate Created", "description": "Date Created", "details": {"Slug": "date", "Filter code": "GreenLightSignal.co2Level.Date", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.color", "Filter code method": "Lifx.color.skip(string?: reason)", "Runtime method": "runAction(\"lifx.color\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color if off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on first?", "Helper text": "&quot;Yes&quot; will make your lights turn on to the color, even when they are turned off in the app.", "Slug": "color_if_off", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.color.setColor If Off(string: color_if_off)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: #ff0000; brightness: 0.3; duration: 12&quot; for red at 30% brightness, 12 second fade. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.color.setAdvanced Options(string: advanced_options)"}}], "filter_code": "var co2Index = GreenLightSignal.co2Level.Co2Index \n\nif (co2Index === \"low\" || co2Index === \"very low\") {​​​​\n\n  Lifx.color.setAdvancedOptions('color: #00e600; brightness: 1; transition_duration: 0')\n\n}​​​​ else {​​​​\n\n  Lifx.color.setAdvancedOptions('color: #ffffff; brightness: 0; transition_duration: 0')\n\n}​​​​\n\n", "intent": "When the CO2 level in my area is low, as indicated by the Green Light Signal for postcode LE6 7TR, turn on my LIFX lights in the living room to green (#00e600) at full brightness with a transition duration of 0 seconds, but if the CO2 level is not low, turn off the lights."}
{"original_description": "Whenever new photos are detected in your Flickr photostream, this applet will download those photos to your QNAP device", "trigger_channel": "Flickr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flickr.new_public_photos_batch"}, "trigger_details": [{"section": "Ingredients", "title": "Photostream url\nThe URL to your photostream on flickr.", "description": "The URL to your photostream on flickr.", "details": {"Slug": "PhotostreamUrl", "Filter code": "Flickr.newPublicPhotosBatch.PhotostreamUrl", "Type": "String", "Example": "http://www.flickr.com/photos/ltibbets/"}}, {"section": "Ingredients", "title": "Photo count\nThe number of photos uploaded in this batch.", "description": "The number of photos uploaded in this batch.", "details": {"Slug": "PhotoCount", "Filter code": "Flickr.newPublicPhotosBatch.PhotoCount", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Last flickr url\nThe long URL to the last photo's Flickr page.", "description": "The long URL to the last photo's Flickr page.", "details": {"Slug": "LastFlickrUrl", "Filter code": "Flickr.newPublicPhotosBatch.LastFlickrUrl", "Type": "String", "Example": "http://www.flickr.com/photos/sh4de/5197127926/"}}, {"section": "Ingredients", "title": "Last source url\nURL to the largest available image file for the last photo.", "description": "URL to the largest available image file for the last photo.", "details": {"Slug": "LastSourceUrl", "Filter code": "Flickr.newPublicPhotosBatch.LastSourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Last uploaded date\nDate and time the last photo was uploaded.", "description": "Date and time the last photo was uploaded.", "details": {"Slug": "LastUploadedDate", "Filter code": "Flickr.newPublicPhotosBatch.LastUploadedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Last tags\nTags added to the last photo.", "description": "Tags added to the last photo.", "details": {"Slug": "LastTags", "Filter code": "Flickr.newPublicPhotosBatch.LastTags", "Type": "String", "Example": "baby, pumpkin"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": "", "intent": "Download the last 5 photos from my Flickr photostream at http://www.flickr.com/photos/ltibbets/ to the \"Vacation\" subfolder in the \"Photos\" shared folder on my QNAP device, naming the files with the format \"photo1.jpg\", \"photo2.jpg\", etc."}
{"original_description": "This will automatically change the WiZ light(s) of your choice to green if the price of the stock you selected rises by more than a certain percentage compared to the last closing price. (Only for WiZ Colors lights)", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.percentage_drop_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Percentage\nText input", "description": "Text input", "details": {"Label": "Percentage decrease", "Helper text": "e.g. insert 15 for 15%", "Slug": "percentage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.percentageDropStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.percentageDropStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last price", "description": "The last price", "details": {"Slug": "Price", "Filter code": "Finance.percentageDropStocks.Price", "Type": "String", "Example": "89"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.percentageDropStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.percentageDropStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Percentage change\nThe percentage change", "description": "The percentage change", "details": {"Slug": "PercentageChange", "Filter code": "Finance.percentageDropStocks.PercentageChange", "Type": "String", "Example": "42"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the stock price of Google Inc. (GOOG) rises by more than 10% compared to its last closing price, turn on the living room WiZ Colors lights with a green color and set the brightness to 75%."}
{"original_description": "You will get your daily weather and temperature (in °F) report on your Triby. You will be able to choose the time of day.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Invoxia Triby", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "invoxia_triby.send_an_image_to_specified_triby", "Filter code method": "InvoxiaTriby.sendAnImageToSpecifiedTriby.skip(string?: reason)", "Runtime method": "runAction(\"invoxia_triby.send_an_image_to_specified_triby\", {})"}, "action_details": [{"section": "Action fields", "title": "Triby\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Triby IO?", "Slug": "triby", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "What image URL?", "Helper text": "This has to be the URL of an image file (png, jpeg, bmp).", "Slug": "image_url", "Required": "true", "Can have default value": "true", "Filter code method": "InvoxiaTriby.sendAnImageToSpecifiedTriby.setImage Url(string: image_url)"}}], "filter_code": "", "intent": "Get the current weather condition and temperature in degrees Fahrenheit for New York City at 7:00 AM and send an image of the current weather condition to my Office Triby."}
{"original_description": "No idea what to watch on Netflix? This Applet will automatically add new Critics' Picks from the Times' reviewers to a Trello list. ", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_movie_review"}, "trigger_details": [{"section": "Ingredients", "title": "Movie title", "description": "", "details": {"Slug": "MovieTitle", "Filter code": "Nytimes.newMovieReview.MovieTitle", "Type": "String", "Example": "Exit Through the Gift Shop"}}, {"section": "Ingredients", "title": "Review headline\nThe headline of the review", "description": "The headline of the review", "details": {"Slug": "ReviewHeadline", "Filter code": "Nytimes.newMovieReview.ReviewHeadline", "Type": "String", "Example": "On the Street, at the Corner of Art and Trash"}}, {"section": "Ingredients", "title": "Review url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ReviewUrl", "Filter code": "Nytimes.newMovieReview.ReviewUrl", "Type": "String", "Example": "http://movies.nytimes.com/2010/04/16/movies/16exit.html"}}, {"section": "Ingredients", "title": "Author\nThe author of the review", "description": "The author of the review", "details": {"Slug": "Author", "Filter code": "Nytimes.newMovieReview.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Movie thumbnail url\nURL to the movie thumbnail image.", "description": "URL to the movie thumbnail image.", "details": {"Slug": "MovieThumbnailUrl", "Filter code": "Nytimes.newMovieReview.MovieThumbnailUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Movie opening date\nDate the movie opened", "description": "Date the movie opened", "details": {"Slug": "MovieOpeningDate", "Filter code": "Nytimes.newMovieReview.MovieOpeningDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Publication date\nDate the review was published.", "description": "Date the review was published.", "details": {"Slug": "PublicationDate", "Filter code": "Nytimes.newMovieReview.PublicationDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Mpaa rating\nA the rating, if any, given to this movie by the MPAA", "description": "A the rating, if any, given to this movie by the MPAA", "details": {"Slug": "MPAARating", "Filter code": "Nytimes.newMovieReview.MPAARating", "Type": "String", "Example": "R"}}], "action_channel": "Trello", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "trello.create_card", "Filter code method": "Trello.createCard.skip(string?: reason)", "Runtime method": "runAction(\"trello.create_card\", {})"}, "action_details": [{"section": "Action fields", "title": "Board\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "List name\nText input > Other", "description": "Text input > Other", "details": {"Label": "List name", "Helper text": "We'll create a new list if one with this name doesn't exist", "Slug": "list_name", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setList Name(string: list_name)"}}, {"section": "Action fields", "title": "Pos\nDropdown list", "description": "Dropdown list", "details": {"Label": "Position", "Slug": "pos", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setPos(string: pos)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setTitle(string: title)"}}, {"section": "Action fields", "title": "Description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setDescription(string: description)"}}, {"section": "Action fields", "title": "Members\nText input > Other", "description": "Text input > Other", "details": {"Label": "Assign members", "Helper text": "Optional comma separated list of @usernames to assign to card", "Slug": "members", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setMembers(string: members)"}}, {"section": "Action fields", "title": "Labels\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Apply labels", "Helper text": "Optional comma separated list of label names — labels that do not exist on the board will be ignored", "Slug": "labels", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setLabels(string: labels)"}}, {"section": "Action fields", "title": "Url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Attachment URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setUrl(string: url)"}}], "filter_code": "", "intent": "When The New York Times publishes a new movie review with a Critics' Pick rating, and the review is written by a critic like Alexander P. Tibbets, add a new card to the \"Movie Recommendations\" list on the \"Entertainment\" board in Trello, with the title set to the movie title, such as \"Exit Through the Gift Shop\", and the description set to the review headline, like \"On the Street, at the Corner of Art and Trash\", along with the review URL, and assign it to members like @johnDoe and @janeDoe, applying labels like \"Critics' Pick\" and \"New Release\"."}
{"original_description": "This applet will append Today in History updates from the Library of Congress to a stream in a data.world dataset. ", "trigger_channel": "Library of Congress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "loc.today_in_history"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the day's post.", "description": "The title of the day's post.", "details": {"Slug": "EntryTitle", "Filter code": "Loc.todayInHistory.Title", "Type": "String", "Example": "Today in History - May 26"}}, {"section": "Ingredients", "title": "Post url\nThe URL for the day's post.", "description": "The URL for the day's post.", "details": {"Slug": "EntryUrl", "Filter code": "Loc.todayInHistory.PostUrl", "Type": "String", "Example": "https://www.loc.gov/item/today-in-history/may-26?loclr=eatod"}}, {"section": "Ingredients", "title": "Post content html\nThe post's content, may contain HTML.", "description": "The post's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Loc.todayInHistory.PostContentHtml", "Type": "String", "Example": "On May 26, 1864, President Lincoln signed..."}}, {"section": "Ingredients", "title": "Published date\nDate the post was published.", "description": "Date the post was published.", "details": {"Slug": "EntryPublished", "Filter code": "Loc.todayInHistory.PublishedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.append", "Filter code method": "Datadotworld.append.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.append\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to update? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Stream name\nText input > File name", "description": "Text input > File name", "details": {"Label": "Stream", "Helper text": "Which stream would you like to append records to? IMPORTANT: Stream names can only contain lowercase letters, numbers and dashes (e.g. my-stream).", "Slug": "stream_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setStream Name(string: stream_name)"}}, {"section": "Action fields", "title": "Payload\nText input > Other", "description": "Text input > Other", "details": {"Label": "Record", "Helper text": "Which keys and values would you like in your record? Keys and values must be separated by &quot;||&quot;. Key-value pairs must be separated by &quot;|||&quot;. Example: first||Steve|||last||Rogers", "Slug": "payload", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setPayload(string: payload)"}}], "filter_code": "", "intent": "Append the Library of Congress's Today in History update for May 26, with the title \"Today in History - May 26\" and post content \"On May 26, 1864, President Lincoln signed...\", to the \"history-updates\" stream in the \"us-history\" dataset on data.world, creating a new record with keys \"date\" and \"event\" and values \"May 26\" and \"President Lincoln signs\", respectively."}
{"original_description": "Whenever you favorite a public photo on Flickr, this applet will automatically download that photo to your QNAP device", "trigger_channel": "Flickr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flickr.new_favorite_public_photo"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Flickr.newFavoritePublicPhoto.Title", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Description\nOptional photo description.", "description": "Optional photo description.", "details": {"Slug": "Description", "Filter code": "Flickr.newFavoritePublicPhoto.Description", "Type": "String", "Example": "Taken at my birthday party!"}}, {"section": "Ingredients", "title": "Flickr url short\nThe shortened URL to the photo's Flickr page.", "description": "The shortened URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrlShort", "Filter code": "Flickr.newFavoritePublicPhoto.FlickrUrlShort", "Type": "String", "Example": "http://flic.kr/p/4mdhBE"}}, {"section": "Ingredients", "title": "Source url\nURL to the largest available flickr image file.", "description": "URL to the largest available flickr image file.", "details": {"Slug": "SourceUrl", "Filter code": "Flickr.newFavoritePublicPhoto.SourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Original source url\nURL to the orginal image file if available.", "description": "URL to the orginal image file if available.", "details": {"Slug": "OriginalSourceUrl", "Filter code": "Flickr.newFavoritePublicPhoto.OriginalSourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Owner name\nUsername of the person the photo belongs to.", "description": "Username of the person the photo belongs to.", "details": {"Slug": "OwnerName", "Filter code": "Flickr.newFavoritePublicPhoto.OwnerName", "Type": "String", "Example": "ltibbets"}}, {"section": "Ingredients", "title": "Uploaded date\nDate and time the photo was uploaded.", "description": "Date and time the photo was uploaded.", "details": {"Slug": "UploadedDate", "Filter code": "Flickr.newFavoritePublicPhoto.UploadedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Tags\nTags added to the photo.", "description": "Tags added to the photo.", "details": {"Slug": "Tags", "Filter code": "Flickr.newFavoritePublicPhoto.Tags", "Type": "String", "Example": "baby, pumpkin"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": "", "intent": "When you favorite a public photo titled \"A beautiful landscape\" on Flickr, containing tags like \"sunset\" and \"mountains\", this applet will automatically download the image from the URL http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg to your QNAP device in the shared folder \"Photos\" with the file name \"Landscape_Sunset\" and subfolder path \"Vacation/Pictures\"."}
{"original_description": "When a Twitch stream for a channel you follow goes live, your Kasa light bulb will change color. Color, brightness, and transition time is fully customizable by the user.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.change_color", "Filter code method": "Kasa.changeColor.skip(string?: reason)", "Runtime method": "runAction(\"kasa.change_color\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Kasa.changeColor.setColor(string: color)"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Helper text": "Choose a brightness", "Slug": "brightness", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColor.setBrightness(string: brightness)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors?", "Slug": "transition_duration", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColor.setTransition Duration(string: transition_duration)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Provide custom options here. For example : &quot;color: #ffff00; brightness: 50; transition_duration: 3000” for yellow at 50% brightness, 3 seconds transition duration.", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColor.setAdvanced Options(string: advanced_options)"}}], "filter_code": "", "intent": "When a new Twitch stream from \"Ninja\" goes live with the game \"Fortnite\", change the color of my Kasa light bulb named \"Living Room Lamp\" to blue, set the brightness to 75%, and transition between colors over a duration of 2 seconds."}
{"original_description": "This applet will add items tagged as files in Pocket to a data.world dataset.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_tagged_item_pocket"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Single tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newTaggedItemPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newTaggedItemPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newTaggedItemPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newTaggedItemPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newTaggedItemPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newTaggedItemPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.upload_file", "Filter code method": "Datadotworld.uploadFile.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.upload_file\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to add this file to? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "What would you like to name this file? IMPORTANT: File names must include a file extension.", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.uploadFile.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "What is the URL from which the file can be downloaded?", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.uploadFile.setFile Url(string: file_url)"}}], "filter_code": "let filename = Pocket.newTaggedItemPocket.Url\nif (filename.indexOf(\"?\") != -1) {\n  filename = filename.substr(0, filename.indexOf(\"?\"))\n}\nfilename = filename.substr(filename.lastIndexOf(\"/\")+1)\n\nDatadotworld.uploadFile.setFileName(filename)\n\n", "intent": "When a new item is tagged as \"files\" in Pocket with the title containing the word \"report\", excerpt longer than 100 characters, and added after August 1, 2022, upload the file to the data.world dataset named \"Company Reports\" with the filename being the last part of the URL (e.g., \"example.pdf\") and the file URL set to the item's original URL."}
{"original_description": "Every time a new popular article is published on The New York Times, a Signal will be sent to your Das Keyboard.", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.any_new_popular_article_today"}, "trigger_details": [{"section": "Trigger fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Section", "Slug": "section", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.anyNewPopularArticleToday.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.anyNewPopularArticleToday.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.anyNewPopularArticleToday.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.anyNewPopularArticleToday.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.anyNewPopularArticleToday.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.anyNewPopularArticleToday.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a new popular article is published on The New York Times in the Sports section, with an author like Alexander P. Tibbets and containing the keyword \"URGENT\" in its title, send a Signal to your Das Keyboard named \"NYT Sports Alert\" to the Zone labeled \"Key 1\" with the color red, including a message that says \"New article: {Title}\" by {Author}, and apply a breathing effect on the device named \"Office Keyboard\"."}
{"original_description": "This will change the WiZ lights of your choice to the mode and brightness you defined whenever a channel you follow starts a live stream on Twitch.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When a live stream starts on Twitch by the channel \"John's Channel\" and the game being streamed is \"StarCraft II: Heart of the Swarm\", turn on the WiZ lights in the \"Living Room\" group, set the mode to \"Concentrate\" and adjust the brightness to 75%."}
{"original_description": "Every time the pollen count rises above the value you specify (1-12), a Signal will be sent to your Das Keyboard.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_pollen_count_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Count\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Pollen count", "Slug": "count", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentPollenCountRisesAbove.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentPollenCountRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentPollenCountRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentPollenCountRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentPollenCountRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentPollenCountRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the pollen count in New York rises above 8, send a Signal to my Das Keyboard device named \"Home Office Keyboard\" with the name \"High Pollen Alert\", setting the color of the center zone to red, and displaying the message \"Pollen count is high\" with a breathe effect."}
{"original_description": "This will automatically change the WiZ light(s) of your choice to lime color if Weather underground reports a pollen count above the threshold you have defined. Best way to know whether your allergies may be a problem... before heading out. (Only for WiZ Colors lights)", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_pollen_count_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Count\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Pollen count", "Slug": "count", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentPollenCountRisesAbove.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentPollenCountRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentPollenCountRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentPollenCountRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentPollenCountRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentPollenCountRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the pollen count in New York rises above 8, as reported by Weather Underground, turn on the living room WiZ light and set it to lime color with a brightness of 75%."}
{"original_description": "Every time a new track is added to a playlist you specify, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_track_added_to_playlist"}, "trigger_details": [{"section": "Trigger fields", "title": "Playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which playlist?", "Helper text": "Only the first 50 playlists shown at <a href=\"https://open.spotify.com/\" target=\"_blank\">open.spotify.com</a> will be displayed here. You can click and drag playlists to reorder them", "Slug": "playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Playlist name\nThe name of the playlist.", "description": "The name of the playlist.", "details": {"Slug": "playlist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.PlaylistName", "Type": "String", "Example": "Mid-2000s Jamz"}}, {"section": "Ingredients", "title": "Added by\nThe name of the user that added this track to the playlist.", "description": "The name of the user that added this track to the playlist.", "details": {"Slug": "added_by", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedBy", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Added at\nThe time at which the track was added to the playlist.", "description": "The time at which the track was added to the playlist.", "details": {"Slug": "added_at", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a new track is added to the \"Mid-2000s Jamz\" playlist on Spotify, send a Signal to the Das Keyboard Q device named \"NewTrackAdded\" with a red color and the message \"New track: {track_name} by {artist_name}\" to the zone \"Key 1\" with a breathing effect."}
{"original_description": "This applet will change the setpoint temperature of your AC when the outside temperature falls below a selected temperature.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "GE Appliances Window AC", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ge_appliances_wac.wac-set-target-temp", "Filter code method": "GeAppliancesWac.wacSetTargetTemp.skip(string?: reason)", "Runtime method": "runAction(\"ge_appliances_wac.wac-set-target-temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Applianceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which appliance?", "Slug": "applianceId", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Set-target-temp\nDropdown list", "description": "Dropdown list", "details": {"Label": "What temperature?", "Slug": "set-target-temp", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the outside temperature drops below 18 degrees Celsius in the location of New York, set the target temperature of the GE Appliances Window AC named \"Living Room AC\" to 22 degrees Celsius."}
{"original_description": "This will turn on the WiZ lights of your choice in the mode and brightness you defined whenever your Wyze Cam detects motion.", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.motion_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Motion detected\nMotion detected on your wyze camera.", "description": "Motion detected on your wyze camera.", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.motionTrigger.MotionDetected", "Type": "String", "Example": "Motion detected on your wyze camera."}}, {"section": "Ingredients", "title": "Trigger time\nTime when motion is triggered.", "description": "Time when motion is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.motionTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "Turn on the living room WiZ lights to 'Warm White' mode with 75% brightness whenever motion is detected by the Wyze Cam in the hallway between 18:00 and 22:00."}
{"original_description": "Capture an amazing sunset? A bluer-than-blue ocean? Use the hashtag #Hue on your Insta and this Applet will do its best to match your lighting. Magic mood! ", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_photo_by_you_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newPhotoByYouTagged.Caption", "Type": "String", "Example": "A cool photo #tbt #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the specified tag", "description": "The caption without the specified tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newPhotoByYouTagged.CaptionNoTag", "Type": "String", "Example": "A cool photo #IFTTT"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.newPhotoByYouTagged.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.newPhotoByYouTagged.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newPhotoByYouTagged.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newPhotoByYouTagged.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_from_image_all_hue", "Filter code method": "Hue.setColorFromImageAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_from_image_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Color mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color mode", "Slug": "color_mode", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorFromImageAllHue.setColor Mode(string: color_mode)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image_url", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorFromImageAllHue.setImage Url(string: image_url)"}}, {"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When I post a new photo on Instagram with the hashtag #Hue, set the color of all my Philips Hue lights to match the dominant color of the image, using the 'Color mode' that best represents the mood of the photo, and apply this change to all the lights in my living room."}
{"original_description": "This Action will create a new issue for the repository you specify.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "GitHub", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "github.create_new_issue_for_repository", "Filter code method": "Github.createNewIssueForRepository.skip(string?: reason)", "Runtime method": "runAction(\"github.create_new_issue_for_repository\", {})"}, "action_details": [{"section": "Action fields", "title": "Repository\nText input > Other", "description": "Text input > Other", "details": {"Label": "Repository", "Helper text": "E.g. IFTTT/StatsD", "Slug": "repository", "Required": "false", "Can have default value": "true", "Filter code method": "Github.createNewIssueForRepository.setRepository(string: repository)"}}, {"section": "Action fields", "title": "Issuetitle\nText input", "description": "Text input", "details": {"Label": "Title", "Slug": "issueTitle", "Required": "false", "Can have default value": "true", "Filter code method": "Github.createNewIssueForRepository.setIssue Title(string: issueTitle)"}}, {"section": "Action fields", "title": "Issuebody\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Helper text": "Markdown and @mentions ok", "Slug": "issueBody", "Required": "false", "Can have default value": "true", "Filter code method": "Github.createNewIssueForRepository.setIssue Body(string: issueBody)"}}], "filter_code": "", "intent": "Create a new issue on the IFTTT/StatsD repository in GitHub with the title \"Motion Detection Alert\" and body \"A motion tag was detected at 04:17:06+05:00 on July 8, 2020, with the event ID MESH-12345 and text contents 'Motion Tag: Detected!'\" whenever a new event is triggered in the MESH app with the EventID MESH-12345."}
{"original_description": "This will turn the WiZ lights of your choice to bright red whenever your Wyze cam detects a smoke alarm", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.smoke_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Smoke detected\nSmoke alarm detected on your wyze camera.", "description": "Smoke alarm detected on your wyze camera.", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.smokeTrigger.SmokeDetected", "Type": "String", "Example": "Smoke alarm detected on your wyze camera."}}, {"section": "Ingredients", "title": "Trigger time\nTime when smoke is triggered.", "description": "Time when smoke is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.smokeTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When a smoke alarm is detected by your Wyze camera in the living room at any time, turn on the WiZ lights in the kitchen to bright red at maximum brightness."}
{"original_description": "This will automatically change the WiZ light(s) of your choice to red whenever the price of the stock you have selected falls by more than a certain percentage compared to the previous closing price. (Only for WiZ Colors lights)", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.percentage_drop_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Percentage\nText input", "description": "Text input", "details": {"Label": "Percentage decrease", "Helper text": "e.g. insert 15 for 15%", "Slug": "percentage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.percentageDropStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.percentageDropStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last price", "description": "The last price", "details": {"Slug": "Price", "Filter code": "Finance.percentageDropStocks.Price", "Type": "String", "Example": "89"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.percentageDropStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.percentageDropStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Percentage change\nThe percentage change", "description": "The percentage change", "details": {"Slug": "PercentageChange", "Filter code": "Finance.percentageDropStocks.PercentageChange", "Type": "String", "Example": "42"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the stock price of Google Inc. (GOOG) falls by more than 10% compared to the previous closing price, turn on the WiZ Colors light in the Living Room to red at 50% brightness."}
{"original_description": "Send and Email and a scene will be activated in your BeoLiving Intelligence", "trigger_channel": "Email", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "email.send_ifttt_an_email_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Helper text": "e.g. #hashtag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "From\nEmail address of sender.", "description": "Email address of sender.", "details": {"Slug": "From", "Filter code": "Email.sendIftttAnEmailTagged.From", "Type": "String", "Example": "somebody@gmail.com"}}, {"section": "Ingredients", "title": "Attachment temporary url\nThe URL to the first file attachment, if included, that anyone can visit for 30 days.", "description": "The URL to the first file attachment, if included, that anyone can visit for 30 days.", "details": {"Slug": "AttachmentTemporaryUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentTemporaryUrl", "Type": "File URL", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Body\nEmail body, with most signatures stripped out.", "description": "Email body, with most signatures stripped out.", "details": {"Slug": "Body", "Filter code": "Email.sendIftttAnEmailTagged.Body", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Body html\nEmail body HTML, with most signatures stripped out.", "description": "Email body HTML, with most signatures stripped out.", "details": {"Slug": "BodyHTML", "Filter code": "Email.sendIftttAnEmailTagged.BodyHTML", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Subject\nEmail subject line.", "description": "Email subject line.", "details": {"Slug": "Subject", "Filter code": "Email.sendIftttAnEmailTagged.Subject", "Type": "String", "Example": "Hello there"}}, {"section": "Ingredients", "title": "Attachment url\nThe URL to the first file attachment, if included.", "description": "The URL to the first file attachment, if included.", "details": {"Slug": "AttachmentUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentUrl", "Type": "String", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Received at\nDate and time email was received.", "description": "Date and time email was received.", "details": {"Slug": "ReceivedAt", "Filter code": "Email.sendIftttAnEmailTagged.ReceivedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "BeoLiving Intelligence", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "bang_olufsens_beo_link_gateway.bo_press", "Filter code method": "BangOlufsensBeoLinkGateway.boPress.skip(string?: reason)", "Runtime method": "runAction(\"bang_olufsens_beo_link_gateway.bo_press\", {})"}, "action_details": [{"section": "Action fields", "title": "Bo button\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select a scene", "Slug": "bo_button", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When an email with the subject \"Meeting Reminder\" and tagged as #urgent is received from somebody@gmail.com, send the email body to http://media.ifttt.com/emails/363-black_and_white.jpg and activate the \"Good Morning\" scene in BeoLiving Intelligence."}
{"original_description": "Set it and forget it. When your SmartThings device no longer detects a presence in your home, this applet will enable your robot to start cleaning.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.new_present_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Arrived at\nThe date and time you arrived.", "description": "The date and time you arrived.", "details": {"Slug": "ArrivedAt", "Filter code": "SmartthingsV2.newPresentSmartthings.ArrivedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.newPresentSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.start_robot", "Filter code method": "Irobot.startRobot.skip(string?: reason)", "Runtime method": "runAction(\"irobot.start_robot\", {})"}, "action_details": [{"section": "Action fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Bedroom sensor device in SmartThings no longer detects presence, start the Roomba robot to begin cleaning."}
{"original_description": "To-do? To-watch! Choose the channel, and when they post a new video the link and title will be added to the Todoist project you specify. ", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.new_video_by_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "What kind of videos\nDropdown list", "description": "Dropdown list", "details": {"Label": "What kind of videos?", "Helper text": "Archived broadcasts, only the highlights, or any.", "Slug": "what_kind_of_videos", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.newVideoByChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Video title\nThe title of the video.", "description": "The title of the video.", "details": {"Slug": "video_title", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoTitle", "Type": "String", "Example": "Twitch Weekly - February 6, 2015"}}, {"section": "Ingredients", "title": "Video description\nThe description of the video.", "description": "The description of the video.", "details": {"Slug": "video_description", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoDescription", "Type": "String", "Example": "Twitch Weekly LIVE on February 6, 2015!"}}, {"section": "Ingredients", "title": "Video preview image\nThe URL to a preview image of the video.", "description": "The URL to a preview image of the video.", "details": {"Slug": "video_preview_image", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoPreviewImage", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Video url\nThe URL to the video on Twitch.", "description": "The URL to the video on Twitch.", "details": {"Slug": "video_url", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Video channel\nThe name of the video's channel", "description": "The name of the video's channel", "details": {"Slug": "video_channel", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoChannel", "Type": "String", "Example": "Twitch"}}, {"section": "Ingredients", "title": "Video channel url\nThe URL to the video's channel on Twitch.", "description": "The URL to the video's channel on Twitch.", "details": {"Slug": "video_channel_url", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}], "action_channel": "Todoist", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "todoist.create_task", "Filter code method": "Todoist.createTask.skip(string?: reason)", "Runtime method": "runAction(\"todoist.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project and section", "Helper text": "Project and section to which the task belongs", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task content\nText input", "description": "Text input", "details": {"Label": "Task content", "Helper text": "<a href=\"https://todoist.com/help/articles/205195102\" target=\"_blank\">Text formatting guide</a> and <a href=\"https://todoist.com/help/articles/360000029000\" target=\"_blank\">label format guide</a>", "Slug": "task_content", "Required": "true", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Content(string: task_content)"}}, {"section": "Action fields", "title": "Note\nText input > Other", "description": "Text input > Other", "details": {"Label": "Note", "Helper text": "Add additional task note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Due date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task's due date", "Helper text": "Check the <a href=\"https://todoist.com/help/articles/205325931\" target=\"_blank\">Due dates and times format guide</a>", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setDue Date(string: due_date)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Helper text": "Task's priority", "Slug": "priority", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setPriority(string: priority)"}}, {"section": "Action fields", "title": "Task description\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task description", "Helper text": "Task's description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Description(string: task_description)"}}], "filter_code": "", "intent": "When a new video is posted by the Twitch channel \"Ninja\" on their live streams, add a task to the Todoist project \"My Videos to Watch\" with the task content set to \"Watch {{video_title}}\", note as \"{{video_description}}\", due date as \"today\", and priority as \"High\"."}
{"original_description": "Anytime a new message is Pinned in your selected channel this Applet will automatically save it to Google Sheets", "trigger_channel": "Discord", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "discord.new_message_in_channel"}, "trigger_details": [{"section": "Trigger fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Helper text": "Confirm that <a href=\"https://ift.tt/disc_faq\" target=\"_blank\">permissions</a> are granted in your server. If your server isn’t listed, <a href=\"https://ift.tt/disc_server\" target=\"_blank\">reconnect the Discord service</a>.", "Slug": "channel_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time when the message was posted.", "description": "Date and time when the message was posted.", "details": {"Slug": "created_at", "Filter code": "Discord.newMessageInChannel.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Message\nThe contents of the message.", "description": "The contents of the message.", "details": {"Slug": "message", "Filter code": "Discord.newMessageInChannel.Message", "Type": "String", "Example": "Hey everyone 👋"}}, {"section": "Ingredients", "title": "Author\nThe author of the message.", "description": "The author of the message.", "details": {"Slug": "author", "Filter code": "Discord.newMessageInChannel.Author", "Type": "String", "Example": "username123"}}, {"section": "Ingredients", "title": "Link to message\nThis is a link to the message in Discord.", "description": "This is a link to the message in Discord.", "details": {"Slug": "link_to_message", "Filter code": "Discord.newMessageInChannel.LinkToMessage", "Type": "Web URL", "Example": "https://discord.com/channels/833856998537166918/833856998537166921/1181411805982105631"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": "", "intent": "When a new message is pinned in the #general channel on Discord, append a row to a Google Sheets spreadsheet named \"Pinned Messages\" with the message author, the message content, and a link to the message, using the format \"Author|||Message|||Link\" and save it in the folder path \"Discord Logs/Important Messages\"."}
{"original_description": "If your oven door is opened, your Philips Hue lights will blink", "trigger_channel": "Home Connect Oven", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_oven.oven_door_opened"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which oven?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcOven.ovenDoorOpened.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the oven door of my Home Oven is opened, blink all the Philips Hue lights in the Living Room."}
{"original_description": "This applet will add new files to a data.world dataset as they are uploaded to a Google Drive folder.", "trigger_channel": "Google Drive", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_drive.any_new_file"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Drive folder path", "Helper text": "Format: folders separated by &quot;/&quot; like &quot;Documents/Photos/Receipts&quot;", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "filename", "Filter code": "GoogleDrive.anyNewFile.Filename", "Type": "String", "Example": "filename"}}, {"section": "Ingredients", "title": "Path\nThe path of the file.", "description": "The path of the file.", "details": {"Slug": "path", "Filter code": "GoogleDrive.anyNewFile.Path", "Type": "String", "Example": "/IFTTT/sample.txt"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "file_url", "Filter code": "GoogleDrive.anyNewFile.FileUrl", "Type": "File URL", "Example": "https://google.com"}}, {"section": "Ingredients", "title": "Created at\nDate and time file was created.", "description": "Date and time file was created.", "details": {"Slug": "created_at", "Filter code": "GoogleDrive.anyNewFile.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.upload_file", "Filter code method": "Datadotworld.uploadFile.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.upload_file\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to add this file to? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "What would you like to name this file? IMPORTANT: File names must include a file extension.", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.uploadFile.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "What is the URL from which the file can be downloaded?", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.uploadFile.setFile Url(string: file_url)"}}], "filter_code": "", "intent": "Add any new file uploaded to the Google Drive folder path \"Documents/Photos/Receipts\" to the data.world dataset key \"my_financial_reports\" with the file name being the original filename from Google Drive, such as \"receipt_2022.jpg\", and the file URL being the public URL of the file on Google Drive, like \"https://drive.google.com/file/d/1234567890abcdefghijklmnopqrstuvwxyz\"."}
{"original_description": "Every day, a Signal will be sent to your Das Keyboard with the daily  exchange rate report.", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.currency_exchange_rate_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Input currency\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Input currency", "Slug": "input_currency", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Output currency\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Output currency", "Slug": "output_currency", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Helper text": "Based on your time zone settings", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Input currency\nThe symbol for the input currency.", "description": "The symbol for the input currency.", "details": {"Slug": "InputCurrency", "Filter code": "Finance.currencyExchangeRateStocks.InputCurrency", "Type": "String", "Example": "USD"}}, {"section": "Ingredients", "title": "Output currency\nThe symbol for the output currency.", "description": "The symbol for the output currency.", "details": {"Slug": "OutputCurrency", "Filter code": "Finance.currencyExchangeRateStocks.OutputCurrency", "Type": "String", "Example": "EUR"}}, {"section": "Ingredients", "title": "Exchange rate\nThe exchange rate between currencies.", "description": "The exchange rate between currencies.", "details": {"Slug": "ExchangeRate", "Filter code": "Finance.currencyExchangeRateStocks.ExchangeRate", "Type": "String", "Example": "0.75416"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the exchange rate.", "description": "A link to more information about the exchange rate.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.currencyExchangeRateStocks.InfoUrl", "Type": "String", "Example": "http://finance.yahoo.com/q/bc?s=USDEUR=X"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.currencyExchangeRateStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Send a daily Signal to the Das Keyboard device named \"Office Keyboard\" at 08:00 with the exchange rate between USD and EUR, displaying the message \"Daily Exchange Rate: 1 USD = 0.85 EUR\" in the color red on zone 1 with a blink effect."}
{"original_description": "This applet will add new files to a data.world dataset as they are uploaded to a Dropbox folder.", "trigger_channel": "Dropbox", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dropbox.new_file_in_folder"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subfolder name", "Helper text": "Optional", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "FileUrl", "Filter code": "Dropbox.newFileInFolder.FileUrl", "Type": "String", "Example": "https://www.dropbox.com/s/qp3cqdjqachyr2x/ifttt_wordmark.png"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "Filename", "Filter code": "Dropbox.newFileInFolder.Filename", "Type": "String", "Example": "coolbeans.jpg"}}, {"section": "Ingredients", "title": "Filename no ext\nThe name of the file without extension.", "description": "The name of the file without extension.", "details": {"Slug": "FilenameNoExt", "Filter code": "Dropbox.newFileInFolder.FilenameNoExt", "Type": "String", "Example": "coolbeans"}}, {"section": "Ingredients", "title": "Modified date\nDate file was created or modified in Dropbox.", "description": "Date file was created or modified in Dropbox.", "details": {"Slug": "ModifiedDate", "Filter code": "Dropbox.newFileInFolder.ModifiedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.upload_file", "Filter code method": "Datadotworld.uploadFile.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.upload_file\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to add this file to? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "What would you like to name this file? IMPORTANT: File names must include a file extension.", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.uploadFile.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "What is the URL from which the file can be downloaded?", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.uploadFile.setFile Url(string: file_url)"}}], "filter_code": "", "intent": "Add the newly uploaded file from the Dropbox folder named \"My Documents\" to the data.world dataset with the key \"mydataset123\", using the filename provided by Dropbox, such as \"example.txt\", and the file's public URL, like \"https://www.dropbox.com/s/qp3cqdjqachyr2x/ifttt_wordmark.png\", ensuring the file name includes a proper extension."}
{"original_description": "This will automatically turn on the WiZ light(s) of your choice whenever your Withings Sleep detects that you're getting out of bed. No need to reach for the switch anymore!", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "Turn on the living room WiZ light to 75% brightness with the 'Relax' mode whenever Tom's Nokia Sleep detects that he is getting out of bed between 06:00 and 08:00."}
{"original_description": "This will turn off the WiZ light(s) of your choice whenever your Withings Sleep detects that you get into bed. Don't worry about turning off the lights anymore, just aim for the pillow and let WiZ do the rest!", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_off", "Filter code method": "Wiz.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "Select the lights you want to turn off.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the Living Room WiZ light when Tom's Withings Sleep detects that he gets into bed between 22:00 and 06:00."}
{"original_description": "When it's about to rain, the light will be cool white. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Cloud Intelligence", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "link_smart_home.Light-ColorTemperature", "Filter code method": "LinkSmartHome.lightColorTemperature.skip(string?: reason)", "Runtime method": "runAction(\"link_smart_home.Light-ColorTemperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Set color temperature to", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "LinkSmartHome.lightColorTemperature.setValue(string: value)"}}], "filter_code": "", "intent": "When the weather forecast indicates a high chance of rain in New York City and the current temperature is below 15°C, set the color temperature of the living room smart light to cool white."}
{"original_description": "This will automatically change the WiZ light(s) of your choice to warm white when it starts to rain. Get a comfortable warm light to compensate for the gloomy weather.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the weather condition is \"Rain\" at the location \"Home\", and the current temperature is below 15°C, turn on the WiZ light in the \"Living Room\" with warm white mode and set the brightness to 75%."}
{"original_description": "When your car drives away from a location you specify, your garage door will automatically close.", "trigger_channel": "Zubie", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "zubie.departures"}, "trigger_details": [{"section": "Trigger fields", "title": "Vehicle\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which vehicle?", "Helper text": "Select the vehicle to trigger the event", "Slug": "vehicle", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Place\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which place?", "Helper text": "Which place? (select from the list of Places defined in Zubie)", "Slug": "place", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Event details\nA brief text summary of the departure event", "description": "A brief text summary of the departure event", "details": {"Slug": "event_details", "Filter code": "Zubie.departures.EventDetails", "Type": "String", "Example": "Dad's Honda arrived at Home"}}, {"section": "Ingredients", "title": "Event time\nDate and time of the trip", "description": "Date and time of the trip", "details": {"Slug": "event_time", "Filter code": "Zubie.departures.EventTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Place\nThe place name associated with this location within Zubie", "description": "The place name associated with this location within Zubie", "details": {"Slug": "place", "Filter code": "Zubie.departures.Place", "Type": "String", "Example": "Home"}}, {"section": "Ingredients", "title": "Vehicle\nName of the vehicle defined within Zubie", "description": "Name of the vehicle defined within Zubie", "details": {"Slug": "vehicle", "Filter code": "Zubie.departures.Vehicle", "Type": "String", "Example": "1979 Pinto"}}], "action_channel": "Garageio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garageio.close_garage_door", "Filter code method": "Garageio.closeGarageDoor.skip(string?: reason)", "Runtime method": "runAction(\"garageio.close_garage_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door to close\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_to_close", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When Dad's Honda departs from Home, close the Front Garage Door."}
{"original_description": "This will automatically turn off the WiZ lights of your choice when your Wyze Motion Sensor is \"clear\": when there is no motion.", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.motion_sensor_no_detects_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Trigger time\nTime when motion sensor becomes clear is triggered.", "description": "Time when motion sensor becomes clear is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.motionSensorNoDetectsTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Motion sensor name\nMotion sensor name which becomes clear is triggered.", "description": "Motion sensor name which becomes clear is triggered.", "details": {"Slug": "DeviceName", "Filter code": "Wyzecam.motionSensorNoDetectsTrigger.MotionSensorName", "Type": "String", "Example": "your wyze motion sensor"}}, {"section": "Ingredients", "title": "Trigger message\n{{fields.serialize_device_info.label}} becomes clear", "description": "{{fields.serialize_device_info.label}} becomes clear", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.motionSensorNoDetectsTrigger.TriggerMessage", "Type": "String", "Example": "Motion sensor becomes clear on your motion sensor."}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_off", "Filter code method": "Wiz.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "Select the lights you want to turn off.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the WiZ living room lamp when the Wyze motion sensor in the hallway becomes clear between 20:00 and 07:00."}
{"original_description": "This applet will change the color of a Philips Hue light bulb into green when the hour with the lowest CO2 intensity in the electricity production between a starting time and a finish time is reached", "trigger_channel": "Watts", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "watts.lowcarbon"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nDropdown list", "description": "Dropdown list", "details": {"Label": "Location", "Helper text": "Please select one of your Watts locations", "Slug": "location", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Start hour\nDropdown list", "description": "Dropdown list", "details": {"Label": "Starting time", "Helper text": "Example: You are leaving home at 07:00 in the morning and need your dishwasher to be finished at 16:00 in the afternoon when you return. The dishwasher takes two hours to complete its normal washing program. Set the starting time to 07:00.", "Slug": "start_hour", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "End hour\nDropdown list", "description": "Dropdown list", "details": {"Label": "Finish time", "Helper text": "Example: You are leaving home at 07:00 in the morning and need your dishwasher to be finished at 16:00 in the afternoon when you return. The dishwasher takes two hours to complete its normal washing program. Set the finish time to 16:00.", "Slug": "end_hour", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Run duration in hours\nDropdown list", "description": "Dropdown list", "details": {"Label": "Duration", "Helper text": "Example: You need your dishwasher to be finished at 16:00. The dish washer takes two hours to complete its normal washing program. In this case Watts will start the dishwasher at least two hours before the finish time. Set the Duration to 2 hours.", "Slug": "run_duration_in_hours", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Start time\nStart of time range trigger could have been activated at.", "description": "Start of time range trigger could have been activated at.", "details": {"Slug": "start_time", "Filter code": "Watts.lowcarbon.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "End time\nSpecified end of time range (with run duration included) trigger could have been activated at.", "description": "Specified end of time range (with run duration included) trigger could have been activated at.", "details": {"Slug": "end_time", "Filter code": "Watts.lowcarbon.EndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Run duration\nSpecified run duration.", "description": "Specified run duration.", "details": {"Slug": "run_duration", "Filter code": "Watts.lowcarbon.RunDuration", "Type": "String", "Example": "2"}}, {"section": "Ingredients", "title": "Co2 level\nAverage CO2 level during the run trigger activated.", "description": "Average CO2 level during the run trigger activated.", "details": {"Slug": "co2_level", "Filter code": "Watts.lowcarbon.Co2Level", "Type": "String", "Example": "126"}}, {"section": "Ingredients", "title": "Executed at\nTime trigger was activated at.", "description": "Time trigger was activated at.", "details": {"Slug": "executed_at", "Filter code": "Watts.lowcarbon.ExecutedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Location name\nName of the location CO2 level is referred to.", "description": "Name of the location CO2 level is referred to.", "details": {"Slug": "location_name", "Filter code": "Watts.lowcarbon.LocationName", "Type": "String", "Example": "Herstedøstervej 23"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "", "intent": "When the hour with the lowest CO2 intensity in electricity production between 07:00 and 19:00 at Herstedøstervej 23 is reached, change the color of all Philips Hue lights in the living room to green (#008000)."}
{"original_description": "When the Litter-Robot waste drawer is full, the Hue light(s) in your selected space will blink.", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Litter-Robot named \"My Office Litter Robot\" reports that its waste drawer is full, as indicated by the \"Waste Drawer Full\" event type at any time, blink all Philips Hue lights in the living room."}
{"original_description": "This Applet will turn on your bot when you unlock your August Home lock.", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_unlocked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Unlocked at\nDate and time lock was unlocked.", "description": "Date and time lock was unlocked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockUnlocked.UnlockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who unlocked the lock.", "description": "The user who unlocked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockUnlocked.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockUnlocked.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockUnlocked.HouseName", "Type": "String", "Example": "San Diego Beach House"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who unlocked the lock.", "description": "An image url to the profile photo of the user who unlocked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockUnlocked.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.turn_on_bot", "Filter code method": "Switchbot.turnOnBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.turn_on_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the SwitchBot device named \"Office Bot\" when the August lock named \"Front Door\" at the \"San Diego Beach House\" is unlocked by John Smith."}
{"original_description": "This Action will turn a WeMo Light Switch on. If the WeMo Switch is already on, it will remain on.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsOnDiscrete", "Filter code method": "WemoLightSwitch.attributeLsOnDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsOnDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo light switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the WeMo Light Switch with Mac address 00:11:22:33:44:55 when a MESH event with EventID \"12345\" and text contents \"Motion Tag: Detected!\" is triggered between 07:00 and 19:00."}
{"original_description": "This will turn on philips hue lights when fetchIt button is pressed or long pressed ", "trigger_channel": "ThingaOS", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tantiv4.when_fetchit_button_press"}, "trigger_details": [{"section": "Trigger fields", "title": "Fetchit device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Device", "Helper text": "Select device name", "Slug": "fetchit_device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Button event\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Button Event", "Helper text": "Select Button Event", "Slug": "button_event_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Tantiv4.whenFetchitButtonPress.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nname of the device with which triggered", "description": "name of the device with which triggered", "details": {"Slug": "device_name", "Filter code": "Tantiv4.whenFetchitButtonPress.DeviceName", "Type": "String", "Example": "Name"}}, {"section": "Ingredients", "title": "Button name\nButton name", "description": "Button name", "details": {"Slug": "button_name", "Filter code": "Tantiv4.whenFetchitButtonPress.ButtonName", "Type": "String", "Example": "string"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the \"Office Button\" on device \"Main Fetchit Device\" is pressed or long pressed, turn on all Philips Hue lights in the living room."}
{"original_description": "This Action will turn a WeMo Light Switch off. If the WeMo Switch is already off, it will remain off.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsOffDiscrete", "Filter code method": "WemoLightSwitch.attributeLsOffDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsOffDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo light switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the WeMo Light Switch with Mac address 00:11:22:33:44:55 when a MESH event with EventID \"12345\" and text contents \"Motion Tag: Detected!\" is triggered between 07:00 and 19:00."}
{"original_description": "Your coffee machine will turn on and run the default rinsing program every morning making it ready to make your favorite coffee.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_on", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the kitchen coffee machine and run the default rinsing program every morning at sunrise when the temperature is above 18°C, so it's ready to make your favorite coffee."}
{"original_description": "This Action will deactivate the output of your cloudBit.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "littleBits", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "littlebits.deactivate_output", "Filter code method": "Littlebits.deactivateOutput.skip(string?: reason)", "Runtime method": "runAction(\"littlebits.deactivate_output\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which cloudBit?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a motion detection event with the text \"Motion Tag: Detected!\" is triggered at any time, deactivate the output of the cloudBit device named \"Office CloudBit\"."}
{"original_description": "At sunset all Lexi lights will automatically turn on", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Lexi", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lexi.deviceTurnOnAll", "Filter code method": "Lexi.deviceTurnOnAll.skip(string?: reason)", "Runtime method": "runAction(\"lexi.deviceTurnOnAll\", {})"}, "action_details": [{"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temp\nDropdown list", "description": "Dropdown list", "details": {"Label": "Temperature", "Helper text": "*Please select Temperature as 0% to apply color on the light", "Slug": "temp", "Required": "true", "Can have default value": "true"}}], "filter_code": "", "intent": "When the sunset at New York occurs, as reported by Weather Underground, and the current temperature is 18 degrees Celsius, turn on all Lexi lights with a brightness of 80% and a color of #FFC107."}
{"original_description": "Report yesterday's rainfall measurement from your Netatmo device to Netro. Netro will use it to update schedules.  ", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.rain-yesterday-amount"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.rainYesterdayAmount.DeviceName", "Type": "String", "Example": "My Rain gauge"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occured", "description": "The date and time the measurement occured", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.rainYesterdayAmount.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Measured rainfall in\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "MeasuredRainfallIn", "Filter code": "Netatmo.rainYesterdayAmount.MeasuredRainfallIn", "Type": "String", "Example": "0.43"}}, {"section": "Ingredients", "title": "Measured rainfall mm\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "MeasuredRainfallMM", "Filter code": "Netatmo.rainYesterdayAmount.MeasuredRainfallMM", "Type": "String", "Example": "10.92"}}], "action_channel": "Netro", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "netro.report_weather", "Filter code method": "Netro.reportWeather.skip(string?: reason)", "Runtime method": "runAction(\"netro.report_weather\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "device", "Helper text": "Select the Netro device to use the weather data.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Date\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "date", "Helper text": "The date of the weather information, e.g. 2000/12/30.", "Slug": "date", "Required": "true", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setDate(string: date)"}}, {"section": "Action fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "condition", "Helper text": "The daily weather condition.", "Slug": "condition", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setCondition(string: condition)"}}, {"section": "Action fields", "title": "Summary\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "summary", "Helper text": "The daily weather summary.", "Slug": "summary", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setSummary(string: summary)"}}, {"section": "Action fields", "title": "Rain\nText input > Other", "description": "Text input > Other", "details": {"Label": "rain", "Helper text": "The daily rain amount, float, with unit of MM", "Slug": "rain", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setRain(string: rain)"}}, {"section": "Action fields", "title": "Rain prob\nText input > Other", "description": "Text input > Other", "details": {"Label": "rain probability", "Helper text": "The daily rain probability for forecast data, integer, from 0 to 100", "Slug": "rain_prob", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setRain Prob(string: rain_prob)"}}, {"section": "Action fields", "title": "Temp\nText input > Other", "description": "Text input > Other", "details": {"Label": "temperature", "Helper text": "The daily average temperature, float, of unit Celsius", "Slug": "temp", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setTemp(string: temp)"}}, {"section": "Action fields", "title": "T min\nText input > Other", "description": "Text input > Other", "details": {"Label": "minimum temperature", "Helper text": "The daily minimum temperature, float, of unit Celsius", "Slug": "t_min", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setT Min(string: t_min)"}}, {"section": "Action fields", "title": "T max\nText input > Other", "description": "Text input > Other", "details": {"Label": "maximum temperature", "Helper text": "The daily maximum temperature of day, float, of unit Celsius", "Slug": "t_max", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setT Max(string: t_max)"}}, {"section": "Action fields", "title": "T dew\nText input > Other", "description": "Text input > Other", "details": {"Label": "dew point", "Helper text": "The daily dew point, float, of unit Celsius", "Slug": "t_dew", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setT Dew(string: t_dew)"}}, {"section": "Action fields", "title": "Wind speed\nText input > Other", "description": "Text input > Other", "details": {"Label": "wind speed", "Helper text": "The daily wind speed, float, of unit m/s", "Slug": "wind_speed", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setWind Speed(string: wind_speed)"}}, {"section": "Action fields", "title": "Humidity\nText input > Other", "description": "Text input > Other", "details": {"Label": "humidity", "Helper text": "The daily humidity, integer, 0-100", "Slug": "humidity", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setHumidity(string: humidity)"}}, {"section": "Action fields", "title": "Pressure\nText input > Other", "description": "Text input > Other", "details": {"Label": "pressure", "Helper text": "The daily air pressure, float, of unit hpa", "Slug": "pressure", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setPressure(string: pressure)"}}, {"section": "Action fields", "title": "Sunrise\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "sunrise", "Helper text": "sunrise time", "Slug": "sunrise", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setSunrise(string: sunrise)"}}, {"section": "Action fields", "title": "Sunset\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "sunset", "Helper text": "sunset time", "Slug": "sunset", "Required": "false", "Can have default value": "true", "Filter code method": "Netro.reportWeather.setSunset(string: sunset)"}}], "filter_code": "Netro.reportWeather.setDate(Netatmo.rainYesterdayAmount.MeasuredAt)\nNetro.reportWeather.setRain(Netatmo.rainYesterdayAmount.MeasuredRainfallMM)\nNetro.reportWeather.setRainProb(\"100\")\n\n\n", "intent": "Report the rainfall measurement of 10.92 mm from My Rain gauge, which was measured yesterday at 04:17:06+05:00, to Netro device Garden Controller, setting the date to 2020-07-08, the rain amount to 10.92 mm, and the rain probability to 100."}
{"original_description": "This will automatically turn on the WiZ light(s) of your choice when SmartThings detects a presence.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.new_present_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Arrived at\nThe date and time you arrived.", "description": "The date and time you arrived.", "details": {"Slug": "ArrivedAt", "Filter code": "SmartthingsV2.newPresentSmartthings.ArrivedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.newPresentSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "Turn on the WiZ light in the Living Room to 75% brightness with the Warm White mode when SmartThings detects presence from the Bedroom sensor between 07:00 and 19:00."}
{"original_description": "This will change the WiZ light(s) of your choice to red whenever the CO₂ level measured by your Netatmo Weather Station rises above a certain point. We suggest 1,000ppm as default - you can change it to fit your needs. (Only for WiZ Colors lights)", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.co2-rises-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target carbon dioxide", "Helper text": "In parts per million (ppm)", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.co2RisesAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the CO2", "description": "This is the name of the Netamo device where you are reading the CO2", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.co2RisesAbove.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}, {"section": "Ingredients", "title": "Target co2\nThe target CO2 in parts per million (ppm)", "description": "The target CO2 in parts per million (ppm)", "details": {"Slug": "TargetCO2", "Filter code": "Netatmo.co2RisesAbove.TargetCO2", "Type": "String", "Example": "1200"}}, {"section": "Ingredients", "title": "Measured co2\nThe measured CO2 in parts per million (ppm)", "description": "The measured CO2 in parts per million (ppm)", "details": {"Slug": "MeasuredCO2", "Filter code": "Netatmo.co2RisesAbove.MeasuredCO2", "Type": "String", "Example": "1204"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the CO₂ level measured by my Netatmo Weather Station, located in \"My Home - Indoor station\", rises above 1000ppm at any time, turn on the WiZ light in the \"Living Room\" and set it to red color with a brightness of 80%."}
{"original_description": "This will turn on the WiZ lights of your choice in the mode and brightness you defined whenever your Wyze Motion Sensor detects motion.", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.motion_sensor_no_detects_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Trigger time\nTime when motion sensor becomes clear is triggered.", "description": "Time when motion sensor becomes clear is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.motionSensorNoDetectsTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Motion sensor name\nMotion sensor name which becomes clear is triggered.", "description": "Motion sensor name which becomes clear is triggered.", "details": {"Slug": "DeviceName", "Filter code": "Wyzecam.motionSensorNoDetectsTrigger.MotionSensorName", "Type": "String", "Example": "your wyze motion sensor"}}, {"section": "Ingredients", "title": "Trigger message\n{{fields.serialize_device_info.label}} becomes clear", "description": "{{fields.serialize_device_info.label}} becomes clear", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.motionSensorNoDetectsTrigger.TriggerMessage", "Type": "String", "Example": "Motion sensor becomes clear on your motion sensor."}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "Turn on the WiZ lights in the Living Room to Warm White mode with 75% brightness whenever the Wyze Motion Sensor named \"Office Motion\" detects motion between 07:00 and 19:00."}
{"original_description": "This Applet will attempt to close your garage door or gate every day at specific time. If the garage door is already closed, it will remain closed.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "GarageWiFi & Gates", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garagewifi.close_door", "Filter code method": "Garagewifi.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"garagewifi.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Close the garage door number 1 every day at 8:00 PM if it is open, to ensure the garage remains secure overnight."}
{"original_description": "This Applet will attempt to open your garage door or gate every day at specific time. If the garage door is already open, it will remain open.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Gogogate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "gogogate.open_door", "Filter code method": "Gogogate.openDoor.skip(string?: reason)", "Runtime method": "runAction(\"gogogate.open_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Open the garage door number 1 every day at 7:30 AM, but only if it's currently closed, to ensure easy access during morning hours."}
{"original_description": "This applet will stop watering if  rain is detected by NetAtmo Rain Gauge", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.rain-has-started"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.rainHasStarted.DeviceName", "Type": "String", "Example": "My Rain gauge"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occured", "description": "The date and time the measurement occured", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.rainHasStarted.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "RainMachine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rain_machine.stop_all_watering", "Filter code method": "RainMachine.stopAllWatering.skip(string?: reason)", "Runtime method": "runAction(\"rain_machine.stop_all_watering\", {})"}, "action_details": [{"section": "Action fields", "title": "Sprinkler\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "Device Name", "Slug": "sprinkler", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When rain is detected by my Netatmo Rain gauge named \"My Rain gauge\" at any time, stop all watering on the RainMachine device named \"Front Yard Sprinkler\"."}
{"original_description": "This applet informs you if the state of your instrument has changed. You will automatically receive a notification if for example a user interaction is required during a run.", "trigger_channel": "Tecan Connect", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tecan_connect.instrument_state"}, "trigger_details": [{"section": "Trigger fields", "title": "Instrument\nDropdown list", "description": "Dropdown list", "details": {"Label": "Instrument", "Helper text": "Choose the Instrument for the selected Trigger", "Slug": "instrument", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "State\nDropdown list", "description": "Dropdown list", "details": {"Label": "State", "Helper text": "Choose the state to be monitored", "Slug": "state", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Time of event\nThe time when the state change event happened", "description": "The time when the state change event happened", "details": {"Slug": "time_of_event", "Filter code": "TecanConnect.instrumentState.TimeOfEvent", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Instrument name\nAlias of the instrument whose state was changed", "description": "Alias of the instrument whose state was changed", "details": {"Slug": "instrument_name", "Filter code": "TecanConnect.instrumentState.InstrumentName", "Type": "String", "Example": "My Instrument"}}, {"section": "Ingredients", "title": "User\nYour Name", "description": "Your Name", "details": {"Slug": "user", "Filter code": "TecanConnect.instrumentState.User", "Type": "String", "Example": "IFTTT_Demo_user"}}, {"section": "Ingredients", "title": "Instrument state\nThe state of the instrument", "description": "The state of the instrument", "details": {"Slug": "instrument_state", "Filter code": "TecanConnect.instrumentState.InstrumentState", "Type": "String", "Example": "Running"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": "", "intent": "Notify me on my phone with a message \"Instrument State Changed\" whenever the state of my instrument \"Lab Instrument 1\" changes to \"Running\" or \"Idle\" between 08:00 and 17:00, including the current time of the event and the name of the instrument that triggered the notification."}
{"original_description": "Set the time of day, and you will get a daily weather report from Weather Underground.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": "", "intent": "Send a daily weather report to my Telegram chat at 7:00 AM, including the current temperature in degrees Fahrenheit, the current weather condition, and a web page preview of the forecast for New York City."}
{"original_description": "Every time you create a new public bookmark, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Diigo", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "diigo.new_bookmark_tagged_diigo"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Single tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Url\nThe URL that you bookmarked.", "description": "The URL that you bookmarked.", "details": {"Slug": "Url", "Filter code": "Diigo.newBookmarkTaggedDiigo.Url", "Type": "String", "Example": "http://blog.ifttt.com/"}}, {"section": "Ingredients", "title": "Title\nThe bookmark title, usually the page title at that URL.", "description": "The bookmark title, usually the page title at that URL.", "details": {"Slug": "Title", "Filter code": "Diigo.newBookmarkTaggedDiigo.Title", "Type": "String", "Example": "A blog about ifttt"}}, {"section": "Ingredients", "title": "Tags\nTags comma seperated.", "description": "Tags comma seperated.", "details": {"Slug": "Tags", "Filter code": "Diigo.newBookmarkTaggedDiigo.Tags", "Type": "String", "Example": "cool, web, interface"}}, {"section": "Ingredients", "title": "Description\nThe description you leave on bookmark, blank otherwise.", "description": "The description you leave on bookmark, blank otherwise.", "details": {"Slug": "Description", "Filter code": "Diigo.newBookmarkTaggedDiigo.Description", "Type": "String", "Example": "So cool!"}}, {"section": "Ingredients", "title": "Time\nDate and time you created bookmark.", "description": "Date and time you created bookmark.", "details": {"Slug": "Time", "Filter code": "Diigo.newBookmarkTaggedDiigo.Time", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When you create a new public bookmark on Diigo with the tag \"new\" and the title contains the word \"IFTTT\", send a Signal to your Das Keyboard device named \"Office Keyboard\" in the zone \"Top\" with the color \"#FF0000\" and the message \"New IFTTT Bookmark: {{Title}}\"."}
{"original_description": "This will change the WiZ light(s) of your choice to blue whenever the temperature recorded on your Netatmo Weather Station drops below a certain point. Ideal, for example, to set up a \"frost warning\" notification. (Only for WiZ Colors lights)", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.temperature-drops-below"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target temperature", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the temperature", "description": "This is the name of the Netamo device where you are reading the temperature", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.temperatureDropsBelow.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}, {"section": "Ingredients", "title": "Target temperature c\nThe target temperature in degrees Celsius", "description": "The target temperature in degrees Celsius", "details": {"Slug": "TargetTemperatureC", "Filter code": "Netatmo.temperatureDropsBelow.TargetTemperatureC", "Type": "String", "Example": "22.22"}}, {"section": "Ingredients", "title": "Target temperature f\nThe target temperature in degrees Fahrenheit", "description": "The target temperature in degrees Fahrenheit", "details": {"Slug": "TargetTemperatureF", "Filter code": "Netatmo.temperatureDropsBelow.TargetTemperatureF", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Measured temperature c\nThe measured temperature in degrees Celsius", "description": "The measured temperature in degrees Celsius", "details": {"Slug": "MeasuredTemperatureC", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredTemperatureC", "Type": "String", "Example": "22.78"}}, {"section": "Ingredients", "title": "Measured temperature f\nThe measured temperature in degrees Fahrenheit", "description": "The measured temperature in degrees Fahrenheit", "details": {"Slug": "MeasuredTemperatureF", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredTemperatureF", "Type": "String", "Example": "73"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the temperature at my Netatmo Weather Station, specifically the \"My Home - Indoor station\" device, drops below 0 degrees Celsius, change the WiZ light in the \"Living Room\" to blue with a brightness of 50%, serving as a frost warning notification."}
{"original_description": "Want to scare intruders away? Or make sure you get up as soon as possible in case something odd is happening? This applet will turn on the WiZ lights of your choice to Daylight mode, full brightness, whenever Noonlight triggers an alarm.", "trigger_channel": "Noonlight", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "safetrek.alert_triggered"}, "trigger_details": [{"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Safetrek.alertTriggered.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nLatitude that alarm happened", "description": "Latitude that alarm happened", "details": {"Slug": "latitude", "Filter code": "Safetrek.alertTriggered.Latitude", "Type": "String", "Example": "38.6532135"}}, {"section": "Ingredients", "title": "Longitude\nLongitude that alarm happened", "description": "Longitude that alarm happened", "details": {"Slug": "longitude", "Filter code": "Safetrek.alertTriggered.Longitude", "Type": "String", "Example": "-90.313673"}}, {"section": "Ingredients", "title": "Location map url\nUrl to where the alarm occurred", "description": "Url to where the alarm occurred", "details": {"Slug": "location_map_url", "Filter code": "Safetrek.alertTriggered.LocationMapUrl", "Type": "Web URL", "Example": "https://www.google.com/maps/place/St.+Louis,+MO/@38.6532135,-90.313673,12z"}}, {"section": "Ingredients", "title": "Name\nThe name of the person that triggered the alarm", "description": "The name of the person that triggered the alarm", "details": {"Slug": "name", "Filter code": "Safetrek.alertTriggered.Name", "Type": "String", "Example": "Jane Doe"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When Noonlight triggers an alarm for Jane Doe at a location like 38.6532135, -90.313673, between 07:00 and 22:00, turn on the WiZ lights in the Living Room to Daylight mode with full brightness."}
{"original_description": "This will change the WiZ light(s) of your choice to orange color when your Withings Home raises an air quality alert. A simple and useful way to visualize the alert quickly. \n(Only for WiZ Colors lights)", "trigger_channel": "Withings Home", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "withingshome.airquality"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which camera?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Date and time\nDate and time air quality alert was triggered by Withings Home.", "description": "Date and time air quality alert was triggered by Withings Home.", "details": {"Slug": "time", "Filter code": "Withingshome.airquality.DateAndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nDevice name as displayed in app settings.", "description": "Device name as displayed in app settings.", "details": {"Slug": "device_name", "Filter code": "Withingshome.airquality.DeviceName", "Type": "String", "Example": "Your Withings Home \"Living Room\" triggered an air quality alert."}}, {"section": "Ingredients", "title": "Air quality level\nAir quality level in ppm.", "description": "Air quality level in ppm.", "details": {"Slug": "value", "Filter code": "Withingshome.airquality.AirQualityLevel", "Type": "String", "Example": "Air quality is bad, level of particles in the air is 3000 ppm"}}, {"section": "Ingredients", "title": "Device mac\nFull mac address.", "description": "Full mac address.", "details": {"Slug": "device_mac", "Filter code": "Withingshome.airquality.DeviceMAC", "Type": "String", "Example": "An air quality alert has been raised on Withings Home \"00:24:E4:2C:2B:2A\""}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the Withings Home device named \"Living Room\" detects an air quality level of 3000 ppm or higher, change the WiZ Colors light in the room named \"Office\" to orange color with a brightness of 80% and keep this mode for at least 30 minutes to visually signal the poor air quality."}
{"original_description": "This will turn on the lights of your choice in Wake-up mode within 15 minutes of the sunrise in your location. Wake up with the sun!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Fanimation", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "fansync.on_off", "Filter code method": "Fansync.onOff.skip(string?: reason)", "Runtime method": "runAction(\"fansync.on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "which device?", "Helper text": "Please select the device you have on Fanimation solution.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "On off\nDropdown list", "description": "Dropdown list", "details": {"Label": "on or off?", "Helper text": "Please choose switch on or off", "Slug": "on_off", "Required": "true", "Can have default value": "true"}}], "filter_code": "", "intent": "Turn on the living room fan 15 minutes after sunrise in New York when the temperature is above 18°C and the condition is Sunny."}
{"original_description": "Having trouble sneaking snacks? A visual cue can help — this Applet will turn your LIFX bulb red (or the color of your choice) whenever your fridge is opened. ", "trigger_channel": "GE Appliances Refrigerator", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ge_appliances_refrigerator.refrigerator-door-freshfood-open"}, "trigger_details": [{"section": "Trigger fields", "title": "Applianceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which appliance?", "Slug": "applianceId", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Event\nThe appliance event.", "description": "The appliance event.", "details": {"Slug": "event", "Filter code": "GeAppliancesRefrigerator.refrigeratorDoorFreshfoodOpen.Event", "Type": "String", "Example": "refrigerator-door-freshfood-open"}}, {"section": "Ingredients", "title": "Appliance\nThe appliance identifier.", "description": "The appliance identifier.", "details": {"Slug": "applianceId", "Filter code": "GeAppliancesRefrigerator.refrigeratorDoorFreshfoodOpen.Appliance", "Type": "String", "Example": "D828C901A076"}}, {"section": "Ingredients", "title": "Date and time\nThe date and time the event occurred.", "description": "The date and time the event occurred.", "details": {"Slug": "time", "Filter code": "GeAppliancesRefrigerator.refrigeratorDoorFreshfoodOpen.DateAndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.color", "Filter code method": "Lifx.color.skip(string?: reason)", "Runtime method": "runAction(\"lifx.color\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color if off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on first?", "Helper text": "&quot;Yes&quot; will make your lights turn on to the color, even when they are turned off in the app.", "Slug": "color_if_off", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.color.setColor If Off(string: color_if_off)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: #ff0000; brightness: 0.3; duration: 12&quot; for red at 30% brightness, 12 second fade. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.color.setAdvanced Options(string: advanced_options)"}}], "filter_code": "", "intent": "When the refrigerator door is opened, as indicated by the GE Appliances Refrigerator event \"refrigerator-door-freshfood-open\" from appliance \"D828C901A076\", turn on the LIFX bulb in the kitchen to red (#FF0000) at 50% brightness with a transition duration of 2 seconds, even if the light is currently off."}
{"original_description": "Want to read the latest articles on a topic of your choice? This Applet will save your articles in a Google Sheet so you can dig into them at a later date.", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_article_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Term\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "term", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newArticleMatchingSearch.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newArticleMatchingSearch.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.newArticleMatchingSearch.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.newArticleMatchingSearch.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.newArticleMatchingSearch.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Keywords\nA comma separated list of article keywords", "description": "A comma separated list of article keywords", "details": {"Slug": "Keywords", "Filter code": "Nytimes.newArticleMatchingSearch.Keywords", "Type": "String", "Example": "fish, tanks, biology"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.newArticleMatchingSearch.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": "", "intent": "Save New York Times articles about climate change to a Google Sheets spreadsheet named \"NYT Climate News\" in the folder path \"News/Environment\", with each row formatted as \"|||Title|||Author|||Published Date|||Article Url\", whenever a new article is published with keywords including \"global warming\" or \"sustainability\"."}
{"original_description": "This will change the WiZ light(s) of your choice to orange if your Netatmo Weather Station records a temperature above a certain point. Ideal as a reminder to take extra water for a walk, or close the blinds to keep the heat outside. (Only for WiZ Colors lights)", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.temperature-rises-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target temperature", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.temperatureRisesAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the temperature", "description": "This is the name of the Netamo device where you are reading the temperature", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.temperatureRisesAbove.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}, {"section": "Ingredients", "title": "Target temperature f\nThe target temperature in degrees Fahrenheit", "description": "The target temperature in degrees Fahrenheit", "details": {"Slug": "TargetTemperatureF", "Filter code": "Netatmo.temperatureRisesAbove.TargetTemperatureF", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Target temperature c\nThe target temperature in degrees Celsius", "description": "The target temperature in degrees Celsius", "details": {"Slug": "TargetTemperatureC", "Filter code": "Netatmo.temperatureRisesAbove.TargetTemperatureC", "Type": "String", "Example": "22.22"}}, {"section": "Ingredients", "title": "Measured temperature f\nThe measured temperature in degrees Fahrenheit", "description": "The measured temperature in degrees Fahrenheit", "details": {"Slug": "MeasuredTemperatureF", "Filter code": "Netatmo.temperatureRisesAbove.MeasuredTemperatureF", "Type": "String", "Example": "73"}}, {"section": "Ingredients", "title": "Measured temperature c\nThe measured temperature in degrees Celsius", "description": "The measured temperature in degrees Celsius", "details": {"Slug": "MeasuredTemperatureC", "Filter code": "Netatmo.temperatureRisesAbove.MeasuredTemperatureC", "Type": "String", "Example": "22.78"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the Netatmo Weather Station at \"My Home - Indoor station\" records a temperature above 25 degrees Celsius, turn on the WiZ light in the \"Living Room\" and set it to orange with a brightness of 80%."}
{"original_description": "This Applet will turn on your LinkJapan device when the sun sets in your area.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "LinkJapan eHome", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "LinkJapan_eHome.powerState", "Filter code method": "LinkJapanEHome.powerState.skip(string?: reason)", "Runtime method": "runAction(\"LinkJapan_eHome.powerState\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Powercontrol changepowerstate string\nDropdown list", "description": "Dropdown list", "details": {"Label": "On or off?", "Helper text": "choose power", "Slug": "PowerControl_ChangePowerState_string", "Required": "true", "Can have default value": "true", "Filter code method": "LinkJapanEHome.powerState.setPower Control Change Power State String(string: PowerControl_ChangePowerState_string)"}}], "filter_code": "", "intent": "Turn on my Living Room Lamp device when the sun sets in New York, if the current temperature is above 15°C and the weather condition is Sunny."}
{"original_description": "Watch your robot clean for you while singing along to your favorite song! Just add a song to 'My Sonos' from your Sonos app, and then choose this song while setting up this applet. Your Sonos speaker will play this song every time your robot starts running! \n\nGot feedback on how to improve this \"DJ Roomba\" integration? Leave us a comment! Need help adding favorites to My Sonos? See here: https://support.sonos.com/s/article/3547", "trigger_channel": "iRobot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "irobot.robot_start"}, "trigger_details": [{"section": "Trigger fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nTime the robot started.", "description": "Time the robot started.", "details": {"Slug": "iso_timestamp", "Filter code": "Irobot.robotStart.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_favorite", "Filter code method": "Sonos.playFavorite.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_favorite\", {})"}, "action_details": [{"section": "Action fields", "title": "Favorite\nDropdown list", "description": "Dropdown list", "details": {"Label": "What favorite do you want to play?", "Helper text": "Choose a Sonos Favorite", "Slug": "favorite", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playFavorite.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": "", "intent": "When my Roomba robot named 'Living Room Cleaner' starts running, play the Sonos favorite 'Morning Boost' in the 'Kitchen' room and include grouped rooms."}
{"original_description": "Every time your smart device is unlocked, a signal will be sent to your Das Keyboard Device.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.unlocked_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Unlocked at\nThe date and time the lock was unlocked.", "description": "The date and time the lock was unlocked.", "details": {"Slug": "UnlockedAt", "Filter code": "SmartthingsV2.unlockedSmartthings.UnlockedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.unlockedSmartthings.DeviceName", "Type": "String", "Example": "Bedroom lock"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Bedroom lock smart device is unlocked at any time, send a signal named \"Unlock Alert\" to the Das Keyboard Device, specifically to zone 1, with the color set to red, including the message \"Device Unlocked\", using the breathe effect on the Office Keyboard device."}
{"original_description": "This applet will change the setpoint temperature of your AC when the outside temperature drops below a selected temperature.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "GE Appliances Window AC", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ge_appliances_wac.wac-set-target-temp", "Filter code method": "GeAppliancesWac.wacSetTargetTemp.skip(string?: reason)", "Runtime method": "runAction(\"ge_appliances_wac.wac-set-target-temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Applianceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which appliance?", "Slug": "applianceId", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Set-target-temp\nDropdown list", "description": "Dropdown list", "details": {"Label": "What temperature?", "Slug": "set-target-temp", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the outside temperature drops below 50°F in New York, set the target temperature of your GE Appliances Window AC to 72°F."}
{"original_description": "When Wyze Cam detects an anything out of the ordinary, Noonlight will send help to your home address", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.motion_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Motion detected\nMotion detected on your wyze camera.", "description": "Motion detected on your wyze camera.", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.motionTrigger.MotionDetected", "Type": "String", "Example": "Motion detected on your wyze camera."}}, {"section": "Ingredients", "title": "Trigger time\nTime when motion is triggered.", "description": "Time when motion is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.motionTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Noonlight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "safetrek.alert_address", "Filter code method": "Safetrek.alertAddress.skip(string?: reason)", "Runtime method": "runAction(\"safetrek.alert_address\", {})"}, "action_details": [{"section": "Action fields", "title": "Address line 1\nText input > Other", "description": "Text input > Other", "details": {"Label": "Street Address", "Slug": "address_line_1", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Address line 2\nText input > Other", "description": "Text input > Other", "details": {"Label": "Apt, suite, unit, etc.", "Slug": "address_line_2", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "City\nText input > Other", "description": "Text input > Other", "details": {"Label": "City", "Slug": "city", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "State\nText input > Other", "description": "Text input > Other", "details": {"Label": "State", "Slug": "state", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Zip\nText input > Other", "description": "Text input > Other", "details": {"Label": "Zip", "Slug": "zip", "Required": "true", "Can have default value": "true"}}], "filter_code": "", "intent": "When motion is detected on your Wyze Cam at 1377 Oak Street, Apt 3B, San Francisco, CA 94105, between the hours of 07:00 and 22:00, Noonlight will send help to that address."}
{"original_description": "This will automatically turn on the WiZ light(s) of your choice whenever a Mi|Home motion sensor detects movement.", "trigger_channel": "Energenie Mi|Home", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "energenie_mi_home.motion_started"}, "trigger_details": [{"section": "Trigger fields", "title": "Motion sensor subdevice\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which motion sensor?", "Slug": "motion_sensor_subdevice_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "timestamp", "Filter code": "EnergenieMiHome.motionStarted.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Motion sensor name\nThe name of the sensor that detected motion.", "description": "The name of the sensor that detected motion.", "details": {"Slug": "motion_sensor_name", "Filter code": "EnergenieMiHome.motionStarted.MotionSensorName", "Type": "String", "Example": "Motion sensor in my office"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "Turn on the WiZ light in the living room to 75% brightness with the warm white mode whenever the motion sensor in my office detects movement between 07:00 and 22:00."}
{"original_description": "Maybe you're having a great family moment and you want a quick way to start recording it so you don't miss anything. Maybe you suspect something fishy and want a feed from what's going on in your room. Maybe you want to discretely start video recording without your partner noticing. Don't do that. Whatever your intentions, Flic is a small and discrete button and with this Applet, a click of a Flic will get Arlo in recording mode. It's quick, simple and smartphone-free. ", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Arlo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "arlo.record", "Filter code method": "Arlo.record.skip(string?: reason)", "Runtime method": "runAction(\"arlo.record\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "How long?", "Helper text": "How long Arlo will record in seconds.", "Slug": "duration", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Flic button named \"Living Room\" is double-clicked, start recording with the Arlo device named \"Front Door Camera\" for 300 seconds."}
{"original_description": "This will change the WiZ light(s) of your choice to purple whenever your Netatmo Rain Gauge detects rain. (Only for WiZ Colors lights)", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.rain-has-started"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.rainHasStarted.DeviceName", "Type": "String", "Example": "My Rain gauge"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occured", "description": "The date and time the measurement occured", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.rainHasStarted.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": "", "intent": "When the Netatmo Rain Gauge named \"My Rain gauge\" detects rain, turn on the WiZ light in the \"Living Room\" and set it to purple with a brightness of 80%."}
{"original_description": "Have your lights automatically change colour from green to red and purple when the air quality in your home changes. This applet will automatically set the color of your Philips Hue lights.", "trigger_channel": "Kaiterra", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kaiterra.laseregg_aqi"}, "trigger_details": [{"section": "Trigger fields", "title": "Device udid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device do you want to monitor?", "Slug": "device_udid", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Kaiterra.lasereggAqi.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Aqi\nCurrent AQI", "description": "Current AQI", "details": {"Slug": "aqi", "Filter code": "Kaiterra.lasereggAqi.Aqi", "Type": "String", "Example": "10"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "let aqi = parseInt(Kaiterra.lasereggAqi.Aqi)\n\nif (aqi >= 0 && aqi <= 50) {\n  Hue.setColorAllHue.setColor(\"25aa68\")\n} else if (aqi > 50 && aqi <= 100) {\n  Hue.setColorAllHue.setColor(\"ff9900\")\n} else if (aqi > 100 && aqi <= 150) {\n  Hue.setColorAllHue.setColor(\"ff6600\")\n} else if (aqi > 150 && aqi <= 200) {\n  Hue.setColorAllHue.setColor(\"e40000\")\n} else if (aqi > 200 && aqi <= 300) {\n  Hue.setColorAllHue.setColor(\"ae0043\")\n} else {\n  Hue.setColorAllHue.setColor(\"6c003b\")   \n}\n\n", "intent": "When the air quality index from my Kaiterra Laseregg device exceeds 100, change the color of all my Philips Hue lights in the living room to a deep purple, #6c003b, and when it's between 50 and 100, set the color to a vibrant orange, #ff9900, but if the air quality index is below 50, keep the lights at a soothing green, #25aa68."}
{"original_description": "Toggle an Insight switch on/off.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "WeMo Insight Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_insight_switch.attribute_insightToggleDiscrete", "Filter code method": "WemoInsightSwitch.attributeInsightToggleDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_insight_switch.attribute_insightToggleDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Helper text": "Name of your WeMo insight switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a Triple Knock gesture is detected on my KNC1-W-00000088 device between 07:00 and 19:00, toggle the WeMo Insight Switch with macaddress 001122334455 to switch it on if it's currently off, or off if it's currently on."}
{"original_description": "Quick and easy way to control your SkylinkNet light switch", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SkylinkNet", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "skylinknet.dev_on", "Filter code method": "Skylinknet.devOn.skip(string?: reason)", "Runtime method": "runAction(\"skylinknet.dev_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Hub dev\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "hub_dev", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Key\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hub Password", "Slug": "key", "Required": "true", "Can have default value": "true"}}], "filter_code": "", "intent": "When the button widget is pressed at a location with latitude 37.8267 and longitude -122.4230, and it occurs at 04:17:06 on July 8th, turn on the SkylinkNet light switch named \"Living Room\" using the hub password \"MyHouse123\"."}
{"original_description": "Quickly toggle your WeMo Light Switch on and off with this Button Widget. Note: IFTTT app is needed for this Applet.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsToggleDiscrete", "Filter code method": "WemoLightSwitch.attributeLsToggleDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsToggleDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Button Widget is pressed at a location with latitude 37.8267 and longitude -122.4230, and the current time is between 07:00 and 19:00, toggle the WeMo Light Switch with macaddress 00:11:22:33:44:55 on and off."}
{"original_description": "Wake up with the sun by having your WeMo dimmer turn on at sunrise.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Wemo Dimmer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_dimmer.attribute_dimmerToggleDiscrete", "Filter code method": "WemoDimmer.attributeDimmerToggleDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_dimmer.attribute_dimmerToggleDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Dimmer?", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the WeMo dimmer located in the living room at sunrise when the current weather condition is Sunny and the temperature is above 18°C."}
{"original_description": "Toggle WeMo light switch on/off.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsToggleDiscrete", "Filter code method": "WemoLightSwitch.attributeLsToggleDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsToggleDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a Triple Knock gesture is detected by the Knocki device KNC1-W-00000088, toggle the WeMo light switch with macaddress 00:11:22:33:44:55 on or off."}
{"original_description": "Brighten the lights connected to your WeMo Dimmer at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Wemo Dimmer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_dimmer.attribute_dimmerBrightnessChangeDiscrete", "Filter code method": "WemoDimmer.attributeDimmerBrightnessChangeDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_dimmer.attribute_dimmerBrightnessChangeDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Dimmer?", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Subtype\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness Level", "Helper text": "Brightness Level", "Slug": "subType", "Required": "true", "Can have default value": "true"}}], "filter_code": "", "intent": "Brighten the living room lights connected to my WeMo Dimmer to 75% at sunset when the outside temperature is above 18°C and the weather condition is Sunny."}
{"original_description": "Best for turning on an outdoor or porch light at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Hager IoT", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hager_iot.switchon", "Filter code method": "HagerIot.switchon.skip(string?: reason)", "Runtime method": "runAction(\"hager_iot.switchon\", {})"}, "action_details": [{"section": "Action fields", "title": "Cid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "cid", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the outdoor porch light at sunset when the temperature is above 18°C and the weather condition is Sunny, using the Hager IoT device named \"Porch Light\"."}
{"original_description": "Turn on an Insight switch.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "WeMo Insight Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_insight_switch.attribute_insightOnDiscrete", "Filter code method": "WemoInsightSwitch.attributeInsightOnDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_insight_switch.attribute_insightOnDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Helper text": "Name of your WeMo insight switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Living Room WeMo Insight Switch when a Triple Knock gesture is detected by the KNC1-W-00000088 Device on the Knocki."}
{"original_description": "Turn off WeMo light switch.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsOffDiscrete", "Filter code method": "WemoLightSwitch.attributeLsOffDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsOffDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo light switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a Triple Knock gesture is detected by the Knocki device KNC1-W-00000088 at any time, turn off the WeMo light switch named LivingRoomSwitch."}
{"original_description": "Best for turning off an outdoor or porch light when the sun rises.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Hager IoT", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hager_iot.switchoff", "Filter code method": "HagerIot.switchoff.skip(string?: reason)", "Runtime method": "runAction(\"hager_iot.switchoff\", {})"}, "action_details": [{"section": "Action fields", "title": "Cid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "cid", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the outdoor porch light when the sun rises at my location, which is set to New York, and the current weather condition is Sunny, ensuring a beautiful day ahead."}
{"original_description": "Switches on the Philips Hue light you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Living Room Philips Hue light when an Apilio event named \"run_only_at_nighttime\" is triggered with a custom value of \"Green\" between 19:00 and 22:00."}
{"original_description": "Toggle your WeMo Insight Switch on and of by pressing the pusher on your Kronaby watch.", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "WeMo Insight Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_insight_switch.attribute_insightToggleDiscrete", "Filter code method": "WemoInsightSwitch.attributeInsightToggleDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_insight_switch.attribute_insightToggleDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Helper text": "Name of your WeMo insight switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the pusher on your Kronaby watch is pressed with a double press at any time, toggle your WeMo Insight Switch located at the office, which has the macaddress 00:11:22:33:44:55, on or off."}
{"original_description": "Switches off the Philips Hue light you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the Living Room Lamp when Apilio receives the \"run_only_at_nighttime\" event between 20:00 and 06:00 with a custom value of \"Green\"."}
{"original_description": "Use the button widget as a remote control for your home, turning on or off lights, coffee machines, fans, or anything else. This Applet requires special hardware, the SwitchBot and the SwitchBot Hub.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.press_bot", "Filter code method": "Switchbot.pressBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.press_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the button widget is pressed at a location with latitude 37.8267 and longitude -122.4230, and the press occurs between 07:00 and 19:00, turn on the living room fan using the SwitchBot device."}
{"original_description": "Use the leaving home detection of your EasyControl of Bosch to switch off your Hue lights.", "trigger_channel": "EasyControl of Bosch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "easycontrol_bosch.away_mode_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Deviceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EasyControl?", "Helper text": "Select your Easy Control. If you have more than one Easy Control connected the serial numbers will be listed here.", "Slug": "deviceId", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "EasycontrolBosch.awayModeOn.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event text\nThis is the event text created for you.", "description": "This is the event text created for you.", "details": {"Slug": "event_text", "Filter code": "EasycontrolBosch.awayModeOn.EventText", "Type": "String", "Example": "Away mode"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the EasyControl of Bosch device with ID \"1234567890\" enters away mode, as indicated by the \"Away mode\" event text, switch off all Philips Hue lights in the living room."}
{"original_description": "Use the coming home detection of EasyControl of Bosch to switch on your Hue lights.", "trigger_channel": "EasyControl of Bosch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "easycontrol_bosch.home_mode_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Deviceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EasyControl?", "Helper text": "Select your Easy Control. If you have more than one Easy Control connected the serial numbers will be listed here.", "Slug": "deviceId", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "EasycontrolBosch.homeModeOn.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event text\nThis is the event text created for you.", "description": "This is the event text created for you.", "details": {"Slug": "event_text", "Filter code": "EasycontrolBosch.homeModeOn.EventText", "Type": "String", "Example": "Home mode"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the EasyControl device with ID \"1234567890\" enters home mode, as detected by the \"EasyControl of Bosch\" system at a time like \"2023-03-15T18:00:00+01:00\", switch on all Philips Hue lights in the living room."}
{"original_description": "Turn on/off 1-channel switch/plug when the temperature reaches a preset value. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.light_switch_action", "Filter code method": "Ewelink.lightSwitchAction.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.light_switch_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Light switch action device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "light_switch_action_device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "true", "Filter code method": "Ewelink.lightSwitchAction.setOnoff Act Query(string: onoff_act_query)"}}], "filter_code": "", "intent": "Turn off the Living Room Lamp when the temperature in New York drops below 50°F."}
{"original_description": "Switches on the TP-Link Kasa device you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_on", "Filter code method": "Kasa.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn on", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Living Room Lamp TP-Link Kasa device when an Apilio event named \"run_only_at_nighttime\" is triggered with a custom value 1 of \"Green\" and the event was created between 19:00 and 23:00."}
{"original_description": "Switches off the TP-Link Kasa device you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_off", "Filter code method": "Kasa.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn off", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn off the Living Room Lamp TP-Link Kasa device when an Apilio event named \"run_only_at_nighttime\" is triggered with a custom value 1 of \"Green\" and the event was created between 19:00 and 23:00."}
{"original_description": "Tap a button on your mobile device to turn on a Hubitat light, switch, etc.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_on", "Filter code method": "Hubitat.actionOn.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the button widget is pressed at a location with latitude 37.8267 and longitude -122.4230, occurring at 04:17:06 on July 8, 2020, turn on the Hubitat device named \"Living Room Light\"."}
{"original_description": "Turns on or off the eWeLink 1-Channel Switch of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.light_switch_action", "Filter code method": "Ewelink.lightSwitchAction.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.light_switch_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Light switch action device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "light_switch_action_device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "true", "Filter code method": "Ewelink.lightSwitchAction.setOnoff Act Query(string: onoff_act_query)"}}], "filter_code": "", "intent": "Turn on the Living Room Lamp, which is controlled by the eWeLink 1-Channel Switch, when Apilio triggers the \"good_morning\" event between 07:00 and 08:00, and set the lamp to turn off automatically after 30 minutes if the event's custom value 1 is \"Daytime\"."}
{"original_description": "Turns on or off (you choose) the eWeLink 2-Channel Switch of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.switches4_action", "Filter code method": "Ewelink.switches4Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.switches4_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Switches4 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 4-Channel Switch?", "Slug": "switches4_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Switches4 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "switches4_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Apilio event named \"run_only_at_nighttime\" is triggered between 20:00 and 06:00, and the custom value 1 from Apilio is \"Green\", turn on channel 1 of the eWeLink 2-Channel Switch named \"Living Room Lights\"."}
{"original_description": "Switches off the MagicHue light you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.poweroff", "Filter code method": "Magichue.poweroff.skip(string?: reason)", "Runtime method": "runAction(\"magichue.poweroff\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Apilio event \"run_only_at_nighttime\" is triggered between 20:00 and 06:00 with a custom value of \"Green\" for Apilio value1, turn off the MagicHue light named \"Living Room Lamp\"."}
{"original_description": "Switches on the MagicHue light you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.poweron", "Filter code method": "Magichue.poweron.skip(string?: reason)", "Runtime method": "runAction(\"magichue.poweron\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness level", "Slug": "brightness", "Required": "false", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Apilio event named \"run_only_at_nighttime\" is triggered between 20:00 and 06:00, and the custom value 1 received from Apilio is \"Green\", switch on the MagicHue light in the living room with a brightness level of 75% and set the color to Blue."}
{"original_description": "Turns on a Hubitat switch, light, etc. when Flic is clicked, double clicked, or held.", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_on", "Filter code method": "Hubitat.actionOn.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Flic button named \"Office Button\" is double clicked between 07:00 and 19:00, turn on the Hubitat device \"Living Room Light\"."}
{"original_description": "Turns off a Hubitat switch, light, siren, strobe, etc. when Flic is clicked, double clicked, or held.", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_off", "Filter code method": "Hubitat.actionOff.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Flic button named \"MyOfficeButton\" is double clicked between 07:00 and 19:00, turn off the Hubitat device \"LivingRoomLight\"."}
{"original_description": "When your SmartThing device is switched on, turns your AC on in comfort mode.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.switched_on_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Switched on at\nThe date and time the switch was turned on.", "description": "The date and time the switch was turned on.", "details": {"Slug": "SwitchedOnAt", "Filter code": "SmartthingsV2.switchedOnSmartthings.SwitchedOnAt", "Type": "String", "Example": "January 1st, 2023 at 11:11PM"}}, {"section": "Ingredients", "title": "Switch name\nThe name of the switch device.", "description": "The name of the switch device.", "details": {"Slug": "SwitchName", "Filter code": "SmartthingsV2.switchedOnSmartthings.SwitchName", "Type": "String", "Example": "Bedroom switch"}}], "action_channel": "Ambi Climate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ambiclimate.device_mode_comfort", "Filter code method": "Ambiclimate.deviceModeComfort.skip(string?: reason)", "Runtime method": "runAction(\"ambiclimate.device_mode_comfort\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which A/C?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Bedroom switch SmartThing device is switched on at 7:00 PM, turn on the Living Room AC in comfort mode."}
{"original_description": "Adjust bulb brightness.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "WeMo Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_lighting.led_brightness_change", "Filter code method": "WemoLighting.ledBrightnessChange.skip(string?: reason)", "Runtime method": "runAction(\"wemo_lighting.led_brightness_change\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Subtype\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dimmed level?", "Slug": "subType", "Required": "true", "Can have default value": "true", "Filter code method": "WemoLighting.ledBrightnessChange.setSub Type(string: subType)"}}], "filter_code": "", "intent": "When a Triple Knock gesture is detected by the Knocki device KNC1-W-00000088, adjust the brightness of the WeMo lighting device with macaddress 00:11:22:33:44:55 to a dimmed level of 50%, but only if the gesture occurs between 07:00 and 19:00."}
{"original_description": "Turn on your WeMo light when motion is detected or if someone opens a door to a room.  You may select a specific device name or all devices. For all devices, specify '(All)' for the Device Name. You may select a single event, all, all doors and windows, all doors, or all windows. For all event types, the event type name should be '(All)'. Next, select the device name of the WeMo light to turn on. ", "trigger_channel": "Blue by ADT", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "bluebyadt.sensor"}, "trigger_details": [{"section": "Trigger fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device name?", "Helper text": "Device name", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event type?", "Slug": "event_type", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "timestamp", "Filter code": "Bluebyadt.sensor.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThe EventType describes the type of event that occurred.", "description": "The EventType describes the type of event that occurred.", "details": {"Slug": "event_type", "Filter code": "Bluebyadt.sensor.EventType", "Type": "String", "Example": "Open"}}, {"section": "Ingredients", "title": "Formatted message\nThe FormattedMessage provides a user-friendly description of the event", "description": "The FormattedMessage provides a user-friendly description of the event", "details": {"Slug": "formatted_message", "Filter code": "Bluebyadt.sensor.FormattedMessage", "Type": "String", "Example": "Motion detected"}}], "action_channel": "WeMo Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_lighting.led_turnOn", "Filter code method": "WemoLighting.ledTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"wemo_lighting.led_turnOn\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the WeMo light with macaddress 00:11:22:33:44:55 when motion is detected or a door is opened, as reported by the Blue by ADT sensor named 'Living Room Sensor', between 07:00 and 19:00."}
{"original_description": "Turns on or off the eWeLink 3-Channel Switch of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.switches4_action", "Filter code method": "Ewelink.switches4Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.switches4_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Switches4 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 4-Channel Switch?", "Slug": "switches4_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Switches4 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "switches4_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Apilio event named \"run_only_at_nighttime\" is triggered between 20:00 and 06:00, and the custom value 1 from Apilio is \"Green\", turn on channel 1 of the eWeLink 3-Channel Switch named \"Living Room Lights\"."}
{"original_description": "Set Mr.Coffee to brew when you press a pusher on your Kronaby watch.", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "WeMo Coffeemaker", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_coffeemaker.attribute_coffeeMakerBrewMode", "Filter code method": "WemoCoffeemaker.attributeCoffeeMakerBrewMode.skip(string?: reason)", "Runtime method": "runAction(\"wemo_coffeemaker.attribute_coffeeMakerBrewMode\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "Name of WeMo Coffee Maker.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the pusher on your Kronaby watch is pressed with a double press type at any time, and you are within the latitude range of 55.611947 and longitude range of 12.978337, then turn on the WeMo Coffeemaker device named \"KitchenBrew\" to start brewing coffee."}
{"original_description": "Turn off your LIFX lights and WeMo Insight switch by pressing the pusher on your Kronaby watch.", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "WeMo Insight Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_insight_switch.attribute_INSIGHTOFF", "Filter code method": "WemoInsightSwitch.attributeINSIGHTOFF.skip(string?: reason)", "Runtime method": "runAction(\"wemo_insight_switch.attribute_INSIGHTOFF\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Helper text": "Name of your WeMo switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the pusher on your Kronaby watch is double-pressed at latitude 55.611947 and longitude 12.978337, turn off the WeMo Insight switch named \"Living Room Switch\" and also turn off all LIFX lights."}
{"original_description": "This applet activates the temperature control zone when the setpoint exceeds the environement measured temperature", "trigger_channel": "Vimar VIEW", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "view_prod.sensor_temperature"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select your device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Helper text": "notification condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nDropdown list", "description": "Dropdown list", "details": {"Label": "Threshold", "Helper text": "threshold or value to notify", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "ViewProd.sensorTemperature.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour selected device", "description": "Your selected device", "details": {"Slug": "device", "Filter code": "ViewProd.sensorTemperature.Device", "Type": "String", "Example": "device"}}, {"section": "Ingredients", "title": "State\nYour device state", "description": "Your device state", "details": {"Slug": "state", "Filter code": "ViewProd.sensorTemperature.State", "Type": "String", "Example": "state"}}], "action_channel": "Mitsubishi Electric kumo cloud", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kumocloud.turn_on", "Filter code method": "Kumocloud.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"kumocloud.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Serial\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which zone?", "Slug": "serial", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the temperature control zone with serial number 'SN12345' and set to 'Heating' mode when the measured temperature from device 'Living Room Sensor' exceeds 22°C."}
{"original_description": "Turns off a Hubitat switch, light, siren, strobe, etc. when the Scout Alarm is dismissed.", "trigger_channel": "Scout Alarm", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "scoutalarm.mode_dismissed"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "At\nDate and time alarm was dismissed.", "description": "Date and time alarm was dismissed.", "details": {"Slug": "at", "Filter code": "Scoutalarm.modeDismissed.At", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "By\nThe name of the person or thing that dismissed the alarm.", "description": "The name of the person or thing that dismissed the alarm.", "details": {"Slug": "by", "Filter code": "Scoutalarm.modeDismissed.By", "Type": "String", "Example": "Dave via IFTTT"}}, {"section": "Ingredients", "title": "Name\nName of Mode", "description": "Name of Mode", "details": {"Slug": "name", "Filter code": "Scoutalarm.modeDismissed.Name", "Type": "String", "Example": "Away"}}, {"section": "Ingredients", "title": "Event\nState of Mode", "description": "State of Mode", "details": {"Slug": "event", "Filter code": "Scoutalarm.modeDismissed.Event", "Type": "String", "Example": "Dismissed"}}, {"section": "Ingredients", "title": "Formatted text\nText shown in activity feed.", "description": "Text shown in activity feed.", "details": {"Slug": "formatted_text", "Filter code": "Scoutalarm.modeDismissed.FormattedText", "Type": "String", "Example": "Dave via IFTTT dismissed alarm in Away mode"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_off", "Filter code method": "Hubitat.actionOff.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Scout Alarm is dismissed in Away mode by Dave via IFTTT, turn off the Living Room Light device on Hubitat."}
{"original_description": "This Applet will turn on your WeMo lights when motion is detected by the selected camera.", "trigger_channel": "iSpy Agent", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ispy_agent.motion_detected"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which camera?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IspyAgent.motionDetected.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nName of the device that generated the event", "description": "Name of the device that generated the event", "details": {"Slug": "device_name", "Filter code": "IspyAgent.motionDetected.Device", "Type": "String", "Example": "camera 1"}}], "action_channel": "WeMo Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_lighting.group_led_turnOn", "Filter code method": "WemoLighting.groupLedTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"wemo_lighting.group_led_turnOn\", {})"}, "action_details": [{"section": "Action fields", "title": "Groupid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which group?", "Slug": "groupId", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the WeMo lights in the Living Room group when motion is detected by the Front Door camera between 07:00 and 22:00."}
{"original_description": "This Action will start a brew cycle with your coffeemaker.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WeMo Coffeemaker", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_coffeemaker.attribute_coffeeMakerBrewMode", "Filter code method": "WemoCoffeemaker.attributeCoffeeMakerBrewMode.skip(string?: reason)", "Runtime method": "runAction(\"wemo_coffeemaker.attribute_coffeeMakerBrewMode\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "Name of WeMo Coffee Maker.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Start a brew cycle with the WeMo Coffeemaker when a motion detection event is triggered at home between 06:00 and 10:00, as indicated by the text \"Motion Tag: Detected!\" from the MESH app."}
{"original_description": "You can setup visual alert notification for your critical devices health status", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_low"}, "trigger_details": [{"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryLow.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device's battery became low.", "description": "The time the device's battery became low.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryLow.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryLow.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "OSUM SMART", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "osumsmart.switch_on", "Filter code method": "Osumsmart.switchOn.skip(string?: reason)", "Runtime method": "runAction(\"osumsmart.switch_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device list\nDropdown list", "description": "Dropdown list", "details": {"Label": "Devices", "Helper text": "Devices to operate", "Slug": "device_list", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the battery percentage of my Google Pixel 7 device falls below 15% after 20:00, switch on the Living Room Lamp using OSUM SMART to alert me about the critical battery health status."}
{"original_description": "SmartThings sensor detectes presence, then turn on SwitchBot. This Applet requires special hardware, the SmartThings sensor , the SwitchBot and the SwitchBot Hub.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.new_present_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Arrived at\nThe date and time you arrived.", "description": "The date and time you arrived.", "details": {"Slug": "ArrivedAt", "Filter code": "SmartthingsV2.newPresentSmartthings.ArrivedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.newPresentSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.turn_on_bot", "Filter code method": "Switchbot.turnOnBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.turn_on_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the SmartThings sensor named \"Living Room Sensor\" detects presence at 3:00 PM, then turn on the SwitchBot device named \"Office Light Bot\"."}
{"original_description": "Sync the notes you want: when you add the tag \"Dropbox\" to a note (or customize with your own), it'll be created as text file in Dropbox. Oooh. The cloud! ☁️", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.add_tag_to_note"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Specific tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.addTagToNote.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.addTagToNote.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.addTagToNote.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.addTagToNote.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.addTagToNote.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.create_text_file_db", "Filter code method": "Dropbox.createTextFileDb.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.create_text_file_db\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.createTextFileDb.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Content", "Helper text": "Use &lt;br&gt; to add line breaks", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.createTextFileDb.setBody(string: body)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.createTextFileDb.setPath(string: path)"}}], "filter_code": "", "intent": "When a note is tagged with \"Important\" in Evernote, create a text file named \"Urgent_Note_{Title}\" in the \"/Documents/Notes\" folder of Dropbox, containing the note body in HTML format, including line breaks as needed."}
{"original_description": "Create your emails as note cards", "trigger_channel": "Email", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "email.send_ifttt_an_email_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Helper text": "e.g. #hashtag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "From\nEmail address of sender.", "description": "Email address of sender.", "details": {"Slug": "From", "Filter code": "Email.sendIftttAnEmailTagged.From", "Type": "String", "Example": "somebody@gmail.com"}}, {"section": "Ingredients", "title": "Attachment temporary url\nThe URL to the first file attachment, if included, that anyone can visit for 30 days.", "description": "The URL to the first file attachment, if included, that anyone can visit for 30 days.", "details": {"Slug": "AttachmentTemporaryUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentTemporaryUrl", "Type": "File URL", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Body\nEmail body, with most signatures stripped out.", "description": "Email body, with most signatures stripped out.", "details": {"Slug": "Body", "Filter code": "Email.sendIftttAnEmailTagged.Body", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Body html\nEmail body HTML, with most signatures stripped out.", "description": "Email body HTML, with most signatures stripped out.", "details": {"Slug": "BodyHTML", "Filter code": "Email.sendIftttAnEmailTagged.BodyHTML", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Subject\nEmail subject line.", "description": "Email subject line.", "details": {"Slug": "Subject", "Filter code": "Email.sendIftttAnEmailTagged.Subject", "Type": "String", "Example": "Hello there"}}, {"section": "Ingredients", "title": "Attachment url\nThe URL to the first file attachment, if included.", "description": "The URL to the first file attachment, if included.", "details": {"Slug": "AttachmentUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentUrl", "Type": "String", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Received at\nDate and time email was received.", "description": "Date and time email was received.", "details": {"Slug": "ReceivedAt", "Filter code": "Email.sendIftttAnEmailTagged.ReceivedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Zoho Notebook", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "notebook.create_notecard_with_html", "Filter code method": "Notebook.createNotecardWithHtml.skip(string?: reason)", "Runtime method": "runAction(\"notebook.create_notecard_with_html\", {})"}, "action_details": [{"section": "Action fields", "title": "Notebook name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Notebook", "Slug": "notebook_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Note content\nText input > Other", "description": "Text input > Other", "details": {"Label": "HTML Content", "Slug": "note_content", "Required": "true", "Can have default value": "true", "Filter code method": "Notebook.createNotecardWithHtml.setNote Content(string: note_content)"}}, {"section": "Action fields", "title": "Notecard name\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Notecard Name", "Slug": "notecard_name", "Required": "false", "Can have default value": "true", "Filter code method": "Notebook.createNotecardWithHtml.setNotecard Name(string: notecard_name)"}}, {"section": "Action fields", "title": "Tags\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Tags", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Notebook.createNotecardWithHtml.setTags(string: tags)"}}], "filter_code": "", "intent": "Create a new note card in my \"Personal Notes\" Zoho Notebook with the HTML content of the email body, titled with the subject line \"Important Update\", and tagged with \"#email\" whenever I receive an email from \"john.doe@example.com\" with the keyword \"URGENT\" in the email body."}
{"original_description": "This Applet turns your Evernote notes into tasks - you specify the project and section as well as the task title.", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "MeisterTask", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "meistertask.create_a_task", "Filter code method": "Meistertask.createATask.skip(string?: reason)", "Runtime method": "runAction(\"meistertask.create_a_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which section?", "Slug": "section_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Meistertask.createATask.setTask Description(string: task_description)"}}], "filter_code": "", "intent": "Create a new task in the \"Inbox\" section of MeisterTask whenever a note titled \"Today's Tasks\" and tagged with \"urgent, todo\" is created in the \"Tasks\" notebook in Evernote, using the note title as the task name and the first 100 characters of the note body HTML as the task description."}
{"original_description": "This applet is for you if you can't watch something if it isn't in your todo list :-) ", "trigger_channel": "put.io", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "putio.transfer_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of transfer?", "Slug": "type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Putio.transferFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Download url\nFiles can be downloaded from this link.", "description": "Files can be downloaded from this link.", "details": {"Slug": "download_url", "Filter code": "Putio.transferFinished.DownloadUrl", "Type": "File URL", "Example": "https://api.put.io/v2/files/123456/download?oauth_token=XXXXXX"}}, {"section": "Ingredients", "title": "Name\nName of the finished transfer.", "description": "Name of the finished transfer.", "details": {"Slug": "name", "Filter code": "Putio.transferFinished.Name", "Type": "String", "Example": "Big Buck Bunny"}}, {"section": "Ingredients", "title": "View url\nFiles can be viewed from this link.", "description": "Files can be viewed from this link.", "details": {"Slug": "view_url", "Filter code": "Putio.transferFinished.ViewUrl", "Type": "Web URL", "Example": "https://app.put.io/files/123456"}}, {"section": "Ingredients", "title": "File\nID of the transferred file or folder.", "description": "ID of the transferred file or folder.", "details": {"Slug": "file_id", "Filter code": "Putio.transferFinished.FileId", "Type": "String", "Example": "123456"}}, {"section": "Ingredients", "title": "Source\nSource of the transfer.", "description": "Source of the transfer.", "details": {"Slug": "source", "Filter code": "Putio.transferFinished.Source", "Type": "String", "Example": "http://example.com/README.txt"}}], "action_channel": "Todoist", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "todoist.create_task", "Filter code method": "Todoist.createTask.skip(string?: reason)", "Runtime method": "runAction(\"todoist.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project and section", "Helper text": "Project and section to which the task belongs", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task content\nText input", "description": "Text input", "details": {"Label": "Task content", "Helper text": "<a href=\"https://todoist.com/help/articles/205195102\" target=\"_blank\">Text formatting guide</a> and <a href=\"https://todoist.com/help/articles/360000029000\" target=\"_blank\">label format guide</a>", "Slug": "task_content", "Required": "true", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Content(string: task_content)"}}, {"section": "Action fields", "title": "Note\nText input > Other", "description": "Text input > Other", "details": {"Label": "Note", "Helper text": "Add additional task note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Due date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task's due date", "Helper text": "Check the <a href=\"https://todoist.com/help/articles/205325931\" target=\"_blank\">Due dates and times format guide</a>", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setDue Date(string: due_date)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Helper text": "Task's priority", "Slug": "priority", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setPriority(string: priority)"}}, {"section": "Action fields", "title": "Task description\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task description", "Helper text": "Task's description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Description(string: task_description)"}}], "filter_code": "", "intent": "When a new transfer is finished on put.io with the type 'Video' and the name contains 'Movie', create a new task in Todoist with the project set to 'Watchlist', task content as 'Watch {{name}}', note as 'Download from: {{download_url}}', due date as 'today', and priority as 'High'."}
{"original_description": "Organize the things you need to complete by adding tasks to Asana every time your JotForm form gets a new entry", "trigger_channel": "Jotform", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "jotform.latest_form_submission"}, "trigger_details": [{"section": "Trigger fields", "title": "Form\nDropdown list", "description": "Dropdown list", "details": {"Label": "Form", "Helper text": "Choose a form", "Slug": "form_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Question filter\nText input > Other", "description": "Text input > Other", "details": {"Label": "Question Filter", "Helper text": "Optional question filter (label text) e.g. Name, Email, Address", "Slug": "question_filter", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Ip\nThe form respondent's detected IP address.", "description": "The form respondent's detected IP address.", "details": {"Slug": "ip", "Filter code": "Jotform.latestFormSubmission.IP", "Type": "String", "Example": "192.168.0.100"}}, {"section": "Ingredients", "title": "Form title\nThe form title.", "description": "The form title.", "details": {"Slug": "form_title", "Filter code": "Jotform.latestFormSubmission.FormTitle", "Type": "String", "Example": "My Contact Form"}}, {"section": "Ingredients", "title": "Submission date time\nThe date and time of the form submission.", "description": "The date and time of the form submission.", "details": {"Slug": "submission_date_time", "Filter code": "Jotform.latestFormSubmission.SubmissionDateTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Total submissions\nThe total submission count.", "description": "The total submission count.", "details": {"Slug": "total_submissions", "Filter code": "Jotform.latestFormSubmission.TotalSubmissions", "Type": "String", "Example": "8"}}, {"section": "Ingredients", "title": "Form\nA number that uniquely identifies the form.", "description": "A number that uniquely identifies the form.", "details": {"Slug": "form_id", "Filter code": "Jotform.latestFormSubmission.FormID", "Type": "String", "Example": "1234567890"}}, {"section": "Ingredients", "title": "Submission\nA number that uniquely identifies the form submission.", "description": "A number that uniquely identifies the form submission.", "details": {"Slug": "submission_id", "Filter code": "Jotform.latestFormSubmission.SubmissionID", "Type": "String", "Example": "850507727987654321"}}, {"section": "Ingredients", "title": "Rich text data\nThe form data in a tabulated HTML format.", "description": "The form data in a tabulated HTML format.", "details": {"Slug": "rich_text_data", "Filter code": "Jotform.latestFormSubmission.RichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Spreadsheet data\nThe form data in a CSV format.", "description": "The form data in a CSV format.", "details": {"Slug": "spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.SpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "Filtered rich text data\nThe filtered form data in a tabulated HTML format.", "description": "The filtered form data in a tabulated HTML format.", "details": {"Slug": "filtered_rich_text_data", "Filter code": "Jotform.latestFormSubmission.FilteredRichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Filtered spreadsheet data\nThe filtered form data in a CSV format.", "description": "The filtered form data in a CSV format.", "details": {"Slug": "filtered_spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.FilteredSpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "File url\nThe URL of the file(s) uploaded on your form.", "description": "The URL of the file(s) uploaded on your form.", "details": {"Slug": "file_url", "Filter code": "Jotform.latestFormSubmission.FileUrl", "Type": "String", "Example": "http://www.jotform.com/uploads/user/1234567890/9876543210/images.zip"}}], "action_channel": "Asana", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "asana.create_task", "Filter code method": "Asana.createTask.skip(string?: reason)", "Runtime method": "runAction(\"asana.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Which workspace\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which workspace?", "Slug": "which_workspace", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Project name\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "In which project?", "Helper text": "Enter project name exactly as it appears in Asana.", "Slug": "project_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true", "Filter code method": "Asana.createTask.setTask Name(string: task_name)"}}, {"section": "Action fields", "title": "Notes\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Notes", "Helper text": "Optional", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "Asana.createTask.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Due on\nText input > Other", "description": "Text input > Other", "details": {"Label": "Due on", "Helper text": "Optional. Use a date Ingredient or enter as YYYY-MM-DD", "Slug": "due_on", "Required": "false", "Can have default value": "true", "Filter code method": "Asana.createTask.setDue On(string: due_on)"}}, {"section": "Action fields", "title": "Assignee\nDropdown list", "description": "Dropdown list", "details": {"Label": "Assignee", "Helper text": "Optional", "Slug": "assignee", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Tag name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Add a tag?", "Helper text": "Optional", "Slug": "tag_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Attach a file\nText input > File", "description": "Text input > File", "details": {"Label": "Attach a file?", "Slug": "attach_a_file", "Required": "false", "Can have default value": "true", "Filter code method": "Asana.createTask.setAttach A File(string: attach_a_file)"}}], "filter_code": "", "intent": "Create a new task in Asana's \"My Projects\" workspace, with the project name set to \"New Submissions\", and the task name set to \"Process JotForm Submission {{form_title}} from {{ip}}\". Add notes to the task including the submission date time \"{{submission_date_time}}\" and rich text data \"{{rich_text_data}}\". Set the due date to tomorrow and assign the task to \"John Doe\". Also, attach the uploaded file from the form submission available at \"{{file_url}}\"."}
{"original_description": "Copy the notes you create in Evernote as note cards in Notebook", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Zoho Notebook", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "notebook.create_notecard_with_html", "Filter code method": "Notebook.createNotecardWithHtml.skip(string?: reason)", "Runtime method": "runAction(\"notebook.create_notecard_with_html\", {})"}, "action_details": [{"section": "Action fields", "title": "Notebook name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Notebook", "Slug": "notebook_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Note content\nText input > Other", "description": "Text input > Other", "details": {"Label": "HTML Content", "Slug": "note_content", "Required": "true", "Can have default value": "true", "Filter code method": "Notebook.createNotecardWithHtml.setNote Content(string: note_content)"}}, {"section": "Action fields", "title": "Notecard name\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Notecard Name", "Slug": "notecard_name", "Required": "false", "Can have default value": "true", "Filter code method": "Notebook.createNotecardWithHtml.setNotecard Name(string: notecard_name)"}}, {"section": "Action fields", "title": "Tags\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Tags", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Notebook.createNotecardWithHtml.setTags(string: tags)"}}], "filter_code": "", "intent": "When a new note is created in the Evernote notebook named \"Personal Notes\" with a title containing the word \"meeting\" and including the tags \"work, office\", copy its HTML content and create a new notecard in the Zoho Notebook named \"Work Notes\" with the notecard name set to the original note's title and add the tags \"important, followup\"."}
{"original_description": "When water/soil-moisture sensor shows too dry, start watering on Rachio", "trigger_channel": "Wireless Tag", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wirelesstag.too_dry"}, "trigger_details": [{"section": "Trigger fields", "title": "Uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tag", "Slug": "uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Math\nText input > Other", "description": "Text input > Other", "details": {"Label": "Math expression", "Helper text": "Optional math expression to calculate the ingredient &quot;answer&quot;, for example, &quot;RH-50&quot; to calculate current humidity (%) minus 50.", "Slug": "math", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Humidity percentage\nHumidity (in %) at the time of the event.", "description": "Humidity (in %) at the time of the event.", "details": {"Slug": "RH", "Filter code": "Wirelesstag.tooDry.HumidityPercentage", "Type": "String", "Example": "10.1"}}, {"section": "Ingredients", "title": "Tag name\nName of the tag.", "description": "Name of the tag.", "details": {"Slug": "name", "Filter code": "Wirelesstag.tooDry.TagName", "Type": "String", "Example": "Cellar"}}, {"section": "Ingredients", "title": "Occurred at\nDate and time of the event.", "description": "Date and time of the event.", "details": {"Slug": "happened", "Filter code": "Wirelesstag.tooDry.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Comment\nComment field of the tag.", "description": "Comment field of the tag.", "details": {"Slug": "comment", "Filter code": "Wirelesstag.tooDry.Comment", "Type": "String", "Example": "that tulip"}}, {"section": "Ingredients", "title": "Answer\nCalculation result of the \"Math expression\".", "description": "Calculation result of the \"Math expression\".", "details": {"Slug": "answer", "Filter code": "Wirelesstag.tooDry.Answer", "Type": "String", "Example": "10"}}, {"section": "Ingredients", "title": "Tag image url\nURL to the picture you took to identify the tag.", "description": "URL to the picture you took to identify the tag.", "details": {"Slug": "image_url", "Filter code": "Wirelesstag.tooDry.TagImageURL", "Type": "Image URL", "Example": "http://mytaglist.com/eth/tags/c5bf3859-eb13-4482-8eb4-d87bd769bd89.jpg"}}], "action_channel": "Rachio Irrigation Controller", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rachio_iro.start_zone", "Filter code method": "RachioIro.startZone.skip(string?: reason)", "Runtime method": "runAction(\"rachio_iro.start_zone\", {})"}, "action_details": [{"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which zone?", "Slug": "zone_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "How many minutes to water?", "Slug": "duration", "Required": "true", "Can have default value": "true", "Filter code method": "RachioIro.startZone.setDuration(string: duration)"}}], "filter_code": "", "intent": "When the Wireless Tag sensor for the \"Cellar\" tag detects a humidity level of 10.1% or lower, and the math expression \"RH-50\" evaluates to -40 or less, indicating the soil is too dry, start watering zone 3 on the Rachio Irrigation Controller for 10 minutes."}
{"original_description": "Turns on or off the eWeLink 1-Channel Plug of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.plug_action", "Filter code method": "Ewelink.plugAction.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.plug_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Plug query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 1-Channel Plug?", "Slug": "plug_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Apilio event named \"run_only_at_nighttime\" is triggered between 20:00 and 06:00, and the custom value 1 received from Apilio is \"Green\", then turn on the eWeLink 1-Channel Plug named \"Living Room Lamp\"."}
{"original_description": "Turns on or off the eWeLink 2-Channel Plug of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.plugs3_action", "Filter code method": "Ewelink.plugs3Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.plugs3_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Plugs3 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 3-Channel Plug?", "Slug": "plugs3_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Plugs3 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "plugs3_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Apilio event named \"run_only_at_nighttime\" is triggered between 20:00 and 06:00, and the custom value 1 from Apilio is \"Green\", then turn on channel 1 of the eWeLink 2-Channel Plug named \"Living Room Lamp\"."}
{"original_description": "Turns on or off the eWeLink 3-Channel Plug of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.plugs3_action", "Filter code method": "Ewelink.plugs3Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.plugs3_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Plugs3 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 3-Channel Plug?", "Slug": "plugs3_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Plugs3 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "plugs3_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Apilio event named \"run_only_at_nighttime\" is triggered between 20:00 and 06:00, and the custom value 1 from Apilio is \"Green\", turn on channel 1 of the eWeLink 3-Channel Plug named \"Living Room Lights\"."}
{"original_description": "Turns on or off the eWeLink 4-Channel Plug of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.plugs3_action", "Filter code method": "Ewelink.plugs3Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.plugs3_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Plugs3 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 3-Channel Plug?", "Slug": "plugs3_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Plugs3 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "plugs3_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Apilio event named \"run_only_at_nighttime\" is triggered at 20:00 and has a custom value of \"Green\", turn on channel 1 of the eWeLink 4-Channel Plug named \"Living Room Devices\"."}
{"original_description": "If the Honeywell thermostat is set to cool, this applet changes the temperature to 72 F (configurable) to have the air conditioning running again.", "trigger_channel": "OhmConnect", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ohmconnect.ohm_hour_end"}, "trigger_details": [{"section": "Ingredients", "title": "Ohm hour start\nDate and time #OhmHour will start.", "description": "Date and time #OhmHour will start.", "details": {"Slug": "ohm_hour_start", "Filter code": "Ohmconnect.ohmHourEnd.OhmHourStart", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ohm hour end\nDate and time #OhmHour will end.", "description": "Date and time #OhmHour will end.", "details": {"Slug": "ohm_hour_end", "Filter code": "Ohmconnect.ohmHourEnd.OhmHourEnd", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Honeywell Total Connect Comfort", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "honeywell_total_connect_comfort.setsystemtemperature", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.skip(string?: reason)", "Runtime method": "runAction(\"honeywell_total_connect_comfort.setsystemtemperature\", {})"}, "action_details": [{"section": "Action fields", "title": "System\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Slug": "system", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Heat or cool temperature", "Helper text": "For heat make sure your system is in heat or auto mode, for cool make sure it’s in cool or auto mode", "Slug": "temperature_type", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Target temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "Target temperature", "Helper text": "Temperature in degrees e.g. 71", "Slug": "target_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setTarget Temperature(string: target_temperature)"}}, {"section": "Action fields", "title": "Temperature scale\nDropdown list", "description": "Dropdown list", "details": {"Label": "Temperature in", "Slug": "temperature_scale", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setTemperature Scale(string: temperature_scale)"}}, {"section": "Action fields", "title": "Hours\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hours", "Helper text": "In whole numbers e.g. 3", "Slug": "hours", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setHours(string: hours)"}}], "filter_code": "", "intent": "When the Ohm hour starts at 04:17 on July 8th, and the Honeywell thermostat is set to cool, change the target temperature to 72 degrees Fahrenheit with a temperature scale of Fahrenheit for 3 hours."}
{"original_description": "When your Withings Sleep detects you getting out of bed, turn on your Home Connect Coffee Machine", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_on", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When Tom's Withings Sleep detects him getting out of bed between 06:00 and 09:00, turn on his Home Connect Coffee Machine."}
{"original_description": "Press a button to turn off your Home Connect coffee machine", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_off", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOff.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the button widget is pressed at a location with latitude 37.8267 and longitude -122.4230, turn off the Home Connect coffee machine named \"MyMorningBrew\" at the occurred time."}
{"original_description": "Start your favorite coffee program with your preferred settings using the Button widget. \n", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_start_program", "Filter code method": "HcCoffeeMachine.coffeeMakerStartProgram.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_start_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Helper text": "Please note that your coffee machine has to be connected and turned on (but not active) to be listed.", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Program\nDropdown list", "description": "Dropdown list", "details": {"Label": "Program", "Slug": "program", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Bean amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Strength", "Helper text": "Please note that not every value is supported by each program. For more information please check your user manual.", "Slug": "bean_amount", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fill quantity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Size", "Slug": "fill_quantity", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Button widget is pressed at a location with latitude 37.82666360000001 and longitude -122.42301220000003, start the \"Espresso\" program on the coffee machine located in the kitchen with a bean amount set to \"Strong\" and a fill quantity of \"Double Shot\"."}
{"original_description": "Wake up every morning to clean dishes. Just define a time when your dishwasher shall start every evening. Please make sure that remote start is activated and the door is closed.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Home Connect Dishwasher", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_start_program", "Filter code method": "HcDishwasher.dishwasherStartProgram.skip(string?: reason)", "Runtime method": "runAction(\"hc_dishwasher.dishwasher_start_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Helper text": "Please note that your dishwasher has to be connected (but not running) to be listed.", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Program\nDropdown list", "description": "Dropdown list", "details": {"Label": "Program", "Slug": "program", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Start the Home Connect Dishwasher, which is identified as \"Kitchen Dishwasher\", with the \"Eco\" program every evening at 20:00, but only if remote start is activated and the door is closed."}
{"original_description": "Cette applet permet de régler automatiquement la température de vos radiateurs connectés Sauter à des heures et des jours prédéfinis.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "SAUTER Cozytouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "SAUTER_Cozytouch.launch_action_group", "Filter code method": "SAUTERCozytouch.launchActionGroup.skip(string?: reason)", "Runtime method": "runAction(\"SAUTER_Cozytouch.launch_action_group\", {})"}, "action_details": [{"section": "Action fields", "title": "Action group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scenario", "Slug": "action_group", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Set the temperature of your connected Sauter radiators to 22°C every weekday at 07:00 and 19:00, using the \"Good Morning\" scenario on Mondays, Wednesdays, and Fridays, and the \"Good Evening\" scenario on Tuesdays and Thursdays."}
{"original_description": "Press the Button widget to activate the Super Cooling mode of the refrigerator.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Fridge Freezer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_fridge.freezer_activate_super_cooling", "Filter code method": "HcFridge.freezerActivateSuperCooling.skip(string?: reason)", "Runtime method": "runAction(\"hc_fridge.freezer_activate_super_cooling\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which fridge?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Button widget is pressed at a location with latitude 37.8267 and longitude -122.4230, activate the Super Cooling mode of the Home Connect Fridge Freezer with ID MyKitchenFridge."}
{"original_description": "Press your Flic button to turn on your coffee machine with Home Connect.", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_on", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Flic button named \"MorningStart\" is double-clicked between 06:00 and 09:00, turn on the Home Connect coffee machine named \"KitchenCoffee\"."}
{"original_description": "Press the Button widget to activate the Super Freezing mode of the freezer.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Fridge Freezer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_fridge.freezer_activate_super_cooling", "Filter code method": "HcFridge.freezerActivateSuperCooling.skip(string?: reason)", "Runtime method": "runAction(\"hc_fridge.freezer_activate_super_cooling\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which fridge?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Button widget is pressed at a location with latitude 37.8267 and longitude -122.4230, and the press occurs between 07:00 and 22:00, activate the Super Freezing mode of the Home Connect Fridge Freezer, specifically the fridge with ID \"KitchenFridge\", without providing any reason."}
{"original_description": "You can set dimming level if connected to bluetooth devices", "trigger_channel": "Android Device", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_device.bluetooth_connected"}, "trigger_details": [{"section": "Ingredients", "title": "Device name\nThe name of the Bluetooth device.", "description": "The name of the Bluetooth device.", "details": {"Slug": "DeviceName", "Filter code": "AndroidDevice.bluetoothConnected.DeviceName", "Type": "String", "Example": "Jawbone JAMBOX"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the Bluetooth device connected.", "description": "The time the Bluetooth device connected.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidDevice.bluetoothConnected.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "OSUM SMART", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "osumsmart.set_level", "Filter code method": "Osumsmart.setLevel.skip(string?: reason)", "Runtime method": "runAction(\"osumsmart.set_level\", {})"}, "action_details": [{"section": "Action fields", "title": "Device list\nDropdown list", "description": "Dropdown list", "details": {"Label": "Devices", "Helper text": "Device to operate", "Slug": "device_list", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Levels\nDropdown list", "description": "Dropdown list", "details": {"Label": "Levels", "Helper text": "Level to set", "Slug": "levels", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When my Jawbone JAMBOX Bluetooth device connects at 07:00, set the dimming level of my OSUM SMART device named \"Living Room Lamp\" to 50%."}
{"original_description": "Press your Flic Button to make your favorite coffee with your Home Connect coffee machine", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_start_program", "Filter code method": "HcCoffeeMachine.coffeeMakerStartProgram.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_start_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Helper text": "Please note that your coffee machine has to be connected and turned on (but not active) to be listed.", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Program\nDropdown list", "description": "Dropdown list", "details": {"Label": "Program", "Slug": "program", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Bean amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Strength", "Helper text": "Please note that not every value is supported by each program. For more information please check your user manual.", "Slug": "bean_amount", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fill quantity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Size", "Slug": "fill_quantity", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Flic button named \"MorningStart\" is double-clicked at a location with longitude 18.0649000 and latitude 59.3325800, start the \"Espresso\" program on the Home Connect coffee machine located in the kitchen with a bean amount set to \"Strong\" and a fill quantity of \"Large\", but only if the click occurs between 07:00 and 10:00."}
{"original_description": "Grâce à cette Applet pour Android, il vous suffit d'envoyer un SMS contenant un ou plusieurs mots-clés, pour changer la température de vos radiateurs connectés Sauter.", "trigger_channel": "Android SMS", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_messages.sent_a_message_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or simple phrase", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Contact name\nThe contact name associated with the message.", "description": "The contact name associated with the message.", "details": {"Slug": "ContactName", "Filter code": "AndroidMessages.sentAMessageMatchingSearch.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Text\nThe text of the message", "description": "The text of the message", "details": {"Slug": "Text", "Filter code": "AndroidMessages.sentAMessageMatchingSearch.Text", "Type": "String", "Example": "Hey there! How's it going?"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the message was received.", "description": "The time the message was received.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidMessages.sentAMessageMatchingSearch.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "To number\nThe number to which the message was sent", "description": "The number to which the message was sent", "details": {"Slug": "ToNumber", "Filter code": "AndroidMessages.sentAMessageMatchingSearch.ToNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidMessages.sentAMessageMatchingSearch.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "SAUTER Cozytouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "SAUTER_Cozytouch.launch_action_group", "Filter code method": "SAUTERCozytouch.launchActionGroup.skip(string?: reason)", "Runtime method": "runAction(\"SAUTER_Cozytouch.launch_action_group\", {})"}, "action_details": [{"section": "Action fields", "title": "Action group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scenario", "Slug": "action_group", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When I send an SMS from my Google Pixel 7 to the number 14155551234 with the text \"HeatUp\" between 07:00 and 19:00, change the temperature of my living room radiator connected to Sauter Cozytouch to 22°C using the \"Comfort\" scenario."}
{"original_description": "Adjust your Honeywell thermostat to pre-cool your home ahead of summer on-peak hours. Remember to create another Applet to set your thermostat a few degrees higher when on-peak hours start to help save on cooling costs!", "trigger_channel": "Fort Collins Utilities Time of Day Pricing", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fcu_tod.after_time_of_day_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Hours after\nDropdown list", "description": "Dropdown list", "details": {"Label": "How many hours after peak rates start should this be triggered?", "Slug": "hours_after", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Season\nDropdown list", "description": "Dropdown list", "details": {"Label": "During which season?", "Slug": "season", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Day type\nThe type of day for this event.", "description": "The type of day for this event.", "details": {"Slug": "day_type", "Filter code": "FcuTod.afterTimeOfDayStarts.DayType", "Type": "String", "Example": "Weekday"}}, {"section": "Ingredients", "title": "Season\nThe current season.", "description": "The current season.", "details": {"Slug": "season", "Filter code": "FcuTod.afterTimeOfDayStarts.Season", "Type": "String", "Example": "Summer"}}, {"section": "Ingredients", "title": "Event type\nWhether this is a \"start\" or \"end\" time-of-day event.", "description": "Whether this is a \"start\" or \"end\" time-of-day event.", "details": {"Slug": "event_type", "Filter code": "FcuTod.afterTimeOfDayStarts.EventType", "Type": "String", "Example": "start"}}, {"section": "Ingredients", "title": "Datetime\nWhen the time-of-date change occurred.", "description": "When the time-of-date change occurred.", "details": {"Slug": "datetime", "Filter code": "FcuTod.afterTimeOfDayStarts.Datetime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Hours after\nHow many hours after the event this will be triggered.", "description": "How many hours after the event this will be triggered.", "details": {"Slug": "hours_after", "Filter code": "FcuTod.afterTimeOfDayStarts.HoursAfter", "Type": "String", "Example": "1"}}], "action_channel": "Honeywell Total Connect Comfort", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "honeywell_total_connect_comfort.setsystemtemperature", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.skip(string?: reason)", "Runtime method": "runAction(\"honeywell_total_connect_comfort.setsystemtemperature\", {})"}, "action_details": [{"section": "Action fields", "title": "System\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Slug": "system", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Heat or cool temperature", "Helper text": "For heat make sure your system is in heat or auto mode, for cool make sure it’s in cool or auto mode", "Slug": "temperature_type", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Target temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "Target temperature", "Helper text": "Temperature in degrees e.g. 71", "Slug": "target_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setTarget Temperature(string: target_temperature)"}}, {"section": "Action fields", "title": "Temperature scale\nDropdown list", "description": "Dropdown list", "details": {"Label": "Temperature in", "Slug": "temperature_scale", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setTemperature Scale(string: temperature_scale)"}}, {"section": "Action fields", "title": "Hours\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hours", "Helper text": "In whole numbers e.g. 3", "Slug": "hours", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setHours(string: hours)"}}], "filter_code": "", "intent": "Adjust the Honeywell thermostat to 68 degrees Fahrenheit 2 hours before summer on-peak hours start on weekdays, and set it to cool mode to pre-cool your home."}
{"original_description": "Cette applet permet de régler automatiquement la température de vos radiateurs connectés Thermor à des heures et des jours prédéfinis.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "THERMOR Cozytouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "THERMOR_Cozytouch.launch_action_group", "Filter code method": "THERMORCozytouch.launchActionGroup.skip(string?: reason)", "Runtime method": "runAction(\"THERMOR_Cozytouch.launch_action_group\", {})"}, "action_details": [{"section": "Action fields", "title": "Action group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scenario", "Slug": "action_group", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Set the temperature of your Thermor connected radiators to 20°C every weekday at 07:00 and 19:00, using the \"Morning\" and \"Evening\" scenarios."}
{"original_description": "Grâce à cette applet, réglez la température de vos radiateurs connectés Sauter selon votre Agenda Google (début d'un événement).", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.any_event_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Helper text": "Select a calendar", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Offset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time before event starts", "Helper text": "Specify how much time before the event starts you'd like the Applet to trigger", "Slug": "offset", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.anyEventStarts.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.anyEventStarts.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.anyEventStarts.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.anyEventStarts.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.anyEventStarts.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.anyEventStarts.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.anyEventStarts.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.anyEventStarts.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "SAUTER Cozytouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "SAUTER_Cozytouch.launch_action_group", "Filter code method": "SAUTERCozytouch.launchActionGroup.skip(string?: reason)", "Runtime method": "runAction(\"SAUTER_Cozytouch.launch_action_group\", {})"}, "action_details": [{"section": "Action fields", "title": "Action group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scenario", "Slug": "action_group", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When an event titled \"Practice Presentation\" starts in my Google Calendar, and the event is taking place at \"Building A, Room 101\", adjust the temperature of my Sauter connected radiators to 22°C by launching the \"Good Morning\" action group on my SAUTER Cozytouch, 15 minutes before the event begins."}
{"original_description": "Play music on your Android device when your Cookit started with preparing the recipe.", "trigger_channel": "Home Connect Cookit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_cook_processor.cook_processor_started"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Cookit?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcCookProcessor.cookProcessorStarted.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.play_best_song", "Filter code method": "AndroidDevice.playBestSong.skip(string?: reason)", "Runtime method": "runAction(\"android_device.play_best_song\", {})"}, "action_details": [], "filter_code": "", "intent": "Play the song \"Happy\" by Pharrell Williams on your Android device connected via Bluetooth when your Home Connect Cookit, located in the kitchen, starts preparing a recipe between 17:00 and 20:00."}
{"original_description": "This applet alerts you if the state of your instrument has changed. Your Nanoleaf automatically changes the color if for example a user interaction is required during a run.", "trigger_channel": "Tecan Connect", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tecan_connect.instrument_state"}, "trigger_details": [{"section": "Trigger fields", "title": "Instrument\nDropdown list", "description": "Dropdown list", "details": {"Label": "Instrument", "Helper text": "Choose the Instrument for the selected Trigger", "Slug": "instrument", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "State\nDropdown list", "description": "Dropdown list", "details": {"Label": "State", "Helper text": "Choose the state to be monitored", "Slug": "state", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Time of event\nThe time when the state change event happened", "description": "The time when the state change event happened", "details": {"Slug": "time_of_event", "Filter code": "TecanConnect.instrumentState.TimeOfEvent", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Instrument name\nAlias of the instrument whose state was changed", "description": "Alias of the instrument whose state was changed", "details": {"Slug": "instrument_name", "Filter code": "TecanConnect.instrumentState.InstrumentName", "Type": "String", "Example": "My Instrument"}}, {"section": "Ingredients", "title": "User\nYour Name", "description": "Your Name", "details": {"Slug": "user", "Filter code": "TecanConnect.instrumentState.User", "Type": "String", "Example": "IFTTT_Demo_user"}}, {"section": "Ingredients", "title": "Instrument state\nThe state of the instrument", "description": "The state of the instrument", "details": {"Slug": "instrument_state", "Filter code": "TecanConnect.instrumentState.InstrumentState", "Type": "String", "Example": "Running"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.change_color_request", "Filter code method": "Nanoleaf.changeColorRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.change_color_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "Set the color value in hex (00FF00) or by name (Green). The hash (#) is not required for hex value input.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.changeColorRequest.setValue(string: value)"}}], "filter_code": "", "intent": "If the state of My Instrument changes to Running during a run and user interaction is required, then change the color of the Office Nanoleaf device to Red (#FF0000)."}
{"original_description": "Choisissez une application Android de laquelle vous pouvez recevoir des notifications, choisissez un filtre par mot-clés. Dès que vous recevrez une notification correspondant à ces critères, votre action de pilotage de vos radiateurs connectés Sauter sera lancée.", "trigger_channel": "Android Device", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_device.new_notification_from_app"}, "trigger_details": [{"section": "Trigger fields", "title": "App name\nText input", "description": "Text input", "details": {"Label": "App name", "Helper text": "e.g. Twitter", "Slug": "app_name", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by notification keyword", "Helper text": "e.g. mentioned", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Received at\nThe time the notification was received.", "description": "The time the notification was received.", "details": {"Slug": "ReceivedAt", "Filter code": "AndroidDevice.newNotificationFromApp.ReceivedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "App name\nThe application name of the notification", "description": "The application name of the notification", "details": {"Slug": "AppName", "Filter code": "AndroidDevice.newNotificationFromApp.AppName", "Type": "String", "Example": "Twitter"}}, {"section": "Ingredients", "title": "Notification message\nMessage text of the notification", "description": "Message text of the notification", "details": {"Slug": "NotificationMessage", "Filter code": "AndroidDevice.newNotificationFromApp.NotificationMessage", "Type": "String", "Example": "@jamisonross12 oh I love that song by Toto too!"}}, {"section": "Ingredients", "title": "Notification title\nTitle of the notification", "description": "Title of the notification", "details": {"Slug": "NotificationTitle", "Filter code": "AndroidDevice.newNotificationFromApp.NotificationTitle", "Type": "String", "Example": "Mentioned by @MrTibbets"}}, {"section": "Ingredients", "title": "Device name\nThe name of your device where the notification was received.", "description": "The name of your device where the notification was received.", "details": {"Slug": "device_name", "Filter code": "AndroidDevice.newNotificationFromApp.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "SAUTER Cozytouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "SAUTER_Cozytouch.launch_action_group", "Filter code method": "SAUTERCozytouch.launchActionGroup.skip(string?: reason)", "Runtime method": "runAction(\"SAUTER_Cozytouch.launch_action_group\", {})"}, "action_details": [{"section": "Action fields", "title": "Action group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scenario", "Slug": "action_group", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Lorsque vous recevez une notification de l'application Twitter contenant le mot-clé \"urgence\" sur votre téléphone Google Pixel 7, activez le scénario \"Chauffage maximum\" sur vos radiateurs connectés Sauter."}
{"original_description": "Connect your myStrom Button to Apilio! This applet triggers a Logicblock evaluation in Apilio every time you press the button.", "trigger_channel": "myStrom", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mystrom.button"}, "trigger_details": [{"section": "Trigger fields", "title": "Type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which event type?", "Helper text": "Please select what type of press you want to use", "Slug": "type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Mac\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Button?", "Helper text": "Please select your button", "Slug": "mac", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Mystrom.button.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.logicblock_evaluation_requests", "Filter code method": "Apilio.logicblockEvaluationRequests.skip(string?: reason)", "Runtime method": "runAction(\"apilio.logicblock_evaluation_requests\", {})"}, "action_details": [{"section": "Action fields", "title": "Logicblock identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio logicblock do you want to evaluate?", "Slug": "logicblock_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the myStrom Button with MAC address 00:11:22:33:44:55 is pressed in a single click manner, trigger an evaluation of the Apilio logic block identified as \"Morning Routine\" to automate tasks."}
{"original_description": "Whenever the price exceeds my threshold, set my Honeywell thermostat.\n\nPart 1 of 2 applets to automate your thermostat's response when the price changes.", "trigger_channel": "ComEd", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ComEd.average_price_change"}, "trigger_details": [{"section": "Trigger fields", "title": "Which season\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which season do you want this to trigger?", "Slug": "which_season", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Which price threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Which price threshold do you want this to trigger?", "Slug": "which_price_threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Trigger type\nDropdown list", "description": "Dropdown list", "details": {"Label": "When to trigger?", "Helper text": "Whether this should trigger when the price exceeds or goes under the provided price threshold", "Slug": "trigger_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "How often to trigger\nDropdown list", "description": "Dropdown list", "details": {"Label": "How often do you want this to trigger?", "Helper text": "Whether this should trigger every time a new average price is above or below the set price or just the first time it goes above or below the value", "Slug": "how_often_to_trigger", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Timestamp\nDate and time the price change occurred.", "description": "Date and time the price change occurred.", "details": {"Slug": "timestamp", "Filter code": "ComEd.averagePriceChange.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Average price\nThe current average price in cents for the hour.", "description": "The current average price in cents for the hour.", "details": {"Slug": "average_price", "Filter code": "ComEd.averagePriceChange.AveragePrice", "Type": "String", "Example": "14.4"}}, {"section": "Ingredients", "title": "From hour\nThe start hour in which this average is applicable.", "description": "The start hour in which this average is applicable.", "details": {"Slug": "from_hour", "Filter code": "ComEd.averagePriceChange.FromHour", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "To hour\nThe end hour in which this average is applicable.", "description": "The end hour in which this average is applicable.", "details": {"Slug": "to_hour", "Filter code": "ComEd.averagePriceChange.ToHour", "Type": "String", "Example": "4"}}], "action_channel": "Honeywell Total Connect Comfort", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "honeywell_total_connect_comfort.setsystemtemperature", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.skip(string?: reason)", "Runtime method": "runAction(\"honeywell_total_connect_comfort.setsystemtemperature\", {})"}, "action_details": [{"section": "Action fields", "title": "System\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Slug": "system", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Heat or cool temperature", "Helper text": "For heat make sure your system is in heat or auto mode, for cool make sure it’s in cool or auto mode", "Slug": "temperature_type", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Target temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "Target temperature", "Helper text": "Temperature in degrees e.g. 71", "Slug": "target_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setTarget Temperature(string: target_temperature)"}}, {"section": "Action fields", "title": "Temperature scale\nDropdown list", "description": "Dropdown list", "details": {"Label": "Temperature in", "Slug": "temperature_scale", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setTemperature Scale(string: temperature_scale)"}}, {"section": "Action fields", "title": "Hours\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hours", "Helper text": "In whole numbers e.g. 3", "Slug": "hours", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setHours(string: hours)"}}], "filter_code": "", "intent": "When the average price exceeds 15 cents between 07:00 and 19:00 during summer, set the living room Honeywell thermostat to 72°F for 2 hours to cool."}
{"original_description": "This applet will execute two actions on your dishwasher when electricity in the selected Denmark region is cheap. First it will turn the dishwasher on and then start a program.", "trigger_channel": "True Energy Smart Home Denmark", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "True_Energy_DK.electricity_price_cheap"}, "trigger_details": [{"section": "Trigger fields", "title": "Area\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Region", "Helper text": "Region you wish to monitor", "Slug": "area", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Region\nDenmark Region being monitored", "description": "Denmark Region being monitored", "details": {"Slug": "area", "Filter code": "TrueEnergyDK.electricityPriceCheap.Region", "Type": "String", "Example": "West Denmark"}}, {"section": "Ingredients", "title": "Valid from\nTime at which electricity price changes", "description": "Time at which electricity price changes", "details": {"Slug": "valid_from", "Filter code": "TrueEnergyDK.electricityPriceCheap.ValidFrom", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Price\nElectricity price per kWh in DKK", "description": "Electricity price per kWh in DKK", "details": {"Slug": "price", "Filter code": "TrueEnergyDK.electricityPriceCheap.Price", "Type": "String", "Example": "167.17"}}, {"section": "Ingredients", "title": "Co2 emission\nCO2 emission per kWh in grams", "description": "CO2 emission per kWh in grams", "details": {"Slug": "co2_emission", "Filter code": "TrueEnergyDK.electricityPriceCheap.Co2Emission", "Type": "String", "Example": "108.77"}}], "action_channel": "Home Connect Dishwasher", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_turn_on", "Filter code method": "HcDishwasher.dishwasherTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_dishwasher.dishwasher_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the electricity price in West Denmark is cheap, below 170 DKK per kWh and with a CO2 emission of less than 110 grams per kWh, turn on the Home Connect Dishwasher named \"Kitchen Dishwasher\" and then start the \"Eco\" program."}
{"original_description": "This applet alerts you if a run has completed. Your Nanoleaf will automatically blink for 5 minutes.", "trigger_channel": "Tecan Connect", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tecan_connect.run_completion_message"}, "trigger_details": [{"section": "Trigger fields", "title": "Instrument\nDropdown list", "description": "Dropdown list", "details": {"Label": "Instrument", "Helper text": "Choose the Instrument for the selected Trigger", "Slug": "instrument", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Time of event\nThe time when the Run was completed", "description": "The time when the Run was completed", "details": {"Slug": "time_of_event", "Filter code": "TecanConnect.runCompletionMessage.TimeOfEvent", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Instrument name\nAlias of the instrument where the run was completed", "description": "Alias of the instrument where the run was completed", "details": {"Slug": "instrument_name", "Filter code": "TecanConnect.runCompletionMessage.InstrumentName", "Type": "String", "Example": "Run Completed Successfully"}}, {"section": "Ingredients", "title": "User\nYour Name", "description": "Your Name", "details": {"Slug": "user", "Filter code": "TecanConnect.runCompletionMessage.User", "Type": "String", "Example": "IFTTT_Demo_user"}}, {"section": "Ingredients", "title": "Run completion message\nThe run completion message", "description": "The run completion message", "details": {"Slug": "run_completion_message", "Filter code": "TecanConnect.runCompletionMessage.RunCompletionMessage", "Type": "String", "Example": "Run Completed Successfully"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.color_notification_request", "Filter code method": "Nanoleaf.colorNotificationRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.color_notification_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Notification type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Blinking or solid color?", "Slug": "notification_type", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.colorNotificationRequest.setNotification Type(string: notification_type)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "If this field is empty, the action will default to white.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.colorNotificationRequest.setValue(string: value)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "For how many seconds?", "Helper text": "If left empty, 5 seconds will be used as default.", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "Nanoleaf.colorNotificationRequest.setDuration(string: duration)"}}], "filter_code": "", "intent": "When a run is completed on the instrument named \"Run Completed Successfully\" by user \"IFTTT_Demo_user\" with a completion message of \"Run Completed Successfully\" at any time, trigger a Nanoleaf Smarter Series device named \"Office Lights\" to blink with a red color (#FF0000) for 300 seconds."}
{"original_description": "This applet alerts you if a run has completed. Your Philips Hue will automatically blink.", "trigger_channel": "Tecan Connect", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tecan_connect.run_completion_message"}, "trigger_details": [{"section": "Trigger fields", "title": "Instrument\nDropdown list", "description": "Dropdown list", "details": {"Label": "Instrument", "Helper text": "Choose the Instrument for the selected Trigger", "Slug": "instrument", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Time of event\nThe time when the Run was completed", "description": "The time when the Run was completed", "details": {"Slug": "time_of_event", "Filter code": "TecanConnect.runCompletionMessage.TimeOfEvent", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Instrument name\nAlias of the instrument where the run was completed", "description": "Alias of the instrument where the run was completed", "details": {"Slug": "instrument_name", "Filter code": "TecanConnect.runCompletionMessage.InstrumentName", "Type": "String", "Example": "Run Completed Successfully"}}, {"section": "Ingredients", "title": "User\nYour Name", "description": "Your Name", "details": {"Slug": "user", "Filter code": "TecanConnect.runCompletionMessage.User", "Type": "String", "Example": "IFTTT_Demo_user"}}, {"section": "Ingredients", "title": "Run completion message\nThe run completion message", "description": "The run completion message", "details": {"Slug": "run_completion_message", "Filter code": "TecanConnect.runCompletionMessage.RunCompletionMessage", "Type": "String", "Example": "Run Completed Successfully"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When a run is completed on the \"Lab Instrument 1\" at any time, and the run completion message is \"Run Completed Successfully\", then automatically blink all Philips Hue lights in the living room."}
{"original_description": "Press your Fibaro Button to turn on your coffee machine.", "trigger_channel": "FIBARO", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fibaro.button_clicked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "which_device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Parameter 1\nDropdown list", "description": "Dropdown list", "details": {"Label": "Number of clicks", "Slug": "parameter_1", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Fibaro.buttonClicked.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nID of device", "description": "ID of device", "details": {"Slug": "device_id", "Filter code": "Fibaro.buttonClicked.DeviceId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "Hub serial\nHub serial number", "description": "Hub serial number", "details": {"Slug": "hub_serial", "Filter code": "Fibaro.buttonClicked.HubSerial", "Type": "String", "Example": "HC2-000000"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_on", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the Fibaro Button labeled \"Kitchen Button\" is clicked twice between 06:00 and 10:00, turn on the Home Connect Coffee Machine named \"Morning Brew\"."}
{"original_description": "When the price comes back down below my threshold, update my Honeywell thermostat to resume schedule.\n\nPart 2 of 2 applets to automate your thermostat's response when the price changes.", "trigger_channel": "ComEd", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ComEd.average_price_change"}, "trigger_details": [{"section": "Trigger fields", "title": "Which season\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which season do you want this to trigger?", "Slug": "which_season", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Which price threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Which price threshold do you want this to trigger?", "Slug": "which_price_threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Trigger type\nDropdown list", "description": "Dropdown list", "details": {"Label": "When to trigger?", "Helper text": "Whether this should trigger when the price exceeds or goes under the provided price threshold", "Slug": "trigger_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "How often to trigger\nDropdown list", "description": "Dropdown list", "details": {"Label": "How often do you want this to trigger?", "Helper text": "Whether this should trigger every time a new average price is above or below the set price or just the first time it goes above or below the value", "Slug": "how_often_to_trigger", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Timestamp\nDate and time the price change occurred.", "description": "Date and time the price change occurred.", "details": {"Slug": "timestamp", "Filter code": "ComEd.averagePriceChange.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Average price\nThe current average price in cents for the hour.", "description": "The current average price in cents for the hour.", "details": {"Slug": "average_price", "Filter code": "ComEd.averagePriceChange.AveragePrice", "Type": "String", "Example": "14.4"}}, {"section": "Ingredients", "title": "From hour\nThe start hour in which this average is applicable.", "description": "The start hour in which this average is applicable.", "details": {"Slug": "from_hour", "Filter code": "ComEd.averagePriceChange.FromHour", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "To hour\nThe end hour in which this average is applicable.", "description": "The end hour in which this average is applicable.", "details": {"Slug": "to_hour", "Filter code": "ComEd.averagePriceChange.ToHour", "Type": "String", "Example": "4"}}], "action_channel": "Honeywell Total Connect Comfort", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "honeywell_total_connect_comfort.settoschedule", "Filter code method": "HoneywellTotalConnectComfort.settoschedule.skip(string?: reason)", "Runtime method": "runAction(\"honeywell_total_connect_comfort.settoschedule\", {})"}, "action_details": [{"section": "Action fields", "title": "System\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Slug": "system", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the average price drops below 14 cents in the summer season, and this is the first time it goes under the threshold during an hour, update my Honeywell Total Connect Comfort thermostat system to resume its schedule."}
{"original_description": "This applet alerts you if the state of your instrument has changed. Your Philips Hue automatically changes the color if for example a user interaction is required during a run.", "trigger_channel": "Tecan Connect", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tecan_connect.instrument_state"}, "trigger_details": [{"section": "Trigger fields", "title": "Instrument\nDropdown list", "description": "Dropdown list", "details": {"Label": "Instrument", "Helper text": "Choose the Instrument for the selected Trigger", "Slug": "instrument", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "State\nDropdown list", "description": "Dropdown list", "details": {"Label": "State", "Helper text": "Choose the state to be monitored", "Slug": "state", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Time of event\nThe time when the state change event happened", "description": "The time when the state change event happened", "details": {"Slug": "time_of_event", "Filter code": "TecanConnect.instrumentState.TimeOfEvent", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Instrument name\nAlias of the instrument whose state was changed", "description": "Alias of the instrument whose state was changed", "details": {"Slug": "instrument_name", "Filter code": "TecanConnect.instrumentState.InstrumentName", "Type": "String", "Example": "My Instrument"}}, {"section": "Ingredients", "title": "User\nYour Name", "description": "Your Name", "details": {"Slug": "user", "Filter code": "TecanConnect.instrumentState.User", "Type": "String", "Example": "IFTTT_Demo_user"}}, {"section": "Ingredients", "title": "Instrument state\nThe state of the instrument", "description": "The state of the instrument", "details": {"Slug": "instrument_state", "Filter code": "TecanConnect.instrumentState.InstrumentState", "Type": "String", "Example": "Running"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "", "intent": "When the state of \"My Instrument\" changes to \"Running\" and it's between 07:00 and 19:00, change all Philips Hue lights in the living room to the color \"#FF0000\" as an alert."}
{"original_description": "You will receive a text message if a client connects to your router.", "trigger_channel": "D-Link Wi-Fi Router", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dlink_wifi_router.routerClientConnect"}, "trigger_details": [{"section": "Trigger fields", "title": "Client name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which client?", "Slug": "client_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "DlinkWifiRouter.routerClientConnect.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Client name\nThe name of the client connected.", "description": "The name of the client connected.", "details": {"Slug": "client_name", "Filter code": "DlinkWifiRouter.routerClientConnect.ClientName", "Type": "String", "Example": "computer"}}, {"section": "Ingredients", "title": "Device name\nThe device that reported the event.", "description": "The device that reported the event.", "details": {"Slug": "device_name", "Filter code": "DlinkWifiRouter.routerClientConnect.DeviceName", "Type": "String", "Example": "DIR-2660"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": "", "intent": "Send a text message to phone number +1234567890 with the message \"A new client computer has connected to your DIR-2660 router at 07:00\" when a client connects to your D-Link Wi-Fi Router between 07:00 and 19:00."}
{"original_description": "Increase the temperature of your Honeywell thermostat a few degrees during summer on-peak hours to save on cooling costs. This Applet automatically resets the temperature back to your previous setting when on-peak hours end.", "trigger_channel": "Fort Collins Utilities Time of Day Pricing", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fcu_tod.time_of_day"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nDropdown list", "description": "Dropdown list", "details": {"Label": "This event should trigger when peak rates:", "Slug": "event", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Season\nDropdown list", "description": "Dropdown list", "details": {"Label": "During which season?", "Slug": "season", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Day type\nThe type of day for this event.", "description": "The type of day for this event.", "details": {"Slug": "day_type", "Filter code": "FcuTod.timeOfDay.DayType", "Type": "String", "Example": "Weekday"}}, {"section": "Ingredients", "title": "Season\nThe current season.", "description": "The current season.", "details": {"Slug": "season", "Filter code": "FcuTod.timeOfDay.Season", "Type": "String", "Example": "Summer"}}, {"section": "Ingredients", "title": "Event type\nWhether this is a \"start\" or \"end\" time-of-day event.", "description": "Whether this is a \"start\" or \"end\" time-of-day event.", "details": {"Slug": "event_type", "Filter code": "FcuTod.timeOfDay.EventType", "Type": "String", "Example": "start"}}, {"section": "Ingredients", "title": "Datetime\nWhen the time-of-date change occurred.", "description": "When the time-of-date change occurred.", "details": {"Slug": "datetime", "Filter code": "FcuTod.timeOfDay.Datetime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Honeywell Total Connect Comfort", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "honeywell_total_connect_comfort.setsystemtemperature", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.skip(string?: reason)", "Runtime method": "runAction(\"honeywell_total_connect_comfort.setsystemtemperature\", {})"}, "action_details": [{"section": "Action fields", "title": "System\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Slug": "system", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Heat or cool temperature", "Helper text": "For heat make sure your system is in heat or auto mode, for cool make sure it’s in cool or auto mode", "Slug": "temperature_type", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Target temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "Target temperature", "Helper text": "Temperature in degrees e.g. 71", "Slug": "target_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setTarget Temperature(string: target_temperature)"}}, {"section": "Action fields", "title": "Temperature scale\nDropdown list", "description": "Dropdown list", "details": {"Label": "Temperature in", "Slug": "temperature_scale", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setTemperature Scale(string: temperature_scale)"}}, {"section": "Action fields", "title": "Hours\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hours", "Helper text": "In whole numbers e.g. 3", "Slug": "hours", "Required": "true", "Can have default value": "true", "Filter code method": "HoneywellTotalConnectComfort.setsystemtemperature.setHours(string: hours)"}}], "filter_code": "", "intent": "When the Fort Collins Utilities Time of Day Pricing indicates it's summer and on-peak hours start, increase the temperature of your Honeywell Total Connect Comfort system by 3 degrees to 75°F to save on cooling costs, and then reset the temperature back to its previous setting when on-peak hours end."}
{"original_description": "This applet informs you if a custom message was send by your instrument. You will automatically receive a notification with the content of the custom message.", "trigger_channel": "Tecan Connect", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tecan_connect.custom_message"}, "trigger_details": [{"section": "Trigger fields", "title": "Instrument\nDropdown list", "description": "Dropdown list", "details": {"Label": "Instrument", "Helper text": "Choose the Instrument for the selected Trigger", "Slug": "instrument", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Time of event\nThe time when the message was sent", "description": "The time when the message was sent", "details": {"Slug": "time_of_event", "Filter code": "TecanConnect.customMessage.TimeOfEvent", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Instrument name\nAlias of the instrument which is sending the message", "description": "Alias of the instrument which is sending the message", "details": {"Slug": "instrument_name", "Filter code": "TecanConnect.customMessage.InstrumentName", "Type": "String", "Example": "My Instrument"}}, {"section": "Ingredients", "title": "User\nYour name", "description": "Your name", "details": {"Slug": "user", "Filter code": "TecanConnect.customMessage.User", "Type": "String", "Example": "IFTTT_Demo_user"}}, {"section": "Ingredients", "title": "Custom message\nThe custom message with its type (Info/Error/Warning/Comment)", "description": "The custom message with its type (Info/Error/Warning/Comment)", "details": {"Slug": "custom_message", "Filter code": "TecanConnect.customMessage.CustomMessage", "Type": "String", "Example": "Error : Something happend"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": "", "intent": "When a custom message is sent by \"My Laboratory Instrument\" on the Tecan Connect, and the message type is \"Error\" with content containing the keyword \"urgent\", and the event time is between 08:00 and 17:00, then send a notification to my primary device with the message \"Instrument Alert: Error occurred - {{custom_message}}\"."}
{"original_description": "This trigger will start your dishwasher at the optimal time. You set a earliest start time, what time your machine has to be ready, and a duration. The Trigger will then start the when electricity is optimal.", "trigger_channel": "True Energy Smart Home Denmark", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "True_Energy_DK.electricity_price_cheap"}, "trigger_details": [{"section": "Trigger fields", "title": "Area\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Region", "Helper text": "Region you wish to monitor", "Slug": "area", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Region\nDenmark Region being monitored", "description": "Denmark Region being monitored", "details": {"Slug": "area", "Filter code": "TrueEnergyDK.electricityPriceCheap.Region", "Type": "String", "Example": "West Denmark"}}, {"section": "Ingredients", "title": "Valid from\nTime at which electricity price changes", "description": "Time at which electricity price changes", "details": {"Slug": "valid_from", "Filter code": "TrueEnergyDK.electricityPriceCheap.ValidFrom", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Price\nElectricity price per kWh in DKK", "description": "Electricity price per kWh in DKK", "details": {"Slug": "price", "Filter code": "TrueEnergyDK.electricityPriceCheap.Price", "Type": "String", "Example": "167.17"}}, {"section": "Ingredients", "title": "Co2 emission\nCO2 emission per kWh in grams", "description": "CO2 emission per kWh in grams", "details": {"Slug": "co2_emission", "Filter code": "TrueEnergyDK.electricityPriceCheap.Co2Emission", "Type": "String", "Example": "108.77"}}], "action_channel": "Home Connect Dishwasher", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_start_program", "Filter code method": "HcDishwasher.dishwasherStartProgram.skip(string?: reason)", "Runtime method": "runAction(\"hc_dishwasher.dishwasher_start_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Helper text": "Please note that your dishwasher has to be connected (but not running) to be listed.", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Program\nDropdown list", "description": "Dropdown list", "details": {"Label": "Program", "Slug": "program", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Start the dishwasher in the kitchen, which is connected to Home Connect, using the \"Eco\" program when the electricity price in West Denmark is below 150 DKK per kWh and the CO2 emission is less than 120 grams per kWh, ensuring it finishes by 07:00 for breakfast."}
{"original_description": "Press Logitech pop to arm smanos security system when you leave home.", "trigger_channel": "Logitech POP", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "logitech_pop.short_press"}, "trigger_details": [{"section": "Trigger fields", "title": "Switch\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which button?", "Slug": "switch", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Trigger option?", "Slug": "trigger_condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Trigger source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Trigger source?", "Slug": "trigger_source", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Button\nThis is the unique identifier of the pressed button.", "description": "This is the unique identifier of the pressed button.", "details": {"Slug": "button_id", "Filter code": "LogitechPop.shortPress.ButtonId", "Type": "String", "Example": "a0:e6:f8:8c:f5:33"}}, {"section": "Ingredients", "title": "Battery\nThis is the current battery level of the pressed button.", "description": "This is the current battery level of the pressed button.", "details": {"Slug": "battery", "Filter code": "LogitechPop.shortPress.Battery", "Type": "String", "Example": "100"}}, {"section": "Ingredients", "title": "Source\nThis is the trigger source, either a physical button or an app.", "description": "This is the trigger source, either a physical button or an app.", "details": {"Slug": "src", "Filter code": "LogitechPop.shortPress.Source", "Type": "String", "Example": "btn or app"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "LogitechPop.shortPress.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Name\nName of the Logi Button.", "description": "Name of the Logi Button.", "details": {"Slug": "button_name", "Filter code": "LogitechPop.shortPress.Name", "Type": "String", "Example": "Living Room"}}], "action_channel": "smanos connect", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "smanos.arm_away", "Filter code method": "Smanos.armAway.skip(string?: reason)", "Runtime method": "runAction(\"smanos.arm_away\", {})"}, "action_details": [{"section": "Action fields", "title": "Which system\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "which_system", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Arm the smanos security system to away mode when the Logitech POP button named \"Living Room\" is short pressed, with a battery level above 50, and the trigger source is from a physical button."}
{"original_description": "Your Homey will inform you as soon as your Cookit has finished cooking.", "trigger_channel": "Home Connect Cookit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_cook_processor.cook_processor_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Cookit?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcCookProcessor.cookProcessorFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Homey", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "homey.let_homey_speak", "Filter code method": "Homey.letHomeySpeak.skip(string?: reason)", "Runtime method": "runAction(\"homey.let_homey_speak\", {})"}, "action_details": [{"section": "Action fields", "title": "Which homey\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Homey?", "Slug": "which_homey", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "What text\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What text?", "Slug": "what_text", "Required": "true", "Can have default value": "true", "Filter code method": "Homey.letHomeySpeak.setWhat Text(string: what_text)"}}], "filter_code": "", "intent": "When the Cookit with ID \"Kitchen_Cookit\" has finished cooking, as indicated by the creation time of the event being after 12:00 PM, let Homey \"Living_Room_Homey\" speak the text \"Cooking is done, please remove your food from the Cookit\"."}
{"original_description": "Grâce à cette applet, réglez la température de vos radiateurs connectés Sauter selon votre Agenda Google (fin d'un événement).", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.any_event_ends"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.anyEventEnds.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.anyEventEnds.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.anyEventEnds.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Start time\nDate and time the event started.", "description": "Date and time the event started.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.anyEventEnds.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "End time\nDate and time the event ended.", "description": "Date and time the event ended.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.anyEventEnds.EndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.anyEventEnds.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.anyEventEnds.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "SAUTER Cozytouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "SAUTER_Cozytouch.launch_action_group", "Filter code method": "SAUTERCozytouch.launchActionGroup.skip(string?: reason)", "Runtime method": "runAction(\"SAUTER_Cozytouch.launch_action_group\", {})"}, "action_details": [{"section": "Action fields", "title": "Action group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scenario", "Slug": "action_group", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When an event titled \"Team Meeting\" ends in my primary Google Calendar, adjust the temperature of my living room Sauter radiators to 22°C as part of the \"Coming Home\" action group."}
{"original_description": "With the push of a button on your phone, your Mapeheat Thermo Connect thermostat is set to a certain temperature.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Mapeheat Thermo Connect", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "Mapei_Mapeheat.set_temperature", "Filter code method": "MapeiMapeheat.setTemperature.skip(string?: reason)", "Runtime method": "runAction(\"Mapei_Mapeheat.set_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which thermostat?", "Helper text": "The thermostat to set the temperature for", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Scale\nDropdown list", "description": "Dropdown list", "details": {"Label": "What scale?", "Helper text": "Celsius or fahrenheit", "Slug": "scale", "Required": "true", "Can have default value": "true", "Filter code method": "MapeiMapeheat.setTemperature.setScale(string: scale)"}}, {"section": "Action fields", "title": "Setpoint temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "What setpoint temperature?", "Helper text": "The setpoint temperature", "Slug": "setpoint_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "MapeiMapeheat.setTemperature.setSetpoint Temperature(string: setpoint_temperature)"}}, {"section": "Action fields", "title": "Duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "What duration?", "Helper text": "The time to hold the temperature until", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "MapeiMapeheat.setTemperature.setDuration(string: duration)"}}], "filter_code": "", "intent": "When you press the button on your phone at a location like 37.82666360000001 latitude and -122.42301220000003 longitude, set your Mapeheat Thermo Connect thermostat, which you use frequently, to 22 degrees Celsius for 2 hours."}
{"original_description": "Set Phyn to turn up the heat in your home to warm up your pipes if you get a warning that your pipes are going to freeze. ", "trigger_channel": "Phyn", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "phyn.alert_raised"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which home?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Alert type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which type of alert?", "Helper text": "Alert type", "Slug": "alert_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Phyn.alertRaised.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Home name\nName of the home for which the alert is detected.", "description": "Name of the home for which the alert is detected.", "details": {"Slug": "home_name", "Filter code": "Phyn.alertRaised.HomeName", "Type": "String", "Example": "Vacation home"}}, {"section": "Ingredients", "title": "Alert type\nType of the alert detected.", "description": "Type of the alert detected.", "details": {"Slug": "alert_type", "Filter code": "Phyn.alertRaised.AlertType", "Type": "String", "Example": "Leak alert"}}, {"section": "Ingredients", "title": "Alert time\nThe time when this alert is detected.", "description": "The time when this alert is detected.", "details": {"Slug": "alert_time", "Filter code": "Phyn.alertRaised.AlertTime", "Type": "String", "Example": "2019-08-07 16:10 PM PST"}}, {"section": "Ingredients", "title": "Suggested fixtures\nThe fixtures associated with a leak alert.", "description": "The fixtures associated with a leak alert.", "details": {"Slug": "suggested_fixtures", "Filter code": "Phyn.alertRaised.SuggestedFixtures", "Type": "String", "Example": "'sink, shower'"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": "", "intent": "When Phyn detects a freeze warning alert at my Vacation home, turn up the heat on my Living Room Thermostat to 72 degrees Fahrenheit."}
{"original_description": "Weather getting warm outside? Turn down your LightwaveRF heating devices target temperature.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "LightwaveRF Heating", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lightwaverf_heating.set_temperature", "Filter code method": "LightwaverfHeating.setTemperature.skip(string?: reason)", "Runtime method": "runAction(\"lightwaverf_heating.set_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Which thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which thermostat/trv?", "Slug": "which_thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "What temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "What temperature?", "Helper text": "Temperatures can be between 1 and 39 degrees°C, in 0.5 degree increments (e.g. &quot;32&quot; or &quot;32.5&quot;). You cannot set temperature ranges (e.g. “22-30”).", "Slug": "what_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "LightwaverfHeating.setTemperature.setWhat Temperature(string: what_temperature)"}}], "filter_code": "", "intent": "When the temperature outside reaches 18 degrees Celsius in London, and the weather condition is Sunny, turn down the temperature of your Living Room Thermostat to 22.5 degrees Celsius."}
{"original_description": "Nutze deine Qbox um die Rollläden zu schließen, wenn es im Raum zu warm ist.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "coqon", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "coqon.simple_rule_action", "Filter code method": "Coqon.simpleRuleAction.skip(string?: reason)", "Runtime method": "runAction(\"coqon.simple_rule_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Action code\nText input > Other", "description": "Text input > Other", "details": {"Label": "action_code", "Helper text": "The code provided by the coqon rule, associating the action to the rule.", "Slug": "action_code", "Required": "true", "Can have default value": "true"}}], "filter_code": "", "intent": "Schließe die Rollläden, wenn die Raumtemperatur über 25 Grad Celsius steigt, an einem sonnigen Tag, in deinem Wohnzimmer, zwischen 07:00 und 19:00 Uhr, mit einer Qbox-Aktion, die den Code \"ROLL_LADEN_SCHLIESSEN\" ausführt."}
{"original_description": "This applet lets you store presence information in Apilio, so you can know if someone has been detected by your Wyze camera to automate any home logic", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.motion_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Motion detected\nMotion detected on your wyze camera.", "description": "Motion detected on your wyze camera.", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.motionTrigger.MotionDetected", "Type": "String", "Example": "Motion detected on your wyze camera."}}, {"section": "Ingredients", "title": "Trigger time\nTime when motion is triggered.", "description": "Time when motion is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.motionTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.boolean_variable_to_true_updates", "Filter code method": "Apilio.booleanVariableToTrueUpdates.skip(string?: reason)", "Runtime method": "runAction(\"apilio.boolean_variable_to_true_updates\", {})"}, "action_details": [{"section": "Action fields", "title": "Variable identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio variable do you want to update to true?", "Slug": "variable_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When motion is detected by my Living Room Wyze camera between 07:00 and 22:00, update the 'Someone_Is_Home' Apilio variable to true."}
{"original_description": "Inspired by the @MrFinanceiQ tweet: \"to waste £5,000 in a year, all it takes is to spend an unnecessary £13.70 a day.\"", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "", "intent": "Every day at 07:00, if the current time is between 07:00 and 19:00, deposit £13.70 into the \"Savings\" pot on Monzo to avoid wasting £5,000 in a year."}
{"original_description": "Get a daily email digest of new shows for you based on your keyword or topic. This can also be used for episodes with the New episode from search trigger.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.search_show"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input", "description": "Text input", "details": {"Label": "query", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Show\nThe show's ID.", "description": "The show's ID.", "details": {"Slug": "show_id", "Filter code": "Spotify.searchShow.ShowId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "Show name\nThe name of the show.", "description": "The name of the show.", "details": {"Slug": "show_name", "Filter code": "Spotify.searchShow.ShowName", "Type": "String", "Example": "Darknet Diaries"}}, {"section": "Ingredients", "title": "Show description\nThe description of the show.", "description": "The description of the show.", "details": {"Slug": "show_description", "Filter code": "Spotify.searchShow.ShowDescription", "Type": "String", "Example": "Explore the dark side of the Internet with host Jack Rhysider as he takes you on a journey through the chilling world of privacy hacks, data breaches, and cyber crime. The masterful criminal hackers who dwell on the dark side show us just how vulnerable w"}}, {"section": "Ingredients", "title": "Show url\nThe URL to the show on Spotify.", "description": "The URL to the show on Spotify.", "details": {"Slug": "show_url", "Filter code": "Spotify.searchShow.ShowUrl", "Type": "Web URL", "Example": "https://open.spotify.com/show/4XPl3uEEL9hvqMkoZrzbx5"}}, {"section": "Ingredients", "title": "Show cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "show_cover_url", "Filter code": "Spotify.searchShow.ShowCoverUrl", "Type": "Image URL", "Example": "https://i.scdn.co/image/53ba2adaaf2d3e47898aed9edb64026145032e7b"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": "", "intent": "Send a daily email digest at 08:00 to my inbox with the title \"New Podcasts\" and a message containing the show name, description, and URL, including a link to the show on Spotify, for all new shows found on Spotify with the keyword \"technology\" or topic \"innovation\", including shows like \"Darknet Diaries\" or \"How I Built This\"."}
{"original_description": "Press this handy button to liquidate all positions at the end of the day.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.liquidate_positions", "Filter code method": "Alpaca.liquidatePositions.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.liquidate_positions\", {})"}, "action_details": [], "filter_code": "", "intent": "When the button widget is pressed at a location with latitude 37.8267 and longitude -122.4230, between 15:00 and 16:00, liquidate all positions using Alpaca."}
{"original_description": "Have Apilio run a Logicblock evaluation every time Netatmo Weather Station detects noise. A very handy applet if you want to turn your Netatmo Weather Station into a simple home security system.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.noise-rises-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target noise level", "Helper text": "In decibels (dB)", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured noise level\nThe measured noise level in decibels", "description": "The measured noise level in decibels", "details": {"Slug": "MeasuredNoiseLevel", "Filter code": "Netatmo.noiseRisesAbove.MeasuredNoiseLevel", "Type": "String", "Example": "73"}}, {"section": "Ingredients", "title": "Target noise level\nThe target noise level in decibels", "description": "The target noise level in decibels", "details": {"Slug": "TargetNoiseLevel", "Filter code": "Netatmo.noiseRisesAbove.TargetNoiseLevel", "Type": "String", "Example": "53"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.noiseRisesAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the noise", "description": "This is the name of the Netamo device where you are reading the noise", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.noiseRisesAbove.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.logicblock_evaluation_requests", "Filter code method": "Apilio.logicblockEvaluationRequests.skip(string?: reason)", "Runtime method": "runAction(\"apilio.logicblock_evaluation_requests\", {})"}, "action_details": [{"section": "Action fields", "title": "Logicblock identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio logicblock do you want to evaluate?", "Slug": "logicblock_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Run the \"Security Checker\" Logicblock evaluation in Apilio every time the noise level rises above 60 decibels at the \"Living Room\" Netatmo Weather Station, triggering a check between 20:00 and 06:00 to potentially turn on the home security system."}
{"original_description": "Make it easier to never miss a notification by blinking your Hue Lights anytime you get a notification from a specific app. Enter the name of the app under the \"Which App\" field then choose which Hue lights you'd like to blink.", "trigger_channel": "Android Device", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_device.new_notification_from_app"}, "trigger_details": [{"section": "Trigger fields", "title": "App name\nText input", "description": "Text input", "details": {"Label": "App name", "Helper text": "e.g. Twitter", "Slug": "app_name", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by notification keyword", "Helper text": "e.g. mentioned", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Received at\nThe time the notification was received.", "description": "The time the notification was received.", "details": {"Slug": "ReceivedAt", "Filter code": "AndroidDevice.newNotificationFromApp.ReceivedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "App name\nThe application name of the notification", "description": "The application name of the notification", "details": {"Slug": "AppName", "Filter code": "AndroidDevice.newNotificationFromApp.AppName", "Type": "String", "Example": "Twitter"}}, {"section": "Ingredients", "title": "Notification message\nMessage text of the notification", "description": "Message text of the notification", "details": {"Slug": "NotificationMessage", "Filter code": "AndroidDevice.newNotificationFromApp.NotificationMessage", "Type": "String", "Example": "@jamisonross12 oh I love that song by Toto too!"}}, {"section": "Ingredients", "title": "Notification title\nTitle of the notification", "description": "Title of the notification", "details": {"Slug": "NotificationTitle", "Filter code": "AndroidDevice.newNotificationFromApp.NotificationTitle", "Type": "String", "Example": "Mentioned by @MrTibbets"}}, {"section": "Ingredients", "title": "Device name\nThe name of your device where the notification was received.", "description": "The name of your device where the notification was received.", "details": {"Slug": "device_name", "Filter code": "AndroidDevice.newNotificationFromApp.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Blink all Hue Lights in the living room when a notification from Twitter contains the keyword \"URGENT\" and is received on the Google Pixel 7 between 07:00 and 22:00."}
{"original_description": "Input a topic or keyword of your choice to get a notification anytime a new episode on this topic is released. We have added filter code to limit the notifications per day. This Applet can be re-created using the New show from search trigger as well or with an email digest as an action.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.search_episode"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input", "description": "Text input", "details": {"Label": "query", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Episode\nThe episode's ID.", "description": "The episode's ID.", "details": {"Slug": "episode_id", "Filter code": "Spotify.searchEpisode.EpisodeId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "Episode release date\nThe date when episode was released.", "description": "The date when episode was released.", "details": {"Slug": "episode_release_date", "Filter code": "Spotify.searchEpisode.EpisodeReleaseDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Episode name\nThe episode's name.", "description": "The episode's name.", "details": {"Slug": "episode_name", "Filter code": "Spotify.searchEpisode.EpisodeName", "Type": "String", "Example": "Is \\\"Resources\\\" a Dirty Word?"}}, {"section": "Ingredients", "title": "Episode cover url\nEpisode cover art.", "description": "Episode cover art.", "details": {"Slug": "episode_cover_url", "Filter code": "Spotify.searchEpisode.EpisodeCoverUrl", "Type": "Image URL", "Example": "https://i.scdn.co/image/a3f8306a743873e12282bf48395d9ad45e704cb7"}}, {"section": "Ingredients", "title": "Episode description\nThe episode's description. May contain HTML.", "description": "The episode's description. May contain HTML.", "details": {"Slug": "episode_description", "Filter code": "Spotify.searchEpisode.EpisodeDescription", "Type": "String", "Example": "In this episode, ..."}}, {"section": "Ingredients", "title": "Episode url\nThe URL to the episode on Spotify.", "description": "The URL to the episode on Spotify.", "details": {"Slug": "episode_url", "Filter code": "Spotify.searchEpisode.EpisodeUrl", "Type": "Web URL", "Example": "https://open.spotify.com/episode/19TIFzN141JLsIUFVPqS5Q"}}, {"section": "Ingredients", "title": "Episode languages\nA list of the languages used in the episode, identified by their ISO 639 code.", "description": "A list of the languages used in the episode, identified by their ISO 639 code.", "details": {"Slug": "episode_languages", "Filter code": "Spotify.searchEpisode.EpisodeLanguages", "Type": "String", "Example": "en,es"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_rich_notification", "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Helper text": "Optional, bold text above the message", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Helper text": "Optional, link may open in a browser or installed app", "Slug": "link_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"}}], "filter_code": "", "intent": "Get a notification with the episode name, description, and a link to the episode on Spotify whenever a new episode about \"Technology\" is released between 07:00 and 19:00, limited to 5 notifications per day, with an image of the episode cover art and a title saying \"New Tech Episode\"."}
{"original_description": "Save £1 every time it rains", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Dozens", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dozens.save", "Filter code method": "Dozens.save.skip(string?: reason)", "Runtime method": "runAction(\"dozens.save\", {})"}, "action_details": [{"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount", "Helper text": "Specify amount that should be moved to savings account", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Dozens.save.setAmount(string: amount)"}}], "filter_code": "", "intent": "Save £1 to my Dozens savings account every time it rains in London, as reported by Weather Underground at 7:00 AM."}
{"original_description": "Simulate a natural and gentle sunrise. The brightness gradually increases within 15 minutes from dim yellow until your room is filled with bright yellow light. ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.set_color", "Filter code method": "Yeelight.setColor.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.set_color\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which color?", "Slug": "color_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Simulate a gentle sunrise every weekday at 7:00 AM by gradually increasing the brightness of the Yeelight device in the living room from dim yellow to bright yellow over a period of 15 minutes."}
{"original_description": "The brightness gradually increases within 15 minutes from 1% to 100% .", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.change_bright", "Filter code method": "Yeelight.changeBright.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.change_bright\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which brightness?", "Slug": "scene_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When it's 7:00 AM, gradually increase the brightness of the Bedroom Light from 1% to 100% within 15 minutes."}
{"original_description": "Start Christmas Day with your Hue Lights Colour looping. Happy holidays! ", "trigger_channel": "Is It Christmas?", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "isitchristmas.christmas"}, "trigger_details": [{"section": "Trigger fields", "title": "Timezone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which timezone?", "Slug": "timezone", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Year\nThe year in which it is Christmas.", "description": "The year in which it is Christmas.", "details": {"Slug": "year", "Filter code": "Isitchristmas.christmas.Year", "Type": "String", "Example": "2014"}}, {"section": "Ingredients", "title": "Created at\nChristmas time.", "description": "Christmas time.", "details": {"Slug": "created_at", "Filter code": "Isitchristmas.christmas.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Answer\nIt will always be \"YES\".", "description": "It will always be \"YES\".", "details": {"Slug": "answer", "Filter code": "Isitchristmas.christmas.Answer", "Type": "String", "Example": "YES"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "", "intent": "On Christmas Day, at 07:00 in the New York timezone, set all Philips Hue lights in the living room to loop through colors."}
{"original_description": "At 8 AM on the last day of the month you'll get a push notification reminding you to pay up. Sad wallet...happy landlord!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_month_on_the"}, "trigger_details": [{"section": "Trigger fields", "title": "Month day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of the month", "Slug": "month_day", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyMonthOnThe.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": "", "intent": "When the date is the last day of the month and the time is 8:00 AM, send a push notification with the message \"Reminder: Rent is due today, please pay up to avoid late fees.\""}
{"original_description": "Runs every day. Save £3.65 on January 1st, £3.64 on January 2nd and so on - until 1p on December 31st.\n\nIt resets automatically on January 1st every year.\n\nThis is the reverse of our popular 1p Savings Challenge.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "const today = Meta.currentUserTime;\n\n// How many days are there this year?\nconst days_in_year = today.isLeapYear() ? 366 : 365\n\nconst day_of_year = today.format('DDD');\n\n// Figure out how many days are left in the year\nconst days_left_in_the_year = days_in_year-parseInt(day_of_year); \n\n// Move to pot the number of days left in the year + 1 (so that 1st of Jan is £3.65 and 31st December is 1p)\n// Divide by 100 for pence\nconst amount = (days_left_in_the_year+1) / 100;\n\nMonzo.potDeposit.setAmount(amount.toFixed(2));\n\n", "intent": "Every day, deposit an amount into my Monzo pot named \"Savings\" that corresponds to the number of days left in the year plus one, divided by 100, so on January 1st it's £3.65, on January 2nd it's £3.64, and so on until December 31st when it's 1p, using the pot named \"Savings\" to store these daily savings."}
{"original_description": "This Applet sends you the week's worth of updates from the EPA to your inbox on a day and time of your choosing.", "trigger_channel": "Environmental Protection Agency", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "epa.latest_news"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Epa.latestNews.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Epa.latestNews.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry region\nThe region publishing the entry.", "description": "The region publishing the entry.", "details": {"Slug": "EntryAuthor", "Filter code": "Epa.latestNews.EntryRegion", "Type": "String", "Example": "Region 03"}}, {"section": "Ingredients", "title": "Entry content preview\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Epa.latestNews.EntryContentPreview", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Epa.latestNews.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": "", "intent": "Send me a weekly email digest with updates from the Environmental Protection Agency, filtered by the keyword \"climate change\", every Monday at 08:00, with the title \"EPA Weekly Updates\", and include a link to the EPA's latest news page."}
{"original_description": "Reason is a monthly US-based Libertarian magazine. Stay up to date on the topics you care about, from a Libertarian perspective, by adding the keyword or phrase you want to track. You'll get an email whenever a new article matches the term!", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": "", "intent": "Get an email with the subject \"New Reason Magazine Article\" and the body containing the entry title, entry URL, and entry content whenever a new article is published in the Reason magazine RSS feed that matches the keyword \"Libertarian economics\", sent to your email address between 07:00 and 19:00 every day."}
{"original_description": "This applet fires at the specified days of the week and toggles a boolean variable in Apilio between TRUE and FALSE.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.boolean_variable_to_true_updates", "Filter code method": "Apilio.booleanVariableToTrueUpdates.skip(string?: reason)", "Runtime method": "runAction(\"apilio.boolean_variable_to_true_updates\", {})"}, "action_details": [{"section": "Action fields", "title": "Variable identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio variable do you want to update to true?", "Slug": "variable_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Toggle the boolean variable \"OfficeMode\" in Apilio between TRUE and FALSE every Monday, Wednesday, and Friday at 08:00."}
{"original_description": "Stay on task every day by receiving a daily email digest of all new iOS Reminders.", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.new_reminder_added"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.newReminderAdded.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.newReminderAdded.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.newReminderAdded.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.newReminderAdded.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.newReminderAdded.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": "", "intent": "Send a daily email digest at 08:00 to my inbox with the title \"Today's Reminders\" and a message containing all new iOS reminders from the \"Shopping\" list with medium priority, including their titles, notes, and creation dates."}
{"original_description": "Turn your Philips Hue light bulb green during off-peak hours to always know when electricity costs less. Be sure to create another Applet to change the color when the cost of electricity increases during on-peak hours.", "trigger_channel": "Fort Collins Utilities Time of Day Pricing", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fcu_tod.time_of_day"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nDropdown list", "description": "Dropdown list", "details": {"Label": "This event should trigger when peak rates:", "Slug": "event", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Season\nDropdown list", "description": "Dropdown list", "details": {"Label": "During which season?", "Slug": "season", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Day type\nThe type of day for this event.", "description": "The type of day for this event.", "details": {"Slug": "day_type", "Filter code": "FcuTod.timeOfDay.DayType", "Type": "String", "Example": "Weekday"}}, {"section": "Ingredients", "title": "Season\nThe current season.", "description": "The current season.", "details": {"Slug": "season", "Filter code": "FcuTod.timeOfDay.Season", "Type": "String", "Example": "Summer"}}, {"section": "Ingredients", "title": "Event type\nWhether this is a \"start\" or \"end\" time-of-day event.", "description": "Whether this is a \"start\" or \"end\" time-of-day event.", "details": {"Slug": "event_type", "Filter code": "FcuTod.timeOfDay.EventType", "Type": "String", "Example": "start"}}, {"section": "Ingredients", "title": "Datetime\nWhen the time-of-date change occurred.", "description": "When the time-of-date change occurred.", "details": {"Slug": "datetime", "Filter code": "FcuTod.timeOfDay.Datetime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": "", "intent": "Turn the living room Philips Hue light bulb to green (#00FF00) when the Fort Collins Utilities Time of Day Pricing event is \"start\" and the day type is \"Weekday\" during the Summer season, indicating off-peak hours."}
{"original_description": "Pair Coinbase with Dozens to help you save towards your goals. Every time you sell a Cryptocurrency this Applet will help you to save automatically.", "trigger_channel": "Coinbase", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "coinbase.wallet_sell_detected"}, "trigger_details": [{"section": "Trigger fields", "title": "Wallet\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which wallet?", "Helper text": "The wallet from which the transaction is taking place", "Slug": "wallet_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Cryptcourrency amount\nAmount of cryptocurrency sold", "description": "Amount of cryptocurrency sold", "details": {"Slug": "cryptocurrency_amount", "Filter code": "Coinbase.walletSellDetected.CryptcourrencyAmount", "Type": "String", "Example": "1.09382"}}, {"section": "Ingredients", "title": "Wallet\nThe wallet from which cryptocurrency was sold", "description": "The wallet from which cryptocurrency was sold", "details": {"Slug": "wallet", "Filter code": "Coinbase.walletSellDetected.Wallet", "Type": "String", "Example": "bbf394c-193b-5b2a-9155-3b4732659ede"}}, {"section": "Ingredients", "title": "Cryptocurrency code\nThe short name of the cryptocurrency sold", "description": "The short name of the cryptocurrency sold", "details": {"Slug": "cryptocurrency_code", "Filter code": "Coinbase.walletSellDetected.CryptocurrencyCode", "Type": "String", "Example": "BTC"}}, {"section": "Ingredients", "title": "Paid amount\nThe amount paid in USD", "description": "The amount paid in USD", "details": {"Slug": "paid_amount", "Filter code": "Coinbase.walletSellDetected.PaidAmount", "Type": "String", "Example": "150.00"}}, {"section": "Ingredients", "title": "Transaction\nThe ID of the sell transaction", "description": "The ID of the sell transaction", "details": {"Slug": "transaction_id", "Filter code": "Coinbase.walletSellDetected.TransactionId", "Type": "String", "Example": "4117f7d6-5694-5b36-bc8f-847509850ea4"}}, {"section": "Ingredients", "title": "Payout at\nThe date and time at which the payout will occur", "description": "The date and time at which the payout will occur", "details": {"Slug": "payout_at", "Filter code": "Coinbase.walletSellDetected.PayoutAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Dozens", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dozens.save", "Filter code method": "Dozens.save.skip(string?: reason)", "Runtime method": "runAction(\"dozens.save\", {})"}, "action_details": [{"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount", "Helper text": "Specify amount that should be moved to savings account", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Dozens.save.setAmount(string: amount)"}}], "filter_code": "", "intent": "When a sell transaction of 1.5 BTC is detected from the wallet bbf394c-193b-5b2a-9155-3b4732659ede, resulting in a payout of $200.00 at 2020-07-08T04:17:06+05:00, save $50.00 to Dozens savings account."}
{"original_description": "Toggle your light by pressing widget button. This Applet makes a widget that you can use from IFTTT app or your phone screen. ", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.Togglelight", "Filter code method": "Magichue.togglelight.skip(string?: reason)", "Runtime method": "runAction(\"magichue.Togglelight\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Toggle the living room light by pressing the IFTTT widget button when you are at home, located at latitude 37.8267 and longitude -122.4230, between 07:00 and 22:00."}
{"original_description": "Turn on your light within 15 minutes of the sunset at your location.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_on", "Filter code method": "Kasa.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn on", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Living Room Light device within 15 minutes of the sunset at your location, when the current temperature is above 18 degrees Celsius and the weather condition is Sunny."}
{"original_description": "Runs every Monday. Save £1 in Week 1 of the year, £2 in Week 2 of the year,... . Feel free to jump in part way though the year, and see how far you can get!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "var week_of_year = Meta.currentUserTime.format('w');\nvar amount = parseInt(week_of_year);\nMonzo.potDeposit.setAmount(amount.toFixed(2));\n\n", "intent": "Every Monday, deposit an amount equal to the current week of the year into my Monzo pot named \"Weekly Savings\", for example, £1 in Week 1, £2 in Week 2, and so on, starting from the current week."}
{"original_description": "A UV Index reading of 6 to 7 means high risk of harm from unprotected sun exposure. This acts as a reminder for you to consider wearing sunscreen. Stay safe!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_humidity_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Humidity\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Humidity (%)", "Slug": "humidity", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentHumidityRisesAbove.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentHumidityRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentHumidityRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentHumidityRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentHumidityRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentHumidityRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": "", "intent": "When the humidity level rises above 80% in New York, and the current temperature is higher than 75°F, send a notification with the message \"High humidity and warm weather alert: remember to stay hydrated and wear sunscreen, as the UV Index is expected to be high.\""}
{"original_description": "Automatically apply a light scene when weather condition changes", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.set_scene", "Filter code method": "Yeelight.setScene.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.set_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Bundle\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "bundle_id", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the weather condition changes to Sunny at my home location, and the temperature is above 18 degrees Celsius, automatically apply the Relax scene on my Yeelight devices."}
{"original_description": "Have your product turn on at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "iDevices", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "idevices.turn_device_on", "Filter code method": "Idevices.turnDeviceOn.skip(string?: reason)", "Runtime method": "runAction(\"idevices.turn_device_on\", {})"}, "action_details": [{"section": "Action fields", "title": "What device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which product?", "Slug": "what_device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on my Living Room Lamp at sunset when the temperature is 72 degrees Fahrenheit and the weather condition is Sunny."}
{"original_description": "Turn on a device.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_on", "Filter code method": "Kasa.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn on", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the TP-Link Kasa device named \"Living Room Lamp\" when a triple knock gesture is detected by Knocki between 07:00 and 19:00."}
{"original_description": "See what impacts your ability to write great posts", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": "", "intent": "When I post a new photo on Instagram with a caption containing the keyword \"productivity\" and the image is taken between 08:00 and 17:00, send an event to Welltory with the data source set to \"Social Media\", data type set to \"Post Engagement\", datetime set to the time the photo was posted, value set to 1, and a comment describing the applet as \"Tracking Instagram posts about productivity\"."}
{"original_description": "Make every picture count... save a set amount toward one of your Goals every time you add a picture to your feed.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal", "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)", "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"}, "action_details": [{"section": "Action fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount to transfer", "Slug": "amount", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Save $5 toward my \"Dream Vacation\" goal in Qapital every time I upload a new photo to Instagram with a caption containing the word \"travel\"."}
{"original_description": "This applet turns on your Hue light when Withings Sleep detects that you get out of bed.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Living Room Hue light when Tom's Withings Sleep detects that he gets out of bed between 07:00 and 22:00."}
{"original_description": "Find out how phone calls influence your behavior", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.receive_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.receiveAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.receiveAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.receiveAPhoneCall.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.receiveAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.receiveAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": "", "intent": "When I receive a phone call from Jon Snow on my Google Pixel 7 between 08:00 and 18:00, and the call lasts more than 10 seconds, send an event to Welltory with data source as \"Phone Calls\", data type as \"Productivity\", datetime set to the time of the call, value as \"1\" for one entry per event, and comment as \"Influential Call from Jon Snow\"."}
{"original_description": "Always scanning Soundcloud for something new but like to listen on Spotify? Enter a search term and when this Applet finds a new track on the former, it'll automatically add it to a playlist on the latter (if it's available). Be specific in your search to get the best results! ", "trigger_channel": "SoundCloud", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "soundcloud.new_track_from_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Search query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "search_query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Soundcloud.newTrackFromSearch.Title", "Type": "String", "Example": "A cool track"}}, {"section": "Ingredients", "title": "Description\nThe track's description. May contain HTML.", "description": "The track's description. May contain HTML.", "details": {"Slug": "Description", "Filter code": "Soundcloud.newTrackFromSearch.Description", "Type": "String", "Example": "This track is sweet"}}, {"section": "Ingredients", "title": "Tags\nThe track's tags, comma seperated.", "description": "The track's tags, comma seperated.", "details": {"Slug": "Tags", "Filter code": "Soundcloud.newTrackFromSearch.Tags", "Type": "String", "Example": "killer, noise"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the tracks's Soundcloud page.", "description": "The URL to the tracks's Soundcloud page.", "details": {"Slug": "TrackUrl", "Filter code": "Soundcloud.newTrackFromSearch.TrackUrl", "Type": "String", "Example": "http://soundcloud.com/ribbonmusic/john-maus-believer"}}, {"section": "Ingredients", "title": "Username\nThe name of the user who uploaded the track.", "description": "The name of the user who uploaded the track.", "details": {"Slug": "Username", "Filter code": "Soundcloud.newTrackFromSearch.Username", "Type": "String", "Example": "gaga"}}, {"section": "Ingredients", "title": "User profile url\nThe URL to the profile of the user who uploaded the track.", "description": "The URL to the profile of the user who uploaded the track.", "details": {"Slug": "UserProfileUrl", "Filter code": "Soundcloud.newTrackFromSearch.UserProfileUrl", "Type": "String", "Example": "http://soundcloud.com/gaga-digi"}}, {"section": "Ingredients", "title": "Image url\nURL to the track's image file.", "description": "URL to the track's image file.", "details": {"Slug": "ImageUrl", "Filter code": "Soundcloud.newTrackFromSearch.ImageUrl", "Type": "String", "Example": "http://w1.sndcdn.com/jD1KgNMbSVyv_m.png"}}, {"section": "Ingredients", "title": "Embed code\nHTML embed code for this track.", "description": "HTML embed code for this track.", "details": {"Slug": "EmbedCode", "Filter code": "Soundcloud.newTrackFromSearch.EmbedCode", "Type": "String", "Example": "<object height='81' width='100%'> <param name='movie'..."}}, {"section": "Ingredients", "title": "Created at\nDate and time the track was uploaded.", "description": "Date and time the track was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "Soundcloud.newTrackFromSearch.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "TrackId", "Filter code": "Soundcloud.newTrackFromSearch.TrackId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "User\nThe ID of the user who uploaded the track.", "description": "The ID of the user who uploaded the track.", "details": {"Slug": "UserId", "Filter code": "Soundcloud.newTrackFromSearch.UserId", "Type": "String", "Example": "123"}}], "action_channel": "Spotify", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "spotify.add_a_track_to_a_playlist", "Filter code method": "Spotify.addATrackToAPlaylist.skip(string?: reason)", "Runtime method": "runAction(\"spotify.add_a_track_to_a_playlist\", {})"}, "action_details": [{"section": "Action fields", "title": "Playlist\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Playlist name", "Helper text": "Must be a playlist owned by you. If a playlist with the name given can't be found, a new private playlist will be created.", "Slug": "playlist", "Required": "true", "Can have default value": "true", "Filter code method": "Spotify.addATrackToAPlaylist.setPlaylist(string: playlist)"}}, {"section": "Action fields", "title": "Search query\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Search query", "Helper text": "For maximum accuracy, include the song title here and the artist name in the &quot;Artist name&quot; field", "Slug": "search_query", "Required": "true", "Can have default value": "true", "Filter code method": "Spotify.addATrackToAPlaylist.setSearch Query(string: search_query)"}}, {"section": "Action fields", "title": "Artist name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Artist name", "Helper text": "Optional", "Slug": "artist_name", "Required": "false", "Can have default value": "true", "Filter code method": "Spotify.addATrackToAPlaylist.setArtist Name(string: artist_name)"}}], "filter_code": "", "intent": "When a new track is found on Soundcloud with the search query \"electronic music\" and tags including \"killer, noise\", add it to my Spotify playlist named \"New Music\" if the track is available, using the song title from the Soundcloud track's title and including the artist name \"Daft Punk\" in the search query."}
{"original_description": "Record my air quality data whenever the chosen sensor breaches the target threshold.", "trigger_channel": "uHoo", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "uhoo.sensor_notification"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which uHoo?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Sensor\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which air quality parameter?", "Slug": "sensor", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nText input", "description": "Text input", "details": {"Label": "What is the target level?", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Sign\nDropdown list", "description": "Dropdown list", "details": {"Label": "Trigger alert when above or below target level?", "Slug": "sign", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Uhoo.sensorNotification.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Uhoo name\nThis is the name of your uHoo.", "description": "This is the name of your uHoo.", "details": {"Slug": "uhoo_name", "Filter code": "Uhoo.sensorNotification.UhooName", "Type": "String", "Example": "My Home"}}, {"section": "Ingredients", "title": "Sensor name\nThis is the parameter that triggered the alert.", "description": "This is the parameter that triggered the alert.", "details": {"Slug": "sensor", "Filter code": "Uhoo.sensorNotification.SensorName", "Type": "String", "Example": "Temperature"}}, {"section": "Ingredients", "title": "Sensor value\nThis is the parameter value when alert happened.", "description": "This is the parameter value when alert happened.", "details": {"Slug": "sensor_data", "Filter code": "Uhoo.sensorNotification.SensorValue", "Type": "String", "Example": "23.5"}}, {"section": "Ingredients", "title": "Sensor unit\nThis is the parameter unit.", "description": "This is the parameter unit.", "details": {"Slug": "sensor_unit", "Filter code": "Uhoo.sensorNotification.SensorUnit", "Type": "String", "Example": "°C"}}, {"section": "Ingredients", "title": "My threshold\nThis is the target level you set to trigger the alert.", "description": "This is the target level you set to trigger the alert.", "details": {"Slug": "my_threshold", "Filter code": "Uhoo.sensorNotification.MyThreshold", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Above or below\nThis tells you whether alert was sent when it's above or below your threshold", "description": "This tells you whether alert was sent when it's above or below your threshold", "details": {"Slug": "trigger_condition", "Filter code": "Uhoo.sensorNotification.AboveOrBelow", "Type": "String", "Example": "above"}}, {"section": "Ingredients", "title": "Data temperature\nThis is the Temperature value", "description": "This is the Temperature value", "details": {"Slug": "data_temp", "Filter code": "Uhoo.sensorNotification.DataTemperature", "Type": "String", "Example": "23.4"}}, {"section": "Ingredients", "title": "Data humidity\nThis is the Relative Humidity in %", "description": "This is the Relative Humidity in %", "details": {"Slug": "data_humidity", "Filter code": "Uhoo.sensorNotification.DataHumidity", "Type": "String", "Example": "56.7"}}, {"section": "Ingredients", "title": "Data pm25\nThis is the PM2.5 level in ug/m3", "description": "This is the PM2.5 level in ug/m3", "details": {"Slug": "data_dust", "Filter code": "Uhoo.sensorNotification.DataPm25", "Type": "String", "Example": "12.3"}}, {"section": "Ingredients", "title": "Data co2\nThis is the Carbon Dioxide (CO2) level in ppm", "description": "This is the Carbon Dioxide (CO2) level in ppm", "details": {"Slug": "data_co2", "Filter code": "Uhoo.sensorNotification.DataCo2", "Type": "String", "Example": "437"}}, {"section": "Ingredients", "title": "Data co\nThis is the Carbon Monoxide (CO) level in ppm", "description": "This is the Carbon Monoxide (CO) level in ppm", "details": {"Slug": "data_co", "Filter code": "Uhoo.sensorNotification.DataCo", "Type": "String", "Example": "1.3"}}, {"section": "Ingredients", "title": "Data tvoc\nThis is the TVOC level in ppb", "description": "This is the TVOC level in ppb", "details": {"Slug": "data_voc", "Filter code": "Uhoo.sensorNotification.DataTvoc", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Data no2\nThis is the Nitrogen Dioxide (NO2) level in ppb", "description": "This is the Nitrogen Dioxide (NO2) level in ppb", "details": {"Slug": "data_no2", "Filter code": "Uhoo.sensorNotification.DataNo2", "Type": "String", "Example": "12"}}, {"section": "Ingredients", "title": "Data ozone\nThis is the Ozone level in ppb", "description": "This is the Ozone level in ppb", "details": {"Slug": "data_ozone", "Filter code": "Uhoo.sensorNotification.DataOzone", "Type": "String", "Example": "10"}}, {"section": "Ingredients", "title": "Data air pressure\nThis is the Air Pressure level in hPa", "description": "This is the Air Pressure level in hPa", "details": {"Slug": "data_airpressure", "Filter code": "Uhoo.sensorNotification.DataAirPressure", "Type": "String", "Example": "1013.0"}}, {"section": "Ingredients", "title": "Data virus index\nThis is the uHoo Virus Index", "description": "This is the uHoo Virus Index", "details": {"Slug": "data_virusindex", "Filter code": "Uhoo.sensorNotification.DataVirusIndex", "Type": "String", "Example": "7"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": "", "intent": "Record the air quality data from my uHoo sensor named \"Living Room\" whenever the PM2.5 level exceeds 15 ug/m3, and append this data to a Google Sheets spreadsheet named \"Air Quality Log\" with a formatted row including the timestamp, sensor name, and sensor value, in a folder path \"Air Quality Records/2024\"."}
{"original_description": "Toggle your LIFX lights on and off by pressing the pusher on your Kronaby watch.", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.toggle", "Filter code method": "Lifx.toggle.skip(string?: reason)", "Runtime method": "runAction(\"lifx.toggle\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want to toggle with a duration? Specify it here. Example: &quot;transition_duration: 5&quot; for a 5 second fade duration. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.toggle.setAdvanced Options(string: advanced_options)"}}], "filter_code": "", "intent": "When the pusher on your Kronaby watch is pressed with a double press at any time, toggle your Living Room LIFX lights on and off with a 2-second fade duration."}
{"original_description": "Find out how phone calls influence your behavior", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.place_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.placeAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.placeAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "To number\nThe number that received the call.", "description": "The number that received the call.", "details": {"Slug": "ToNumber", "Filter code": "AndroidPhone.placeAPhoneCall.ToNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.placeAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.placeAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": "", "intent": "When a phone call is made from my Google Pixel 7 to Jon Snow at 14155551234 and the call lasts for more than 10 seconds, log an event in Welltory with the data source as \"Phone Call\", data type as \"Productivity\", datetime as the time the call occurred, value as \"1\" to track each call, and a comment saying \"Incoming call from Jon Snow\"."}
{"original_description": "Have a product's night light turn on after sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "iDevices", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "idevices.turn_nightlight_off", "Filter code method": "Idevices.turnNightlightOff.skip(string?: reason)", "Runtime method": "runAction(\"idevices.turn_nightlight_off\", {})"}, "action_details": [{"section": "Action fields", "title": "What device\nDropdown list", "description": "Dropdown list", "details": {"Label": "What product's night light?", "Slug": "what_device", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the night light of my Living Room Lamp after sunset, which is at 04:17:06+05:00, when the temperature is 18 degrees Celsius and the condition is Sunny."}
{"original_description": "Get your home to automatically light up when the sun goes down.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "When the sunset at my location is between 16:00 and 20:00 and the current temperature in degrees Celsius is above 15, turn on all Philips Hue lights in the living room."}
{"original_description": "See what impacts how often you bookmark items", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": "", "intent": "When a new item is added to Pocket with the tag \"article\" and the title contains the word \"productivity\", send an event to Welltory with the data source set to \"Pocket\", the data type set to \"reading\", the datetime set to the time the item was added, the value set to 1, and a comment describing the applet as \"Tracking productivity articles saved to Pocket\"."}
{"original_description": "See what impacts the number of your notes", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": "", "intent": "When a new note is created in my Evernote notebook named \"Personal Notes\" with the tag \"important\" and the title contains the word \"meeting\", send an event to Welltory with the data source set to \"Evernote\", data type set to \"Notes\", datetime set to the note's creation time, value set to 1, and comment set to \"New important meeting note added\"."}
{"original_description": "When the UV Index is between 3 to 5 outside, it is considered a \"moderate\" risk of harm from unprotected sun exposure. Be prepared and wear protection!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_humidity_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Humidity\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Humidity (%)", "Slug": "humidity", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentHumidityRisesAbove.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentHumidityRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentHumidityRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentHumidityRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentHumidityRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentHumidityRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_rich_notification", "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Helper text": "Optional, bold text above the message", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Helper text": "Optional, link may open in a browser or installed app", "Slug": "link_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"}}], "filter_code": "", "intent": "When the humidity level is above 60% and the temperature is between 18°C and 22°C in New York, send a rich notification with the title \"Weather Alert\", message \"Humidity is high, consider taking necessary precautions\", link URL \"http://www.weather.com/weather/5-day/GMXX1273\", and image URL \"https://example.com/high-humidity-image.jpg\" to notify users to be prepared."}
{"original_description": "Turn on or off your BG Home device when the sun sets in your area.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "BG Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "BG_HOME.powerState", "Filter code method": "BGHOME.powerState.skip(string?: reason)", "Runtime method": "runAction(\"BG_HOME.powerState\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Powercontrol changepowerstate string\nDropdown list", "description": "Dropdown list", "details": {"Label": "On of off?", "Slug": "PowerControl_ChangePowerState_string", "Required": "true", "Can have default value": "true", "Filter code method": "BGHOME.powerState.setPower Control Change Power State String(string: PowerControl_ChangePowerState_string)"}}], "filter_code": "", "intent": "Turn on the Living Room Lamp device when the sun sets in New York, and the current temperature is above 18°C."}
{"original_description": "Checks the Weather Underground service for the current UV Index based on your threshold, and then sets the Aurora to a color you choose.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_humidity_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Humidity\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Humidity (%)", "Slug": "humidity", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentHumidityRisesAbove.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentHumidityRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentHumidityRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentHumidityRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentHumidityRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentHumidityRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.change_color_request", "Filter code method": "Nanoleaf.changeColorRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.change_color_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "Set the color value in hex (00FF00) or by name (Green). The hash (#) is not required for hex value input.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.changeColorRequest.setValue(string: value)"}}], "filter_code": "", "intent": "When the humidity level rises above 80% in New York, and the current temperature is above 18°C, set the living room Aurora to a deep blue color (#032B44)."}
{"original_description": "Turn on neoplug at sunset", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Heatmiser", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "heatmiser.turn_plug_on", "Filter code method": "Heatmiser.turnPlugOn.skip(string?: reason)", "Runtime method": "runAction(\"heatmiser.turn_plug_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Which neo plug\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which neoPlug?", "Slug": "which_neo_plug", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Living Room neoPlug at sunset when the temperature is above 18 degrees Celsius and the weather condition is Sunny."}
{"original_description": "Automatically turn on your lights to deter intruders, welcome you home or light the way during a midnight fridge raid. If you want to have your Philips hue lights turn on when motion is detected, try this!", "trigger_channel": "mydlink", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mydlink.motionDetection"}, "trigger_details": [{"section": "Trigger fields", "title": "Mydlink no\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "mydlink_no", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Mydlink.motionDetection.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe device reporting the detection.", "description": "The device reporting the detection.", "details": {"Slug": "device_name", "Filter code": "Mydlink.motionDetection.DeviceName", "Type": "String", "Example": "Living room camera"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": "", "intent": "Turn on the Philips Hue living room lights when motion is detected by the Mydlink Living room camera between 18:00 and 06:00."}
