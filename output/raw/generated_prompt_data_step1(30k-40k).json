{"original_description": "Blink your Philips Hue lights when you have a new unread voicemail.", "trigger_channel": "Zoom Phone", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "zoom_phone.new_user_voicemail"}, "trigger_details": [{"section": "Trigger fields", "title": "Voicemail status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which status should the voicemail have?", "Helper text": "Is the voicemail read or unread?", "Slug": "voicemail_status", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Voicemail\nThe ID of the voicemail.", "description": "The ID of the voicemail.", "details": {"Slug": "voicemail_id", "Filter code": "ZoomPhone.newUserVoicemail.VoicemailId", "Type": "String", "Example": "alkdoweinld"}}, {"section": "Ingredients", "title": "Call date\nThe start time of the voicemail.", "description": "The start time of the voicemail.", "details": {"Slug": "call_date", "Filter code": "ZoomPhone.newUserVoicemail.CallDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Voicemail duration\nThe duration of the voicemail in format HH:MM:SS.", "description": "The duration of the voicemail in format HH:MM:SS.", "details": {"Slug": "voicemail_duration", "Filter code": "ZoomPhone.newUserVoicemail.VoicemailDuration", "Type": "String", "Example": "00:03:21"}}, {"section": "Ingredients", "title": "Caller number\nThe phone number of the caller.", "description": "The phone number of the caller.", "details": {"Slug": "caller_number", "Filter code": "ZoomPhone.newUserVoicemail.CallerNumber", "Type": "String", "Example": "12345678"}}, {"section": "Ingredients", "title": "Caller name\nThe name of the caller.", "description": "The name of the caller.", "details": {"Slug": "caller_name", "Filter code": "ZoomPhone.newUserVoicemail.CallerName", "Type": "String", "Example": "Biff McIftt"}}, {"section": "Ingredients", "title": "Caller number type\nThe source of the caller's phone number -- Internal or External.", "description": "The source of the caller's phone number -- Internal or External.", "details": {"Slug": "caller_number_type", "Filter code": "ZoomPhone.newUserVoicemail.CallerNumberType", "Type": "String", "Example": "external"}}, {"section": "Ingredients", "title": "Callee number\nThe phone number of the user who received the voicemail.", "description": "The phone number of the user who received the voicemail.", "details": {"Slug": "callee_number", "Filter code": "ZoomPhone.newUserVoicemail.CalleeNumber", "Type": "String", "Example": "Biff McIfttt"}}, {"section": "Ingredients", "title": "Callee name\nThe name of the user who received the voicemail.", "description": "The name of the user who received the voicemail.", "details": {"Slug": "callee_name", "Filter code": "ZoomPhone.newUserVoicemail.CalleeName", "Type": "String", "Example": "Biff McIfttt"}}, {"section": "Ingredients", "title": "Callee number type\nThe source of the callee's phone number -- Internal or External.", "description": "The source of the callee's phone number -- Internal or External.", "details": {"Slug": "callee_number_type", "Filter code": "ZoomPhone.newUserVoicemail.CalleeNumberType", "Type": "String", "Example": "internal"}}, {"section": "Ingredients", "title": "Voicemail status\nThe status of the voicemail -- read or unread.", "description": "The status of the voicemail -- read or unread.", "details": {"Slug": "voicemail_status", "Filter code": "ZoomPhone.newUserVoicemail.VoicemailStatus", "Type": "String", "Example": "unread"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "During the chosen days of the week send a signal to your sRemo based on a pre-chosen conditions in your sCloud.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "sRemo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sRemo.send_signal_s", "Filter code method": "SRemo.sendSignalS.skip(string?: reason)", "Runtime method": "runAction(\"sRemo.send_signal_s\", {})"}, "action_details": [{"section": "Action fields", "title": "Sremo\nDropdown list", "description": "Dropdown list", "details": {"Label": "sremo", "Helper text": "select your sRemo which is registered in sCloud", "Slug": "sremo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Signal number\nDropdown list", "description": "Dropdown list", "details": {"Label": "signal number", "Helper text": "select 1 - 141 number of sRemo signal", "Slug": "signal_number", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When specific person unlocks the door then control Nexus Home AC", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_unlocked_by_specific_person"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Which person\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which person?", "Helper text": "Enter the first name and last name of the person as it appears on the guest list in your August app.", "Slug": "which_person", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Unlocked at\nDate and time the lock was unlocked.", "description": "Date and time the lock was unlocked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.UnlockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who unlocked the lock.", "description": "The user who unlocked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.HouseName", "Type": "String", "Example": "San Diego beach house"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who unlocked the lock.", "description": "An image url to the profile photo of the user who unlocked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "Brilliant Nexus", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "brilliant_nexus.ACExecution", "Filter code method": "BrilliantNexus.acExecution.skip(string?: reason)", "Runtime method": "runAction(\"brilliant_nexus.ACExecution\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device Name", "Helper text": "Name of the AC device which you have created in Brilliant Nexus", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Mode", "Helper text": "Select the Mode which you want to set it too", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "BrilliantNexus.acExecution.setMode(string: mode)"}}, {"section": "Action fields", "title": "Temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Temperature", "Helper text": "Set the AC temperature you want to set it for the mode", "Slug": "temperature", "Required": "true", "Can have default value": "true", "Filter code method": "BrilliantNexus.acExecution.setTemperature(string: temperature)"}}, {"section": "Action fields", "title": "Fan speed\nDropdown list", "description": "Dropdown list", "details": {"Label": "Fan speed", "Helper text": "set your fan speed for the AC on selected mode", "Slug": "fan_speed", "Required": "true", "Can have default value": "true", "Filter code method": "BrilliantNexus.acExecution.setFan Speed(string: fan_speed)"}}], "filter_code": NaN}
{"original_description": "When some unlocks the door then set AC to Cool/Heat/Auto/Dry/Fan mode and set temperature and fan speed.", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_unlocked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Unlocked at\nDate and time lock was unlocked.", "description": "Date and time lock was unlocked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockUnlocked.UnlockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who unlocked the lock.", "description": "The user who unlocked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockUnlocked.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockUnlocked.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockUnlocked.HouseName", "Type": "String", "Example": "San Diego Beach House"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who unlocked the lock.", "description": "An image url to the profile photo of the user who unlocked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockUnlocked.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "Brilliant Nexus", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "brilliant_nexus.ACExecution", "Filter code method": "BrilliantNexus.acExecution.skip(string?: reason)", "Runtime method": "runAction(\"brilliant_nexus.ACExecution\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device Name", "Helper text": "Name of the AC device which you have created in Brilliant Nexus", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Mode", "Helper text": "Select the Mode which you want to set it too", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "BrilliantNexus.acExecution.setMode(string: mode)"}}, {"section": "Action fields", "title": "Temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Temperature", "Helper text": "Set the AC temperature you want to set it for the mode", "Slug": "temperature", "Required": "true", "Can have default value": "true", "Filter code method": "BrilliantNexus.acExecution.setTemperature(string: temperature)"}}, {"section": "Action fields", "title": "Fan speed\nDropdown list", "description": "Dropdown list", "details": {"Label": "Fan speed", "Helper text": "set your fan speed for the AC on selected mode", "Slug": "fan_speed", "Required": "true", "Can have default value": "true", "Filter code method": "BrilliantNexus.acExecution.setFan Speed(string: fan_speed)"}}], "filter_code": NaN}
{"original_description": "Notify me when the false alarm detection flags over 80% of my alarm videos in my INSTAR Cloud storage.", "trigger_channel": "INSTAR", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instar.falsealarm_percent"}, "trigger_details": [{"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Instar.falsealarmPercent.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "When the Litter-Robot cycles, send over the Roomba to vacuum", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.clean_by_room", "Filter code method": "Irobot.cleanByRoom.skip(string?: reason)", "Runtime method": "runAction(\"irobot.clean_by_room\", {})"}, "action_details": [{"section": "Action fields", "title": "Room info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which room would you like to clean?", "Slug": "room_info", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This will change the WiZ light(s) of your choice to the light mode and brightness you select whenever a dishwashing cycle completes on your GE dishwasher.", "trigger_channel": "GE Appliances Dishwasher", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ge_appliances_dishwasher.dishwasher-end-of-cycle"}, "trigger_details": [{"section": "Trigger fields", "title": "Applianceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which appliance?", "Slug": "applianceId", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Appliance\nThe appliance identifier.", "description": "The appliance identifier.", "details": {"Slug": "applianceId", "Filter code": "GeAppliancesDishwasher.dishwasherEndOfCycle.Appliance", "Type": "String", "Example": "D828C901A076"}}, {"section": "Ingredients", "title": "Event\nThe appliance event.", "description": "The appliance event.", "details": {"Slug": "event", "Filter code": "GeAppliancesDishwasher.dishwasherEndOfCycle.Event", "Type": "String", "Example": "dishwasher-end-of-cycle"}}, {"section": "Ingredients", "title": "Date and time\nThe date and time the event occurred.", "description": "The date and time the event occurred.", "details": {"Slug": "time", "Filter code": "GeAppliancesDishwasher.dishwasherEndOfCycle.DateAndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Notify me when the number of new alarms in the INSTAR Cloud is over the number specified above.", "trigger_channel": "INSTAR", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instar.new_alarm"}, "trigger_details": [{"section": "Trigger fields", "title": "Quantity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Alarms Quantity", "Slug": "quantity", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Instar.newAlarm.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to set your Nest Temperature.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to turn OFF Lifx Lights.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.turn_off", "Filter code method": "Lifx.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"lifx.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fade out duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Fade out duration", "Helper text": "How long should it take for the lights to fade out.", "Slug": "fade_out_duration", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want a custom fade out duration? Set it here. Example: &quot;fade_out_duration: 7200&quot; for 2 hours. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.turnOff.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to set a Lutron brightness level.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "Lutron Caséta and RA2 Select", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lutron_caseta_wireless.set_light_level", "Filter code method": "LutronCasetaWireless.setLightLevel.skip(string?: reason)", "Runtime method": "runAction(\"lutron_caseta_wireless.set_light_level\", {})"}, "action_details": [{"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light?", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Level\nDropdown list", "description": "Dropdown list", "details": {"Label": "Set light level", "Slug": "level", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to turn OFF a Leviton room", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "My Leviton", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "my_leviton.toggle_room_off", "Filter code method": "MyLeviton.toggleRoomOff.skip(string?: reason)", "Runtime method": "runAction(\"my_leviton.toggle_room_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which room?", "Slug": "name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to begin Lifx scene.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.activate_scene", "Filter code method": "Lifx.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"lifx.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scene", "Helper text": "The Scene you'd like to activate", "Slug": "scene", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want to set a custom duration? Specify it here. Example: &quot;transition_duration: 5&quot; for a 5 second transition duration. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.activateScene.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to set a Lutron shade level.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "Lutron Caséta and RA2 Select", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lutron_caseta_wireless.set_shade_position", "Filter code method": "LutronCasetaWireless.setShadePosition.skip(string?: reason)", "Runtime method": "runAction(\"lutron_caseta_wireless.set_shade_position\", {})"}, "action_details": [{"section": "Action fields", "title": "Shade\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which shade?", "Slug": "shade", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Position\nDropdown list", "description": "Dropdown list", "details": {"Label": "Set shade position", "Slug": "position", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Open garage door when iHome button is pressed", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "Garadget", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garadget.open_door", "Filter code method": "Garadget.openDoor.skip(string?: reason)", "Runtime method": "runAction(\"garadget.open_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Helper text": "Please identify which door in your account you want to open", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to begin Leviton scene.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "My Leviton", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "my_leviton.run_scene", "Filter code method": "MyLeviton.runScene.skip(string?: reason)", "Runtime method": "runAction(\"my_leviton.run_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Changes Hubitat's mode when Flic is clicked, double clicked, or held.", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_mode", "Filter code method": "Hubitat.actionMode.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Helper text": "The new mode.", "Slug": "mode", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Starte in COQON ein Programm oder eine Szene wenn in deinem Google Kalender ein Eintrag endet.", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.event_from_search_ends"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or phrase", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.eventFromSearchEnds.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.eventFromSearchEnds.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.eventFromSearchEnds.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Start time\nDate and time the event started.", "description": "Date and time the event started.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.eventFromSearchEnds.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "End time\nDate and time the event ended.", "description": "Date and time the event ended.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.eventFromSearchEnds.EndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.eventFromSearchEnds.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.eventFromSearchEnds.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "coqon", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "coqon.simple_rule_action", "Filter code method": "Coqon.simpleRuleAction.skip(string?: reason)", "Runtime method": "runAction(\"coqon.simple_rule_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Action code\nText input > Other", "description": "Text input > Other", "details": {"Label": "action_code", "Helper text": "The code provided by the coqon rule, associating the action to the rule.", "Slug": "action_code", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "This will turn on the WiZ lights of your choice in the mode and brightness you defined whenever Aura detects motion.", "trigger_channel": "Aura", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "aura.motion"}, "trigger_details": [{"section": "Trigger fields", "title": "Serial\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select your hub", "Helper text": "The serial number is located at the back of your hub", "Slug": "serial", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Aura.motion.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Send automated birthday wishes via phone call. Better than E-Mail :-)", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_year_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Datetime\nText input", "description": "Text input", "details": {"Label": "Date and time", "Slug": "datetime", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyYearOn.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "woopla phone calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "woopla.tts_call", "Filter code method": "Woopla.ttsCall.skip(string?: reason)", "Runtime method": "runAction(\"woopla.tts_call\", {})"}, "action_details": [{"section": "Action fields", "title": "Tts\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Text", "Helper text": "Enter the text to be played when call connects.", "Slug": "tts", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCall.setTts(string: tts)"}}, {"section": "Action fields", "title": "Language\nDropdown list", "description": "Dropdown list", "details": {"Label": "Language", "Helper text": "Select text's language.", "Slug": "language", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCall.setLanguage(string: language)"}}], "filter_code": NaN}
{"original_description": "In addition to your LifeShield alarm siren, you can blink the Hue lights as a visual alert when an alarm is going off. You may select a specific alarm type or all alarm events. For all alarm events, specify '(All)' for the Event Type. Next, select by name which Hue lights to blink. ", "trigger_channel": "Blue by ADT", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "bluebyadt.alarm"}, "trigger_details": [{"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type?", "Slug": "event_type", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nDate and time alarm occurred.", "description": "Date and time alarm occurred.", "details": {"Slug": "timestamp", "Filter code": "Bluebyadt.alarm.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThe EventType describes the type of alarm that occurred.", "description": "The EventType describes the type of alarm that occurred.", "details": {"Slug": "event_type", "Filter code": "Bluebyadt.alarm.EventType", "Type": "String", "Example": "Fire"}}, {"section": "Ingredients", "title": "Formatted message\nThe FormattedMessage provides a user-friendly description of the event", "description": "The FormattedMessage provides a user-friendly description of the event", "details": {"Slug": "formatted_message", "Filter code": "Bluebyadt.alarm.FormattedMessage", "Type": "String", "Example": "Medical Alarm"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Open curtains everyday at 6am 5 minutes before you wake up in the morning", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "OSUM SMART", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "osumsmart.open", "Filter code method": "Osumsmart.open.skip(string?: reason)", "Runtime method": "runAction(\"osumsmart.open\", {})"}, "action_details": [{"section": "Action fields", "title": "Device list\nDropdown list", "description": "Dropdown list", "details": {"Label": "Devices", "Helper text": "Device to operate", "Slug": "device_list", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Play Stream", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_stream", "Filter code method": "Sonos.playStream.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_stream\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "What do you want to play?", "Helper text": "Enter the URL of the audio stream you want to play", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playStream.setUrl(string: url)"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Name\nText input > Title", "description": "Text input > Title", "details": {"Label": "What name do you want to show for this stream?", "Slug": "name", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.playStream.setName(string: name)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "What image do you want to show for this stream?", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.playStream.setImage Url(string: image_url)"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playStream.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Press this button to buy/sell stocks. You can customize which stock to buy or sell and set the quantity.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.place_market_order", "Filter code method": "Alpaca.placeMarketOrder.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.place_market_order\", {})"}, "action_details": [{"section": "Action fields", "title": "Symbol\nText input > Title", "description": "Text input > Title", "details": {"Label": "Symbol", "Helper text": "The symbol to place the order for.", "Slug": "symbol", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSymbol(string: symbol)"}}, {"section": "Action fields", "title": "Side\nDropdown list", "description": "Dropdown list", "details": {"Label": "Side", "Helper text": "The side to place the order for.", "Slug": "side", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSide(string: side)"}}, {"section": "Action fields", "title": "Qty\nText input > Title", "description": "Text input > Title", "details": {"Label": "Quantity", "Helper text": "The number of shares to place the order for.", "Slug": "qty", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setQty(string: qty)"}}], "filter_code": NaN}
{"original_description": "Turn off your lights when it is time for bed", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_off", "Filter code method": "Kasa.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn off", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When your August lock is engaged, your Blink System is armed", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_locked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Locked at\nDate and time lock was locked.", "description": "Date and time lock was locked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockLocked.LockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who locked the lock.", "description": "The user who locked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockLocked.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockLocked.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockLocked.HouseName", "Type": "String", "Example": "San Diego beach house"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who locked the lock.", "description": "An image url to the profile photo of the user who locked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockLocked.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Collect all your Reddit upvotes to Histre to bookmark them and use them for improving your recommendations.", "trigger_channel": "Reddit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "reddit.new_dislike_by_you_reddit"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nTitle of this post.", "description": "Title of this post.", "details": {"Slug": "Title", "Filter code": "Reddit.newDislikeByYouReddit.Title", "Type": "String", "Example": "Little Bobby Tables!"}}, {"section": "Ingredients", "title": "Image url\nURL to the post's image if one exists.", "description": "URL to the post's image if one exists.", "details": {"Slug": "ImageURL", "Filter code": "Reddit.newDislikeByYouReddit.ImageURL", "Type": "String", "Example": "http://imgs.xkcd.com/comics/exploits_of_a_mom.png"}}, {"section": "Ingredients", "title": "Content\nContent of this post, may be text or external link.", "description": "Content of this post, may be text or external link.", "details": {"Slug": "Content", "Filter code": "Reddit.newDislikeByYouReddit.Content", "Type": "String", "Example": "http://xkcd.com/327"}}, {"section": "Ingredients", "title": "Content html\nContent of this post in HTML.", "description": "Content of this post in HTML.", "details": {"Slug": "ContentHTML", "Filter code": "Reddit.newDislikeByYouReddit.ContentHTML", "Type": "String", "Example": "http://xkcd.com/327"}}, {"section": "Ingredients", "title": "Post url\nURL to this post on reddit.", "description": "URL to this post on reddit.", "details": {"Slug": "PostURL", "Filter code": "Reddit.newDislikeByYouReddit.PostURL", "Type": "String", "Example": "http://www.reddit.com/r/ProgrammerHumor/comments/16dazp/little_bobby_tables_xkcd/"}}, {"section": "Ingredients", "title": "Subreddit\nName of the subreddit where this item was posted.", "description": "Name of the subreddit where this item was posted.", "details": {"Slug": "Subreddit", "Filter code": "Reddit.newDislikeByYouReddit.Subreddit", "Type": "String", "Example": "ifttt"}}, {"section": "Ingredients", "title": "Author\nUsername of this post's author.", "description": "Username of this post's author.", "details": {"Slug": "Author", "Filter code": "Reddit.newDislikeByYouReddit.Author", "Type": "String", "Example": "ltibbets"}}, {"section": "Ingredients", "title": "Posted at\nDate this post was posted.", "description": "Date this post was posted.", "details": {"Slug": "PostedAt", "Filter code": "Reddit.newDislikeByYouReddit.PostedAt", "Type": "String", "Example": "August 23, 2013 at 05:00PM"}}], "action_channel": "Histre", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "histre.add_note", "Filter code method": "Histre.addNote.skip(string?: reason)", "Runtime method": "runAction(\"histre.add_note\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Histre.addNote.setUrl(string: url)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Histre.addNote.setTitle(string: title)"}}, {"section": "Action fields", "title": "Note\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Histre.addNote.setNote(string: note)"}}], "filter_code": NaN}
{"original_description": "Save energy by making sure that your hue lights are off at midnight each night.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use this applet to save the notes you take on Instapaper into your Histre notebook.", "trigger_channel": "Instapaper", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instapaper.new_liked_item"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the liked item.", "description": "The title of the liked item.", "details": {"Slug": "title", "Filter code": "Instapaper.newLikedItem.Title", "Type": "String", "Example": "The Computer for the 21st Century"}}, {"section": "Ingredients", "title": "Description\nThe description of the liked item.", "description": "The description of the liked item.", "details": {"Slug": "description", "Filter code": "Instapaper.newLikedItem.Description", "Type": "String", "Example": "The most profound technologies are those that disappear. They weave themselves into the fabric of everyday life until they are indistinguishable from it. Consider writing, perhaps the first information..."}}, {"section": "Ingredients", "title": "Url\nThe URL of the liked item.", "description": "The URL of the liked item.", "details": {"Slug": "url", "Filter code": "Instapaper.newLikedItem.URL", "Type": "Web URL", "Example": "http://www.ubiq.com/hypertext/weiser/SciAmDraft3.html"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Instapaper.newLikedItem.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Histre", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "histre.add_note", "Filter code method": "Histre.addNote.skip(string?: reason)", "Runtime method": "runAction(\"histre.add_note\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Histre.addNote.setUrl(string: url)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Histre.addNote.setTitle(string: title)"}}, {"section": "Action fields", "title": "Note\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Histre.addNote.setNote(string: note)"}}], "filter_code": NaN}
{"original_description": "When your Blue by ADT system is armed away, pause a Sonos stream. You must specify where to pause it.\n", "trigger_channel": "Blue by ADT", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "bluebyadt.arm_state_change"}, "trigger_details": [{"section": "Trigger fields", "title": "Arm type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Arm Type?", "Slug": "arm_type", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "timestamp", "Filter code": "Bluebyadt.armStateChange.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThe EventType describes the type of event that occurred.", "description": "The EventType describes the type of event that occurred.", "details": {"Slug": "event_type", "Filter code": "Bluebyadt.armStateChange.EventType", "Type": "String", "Example": "System Disarmed"}}, {"section": "Ingredients", "title": "Formatted message\nThe FormattedMessage provides a user-friendly description of the event", "description": "The FormattedMessage provides a user-friendly description of the event", "details": {"Slug": "formatted_message", "Filter code": "Bluebyadt.armStateChange.FormattedMessage", "Type": "String", "Example": "Disarmed"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.pause", "Filter code method": "Sonos.pause.skip(string?: reason)", "Runtime method": "runAction(\"sonos.pause\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to pause?", "Helper text": "Select room. The group containing this room will pause playback.", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pause entire household?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.pause.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Set an everyday cleaning cycle for your Neato Robot using your calendar", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Neato", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "neato.start_cleaning", "Filter code method": "Neato.startCleaning.skip(string?: reason)", "Runtime method": "runAction(\"neato.start_cleaning\", {})"}, "action_details": [{"section": "Action fields", "title": "Select a robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select a robot", "Slug": "select_a_robot", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Tell Ambi Climate you're feeling comfortable via button, either through your mobile or smart watch.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Ambi Climate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ambiclimate.feedback", "Filter code method": "Ambiclimate.feedback.skip(string?: reason)", "Runtime method": "runAction(\"ambiclimate.feedback\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Feedback\nDropdown list", "description": "Dropdown list", "details": {"Label": "feedback", "Slug": "feedback", "Required": "true", "Can have default value": "true", "Filter code method": "Ambiclimate.feedback.setFeedback(string: feedback)"}}], "filter_code": NaN}
{"original_description": "Whenever you \"Share\" something via Pocket, it'll go straight to your Buffer Queue.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_tagged_item_pocket"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Single tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newTaggedItemPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newTaggedItemPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newTaggedItemPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newTaggedItemPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newTaggedItemPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newTaggedItemPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Buffer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "buffer.add_to_buffer", "Filter code method": "Buffer.addToBuffer.skip(string?: reason)", "Runtime method": "runAction(\"buffer.add_to_buffer\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Update", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBuffer.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Tell Ambi Climate you're feeling cold via button, either through your mobile or smart watch.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Ambi Climate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ambiclimate.feedback", "Filter code method": "Ambiclimate.feedback.skip(string?: reason)", "Runtime method": "runAction(\"ambiclimate.feedback\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Feedback\nDropdown list", "description": "Dropdown list", "details": {"Label": "feedback", "Slug": "feedback", "Required": "true", "Can have default value": "true", "Filter code method": "Ambiclimate.feedback.setFeedback(string: feedback)"}}], "filter_code": NaN}
{"original_description": "Tell Ambi Climate you're feeling hot via button, either through your mobile or smart watch.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Ambi Climate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ambiclimate.feedback", "Filter code method": "Ambiclimate.feedback.skip(string?: reason)", "Runtime method": "runAction(\"ambiclimate.feedback\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Feedback\nDropdown list", "description": "Dropdown list", "details": {"Label": "feedback", "Slug": "feedback", "Required": "true", "Can have default value": "true", "Filter code method": "Ambiclimate.feedback.setFeedback(string: feedback)"}}], "filter_code": NaN}
{"original_description": "Volume Down", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.decrease_volume", "Filter code method": "Sonos.decreaseVolume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.decrease_volume\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to change the volume?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Change the volume for this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.decreaseVolume.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Configure a Nexia automation to run when my child arrives at home.", "trigger_channel": "dondeEsta Family", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dondeesta.kid_arrived_at_home"}, "trigger_details": [{"section": "Ingredients", "title": "Name\nName of the kid arriving at home.", "description": "Name of the kid arriving at home.", "details": {"Slug": "name", "Filter code": "Dondeesta.kidArrivedAtHome.Name", "Type": "String", "Example": "John"}}, {"section": "Ingredients", "title": "Time\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "time", "Filter code": "Dondeesta.kidArrivedAtHome.Time", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Nexia", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nexia.nexia_automation"}, "action_details": [{"section": "Trigger fields", "title": "Nexia automation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which automation?", "Helper text": "This automation must be configured in Nexia to have &quot;Notify IFTTT&quot; as it's action.", "Slug": "nexia_automation", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nexia.nexiaAutomation.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Nexia automation name\nThe name of your Nexia automation", "description": "The name of your Nexia automation", "details": {"Slug": "nexia_automation_name", "Filter code": "Nexia.nexiaAutomation.NexiaAutomationName", "Type": "String", "Example": "\"My First Automation\""}}, {"section": "Ingredients", "title": "House name\nThe name of the house of your automation", "description": "The name of the house of your automation", "details": {"Slug": "house_name", "Filter code": "Nexia.nexiaAutomation.HouseName", "Type": "String", "Example": "\"Home\""}}], "filter_code": NaN}
{"original_description": "Save £1 every time you achieve your calorie goals on Fitbit", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.daily-calorie-burn-goal"}, "trigger_details": [{"section": "Ingredients", "title": "Calorie burn goal\nYour daily calorie burn goal", "description": "Your daily calorie burn goal", "details": {"Slug": "CalorieBurnGoal", "Filter code": "Fitbit.dailyCalorieBurnGoal.CalorieBurnGoal", "Type": "String", "Example": "2000"}}, {"section": "Ingredients", "title": "Calories burned\nNumber of calories burned", "description": "Number of calories burned", "details": {"Slug": "CaloriesBurned", "Filter code": "Fitbit.dailyCalorieBurnGoal.CaloriesBurned", "Type": "String", "Example": "2123"}}, {"section": "Ingredients", "title": "Date achieved\nDate you achieved your calorie burn goal", "description": "Date you achieved your calorie burn goal", "details": {"Slug": "DateAchieved", "Filter code": "Fitbit.dailyCalorieBurnGoal.DateAchieved", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "Dozens", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dozens.save", "Filter code method": "Dozens.save.skip(string?: reason)", "Runtime method": "runAction(\"dozens.save\", {})"}, "action_details": [{"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount", "Helper text": "Specify amount that should be moved to savings account", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Dozens.save.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "Receive an Android SMS when the Litter-Robot waste drawer is full", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "Arms Blink Security System when the Hubitat mode changes.", "trigger_channel": "Hubitat", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hubitat.trigger_mode"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe new mode.", "description": "The new mode.", "details": {"Slug": "val", "Filter code": "Hubitat.triggerMode.Mode", "Type": "String", "Example": "Day"}}, {"section": "Ingredients", "title": "Changed at\nDate/Time the mode changed.", "description": "Date/Time the mode changed.", "details": {"Slug": "time", "Filter code": "Hubitat.triggerMode.ChangedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Arms Arlo when the Hubitat mode changes.", "trigger_channel": "Hubitat", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hubitat.trigger_mode"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe new mode.", "description": "The new mode.", "details": {"Slug": "val", "Filter code": "Hubitat.triggerMode.Mode", "Type": "String", "Example": "Day"}}, {"section": "Ingredients", "title": "Changed at\nDate/Time the mode changed.", "description": "Date/Time the mode changed.", "details": {"Slug": "time", "Filter code": "Hubitat.triggerMode.ChangedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Arlo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "arlo.arm", "Filter code method": "Arlo.arm.skip(string?: reason)", "Runtime method": "runAction(\"arlo.arm\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Disarms Blink Security System when the Hubitat mode changes.", "trigger_channel": "Hubitat", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hubitat.trigger_mode"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe new mode.", "description": "The new mode.", "details": {"Slug": "val", "Filter code": "Hubitat.triggerMode.Mode", "Type": "String", "Example": "Day"}}, {"section": "Ingredients", "title": "Changed at\nDate/Time the mode changed.", "description": "Date/Time the mode changed.", "details": {"Slug": "time", "Filter code": "Hubitat.triggerMode.ChangedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Disarms Arlo when the Hubitat mode changes.", "trigger_channel": "Hubitat", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hubitat.trigger_mode"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe new mode.", "description": "The new mode.", "details": {"Slug": "val", "Filter code": "Hubitat.triggerMode.Mode", "Type": "String", "Example": "Day"}}, {"section": "Ingredients", "title": "Changed at\nDate/Time the mode changed.", "description": "Date/Time the mode changed.", "details": {"Slug": "time", "Filter code": "Hubitat.triggerMode.ChangedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Arlo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "arlo.arm", "Filter code method": "Arlo.arm.skip(string?: reason)", "Runtime method": "runAction(\"arlo.arm\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Changes Hubitat's mode when the Scout Alarm mode changes to armed.", "trigger_channel": "Scout Alarm", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "scoutalarm.mode_armed"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Name\nName of mode.", "description": "Name of mode.", "details": {"Slug": "name", "Filter code": "Scoutalarm.modeArmed.Name", "Type": "String", "Example": "Away"}}, {"section": "Ingredients", "title": "Formatted text\nText shown in activity feed.", "description": "Text shown in activity feed.", "details": {"Slug": "formatted_text", "Filter code": "Scoutalarm.modeArmed.FormattedText", "Type": "String", "Example": "Dave via IFTTT armed Away mode"}}, {"section": "Ingredients", "title": "Event\nState of mode.", "description": "State of mode.", "details": {"Slug": "event", "Filter code": "Scoutalarm.modeArmed.Event", "Type": "String", "Example": "Armed"}}, {"section": "Ingredients", "title": "By\nThe name of the person or thing that triggered the mode to arm.", "description": "The name of the person or thing that triggered the mode to arm.", "details": {"Slug": "by", "Filter code": "Scoutalarm.modeArmed.By", "Type": "String", "Example": "Dave via IFTTT"}}, {"section": "Ingredients", "title": "At\nDate and time the mode was armed.", "description": "Date and time the mode was armed.", "details": {"Slug": "at", "Filter code": "Scoutalarm.modeArmed.At", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_mode", "Filter code method": "Hubitat.actionMode.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Helper text": "The new mode.", "Slug": "mode", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Sets your Blink (Europe) system to armed when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "Blink (Europe)", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink_eu.network_arm", "Filter code method": "BlinkEu.networkArm.skip(string?: reason)", "Runtime method": "runAction(\"blink_eu.network_arm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to arm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Pauses Sonos playback when Apilio triggers the action you specify", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.pause", "Filter code method": "Sonos.pause.skip(string?: reason)", "Runtime method": "runAction(\"sonos.pause\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to pause?", "Helper text": "Select room. The group containing this room will pause playback.", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pause entire household?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.pause.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Sets your Blink (Europe) system to disarmed when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "Blink (Europe)", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink_eu.network_disarm", "Filter code method": "BlinkEu.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink_eu.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Changes Hubitat's mode when the Scout Alarm mode changes to disarmed.", "trigger_channel": "Scout Alarm", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "scoutalarm.mode_disarmed"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Name\nName of mode.", "description": "Name of mode.", "details": {"Slug": "name", "Filter code": "Scoutalarm.modeDisarmed.Name", "Type": "String", "Example": "Away"}}, {"section": "Ingredients", "title": "Formatted text\nText shown in activity feed.", "description": "Text shown in activity feed.", "details": {"Slug": "formatted_text", "Filter code": "Scoutalarm.modeDisarmed.FormattedText", "Type": "String", "Example": "Dave via IFTTT disarmed Away mode"}}, {"section": "Ingredients", "title": "Event\nState of mode.", "description": "State of mode.", "details": {"Slug": "event", "Filter code": "Scoutalarm.modeDisarmed.Event", "Type": "String", "Example": "Armed"}}, {"section": "Ingredients", "title": "By\nThe name of the person or thing that triggered the mode to start arming.", "description": "The name of the person or thing that triggered the mode to start arming.", "details": {"Slug": "by", "Filter code": "Scoutalarm.modeDisarmed.By", "Type": "String", "Example": "Dave via IFTTT"}}, {"section": "Ingredients", "title": "At\nDate and time the mode was arming.", "description": "Date and time the mode was arming.", "details": {"Slug": "at", "Filter code": "Scoutalarm.modeDisarmed.At", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_mode", "Filter code method": "Hubitat.actionMode.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Helper text": "The new mode.", "Slug": "mode", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Plays a Sonos favorite of your choice when Apilio triggers the action you specify", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_favorite", "Filter code method": "Sonos.playFavorite.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_favorite\", {})"}, "action_details": [{"section": "Action fields", "title": "Favorite\nDropdown list", "description": "Dropdown list", "details": {"Label": "What favorite do you want to play?", "Helper text": "Choose a Sonos Favorite", "Slug": "favorite", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playFavorite.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Turns off the LightwaveRF light of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "LightwaveRF Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lightwaverf_lighting.switch_off_light", "Filter code method": "LightwaverfLighting.switchOffLight.skip(string?: reason)", "Runtime method": "runAction(\"lightwaverf_lighting.switch_off_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Which light\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Light?", "Slug": "which_light", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turns off the LightwaveRF light of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "LightwaveRF Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lightwaverf_lighting.switch_off_light", "Filter code method": "LightwaverfLighting.switchOffLight.skip(string?: reason)", "Runtime method": "runAction(\"lightwaverf_lighting.switch_off_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Which light\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Light?", "Slug": "which_light", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turns off the LightwaveRF light of your choice when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "LightwaveRF Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lightwaverf_lighting.switch_off_light", "Filter code method": "LightwaverfLighting.switchOffLight.skip(string?: reason)", "Runtime method": "runAction(\"lightwaverf_lighting.switch_off_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Which light\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Light?", "Slug": "which_light", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Changes the color of the MagicHue lights you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.ChangeColor", "Filter code method": "Magichue.changeColor.skip(string?: reason)", "Runtime method": "runAction(\"magichue.ChangeColor\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness level", "Slug": "brightness", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have iRobot clean the room when the Litter-Robot waste drawer is full", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.clean_by_room", "Filter code method": "Irobot.cleanByRoom.skip(string?: reason)", "Runtime method": "runAction(\"irobot.clean_by_room\", {})"}, "action_details": [{"section": "Action fields", "title": "Room info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which room would you like to clean?", "Slug": "room_info", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Updates a boolean variable to false when SmartThings no longer detects someone present.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.new_present_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Arrived at\nThe date and time you arrived.", "description": "The date and time you arrived.", "details": {"Slug": "ArrivedAt", "Filter code": "SmartthingsV2.newPresentSmartthings.ArrivedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.newPresentSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.boolean_variable_toggle_updates", "Filter code method": "Apilio.booleanVariableToggleUpdates.skip(string?: reason)", "Runtime method": "runAction(\"apilio.boolean_variable_toggle_updates\", {})"}, "action_details": [{"section": "Action fields", "title": "Variable identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio variable do you want to toggle?", "Helper text": "The variable will change from true to false or from false to true", "Slug": "variable_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Receive notifications whenever there is news about the Tokyo Olympics.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_rich_notification", "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Helper text": "Optional, bold text above the message", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Helper text": "Optional, link may open in a browser or installed app", "Slug": "link_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Cette applet permet de passer un pilote en mode \"lock\" tous les jours après une certaine heure. Lorsque le produit passe en mode \"lock\" les LEDs s'éteignent. C'est pratique si vous avez un pilote dans votre chambre et que la lumière vous dérange pour dormir.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Heatzy", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "heatzy.a-close-child-lock-mode", "Filter code method": "Heatzy.aCloseChildLockMode.skip(string?: reason)", "Runtime method": "runAction(\"heatzy.a-close-child-lock-mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "Select supported device.", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Cette applet permet de désactiver le mode \"lock\" de vos produits tous les matins après une certaine heure.\nSi le produit est en mode \"lock\" la nuit pour vous permettre de mieux dormir, il peut aussi repasser en mode normal la journée pour vous permettre de l'utiliser normalement.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Heatzy", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "heatzy.a-close-child-lock-mode", "Filter code method": "Heatzy.aCloseChildLockMode.skip(string?: reason)", "Runtime method": "runAction(\"heatzy.a-close-child-lock-mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "Select supported device.", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When the waste drawer is full, create an Asana task to empty the drawer", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "Asana", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "asana.create_task", "Filter code method": "Asana.createTask.skip(string?: reason)", "Runtime method": "runAction(\"asana.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Which workspace\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which workspace?", "Slug": "which_workspace", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Project name\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "In which project?", "Helper text": "Enter project name exactly as it appears in Asana.", "Slug": "project_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true", "Filter code method": "Asana.createTask.setTask Name(string: task_name)"}}, {"section": "Action fields", "title": "Notes\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Notes", "Helper text": "Optional", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "Asana.createTask.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Due on\nText input > Other", "description": "Text input > Other", "details": {"Label": "Due on", "Helper text": "Optional. Use a date Ingredient or enter as YYYY-MM-DD", "Slug": "due_on", "Required": "false", "Can have default value": "true", "Filter code method": "Asana.createTask.setDue On(string: due_on)"}}, {"section": "Action fields", "title": "Assignee\nDropdown list", "description": "Dropdown list", "details": {"Label": "Assignee", "Helper text": "Optional", "Slug": "assignee", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Tag name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Add a tag?", "Helper text": "Optional", "Slug": "tag_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Attach a file\nText input > File", "description": "Text input > File", "details": {"Label": "Attach a file?", "Slug": "attach_a_file", "Required": "false", "Can have default value": "true", "Filter code method": "Asana.createTask.setAttach A File(string: attach_a_file)"}}], "filter_code": NaN}
{"original_description": "Get a notification on all your Triby when Foobot notices a high level of pollution (higher than 50)", "trigger_channel": "Foobot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "foobot.allPollu50Any"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Foobot?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Event time\nDate & time threshold was reached.", "description": "Date & time threshold was reached.", "details": {"Slug": "created_at", "Filter code": "Foobot.allPollu50Any.EventTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Foobot.", "description": "The name of the Foobot.", "details": {"Slug": "device_name", "Filter code": "Foobot.allPollu50Any.DeviceName", "Type": "String", "Example": "HappyBot"}}, {"section": "Ingredients", "title": "Value\nThe global pollution value.", "description": "The global pollution value.", "details": {"Slug": "value", "Filter code": "Foobot.allPollu50Any.Value", "Type": "String", "Example": "73.70"}}], "action_channel": "Invoxia Triby", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "invoxia_triby.send_a_message_to_every_triby", "Filter code method": "InvoxiaTriby.sendAMessageToEveryTriby.skip(string?: reason)", "Runtime method": "runAction(\"invoxia_triby.send_a_message_to_every_triby\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What message?", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "InvoxiaTriby.sendAMessageToEveryTriby.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This will automatically change the WiZ light(s) of your choice to Cozy mode if SmartThings detects that the temperature has dropped below the level you have defined.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.temperature_drops_below_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Temperature value", "Helper text": "Temperature threshold as a number", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Temperature units", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temperature fahrenheit\nThe temperature measured by the sensor in Fahrenheit.", "description": "The temperature measured by the sensor in Fahrenheit.", "details": {"Slug": "TemperatureFahrenheit", "Filter code": "SmartthingsV2.temperatureDropsBelowSmartthings.TemperatureFahrenheit", "Type": "String", "Example": "74"}}, {"section": "Ingredients", "title": "Temperature celsius\nThe temperature measured by the sensor in Celsius.", "description": "The temperature measured by the sensor in Celsius.", "details": {"Slug": "TemperatureCelsius", "Filter code": "SmartthingsV2.temperatureDropsBelowSmartthings.TemperatureCelsius", "Type": "String", "Example": "23"}}, {"section": "Ingredients", "title": "Threshold\nThe temperature threshold set in the recipe.", "description": "The temperature threshold set in the recipe.", "details": {"Slug": "Threshold", "Filter code": "SmartthingsV2.temperatureDropsBelowSmartthings.Threshold", "Type": "String", "Example": "75"}}, {"section": "Ingredients", "title": "Threshold units\nThe temperature threshold units (C or F).", "description": "The temperature threshold units (C or F).", "details": {"Slug": "ThresholdUnits", "Filter code": "SmartthingsV2.temperatureDropsBelowSmartthings.ThresholdUnits", "Type": "String", "Example": "F"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the sensor measured the temperature.", "description": "The date and time the sensor measured the temperature.", "details": {"Slug": "MeasuredAt", "Filter code": "SmartthingsV2.temperatureDropsBelowSmartthings.MeasuredAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.temperatureDropsBelowSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Create a Google Calendar event to make sure you have time to handle a voicemail from Zoom Phone.", "trigger_channel": "Zoom Phone", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "zoom_phone.new_user_voicemail"}, "trigger_details": [{"section": "Trigger fields", "title": "Voicemail status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which status should the voicemail have?", "Helper text": "Is the voicemail read or unread?", "Slug": "voicemail_status", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Voicemail\nThe ID of the voicemail.", "description": "The ID of the voicemail.", "details": {"Slug": "voicemail_id", "Filter code": "ZoomPhone.newUserVoicemail.VoicemailId", "Type": "String", "Example": "alkdoweinld"}}, {"section": "Ingredients", "title": "Call date\nThe start time of the voicemail.", "description": "The start time of the voicemail.", "details": {"Slug": "call_date", "Filter code": "ZoomPhone.newUserVoicemail.CallDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Voicemail duration\nThe duration of the voicemail in format HH:MM:SS.", "description": "The duration of the voicemail in format HH:MM:SS.", "details": {"Slug": "voicemail_duration", "Filter code": "ZoomPhone.newUserVoicemail.VoicemailDuration", "Type": "String", "Example": "00:03:21"}}, {"section": "Ingredients", "title": "Caller number\nThe phone number of the caller.", "description": "The phone number of the caller.", "details": {"Slug": "caller_number", "Filter code": "ZoomPhone.newUserVoicemail.CallerNumber", "Type": "String", "Example": "12345678"}}, {"section": "Ingredients", "title": "Caller name\nThe name of the caller.", "description": "The name of the caller.", "details": {"Slug": "caller_name", "Filter code": "ZoomPhone.newUserVoicemail.CallerName", "Type": "String", "Example": "Biff McIftt"}}, {"section": "Ingredients", "title": "Caller number type\nThe source of the caller's phone number -- Internal or External.", "description": "The source of the caller's phone number -- Internal or External.", "details": {"Slug": "caller_number_type", "Filter code": "ZoomPhone.newUserVoicemail.CallerNumberType", "Type": "String", "Example": "external"}}, {"section": "Ingredients", "title": "Callee number\nThe phone number of the user who received the voicemail.", "description": "The phone number of the user who received the voicemail.", "details": {"Slug": "callee_number", "Filter code": "ZoomPhone.newUserVoicemail.CalleeNumber", "Type": "String", "Example": "Biff McIfttt"}}, {"section": "Ingredients", "title": "Callee name\nThe name of the user who received the voicemail.", "description": "The name of the user who received the voicemail.", "details": {"Slug": "callee_name", "Filter code": "ZoomPhone.newUserVoicemail.CalleeName", "Type": "String", "Example": "Biff McIfttt"}}, {"section": "Ingredients", "title": "Callee number type\nThe source of the callee's phone number -- Internal or External.", "description": "The source of the callee's phone number -- Internal or External.", "details": {"Slug": "callee_number_type", "Filter code": "ZoomPhone.newUserVoicemail.CalleeNumberType", "Type": "String", "Example": "internal"}}, {"section": "Ingredients", "title": "Voicemail status\nThe status of the voicemail -- read or unread.", "description": "The status of the voicemail -- read or unread.", "details": {"Slug": "voicemail_status", "Filter code": "ZoomPhone.newUserVoicemail.VoicemailStatus", "Type": "String", "Example": "unread"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Send a message to Teams when there is a new Asana Project that is created.", "trigger_channel": "Asana", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "asana.new_project"}, "trigger_details": [{"section": "Trigger fields", "title": "Which workspace\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which workspace?", "Slug": "which_workspace", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Asana.newProject.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Project name\nThe name of the project the task is for.", "description": "The name of the project the task is for.", "details": {"Slug": "project_name", "Filter code": "Asana.newProject.ProjectName", "Type": "String", "Example": "Cool things to do with Asana!"}}, {"section": "Ingredients", "title": "Workspace\nThe name of the workspace the project was added to.", "description": "The name of the workspace the project was added to.", "details": {"Slug": "workspace", "Filter code": "Asana.newProject.Workspace", "Type": "String", "Example": "Team Asana"}}, {"section": "Ingredients", "title": "Project description\nDescription associated with the project.", "description": "Description associated with the project.", "details": {"Slug": "project_description", "Filter code": "Asana.newProject.ProjectDescription", "Type": "String", "Example": "Awesome ways you can use Asana with other services."}}, {"section": "Ingredients", "title": "Project url\nThe URL to the project on Asana.", "description": "The URL to the project on Asana.", "details": {"Slug": "project_url", "Filter code": "Asana.newProject.ProjectURL", "Type": "Web URL", "Example": "asana.com/"}}], "action_channel": "Microsoft Teams", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "microsoft_teams.post_message_to_channel", "Filter code method": "MicrosoftTeams.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"microsoft_teams.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Team and channel ids\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "team_and_channel_ids", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "What is the subject of the message?", "Helper text": "This will appear as the header text of the message", "Slug": "message_subject", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Subject(string: message_subject)"}}, {"section": "Action fields", "title": "Message body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What is the content of the message?", "Helper text": "This will appear as the body of the message", "Slug": "message_body", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Body(string: message_body)"}}, {"section": "Action fields", "title": "Message urgency\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the urgency of the message?", "Helper text": "Select between <a href=\"https://support.microsoft.com/en-us/office/mark-a-message-as-important-or-urgent-in-teams-ea99d5b6-1317-4550-8d75-86ff14cd4462\" target=\"_blank\">Normal, Important, or Urgent</a> to call desired attention to your message", "Slug": "message_urgency", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Urgency(string: message_urgency)"}}], "filter_code": NaN}
{"original_description": "Quand je reçois un SMS sur mon Smartphone il est affiché sur l'écran où est branché ma Bbox Miami.", "trigger_channel": "Android SMS", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_messages.received_a_message"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the message.", "description": "The contact name associated with the message.", "details": {"Slug": "ContactName", "Filter code": "AndroidMessages.receivedAMessage.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Text\nThe text of the message", "description": "The text of the message", "details": {"Slug": "Text", "Filter code": "AndroidMessages.receivedAMessage.Text", "Type": "String", "Example": "Hey there! How's it going?"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the message was received.", "description": "The time the message was received.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidMessages.receivedAMessage.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe number that sent the message", "description": "The number that sent the message", "details": {"Slug": "FromNumber", "Filter code": "AndroidMessages.receivedAMessage.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidMessages.receivedAMessage.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Bbox Miami", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "bbox_miami.send_toast", "Filter code method": "BboxMiami.sendToast.skip(string?: reason)", "Runtime method": "runAction(\"bbox_miami.send_toast\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What message would you like to send?", "Helper text": "This message will be sent to your Bbox Miami", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "BboxMiami.sendToast.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Get a message to your Teams channel when there is a new book on the NYT Best Sellers list.", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_book_on_a_best_seller_list"}, "trigger_details": [{"section": "Trigger fields", "title": "List\nDropdown list", "description": "Dropdown list", "details": {"Label": "Best Sellers List", "Slug": "list", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newBookOnABestSellerList.Title", "Type": "String", "Example": "Thinking, Fast and Slow"}}, {"section": "Ingredients", "title": "Description\nThe book's description", "description": "The book's description", "details": {"Slug": "Description", "Filter code": "Nytimes.newBookOnABestSellerList.Description", "Type": "String", "Example": "The winner of the Nobel in economic science discusses how we make choices..."}}, {"section": "Ingredients", "title": "Book cover image url\nA URL to the book's cover image", "description": "A URL to the book's cover image", "details": {"Slug": "BookCoverImageUrl", "Filter code": "Nytimes.newBookOnABestSellerList.BookCoverImageUrl", "Type": "String", "Example": "http://images.amazon.com/images/P/0553801473.01.LZZZZZZZ.jpg"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newBookOnABestSellerList.Author", "Type": "String", "Example": "Daniel Kahneman"}}, {"section": "Ingredients", "title": "Publisher\nThe name of the book's publisher", "description": "The name of the book's publisher", "details": {"Slug": "Publisher", "Filter code": "Nytimes.newBookOnABestSellerList.Publisher", "Type": "String", "Example": "Farrar, Straus and Giroux"}}, {"section": "Ingredients", "title": "Best seller category", "description": "", "details": {"Slug": "BestSellerCategory", "Filter code": "Nytimes.newBookOnABestSellerList.BestSellerCategory", "Type": "String", "Example": "Business"}}, {"section": "Ingredients", "title": "Rank\nRank this week on the list", "description": "Rank this week on the list", "details": {"Slug": "Rank", "Filter code": "Nytimes.newBookOnABestSellerList.Rank", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Weeks on list\nNumber of weeks on the list", "description": "Number of weeks on the list", "details": {"Slug": "WeeksOnList", "Filter code": "Nytimes.newBookOnABestSellerList.WeeksOnList", "Type": "String", "Example": "23"}}, {"section": "Ingredients", "title": "Best seller listed date\nThe listed date of the book", "description": "The listed date of the book", "details": {"Slug": "BestSellerListedDate", "Filter code": "Nytimes.newBookOnABestSellerList.BestSellerListedDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Isbn\nISBN Number (ISBN 13)", "description": "ISBN Number (ISBN 13)", "details": {"Slug": "ISBN", "Filter code": "Nytimes.newBookOnABestSellerList.ISBN", "Type": "String", "Example": "1726474927483"}}], "action_channel": "Microsoft Teams", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "microsoft_teams.post_message_to_channel", "Filter code method": "MicrosoftTeams.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"microsoft_teams.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Team and channel ids\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "team_and_channel_ids", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "What is the subject of the message?", "Helper text": "This will appear as the header text of the message", "Slug": "message_subject", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Subject(string: message_subject)"}}, {"section": "Action fields", "title": "Message body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What is the content of the message?", "Helper text": "This will appear as the body of the message", "Slug": "message_body", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Body(string: message_body)"}}, {"section": "Action fields", "title": "Message urgency\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the urgency of the message?", "Helper text": "Select between <a href=\"https://support.microsoft.com/en-us/office/mark-a-message-as-important-or-urgent-in-teams-ea99d5b6-1317-4550-8d75-86ff14cd4462\" target=\"_blank\">Normal, Important, or Urgent</a> to call desired attention to your message", "Slug": "message_urgency", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Urgency(string: message_urgency)"}}], "filter_code": NaN}
{"original_description": "Get a daily reminder on your Kronaby watch to do that thing you always forget to do.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Kronaby", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kronaby.notify", "Filter code method": "Kronaby.notify.skip(string?: reason)", "Runtime method": "runAction(\"kronaby.notify\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Notification", "description": "Text input > Notification", "details": {"Label": "Enter a message", "Helper text": "This optional message will be sent as a notification to your phone.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Kronaby.notify.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "Receive a daily reminder phone call. Enter hour, minute and the text to be played when call connects. Register your phone number at woop.la/ifttt to receive phone calls.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "woopla phone calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "woopla.tts_call", "Filter code method": "Woopla.ttsCall.skip(string?: reason)", "Runtime method": "runAction(\"woopla.tts_call\", {})"}, "action_details": [{"section": "Action fields", "title": "Tts\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Text", "Helper text": "Enter the text to be played when call connects.", "Slug": "tts", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCall.setTts(string: tts)"}}, {"section": "Action fields", "title": "Language\nDropdown list", "description": "Dropdown list", "details": {"Label": "Language", "Helper text": "Select text's language.", "Slug": "language", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCall.setLanguage(string: language)"}}], "filter_code": NaN}
{"original_description": "Pause", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.pause", "Filter code method": "Sonos.pause.skip(string?: reason)", "Runtime method": "runAction(\"sonos.pause\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to pause?", "Helper text": "Select room. The group containing this room will pause playback.", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pause entire household?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.pause.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Play Favorite", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_favorite", "Filter code method": "Sonos.playFavorite.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_favorite\", {})"}, "action_details": [{"section": "Action fields", "title": "Favorite\nDropdown list", "description": "Dropdown list", "details": {"Label": "What favorite do you want to play?", "Helper text": "Choose a Sonos Favorite", "Slug": "favorite", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playFavorite.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Resume", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.resume", "Filter code method": "Sonos.resume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.resume\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to resume?", "Helper text": "Select room. The group containing this room will resume playback.", "Slug": "room", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Volume Up", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.decrease_volume", "Filter code method": "Sonos.decreaseVolume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.decrease_volume\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to change the volume?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Change the volume for this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.decreaseVolume.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Mute", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.mute", "Filter code method": "Sonos.mute.skip(string?: reason)", "Runtime method": "runAction(\"sonos.mute\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to mute?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Mute in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.mute.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Skip to next track", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.next_track", "Filter code method": "Sonos.nextTrack.skip(string?: reason)", "Runtime method": "runAction(\"sonos.next_track\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to skip?", "Helper text": "Select room. The group containing this room will skip to the next track.", "Slug": "room", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Flicボタンをダブルクリックすると、風景をランダムに切り替えます。", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Atmoph", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "atmoph.change_view", "Filter code method": "Atmoph.changeView.skip(string?: reason)", "Runtime method": "runAction(\"atmoph.change_view\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Flicボタンを長押しすると、Atmoph Window にカレンダーを表示します。もう一度長押しすると消えます。", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Atmoph", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "atmoph.show_calendar", "Filter code method": "Atmoph.showCalendar.skip(string?: reason)", "Runtime method": "runAction(\"atmoph.show_calendar\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Set Volume", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.set_volume", "Filter code method": "Sonos.setVolume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.set_volume\", {})"}, "action_details": [{"section": "Action fields", "title": "Volume\nText input > Other", "description": "Text input > Other", "details": {"Label": "What level do want the volume to be?", "Helper text": "It doesn't just go to 11. It goes way beyond 11 - enter any value between 0 (total silence) and 100 (maximum overdrive)", "Slug": "volume", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.setVolume.setVolume(string: volume)"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to set the volume?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Set the volume for this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.setVolume.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Unmute", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.unmute", "Filter code method": "Sonos.unmute.skip(string?: reason)", "Runtime method": "runAction(\"sonos.unmute\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to unmute?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Mute in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.unmute.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Set a Nest Thermostat to the temperature you specify.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": NaN}
{"original_description": "Change color for Yeelight.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.set_color", "Filter code method": "Yeelight.setColor.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.set_color\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which color?", "Slug": "color_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Let SwitchBot turn on your coffee machine in the morning", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.press_bot", "Filter code method": "Switchbot.pressBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.press_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Change the brightness of a light bulb.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.change_brightness", "Filter code method": "Kasa.changeBrightness.skip(string?: reason)", "Runtime method": "runAction(\"kasa.change_brightness\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Helper text": "Choose a Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "true", "Filter code method": "Kasa.changeBrightness.setBrightness(string: brightness)"}}], "filter_code": NaN}
{"original_description": "Skip to previous track", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.previous_track", "Filter code method": "Sonos.previousTrack.skip(string?: reason)", "Runtime method": "runAction(\"sonos.previous_track\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to skip?", "Helper text": "Select room. The group containing this room will skip to the previous track.", "Slug": "room", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Set scene for Yeelight.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.set_scene", "Filter code method": "Yeelight.setScene.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.set_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Bundle\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "bundle_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Change the color temperature of a light bulb.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.change_color_temp", "Filter code method": "Kasa.changeColorTemp.skip(string?: reason)", "Runtime method": "runAction(\"kasa.change_color_temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color Temperature", "Slug": "color_temperature", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setColor Temperature(string: color_temperature)"}}, {"section": "Action fields", "title": "Kelvin\nDropdown list", "description": "Dropdown list", "details": {"Label": "Kelvin", "Helper text": "If set, kelvin value will override the color temperature.", "Slug": "kelvin", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setKelvin(string: kelvin)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setTransition Duration(string: transition_duration)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Provide custom options here. For example : &quot;color_temperature: cool; transition_duration: 3000” for cool and 3 seconds transition duration or “kelvin: 5000; transition_duration: 2000” for temperature of 5000K and 2 seconds transition duration", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Change brightness for Yeelight.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.change_bright", "Filter code method": "Yeelight.changeBright.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.change_bright\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which brightness?", "Slug": "scene_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Change the color of a light bulb.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.change_color_temp", "Filter code method": "Kasa.changeColorTemp.skip(string?: reason)", "Runtime method": "runAction(\"kasa.change_color_temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color Temperature", "Slug": "color_temperature", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setColor Temperature(string: color_temperature)"}}, {"section": "Action fields", "title": "Kelvin\nDropdown list", "description": "Dropdown list", "details": {"Label": "Kelvin", "Helper text": "If set, kelvin value will override the color temperature.", "Slug": "kelvin", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setKelvin(string: kelvin)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setTransition Duration(string: transition_duration)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Provide custom options here. For example : &quot;color_temperature: cool; transition_duration: 3000” for cool and 3 seconds transition duration or “kelvin: 5000; transition_duration: 2000” for temperature of 5000K and 2 seconds transition duration", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Set a Nest Thermostat that is in Heat-Cool mode to the temperature range you specify.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_temperature_range", "Filter code method": "GoogleNestThermostat.setTemperatureRange.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_temperature_range\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setTemperatureRange.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Heat temperature\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Heat Temperature", "Helper text": "Temperature value. Heat temperature must be less than cool temperature.", "Slug": "heat_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setTemperatureRange.setHeat Temperature(string: heat_temperature)"}}, {"section": "Action fields", "title": "Cool temperature\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Cool Temperature", "Helper text": "Set cool temperature. Cool temperature must be more than heat temperature.", "Slug": "cool_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setTemperatureRange.setCool Temperature(string: cool_temperature)"}}], "filter_code": NaN}
{"original_description": "Locks a Hubitat door, lock, etc. when Flic is clicked.", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_lock", "Filter code method": "Hubitat.actionLock.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_lock\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Open garage on Adafruit IO feed event.", "trigger_channel": "Adafruit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "adafruit.monitor_your_data"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Feed", "Helper text": "The name of the feed to check.", "Slug": "feed_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Operator\nDropdown list", "description": "Dropdown list", "details": {"Label": "Relationship", "Helper text": "Relationship between two values.", "Slug": "operator", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Value\nText input", "description": "Text input", "details": {"Label": "Value", "Helper text": "The value to compare against.", "Slug": "value", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Feed name\nThe name of your feed.", "description": "The name of your feed.", "details": {"Slug": "feed_name", "Filter code": "Adafruit.monitorYourData.FeedName", "Type": "String", "Example": "humidity"}}, {"section": "Ingredients", "title": "Feed value\nThe value for the given feed.", "description": "The value for the given feed.", "details": {"Slug": "value", "Filter code": "Adafruit.monitorYourData.FeedValue", "Type": "String", "Example": "22"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Adafruit.monitorYourData.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Operator\nThe operator text used to compare the values.", "description": "The operator text used to compare the values.", "details": {"Slug": "operator", "Filter code": "Adafruit.monitorYourData.Operator", "Type": "String", "Example": "greater than"}}, {"section": "Ingredients", "title": "Trigger value\nThe value used in the trigger to compare against your feed data.", "description": "The value used in the trigger to compare against your feed data.", "details": {"Slug": "trigger_value", "Filter code": "Adafruit.monitorYourData.TriggerValue", "Type": "String", "Example": "34"}}], "action_channel": "Garadget", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garadget.open_door", "Filter code method": "Garadget.openDoor.skip(string?: reason)", "Runtime method": "runAction(\"garadget.open_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Helper text": "Please identify which door in your account you want to open", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "You can trigger a MyMilan Scene by pressing the Logitech pop. ", "trigger_channel": "Logitech POP", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "logitech_pop.short_press"}, "trigger_details": [{"section": "Trigger fields", "title": "Switch\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which button?", "Slug": "switch", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Trigger option?", "Slug": "trigger_condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Trigger source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Trigger source?", "Slug": "trigger_source", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Button\nThis is the unique identifier of the pressed button.", "description": "This is the unique identifier of the pressed button.", "details": {"Slug": "button_id", "Filter code": "LogitechPop.shortPress.ButtonId", "Type": "String", "Example": "a0:e6:f8:8c:f5:33"}}, {"section": "Ingredients", "title": "Battery\nThis is the current battery level of the pressed button.", "description": "This is the current battery level of the pressed button.", "details": {"Slug": "battery", "Filter code": "LogitechPop.shortPress.Battery", "Type": "String", "Example": "100"}}, {"section": "Ingredients", "title": "Source\nThis is the trigger source, either a physical button or an app.", "description": "This is the trigger source, either a physical button or an app.", "details": {"Slug": "src", "Filter code": "LogitechPop.shortPress.Source", "Type": "String", "Example": "btn or app"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "LogitechPop.shortPress.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Name\nName of the Logi Button.", "description": "Name of the Logi Button.", "details": {"Slug": "button_name", "Filter code": "LogitechPop.shortPress.Name", "Type": "String", "Example": "Living Room"}}], "action_channel": "MyMilan", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "mymilan.a_scenes", "Filter code method": "Mymilan.aScenes.skip(string?: reason)", "Runtime method": "runAction(\"mymilan.a_scenes\", {})"}, "action_details": [{"section": "Action fields", "title": "Scenes\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Scene", "Slug": "scenes", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Good Morning!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Hager IoT", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hager_iot.run_scene", "Filter code method": "HagerIot.runScene.skip(string?: reason)", "Runtime method": "runAction(\"hager_iot.run_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "scene", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Send your Teams channel a message when an event from search is about to begin. Great for meeting reminders and due dates.", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.event_from_search_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or phrase", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Offset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time before event starts", "Helper text": "Specify how much time before the event starts you'd like the Applet to trigger", "Slug": "offset", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.eventFromSearchStarts.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.eventFromSearchStarts.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.eventFromSearchStarts.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.eventFromSearchStarts.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.eventFromSearchStarts.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.eventFromSearchStarts.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.eventFromSearchStarts.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.eventFromSearchStarts.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "Microsoft Teams", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "microsoft_teams.post_message_to_channel", "Filter code method": "MicrosoftTeams.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"microsoft_teams.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Team and channel ids\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "team_and_channel_ids", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "What is the subject of the message?", "Helper text": "This will appear as the header text of the message", "Slug": "message_subject", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Subject(string: message_subject)"}}, {"section": "Action fields", "title": "Message body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What is the content of the message?", "Helper text": "This will appear as the body of the message", "Slug": "message_body", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Body(string: message_body)"}}, {"section": "Action fields", "title": "Message urgency\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the urgency of the message?", "Helper text": "Select between <a href=\"https://support.microsoft.com/en-us/office/mark-a-message-as-important-or-urgent-in-teams-ea99d5b6-1317-4550-8d75-86ff14cd4462\" target=\"_blank\">Normal, Important, or Urgent</a> to call desired attention to your message", "Slug": "message_urgency", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Urgency(string: message_urgency)"}}], "filter_code": NaN}
{"original_description": "Whenever your Husqvarna Automower leaves its charging station, automatically open your garage door so it can begin its mowing job.", "trigger_channel": "Husqvarna Automower®", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "automower.automower_leaving"}, "trigger_details": [{"section": "Trigger fields", "title": "Automower\nDropdown list", "description": "Dropdown list", "details": {"Label": "Automower", "Slug": "automower", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Automower.automowerLeaving.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Automower\nName of your mower", "description": "Name of your mower", "details": {"Slug": "automower", "Filter code": "Automower.automowerLeaving.Automower", "Type": "String", "Example": "Jupiter"}}, {"section": "Ingredients", "title": "Status\nMower status", "description": "Mower status", "details": {"Slug": "status", "Filter code": "Automower.automowerLeaving.Status", "Type": "String", "Example": "LEAVING"}}, {"section": "Ingredients", "title": "Message\nText containing mower name and status.", "description": "Text containing mower name and status.", "details": {"Slug": "message", "Filter code": "Automower.automowerLeaving.Message", "Type": "String", "Example": "Hawaii is on its way to cut your grass."}}], "action_channel": "Garageio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garageio.open_garage_door", "Filter code method": "Garageio.openGarageDoor.skip(string?: reason)", "Runtime method": "runAction(\"garageio.open_garage_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door to open\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_to_open", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time a form receives a new response, log it in a Googlesheet", "trigger_channel": "Typeform", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "typeform.new_form"}, "trigger_details": [{"section": "Ingredients", "title": "Form\nThe ID of the form.", "description": "The ID of the form.", "details": {"Slug": "form_id", "Filter code": "Typeform.newForm.FormId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "Form title\nThe title of the form", "description": "The title of the form", "details": {"Slug": "form_title", "Filter code": "Typeform.newForm.FormTitle", "Type": "String", "Example": "My awesome form!"}}, {"section": "Ingredients", "title": "Form url\nURL to access the form", "description": "URL to access the form", "details": {"Slug": "form_url", "Filter code": "Typeform.newForm.FormUrl", "Type": "Web URL", "Example": "https://subdomain.typeform.com/to/abc123"}}, {"section": "Ingredients", "title": "Form is public\nDraft forms return \"false\" and Public forms return \"true\".", "description": "Draft forms return \"false\" and Public forms return \"true\".", "details": {"Slug": "form_is_public", "Filter code": "Typeform.newForm.FormIsPublic", "Type": "String", "Example": "\"false\""}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Display garage door events as LaMetric notifications", "trigger_channel": "Garadget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "garadget.door_event"}, "trigger_details": [{"section": "Trigger fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Garadget.doorEvent.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThis is type of the event: opening, open, closing, closed, stopped, online, offline, initialized", "description": "This is type of the event: opening, open, closing, closed, stopped, online, offline, initialized", "details": {"Slug": "event_type", "Filter code": "Garadget.doorEvent.EventType", "Type": "String", "Example": "opening"}}], "action_channel": "LaMetric", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lametric.notification", "Filter code method": "Lametric.notification.skip(string?: reason)", "Runtime method": "runAction(\"lametric.notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device to display notification on", "Helper text": "If you do not see your device in the list – make sure it runs <a href=\"http://lametric.com/firmware\" target=\"_blank\">firmware 1.6.1</a> or newer.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Icon\nDropdown list", "description": "Dropdown list", "details": {"Label": "Icon or animation", "Helper text": "Preview icons and animations <a href=\"https://developer.lametric.com/icons\" target=\"_blank\">here</a>.", "Slug": "icon", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Lametric.notification.setText(string: text)"}}, {"section": "Action fields", "title": "Sound\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sound", "Helper text": "Notification sound is played on LaMetric TIME when message is delivered.", "Slug": "sound", "Required": "false", "Can have default value": "true", "Filter code method": "Lametric.notification.setSound(string: sound)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Helper text": "Only important messages will be delivered when screensaver is active.", "Slug": "priority", "Required": "true", "Can have default value": "true", "Filter code method": "Lametric.notification.setPriority(string: priority)"}}], "filter_code": NaN}
{"original_description": "Choose certain days and times to automatically disarm your alarm system.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Uplink Remote", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "uplinkremote.disarmaction", "Filter code method": "Uplinkremote.disarmaction.skip(string?: reason)", "Runtime method": "runAction(\"uplinkremote.disarmaction\", {})"}, "action_details": [{"section": "Action fields", "title": "Serial number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device Name", "Slug": "serial_number", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have your Nanoleaf lights automatically turn red when the air quality in your home is poor.", "trigger_channel": "Kaiterra", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kaiterra.laseregg_aqi_threshold"}, "trigger_details": [{"section": "Trigger fields", "title": "Device udid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device do you want to monitor?", "Slug": "device_udid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is your AQI threshold?", "Slug": "threshold", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Kaiterra.lasereggAqiThreshold.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Aqi\nCurrent AQI.", "description": "Current AQI.", "details": {"Slug": "aqi", "Filter code": "Kaiterra.lasereggAqiThreshold.Aqi", "Type": "String", "Example": "20"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.change_color_request", "Filter code method": "Nanoleaf.changeColorRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.change_color_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "Set the color value in hex (00FF00) or by name (Green). The hash (#) is not required for hex value input.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.changeColorRequest.setValue(string: value)"}}], "filter_code": NaN}
{"original_description": "Have your lights automatically change colour from green to red and purple when your air quality changes. This applet will automatically set the color of your Nanoleaf lights.", "trigger_channel": "Kaiterra", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kaiterra.laseregg_aqi"}, "trigger_details": [{"section": "Trigger fields", "title": "Device udid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device do you want to monitor?", "Slug": "device_udid", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Kaiterra.lasereggAqi.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Aqi\nCurrent AQI", "description": "Current AQI", "details": {"Slug": "aqi", "Filter code": "Kaiterra.lasereggAqi.Aqi", "Type": "String", "Example": "10"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.change_color_request", "Filter code method": "Nanoleaf.changeColorRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.change_color_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "Set the color value in hex (00FF00) or by name (Green). The hash (#) is not required for hex value input.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.changeColorRequest.setValue(string: value)"}}], "filter_code": "let aqi = parseInt(Kaiterra.lasereggAqi.Aqi)\n\nif (aqi >= 0 && aqi <= 50) {\n  Nanoleaf.changeColorRequest.setValue(\"25aa68\")\n} else if (aqi > 50 && aqi <= 100) {\n  Nanoleaf.changeColorRequest.setValue(\"ff9900\")\n} else if (aqi > 100 && aqi <= 150) {\n  Nanoleaf.changeColorRequest.setValue(\"ff6600\")\n} else if (aqi > 150 && aqi <= 200) {\n  Nanoleaf.changeColorRequest.setValue(\"e40000\")\n} else if (aqi > 200 && aqi <= 300) {\n  Nanoleaf.changeColorRequest.setValue(\"ae0043\")\n} else {\n  Nanoleaf.changeColorRequest.setValue(\"6c003b\")   \n}\n\n"}
{"original_description": "This will automatically turn on the WiZ light(s) of your choice whenever your Ivideon camera detects motion.", "trigger_channel": "Ivideon", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ivideon.motion_detected"}, "trigger_details": [{"section": "Trigger fields", "title": "Camera\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which camera?", "Slug": "camera", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Occurred at\nDate and time event was occurred.", "description": "Date and time event was occurred.", "details": {"Slug": "occurred_at", "Filter code": "Ivideon.motionDetected.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Camera name\nThe name of the camera that detected motion.", "description": "The name of the camera that detected motion.", "details": {"Slug": "camera_name", "Filter code": "Ivideon.motionDetected.CameraName", "Type": "String", "Example": "Living room camera."}}, {"section": "Ingredients", "title": "Image url\nThe URL to a snapshot of the event.", "description": "The URL to a snapshot of the event.", "details": {"Slug": "image_url", "Filter code": "Ivideon.motionDetected.ImageURL", "Type": "Image URL", "Example": "https://api.ivideon.com/events/snapshots/47987123948fsdffa.jpeg"}}, {"section": "Ingredients", "title": "Clip url\nThe URL to a video clip of the event.", "description": "The URL to a video clip of the event.", "details": {"Slug": "clip_url", "Filter code": "Ivideon.motionDetected.ClipURL", "Type": "File URL", "Example": "https://api.ivideon.com/events/clips/1265459235485612fsdffa.jpeg"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "This will automatically turn off the WiZ light(s) of your choice when SmartThings no longer detects presence.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.new_present_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Arrived at\nThe date and time you arrived.", "description": "The date and time you arrived.", "details": {"Slug": "ArrivedAt", "Filter code": "SmartthingsV2.newPresentSmartthings.ArrivedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.newPresentSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_off", "Filter code method": "Wiz.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "Select the lights you want to turn off.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet sends a notification on Telegram in case of reaching a higher or lower setpoint", "trigger_channel": "Vimar VIEW", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "view_prod.sensor_temperature"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select your device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Helper text": "notification condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nDropdown list", "description": "Dropdown list", "details": {"Label": "Threshold", "Helper text": "threshold or value to notify", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "ViewProd.sensorTemperature.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour selected device", "description": "Your selected device", "details": {"Slug": "device", "Filter code": "ViewProd.sensorTemperature.Device", "Type": "String", "Example": "device"}}, {"section": "Ingredients", "title": "State\nYour device state", "description": "Your device state", "details": {"Slug": "state", "Filter code": "ViewProd.sensorTemperature.State", "Type": "String", "Example": "state"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "This applet sends a notification on Telegram in case of reaching a higher or lower setpoint", "trigger_channel": "Vimar VIEW", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "view_prod.clima_ambient_temperature"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select your device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Helper text": "notification condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nDropdown list", "description": "Dropdown list", "details": {"Label": "Threshold", "Helper text": "threshold or value to notify", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "ViewProd.climaAmbientTemperature.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour selected device", "description": "Your selected device", "details": {"Slug": "device", "Filter code": "ViewProd.climaAmbientTemperature.Device", "Type": "String", "Example": "device"}}, {"section": "Ingredients", "title": "State\nYour device state", "description": "Your device state", "details": {"Slug": "state", "Filter code": "ViewProd.climaAmbientTemperature.State", "Type": "String", "Example": "state"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "활동코스 5교시에서 활용하세요.", "trigger_channel": "EveryKit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "everykit.trigger_fire"}, "trigger_details": [{"section": "Trigger fields", "title": "Which every kit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EveryKit?", "Slug": "which_every_kit", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger command\nText input", "description": "Text input", "details": {"Label": "What message?", "Helper text": "You can choose any name for the message. After making the message, use it on the Everykit block program.", "Slug": "trigger_command", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Everykit.triggerFire.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Every kit name\nThe EveryKit that is selected.", "description": "The EveryKit that is selected.", "details": {"Slug": "which_every_kit", "Filter code": "Everykit.triggerFire.EveryKitName", "Type": "String", "Example": "Everykit"}}, {"section": "Ingredients", "title": "Message\nThe message that is sent.", "description": "The message that is sent.", "details": {"Slug": "what_message", "Filter code": "Everykit.triggerFire.Message", "Type": "String", "Example": "message"}}, {"section": "Ingredients", "title": "Data\nThe data that is sent.", "description": "The data that is sent.", "details": {"Slug": "data", "Filter code": "Everykit.triggerFire.Data", "Type": "String", "Example": "data"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "활동코스 5교시에서 활용하세요.", "trigger_channel": "EveryKit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "everykit.trigger_fire"}, "trigger_details": [{"section": "Trigger fields", "title": "Which every kit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EveryKit?", "Slug": "which_every_kit", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger command\nText input", "description": "Text input", "details": {"Label": "What message?", "Helper text": "You can choose any name for the message. After making the message, use it on the Everykit block program.", "Slug": "trigger_command", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Everykit.triggerFire.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Every kit name\nThe EveryKit that is selected.", "description": "The EveryKit that is selected.", "details": {"Slug": "which_every_kit", "Filter code": "Everykit.triggerFire.EveryKitName", "Type": "String", "Example": "Everykit"}}, {"section": "Ingredients", "title": "Message\nThe message that is sent.", "description": "The message that is sent.", "details": {"Slug": "what_message", "Filter code": "Everykit.triggerFire.Message", "Type": "String", "Example": "message"}}, {"section": "Ingredients", "title": "Data\nThe data that is sent.", "description": "The data that is sent.", "details": {"Slug": "data", "Filter code": "Everykit.triggerFire.Data", "Type": "String", "Example": "data"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "활동코스 2교시에서 활용하세요.", "trigger_channel": "EveryKit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "everykit.trigger_fire"}, "trigger_details": [{"section": "Trigger fields", "title": "Which every kit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EveryKit?", "Slug": "which_every_kit", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger command\nText input", "description": "Text input", "details": {"Label": "What message?", "Helper text": "You can choose any name for the message. After making the message, use it on the Everykit block program.", "Slug": "trigger_command", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Everykit.triggerFire.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Every kit name\nThe EveryKit that is selected.", "description": "The EveryKit that is selected.", "details": {"Slug": "which_every_kit", "Filter code": "Everykit.triggerFire.EveryKitName", "Type": "String", "Example": "Everykit"}}, {"section": "Ingredients", "title": "Message\nThe message that is sent.", "description": "The message that is sent.", "details": {"Slug": "what_message", "Filter code": "Everykit.triggerFire.Message", "Type": "String", "Example": "message"}}, {"section": "Ingredients", "title": "Data\nThe data that is sent.", "description": "The data that is sent.", "details": {"Slug": "data", "Filter code": "Everykit.triggerFire.Data", "Type": "String", "Example": "data"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "활동코스 4교시에서 활용하세요.", "trigger_channel": "EveryKit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "everykit.trigger_fire"}, "trigger_details": [{"section": "Trigger fields", "title": "Which every kit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EveryKit?", "Slug": "which_every_kit", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger command\nText input", "description": "Text input", "details": {"Label": "What message?", "Helper text": "You can choose any name for the message. After making the message, use it on the Everykit block program.", "Slug": "trigger_command", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Everykit.triggerFire.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Every kit name\nThe EveryKit that is selected.", "description": "The EveryKit that is selected.", "details": {"Slug": "which_every_kit", "Filter code": "Everykit.triggerFire.EveryKitName", "Type": "String", "Example": "Everykit"}}, {"section": "Ingredients", "title": "Message\nThe message that is sent.", "description": "The message that is sent.", "details": {"Slug": "what_message", "Filter code": "Everykit.triggerFire.Message", "Type": "String", "Example": "message"}}, {"section": "Ingredients", "title": "Data\nThe data that is sent.", "description": "The data that is sent.", "details": {"Slug": "data", "Filter code": "Everykit.triggerFire.Data", "Type": "String", "Example": "data"}}], "action_channel": "MeisterTask", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "meistertask.create_a_task", "Filter code method": "Meistertask.createATask.skip(string?: reason)", "Runtime method": "runAction(\"meistertask.create_a_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which section?", "Slug": "section_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Meistertask.createATask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "활동코스 5교시에서 활용하세요.", "trigger_channel": "EveryKit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "everykit.trigger_fire"}, "trigger_details": [{"section": "Trigger fields", "title": "Which every kit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EveryKit?", "Slug": "which_every_kit", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger command\nText input", "description": "Text input", "details": {"Label": "What message?", "Helper text": "You can choose any name for the message. After making the message, use it on the Everykit block program.", "Slug": "trigger_command", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Everykit.triggerFire.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Every kit name\nThe EveryKit that is selected.", "description": "The EveryKit that is selected.", "details": {"Slug": "which_every_kit", "Filter code": "Everykit.triggerFire.EveryKitName", "Type": "String", "Example": "Everykit"}}, {"section": "Ingredients", "title": "Message\nThe message that is sent.", "description": "The message that is sent.", "details": {"Slug": "what_message", "Filter code": "Everykit.triggerFire.Message", "Type": "String", "Example": "message"}}, {"section": "Ingredients", "title": "Data\nThe data that is sent.", "description": "The data that is sent.", "details": {"Slug": "data", "Filter code": "Everykit.triggerFire.Data", "Type": "String", "Example": "data"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.mute_device", "Filter code method": "AndroidDevice.muteDevice.skip(string?: reason)", "Runtime method": "runAction(\"android_device.mute_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Vibrate\nDropdown list", "description": "Dropdown list", "details": {"Label": "Vibrate", "Slug": "vibrate", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.muteDevice.setVibrate(string: vibrate)"}}], "filter_code": NaN}
{"original_description": "활동코스 4교시에서 활용하세요.", "trigger_channel": "EveryKit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "everykit.trigger_fire"}, "trigger_details": [{"section": "Trigger fields", "title": "Which every kit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EveryKit?", "Slug": "which_every_kit", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger command\nText input", "description": "Text input", "details": {"Label": "What message?", "Helper text": "You can choose any name for the message. After making the message, use it on the Everykit block program.", "Slug": "trigger_command", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Everykit.triggerFire.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Every kit name\nThe EveryKit that is selected.", "description": "The EveryKit that is selected.", "details": {"Slug": "which_every_kit", "Filter code": "Everykit.triggerFire.EveryKitName", "Type": "String", "Example": "Everykit"}}, {"section": "Ingredients", "title": "Message\nThe message that is sent.", "description": "The message that is sent.", "details": {"Slug": "what_message", "Filter code": "Everykit.triggerFire.Message", "Type": "String", "Example": "message"}}, {"section": "Ingredients", "title": "Data\nThe data that is sent.", "description": "The data that is sent.", "details": {"Slug": "data", "Filter code": "Everykit.triggerFire.Data", "Type": "String", "Example": "data"}}], "action_channel": "MeisterTask", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "meistertask.create_a_task", "Filter code method": "Meistertask.createATask.skip(string?: reason)", "Runtime method": "runAction(\"meistertask.create_a_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which section?", "Slug": "section_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Meistertask.createATask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "기능코스 8교시에서 활용하세요.", "trigger_channel": "EveryKit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "everykit.trigger_fire"}, "trigger_details": [{"section": "Trigger fields", "title": "Which every kit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which EveryKit?", "Slug": "which_every_kit", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Trigger command\nText input", "description": "Text input", "details": {"Label": "What message?", "Helper text": "You can choose any name for the message. After making the message, use it on the Everykit block program.", "Slug": "trigger_command", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Everykit.triggerFire.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Every kit name\nThe EveryKit that is selected.", "description": "The EveryKit that is selected.", "details": {"Slug": "which_every_kit", "Filter code": "Everykit.triggerFire.EveryKitName", "Type": "String", "Example": "Everykit"}}, {"section": "Ingredients", "title": "Message\nThe message that is sent.", "description": "The message that is sent.", "details": {"Slug": "what_message", "Filter code": "Everykit.triggerFire.Message", "Type": "String", "Example": "message"}}, {"section": "Ingredients", "title": "Data\nThe data that is sent.", "description": "The data that is sent.", "details": {"Slug": "data", "Filter code": "Everykit.triggerFire.Data", "Type": "String", "Example": "data"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "Call our trigger hotline, enter your 3-digit trigger code and Scout Alarm disarms all modes.", "trigger_channel": "woopla phone calls", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "woopla.trigger_call"}, "trigger_details": [{"section": "Trigger fields", "title": "Trigger code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Enter a 3-digit code", "Helper text": "Anything from 000 to 999 is fine.", "Slug": "trigger_code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Woopla.triggerCall.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Phone number\nYour phone number used for this call.", "description": "Your phone number used for this call.", "details": {"Slug": "phone_number", "Filter code": "Woopla.triggerCall.PhoneNumber", "Type": "String", "Example": "+49203987654321"}}, {"section": "Ingredients", "title": "Called number\nThe phone number of our trigger hotline used for this call.", "description": "The phone number of our trigger hotline used for this call.", "details": {"Slug": "called_number", "Filter code": "Woopla.triggerCall.CalledNumber", "Type": "String", "Example": "+16282222790"}}, {"section": "Ingredients", "title": "Trigger code\nThe 3-digit trigger code entered during the call.", "description": "The 3-digit trigger code entered during the call.", "details": {"Slug": "trigger_code", "Filter code": "Woopla.triggerCall.TriggerCode", "Type": "String", "Example": "123"}}], "action_channel": "Scout Alarm", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "scoutalarm.disarm_all_modes", "Filter code method": "Scoutalarm.disarmAllModes.skip(string?: reason)", "Runtime method": "runAction(\"scoutalarm.disarm_all_modes\", {})"}, "action_details": [{"section": "Action fields", "title": "Location\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which location?", "Slug": "location_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use this applet to run a Q Command to toggle a HUE Philips lamp", "trigger_channel": "Das Keyboard Q", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "daskeyboardq.deviceZoneAction"}, "trigger_details": [{"section": "Trigger fields", "title": "Pid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "pid", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Iot zone\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which zone?", "Helper text": "The name of a zone that you created in Q Command Center", "Slug": "iot_zone", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which action?", "Helper text": "The action that is being sent", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Daskeyboardq.deviceZoneAction.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Zone name\nThe zone that is being controlled", "description": "The zone that is being controlled", "details": {"Slug": "iot_zone", "Filter code": "Daskeyboardq.deviceZoneAction.ZoneName", "Type": "String", "Example": "Living Room"}}, {"section": "Ingredients", "title": "Action value\nThe value that is being set.", "description": "The value that is being set.", "details": {"Slug": "action_value", "Filter code": "Daskeyboardq.deviceZoneAction.ActionValue", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Device type\nThe type of device that was triggered.", "description": "The type of device that was triggered.", "details": {"Slug": "pid", "Filter code": "Daskeyboardq.deviceZoneAction.DeviceType", "Type": "String", "Example": "IOT_LIGHTING"}}, {"section": "Ingredients", "title": "Action type\nThe type of action that was triggered.", "description": "The type of action that was triggered.", "details": {"Slug": "action", "Filter code": "Daskeyboardq.deviceZoneAction.ActionType", "Type": "String", "Example": "set_value"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.toggle_all_hue", "Filter code method": "Hue.toggleAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.toggle_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "It will activate the wink shortcut when fetchit button is pressed.", "trigger_channel": "ThingaOS", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tantiv4.when_fetchit_button_press"}, "trigger_details": [{"section": "Trigger fields", "title": "Fetchit device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Device", "Helper text": "Select device name", "Slug": "fetchit_device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Button event\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Button Event", "Helper text": "Select Button Event", "Slug": "button_event_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Tantiv4.whenFetchitButtonPress.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nname of the device with which triggered", "description": "name of the device with which triggered", "details": {"Slug": "device_name", "Filter code": "Tantiv4.whenFetchitButtonPress.DeviceName", "Type": "String", "Example": "Name"}}, {"section": "Ingredients", "title": "Button name\nButton name", "description": "Button name", "details": {"Slug": "button_name", "Filter code": "Tantiv4.whenFetchitButtonPress.ButtonName", "Type": "String", "Example": "string"}}], "action_channel": "Wink: Shortcuts", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wink_shortcuts.activate_scene", "Filter code method": "WinkShortcuts.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"wink_shortcuts.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which shortcut?", "Slug": "scene_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet lets you store presence information in Apilio, so you can know if someone has been detected by your SmartThings device to automate any home logic", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.new_present_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Arrived at\nThe date and time you arrived.", "description": "The date and time you arrived.", "details": {"Slug": "ArrivedAt", "Filter code": "SmartthingsV2.newPresentSmartthings.ArrivedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.newPresentSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.boolean_variable_toggle_updates", "Filter code method": "Apilio.booleanVariableToggleUpdates.skip(string?: reason)", "Runtime method": "runAction(\"apilio.boolean_variable_toggle_updates\", {})"}, "action_details": [{"section": "Action fields", "title": "Variable identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio variable do you want to toggle?", "Helper text": "The variable will change from true to false or from false to true", "Slug": "variable_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Notify me when my INSTAR Cloud storage is full.", "trigger_channel": "INSTAR", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instar.storage_full"}, "trigger_details": [{"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Instar.storageFull.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Turn off a Smart Home Solution device when Motion stops being detected.", "trigger_channel": "Aerial Technologies", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "AerialTechnologies.motion_detection_motion_stopped"}, "trigger_details": [{"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "AerialTechnologies.motionDetectionMotionStopped.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Type\nType of event", "description": "Type of event", "details": {"Slug": "type", "Filter code": "AerialTechnologies.motionDetectionMotionStopped.Type", "Type": "String", "Example": "motionDetection.humanMotion.stopped"}}, {"section": "Ingredients", "title": "Serial\nSerial", "description": "Serial", "details": {"Slug": "serial", "Filter code": "AerialTechnologies.motionDetectionMotionStopped.Serial", "Type": "String", "Example": "ABCDEF"}}, {"section": "Ingredients", "title": "Id\nEvent identifier", "description": "Event identifier", "details": {"Slug": "id", "Filter code": "AerialTechnologies.motionDetectionMotionStopped.Id", "Type": "String", "Example": "uuid"}}], "action_channel": "Smart Home Solution", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "smart_home_solution.turn_device_off", "Filter code method": "SmartHomeSolution.turnDeviceOff.skip(string?: reason)", "Runtime method": "runAction(\"smart_home_solution.turn_device_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device address\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "The name of the device to turn off", "Slug": "device_address", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Applet will turn on the light everyday at 6:00pm, or any time you set.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Cloud Intelligence", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "link_smart_home.Light-LightSwitch", "Filter code method": "LinkSmartHome.lightLightSwitch.skip(string?: reason)", "Runtime method": "runAction(\"link_smart_home.Light-LightSwitch\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turns on or off?", "Slug": "value", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "You will receive a text message if a client disconnects from your router.", "trigger_channel": "D-Link Wi-Fi Router", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dlink_wifi_router.routerClientDisconnect"}, "trigger_details": [{"section": "Trigger fields", "title": "Client name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which client?", "Slug": "client_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "DlinkWifiRouter.routerClientDisconnect.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Client name\nThe name of the client disconnected.", "description": "The name of the client disconnected.", "details": {"Slug": "client_name", "Filter code": "DlinkWifiRouter.routerClientDisconnect.ClientName", "Type": "String", "Example": "computer"}}, {"section": "Ingredients", "title": "Device name\nThe device that reported the event.", "description": "The device that reported the event.", "details": {"Slug": "device_name", "Filter code": "DlinkWifiRouter.routerClientDisconnect.DeviceName", "Type": "String", "Example": "DIR-2660"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "Turn a device on when Motion is detected.", "trigger_channel": "Aerial Technologies", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "AerialTechnologies.motion_detection_motion_started"}, "trigger_details": [{"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "AerialTechnologies.motionDetectionMotionStarted.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Type\nType of event", "description": "Type of event", "details": {"Slug": "type", "Filter code": "AerialTechnologies.motionDetectionMotionStarted.Type", "Type": "String", "Example": "motionDetection.motion.started"}}, {"section": "Ingredients", "title": "Serial\nSerial", "description": "Serial", "details": {"Slug": "serial", "Filter code": "AerialTechnologies.motionDetectionMotionStarted.Serial", "Type": "String", "Example": "ABCDEF"}}, {"section": "Ingredients", "title": "Id\nEvent identifier", "description": "Event identifier", "details": {"Slug": "id", "Filter code": "AerialTechnologies.motionDetectionMotionStarted.Id", "Type": "String", "Example": "uuid"}}], "action_channel": "Smart Home Solution", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "smart_home_solution.turn_device_on", "Filter code method": "SmartHomeSolution.turnDeviceOn.skip(string?: reason)", "Runtime method": "runAction(\"smart_home_solution.turn_device_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device address\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "The device name", "Slug": "device_address", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "If your SmartThings device is opened, then turn off your SpotCam automatically", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.opened_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Opened at\nThe date and time sensor was opened.", "description": "The date and time sensor was opened.", "details": {"Slug": "OpenedAt", "Filter code": "SmartthingsV2.openedSmartthings.OpenedAt", "Type": "String", "Example": "April 1st, 2023 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.openedSmartthings.DeviceName", "Type": "String", "Example": "Bedroom contact"}}], "action_channel": "SpotCam", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "spotcam.turn_on_spotcam", "Filter code method": "Spotcam.turnOnSpotcam.skip(string?: reason)", "Runtime method": "runAction(\"spotcam.turn_on_spotcam\", {})"}, "action_details": [{"section": "Action fields", "title": "Sn\nDropdown list", "description": "Dropdown list", "details": {"Label": "SpotCam serial number", "Slug": "sn", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn Off any device in ThingaOS hub on leave from room.", "trigger_channel": "LinkDesk", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "linkdesk.leave_room"}, "trigger_details": [{"section": "Trigger fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which room?", "Helper text": "e.g. living room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Linkdesk.leaveRoom.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Room name\nName of the room that was left.", "description": "Name of the room that was left.", "details": {"Slug": "room_name", "Filter code": "Linkdesk.leaveRoom.RoomName", "Type": "String", "Example": "Bedroom"}}], "action_channel": "ThingaOS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "tantiv4.turn_on_off", "Filter code method": "Tantiv4.turnOnOff.skip(string?: reason)", "Runtime method": "runAction(\"tantiv4.turn_on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Device", "Helper text": "Turn On/Off action will be sent to the device selected by user.", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Turn on off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn device On/Off", "Helper text": "Update device status to be On/Off", "Slug": "turn_on_off", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Use the IFTTT app button widget to turn off a device with one click.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Powered by Viva", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "viva.turn_device_off", "Filter code method": "Viva.turnDeviceOff.skip(string?: reason)", "Runtime method": "runAction(\"viva.turn_device_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device address\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "The name of the device to turn off", "Slug": "device_address", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When you turn on your conference room to start a meeting, mute your smartphone to not be disturbed.", "trigger_channel": "iotty Smart Home", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "iottysmarthome.device_on_off"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which iotty device was turned on, off, or pressed?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Light state\nDropdown list", "description": "Dropdown list", "details": {"Label": "Check whether the iotty device is on, off, or has been pressed", "Slug": "light_state", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Source\nWas the device turned on manually, by iotty App, or by some smart home platforms?", "description": "Was the device turned on manually, by iotty App, or by some smart home platforms?", "details": {"Slug": "source", "Filter code": "Iottysmarthome.deviceOnOff.Source", "Type": "String", "Example": "1"}}, {"section": "Ingredients", "title": "Device name\nThe name of your iotty device", "description": "The name of your iotty device", "details": {"Slug": "device_name", "Filter code": "Iottysmarthome.deviceOnOff.DeviceName", "Type": "String", "Example": "Living Room Light"}}, {"section": "Ingredients", "title": "Created at\nThe exact date and hour when the event happened", "description": "The exact date and hour when the event happened", "details": {"Slug": "created_at", "Filter code": "Iottysmarthome.deviceOnOff.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Light state\nThe state of the iotty Smart Switch light (on or off)", "description": "The state of the iotty Smart Switch light (on or off)", "details": {"Slug": "light_state", "Filter code": "Iottysmarthome.deviceOnOff.LightState", "Type": "String", "Example": "on"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.mute_device", "Filter code method": "AndroidDevice.muteDevice.skip(string?: reason)", "Runtime method": "runAction(\"android_device.mute_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Vibrate\nDropdown list", "description": "Dropdown list", "details": {"Label": "Vibrate", "Slug": "vibrate", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.muteDevice.setVibrate(string: vibrate)"}}], "filter_code": NaN}
{"original_description": "This applet lets Apilio know if a specific SmartThings device has been opened, and saves this information to a variable.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.opened_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Opened at\nThe date and time sensor was opened.", "description": "The date and time sensor was opened.", "details": {"Slug": "OpenedAt", "Filter code": "SmartthingsV2.openedSmartthings.OpenedAt", "Type": "String", "Example": "April 1st, 2023 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.openedSmartthings.DeviceName", "Type": "String", "Example": "Bedroom contact"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.boolean_variable_toggle_updates", "Filter code method": "Apilio.booleanVariableToggleUpdates.skip(string?: reason)", "Runtime method": "runAction(\"apilio.boolean_variable_toggle_updates\", {})"}, "action_details": [{"section": "Action fields", "title": "Variable identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio variable do you want to toggle?", "Helper text": "The variable will change from true to false or from false to true", "Slug": "variable_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When a specific person unlocks the door then Turn ON/OFF Nexus Home Devices\n", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_unlocked_by_specific_person"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Which person\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which person?", "Helper text": "Enter the first name and last name of the person as it appears on the guest list in your August app.", "Slug": "which_person", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Unlocked at\nDate and time the lock was unlocked.", "description": "Date and time the lock was unlocked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.UnlockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who unlocked the lock.", "description": "The user who unlocked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.HouseName", "Type": "String", "Example": "San Diego beach house"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who unlocked the lock.", "description": "An image url to the profile photo of the user who unlocked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockUnlockedBySpecificPerson.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "Brilliant Nexus", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "brilliant_nexus.devices", "Filter code method": "BrilliantNexus.devices.skip(string?: reason)", "Runtime method": "runAction(\"brilliant_nexus.devices\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device Name", "Helper text": "Select any of the Brilliant Nexus device", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Status", "Helper text": "Turn ON/OFF your device", "Slug": "status", "Required": "true", "Can have default value": "true", "Filter code method": "BrilliantNexus.devices.setStatus(string: status)"}}], "filter_code": NaN}
{"original_description": "Get a message when there is a new top story on Hacker News.", "trigger_channel": "Hacker News", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hacker_news.new_top_story"}, "trigger_details": [{"section": "Trigger fields", "title": "Search\nText input > Other", "description": "Text input > Other", "details": {"Label": "Matching search term", "Helper text": "Optional. Searches for new top stories matching the search term.", "Slug": "search", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HackerNews.newTopStory.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Username\nThe user who posted the story.", "description": "The user who posted the story.", "details": {"Slug": "username", "Filter code": "HackerNews.newTopStory.Username", "Type": "String", "Example": "pg"}}, {"section": "Ingredients", "title": "Points\nThe number of points that the post has.", "description": "The number of points that the post has.", "details": {"Slug": "score", "Filter code": "HackerNews.newTopStory.Points", "Type": "String", "Example": "96"}}, {"section": "Ingredients", "title": "Story url\nThe URL to the story on Hacker News.", "description": "The URL to the story on Hacker News.", "details": {"Slug": "url", "Filter code": "HackerNews.newTopStory.StoryUrl", "Type": "String", "Example": "https://news.ycombinator.com/item?id=10346551"}}, {"section": "Ingredients", "title": "Title\nThe title of the story.", "description": "The title of the story.", "details": {"Slug": "title", "Filter code": "HackerNews.newTopStory.Title", "Type": "String", "Example": "Developing with Docker at IFTTT"}}, {"section": "Ingredients", "title": "Comments count\nThe number of comments.", "description": "The number of comments.", "details": {"Slug": "comments_count", "Filter code": "HackerNews.newTopStory.CommentsCount", "Type": "String", "Example": "28"}}, {"section": "Ingredients", "title": "Text\nIf the story is a self post, this ingredient will contain that text.", "description": "If the story is a self post, this ingredient will contain that text.", "details": {"Slug": "text", "Filter code": "HackerNews.newTopStory.Text", "Type": "String", "Example": "What do you think about this framework?"}}, {"section": "Ingredients", "title": "External url\nIf the story links to an external website, this ingredient will contain that URL.", "description": "If the story links to an external website, this ingredient will contain that URL.", "details": {"Slug": "external_url", "Filter code": "HackerNews.newTopStory.ExternalUrl", "Type": "Web URL", "Example": "https://medium.com/engineering-at-ifttt/developing-with-docker-at-ifttt-5bd03b4e597c"}}], "action_channel": "Microsoft Teams", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "microsoft_teams.post_message_to_channel", "Filter code method": "MicrosoftTeams.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"microsoft_teams.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Team and channel ids\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "team_and_channel_ids", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "What is the subject of the message?", "Helper text": "This will appear as the header text of the message", "Slug": "message_subject", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Subject(string: message_subject)"}}, {"section": "Action fields", "title": "Message body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What is the content of the message?", "Helper text": "This will appear as the body of the message", "Slug": "message_body", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Body(string: message_body)"}}, {"section": "Action fields", "title": "Message urgency\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the urgency of the message?", "Helper text": "Select between <a href=\"https://support.microsoft.com/en-us/office/mark-a-message-as-important-or-urgent-in-teams-ea99d5b6-1317-4550-8d75-86ff14cd4462\" target=\"_blank\">Normal, Important, or Urgent</a> to call desired attention to your message", "Slug": "message_urgency", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Urgency(string: message_urgency)"}}], "filter_code": NaN}
{"original_description": "Press this button to cancel all orders that are currently open.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.cancel_open_orders", "Filter code method": "Alpaca.cancelOpenOrders.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.cancel_open_orders\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "One-button widget/trigger to set a Nuheat thermostat to a user-defined temperature indefinitely. ", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "nVent Nuheat Signature Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nVent_Nuheat.set_temperature", "Filter code method": "NVentNuheat.setTemperature.skip(string?: reason)", "Runtime method": "runAction(\"nVent_Nuheat.set_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which thermostat?", "Helper text": "The thermostat to set the temperature for", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Scale\nDropdown list", "description": "Dropdown list", "details": {"Label": "What scale?", "Helper text": "Celsius or fahrenheit", "Slug": "scale", "Required": "true", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setScale(string: scale)"}}, {"section": "Action fields", "title": "Setpoint temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "What setpoint temperature?", "Helper text": "The setpoint temperature", "Slug": "setpoint_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setSetpoint Temperature(string: setpoint_temperature)"}}, {"section": "Action fields", "title": "Duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "What duration?", "Helper text": "The time to hold the temperature until", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setDuration(string: duration)"}}], "filter_code": NaN}
{"original_description": "This applet turns all your Philips Hue lights off when a routine (scene) is activated. By using this applet you can turn all your Philips Hue lights off by f.e. pressing your Niko Home Control All-off button", "trigger_channel": "Niko Home Control", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nikohomecontrol.routine_activated"}, "trigger_details": [{"section": "Trigger fields", "title": "Routine\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Routine will be the trigger?", "Helper text": "Select the Routine which will trigger an action when it is activated", "Slug": "routine", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nikohomecontrol.routineActivated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Routine\nThe Routine which was activated.", "description": "The Routine which was activated.", "details": {"Slug": "routine", "Filter code": "Nikohomecontrol.routineActivated.Routine", "Type": "String", "Example": "Party"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "User can Turn On any device present in ThingaOS Hub on entering a room", "trigger_channel": "LinkDesk", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "linkdesk.enter_room"}, "trigger_details": [{"section": "Trigger fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which room?", "Helper text": "e.g. living room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Linkdesk.enterRoom.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Room name\nName of the Room that was entered.", "description": "Name of the Room that was entered.", "details": {"Slug": "room_name", "Filter code": "Linkdesk.enterRoom.RoomName", "Type": "String", "Example": "Bedroom"}}], "action_channel": "ThingaOS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "tantiv4.turn_on_off", "Filter code method": "Tantiv4.turnOnOff.skip(string?: reason)", "Runtime method": "runAction(\"tantiv4.turn_on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select Device", "Helper text": "Turn On/Off action will be sent to the device selected by user.", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Turn on off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn device On/Off", "Helper text": "Update device status to be On/Off", "Slug": "turn_on_off", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Disarm your INSTAR cameras alarm at a specific time of the day.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "INSTAR", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "instar.m_detect_off", "Filter code method": "Instar.mDetectOff.skip(string?: reason)", "Runtime method": "runAction(\"instar.m_detect_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Cam name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Camera Name in Cloud", "Helper text": "Camera name from INSTAR Cloud, if there is no any camera, you can create it in INSTAR Cloud", "Slug": "cam_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When SmartThings detects a presence, then turn on a ceiling fan.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.new_present_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Arrived at\nThe date and time you arrived.", "description": "The date and time you arrived.", "details": {"Slug": "ArrivedAt", "Filter code": "SmartthingsV2.newPresentSmartthings.ArrivedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.newPresentSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "Fanimation", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "fansync.on_off", "Filter code method": "Fansync.onOff.skip(string?: reason)", "Runtime method": "runAction(\"fansync.on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "which device?", "Helper text": "Please select the device you have on Fanimation solution.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "On off\nDropdown list", "description": "Dropdown list", "details": {"Label": "on or off?", "Helper text": "Please choose switch on or off", "Slug": "on_off", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Turn OFF Nexus Home lights when someone locks August lock", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_locked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Locked at\nDate and time lock was locked.", "description": "Date and time lock was locked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockLocked.LockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who locked the lock.", "description": "The user who locked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockLocked.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockLocked.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockLocked.HouseName", "Type": "String", "Example": "San Diego beach house"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who locked the lock.", "description": "An image url to the profile photo of the user who locked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockLocked.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "Brilliant Nexus", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "brilliant_nexus.lights", "Filter code method": "BrilliantNexus.lights.skip(string?: reason)", "Runtime method": "runAction(\"brilliant_nexus.lights\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device Name", "Helper text": "Please select any of the Light", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Status", "Helper text": "Turn ON/OFF your light", "Slug": "status", "Required": "true", "Can have default value": "true", "Filter code method": "BrilliantNexus.lights.setStatus(string: status)"}}], "filter_code": NaN}
{"original_description": "Share feed item to Microsoft Teams channel.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Microsoft Teams", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "microsoft_teams.post_message_to_channel", "Filter code method": "MicrosoftTeams.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"microsoft_teams.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Team and channel ids\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "team_and_channel_ids", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "What is the subject of the message?", "Helper text": "This will appear as the header text of the message", "Slug": "message_subject", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Subject(string: message_subject)"}}, {"section": "Action fields", "title": "Message body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What is the content of the message?", "Helper text": "This will appear as the body of the message", "Slug": "message_body", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Body(string: message_body)"}}, {"section": "Action fields", "title": "Message urgency\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the urgency of the message?", "Helper text": "Select between <a href=\"https://support.microsoft.com/en-us/office/mark-a-message-as-important-or-urgent-in-teams-ea99d5b6-1317-4550-8d75-86ff14cd4462\" target=\"_blank\">Normal, Important, or Urgent</a> to call desired attention to your message", "Slug": "message_urgency", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Urgency(string: message_urgency)"}}], "filter_code": NaN}
{"original_description": "When you post a new photo to Instagram, send it to Microsoft Teams. Perfect for sharing your company's social posts with a team.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Microsoft Teams", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "microsoft_teams.post_message_to_channel", "Filter code method": "MicrosoftTeams.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"microsoft_teams.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Team and channel ids\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "team_and_channel_ids", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "What is the subject of the message?", "Helper text": "This will appear as the header text of the message", "Slug": "message_subject", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Subject(string: message_subject)"}}, {"section": "Action fields", "title": "Message body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What is the content of the message?", "Helper text": "This will appear as the body of the message", "Slug": "message_body", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Body(string: message_body)"}}, {"section": "Action fields", "title": "Message urgency\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the urgency of the message?", "Helper text": "Select between <a href=\"https://support.microsoft.com/en-us/office/mark-a-message-as-important-or-urgent-in-teams-ea99d5b6-1317-4550-8d75-86ff14cd4462\" target=\"_blank\">Normal, Important, or Urgent</a> to call desired attention to your message", "Slug": "message_urgency", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Urgency(string: message_urgency)"}}], "filter_code": NaN}
