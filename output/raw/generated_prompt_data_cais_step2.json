{"original_description": "Huge fan of a particular Twitch user? Enter their username and track the channels they follow! You'll be sent a push notification and the channel information will be logged in a Google Drive spreadsheet when a new channel is followed by that user.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.followed_new_channel"}, "trigger_details": [{"section": "Ingredients", "title": "Followed at\nDate and time you followed the Channel.", "description": "Date and time you followed the Channel.", "details": {"Slug": "created_at", "Filter code": "Twitch.followedNewChannel.FollowedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel you followed.", "description": "The name of the channel you followed.", "details": {"Slug": "channel_name", "Filter code": "Twitch.followedNewChannel.ChannelName", "Type": "String", "Example": "Gaming Talk Shows"}}, {"section": "Ingredients", "title": "Channel logo\nA url to the image of the channel logo.", "description": "A url to the image of the channel logo.", "details": {"Slug": "channel_logo", "Filter code": "Twitch.followedNewChannel.ChannelLogo", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.followedNewChannel.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Follower count\nThe number of channel followers.", "description": "The number of channel followers.", "details": {"Slug": "channel_followers", "Filter code": "Twitch.followedNewChannel.FollowerCount", "Type": "String", "Example": "215780"}}, {"section": "Ingredients", "title": "List of follows\nA URL to a list of the channels that you follow.", "description": "A URL to a list of the channels that you follow.", "details": {"Slug": "list_of_follows", "Filter code": "Twitch.followedNewChannel.ListOfFollows", "Type": "Web URL", "Example": "twitch.com/"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Do you also have environmental allergies? Get notified in advance. Average pollen count is between 4.9-7.2", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_pollen_count_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Count\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Pollen count", "Slug": "count", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentPollenCountRisesAbove.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentPollenCountRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentPollenCountRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentPollenCountRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentPollenCountRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentPollenCountRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Don't miss those first snow flakes! Get notified with a gentle blink of your LIFX lights.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.blink", "Filter code method": "Lifx.blink.skip(string?: reason)", "Runtime method": "runAction(\"lifx.blink\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Number of blinks\nDropdown list", "description": "Dropdown list", "details": {"Label": "Number of blinks", "Slug": "number_of_blinks", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.blink.setNumber Of Blinks(string: number_of_blinks)"}}, {"section": "Action fields", "title": "Blink if off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on first?", "Helper text": "&quot;Yes&quot; will make your lights blink, even when they are turned off in the app.", "Slug": "blink_if_off", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.blink.setBlink If Off(string: blink_if_off)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: green saturation:0.2; number_of_blinks: 6&quot; for 6 pale green blinks. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.blink.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Use this applet to create a button on your phone or smart watch that triggers your robot to clean a specific room. For robots with Imprint™ Smart Mapping technology.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.clean_by_room", "Filter code method": "Irobot.cleanByRoom.skip(string?: reason)", "Runtime method": "runAction(\"irobot.clean_by_room\", {})"}, "action_details": [{"section": "Action fields", "title": "Room info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which room would you like to clean?", "Slug": "room_info", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Record NPR story.", "trigger_channel": "NPR", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "npr.news_story_published"}, "trigger_details": [{"section": "Trigger fields", "title": "Category\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select a category", "Slug": "category", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Story title\nThe story's title.", "description": "The story's title.", "details": {"Slug": "story_title", "Filter code": "Npr.newsStoryPublished.StoryTitle", "Type": "String", "Example": "From The 'Inside Out,' A Lively Look Inside A Young Mind"}}, {"section": "Ingredients", "title": "Story excerpt\nThe story's excerpt.", "description": "The story's excerpt.", "details": {"Slug": "story_excerpt", "Filter code": "Npr.newsStoryPublished.StoryExcerpt", "Type": "String", "Example": "Pixar's latest creation, which takes place inside a young girl's mind, is visually ambitious, emotionally affecting, and ultimately very wise."}}, {"section": "Ingredients", "title": "Story url\nThe URL to the story.", "description": "The URL to the story.", "details": {"Slug": "story_url", "Filter code": "Npr.newsStoryPublished.StoryURL", "Type": "String", "Example": "http://www.npr.org/2015/06/18/414701069/from-the-inside-out-a-lively-look-inside-a-young-mind?utm_medium=RSS&utm_campaign=storiesfromnpr"}}, {"section": "Ingredients", "title": "Category\nThe story's category.", "description": "The story's category.", "details": {"Slug": "category", "Filter code": "Npr.newsStoryPublished.Category", "Type": "String", "Example": "People & Places"}}, {"section": "Ingredients", "title": "Published at\nDate and time the story was published.", "description": "Date and time the story was published.", "details": {"Slug": "published_at", "Filter code": "Npr.newsStoryPublished.PublishedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "Use this applet to withdraw a fixed amount from a pot each day.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_withdraw", "Filter code method": "Monzo.potWithdraw.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_withdraw\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potWithdraw.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "A savings challenge that takes today's date, adds up the numbers, and saves the total in a Pot. For example, 24th May 2019 would be 24 + 5 + 19 = 48p. This will move the money into your Pot at 8am every day.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "// if the date is 22/05/2019, we should deposit 46p (22 + 5 + 19)\n\nvar momentObject = Meta.currentUserTime\n\nvar date_of_month = momentObject.date()\nvar month = momentObject.month() + 1\nvar year = Number(momentObject.format(\"YY\"))\n\nvar depositAmount = ((date_of_month + month + year) / 100).toFixed(2)\nvar depositAmountString = depositAmount.toString()\n\nMonzo.potDeposit.setAmount(depositAmountString);\n\n"}
{"original_description": "Connect Fitbit to Monzo and save money in the pot of your choice for every day that you hit your step goals.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.daily-step-goal"}, "trigger_details": [{"section": "Ingredients", "title": "Step goal\nYour daily step goal", "description": "Your daily step goal", "details": {"Slug": "StepGoal", "Filter code": "Fitbit.dailyStepGoal.StepGoal", "Type": "String", "Example": "10000"}}, {"section": "Ingredients", "title": "Steps\nNumber of steps you have taken", "description": "Number of steps you have taken", "details": {"Slug": "Steps", "Filter code": "Fitbit.dailyStepGoal.Steps", "Type": "String", "Example": "12546"}}, {"section": "Ingredients", "title": "Date achieved\nDate you achieved your step goal", "description": "Date you achieved your step goal", "details": {"Slug": "DateAchieved", "Filter code": "Fitbit.dailyStepGoal.DateAchieved", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "The UK's version of summer is approaching! Take on our Summer Savings Challenge. Whenever the temperature goes above 20 degrees, you'll save £2 into a pot of your choice. You can customise the temperature and amount, if you like!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "The great British winter is coming! So take on our Winter Savings Challenge. Whenever the temperature drops below 10 degrees, you'll save £2 into a pot of your choice. You can customise the amount too, if you like!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "Gradually increase the amount you're saving each day to a pot of your choice. On 1st January, you'll save 1p. On 2nd January, you'll save 2p. This goes right up to £3.65 (or £3.66 😁) on the last day of the year!\n\nFeel free to jump in part way through the year, and see how far you get!\n\nThe challenge resets automatically on January 1st every year.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "var day_of_year = Meta.currentUserTime.format('DDD');\nvar amount = parseInt(day_of_year) / 100;\nMonzo.potDeposit.setAmount(amount.toFixed(2));\n\n"}
{"original_description": "This applet will reward you 1p for every 10 metres you cycle or run, from a pot of your choice, using Strava.", "trigger_channel": "Strava", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "strava.new_activity_by_you"}, "trigger_details": [{"section": "Trigger fields", "title": "Activity type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Slug": "activity_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time the activity was completed.", "description": "Date and time the activity was completed.", "details": {"Slug": "created_at", "Filter code": "Strava.newActivityByYou.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Activity type\nThe type of activity completed.", "description": "The type of activity completed.", "details": {"Slug": "activity_type", "Filter code": "Strava.newActivityByYou.ActivityType", "Type": "String", "Example": "Ride"}}, {"section": "Ingredients", "title": "Name\nThe name of the activity.", "description": "The name of the activity.", "details": {"Slug": "name", "Filter code": "Strava.newActivityByYou.Name", "Type": "String", "Example": "Evening Ride"}}, {"section": "Ingredients", "title": "Distance meters\nDistance moved in meters.", "description": "Distance moved in meters.", "details": {"Slug": "distance", "Filter code": "Strava.newActivityByYou.DistanceMeters", "Type": "String", "Example": "4475.4"}}, {"section": "Ingredients", "title": "Elapsed time\nTotal duration of the activity.", "description": "Total duration of the activity.", "details": {"Slug": "elapsed_time", "Filter code": "Strava.newActivityByYou.ElapsedTime", "Type": "String", "Example": "22 minutes, 13 seconds"}}, {"section": "Ingredients", "title": "Elapsed time in seconds\nTotal duration of the activity in seconds.", "description": "Total duration of the activity in seconds.", "details": {"Slug": "elapsed_time_in_seconds", "Filter code": "Strava.newActivityByYou.ElapsedTimeInSeconds", "Type": "String", "Example": "1333"}}, {"section": "Ingredients", "title": "Link to activity\nThe URL to the activity on Strava.", "description": "The URL to the activity on Strava.", "details": {"Slug": "link_to_activity", "Filter code": "Strava.newActivityByYou.LinkToActivity", "Type": "Web URL", "Example": "http://www.strava.com/activities/144461028"}}, {"section": "Ingredients", "title": "Route map image url\nURL to a map image of the route.", "description": "URL to a map image of the route.", "details": {"Slug": "route_map_image_url", "Filter code": "Strava.newActivityByYou.RouteMapImageUrl", "Type": "Image URL", "Example": "https://maps.googleapis.com/maps/api/staticmap?size=400x400&path=weight:3|color:0xFC4C02FF|enc:{qreFj}bjVZQ"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_withdraw", "Filter code method": "Monzo.potWithdraw.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_withdraw\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potWithdraw.setAmount(string: amount)"}}], "filter_code": "var distance = parseInt(Strava.newActivityByYou.DistanceMeters);\nvar amount = distance/1000;\nMonzo.potWithdraw.setAmount(amount.toFixed(2));\n\n"}
{"original_description": "The great British winter is coming! So take on our Winter Savings Challenge. Whenever the temperature drops below 10 degrees, you'll save £2 into a pot of your choice. You can customise the temperature and amount, if you like!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "Save a set amount toward one of your Goals every time you reach your Fitbit step goal.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.daily-step-goal"}, "trigger_details": [{"section": "Ingredients", "title": "Step goal\nYour daily step goal", "description": "Your daily step goal", "details": {"Slug": "StepGoal", "Filter code": "Fitbit.dailyStepGoal.StepGoal", "Type": "String", "Example": "10000"}}, {"section": "Ingredients", "title": "Steps\nNumber of steps you have taken", "description": "Number of steps you have taken", "details": {"Slug": "Steps", "Filter code": "Fitbit.dailyStepGoal.Steps", "Type": "String", "Example": "12546"}}, {"section": "Ingredients", "title": "Date achieved\nDate you achieved your step goal", "description": "Date you achieved your step goal", "details": {"Slug": "DateAchieved", "Filter code": "Fitbit.dailyStepGoal.DateAchieved", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal"}, "action_details": [{"section": "Trigger fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Goal name\nName of the goal saved to.", "description": "Name of the goal saved to.", "details": {"Slug": "goal_name", "Filter code": "Qapital.saveTowardGoal.GoalName", "Type": "String", "Example": "Trip to Iceland"}}, {"section": "Ingredients", "title": "Amount\nAmount saved.", "description": "Amount saved.", "details": {"Slug": "amount", "Filter code": "Qapital.saveTowardGoal.Amount", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Save method\nMethod used to save.", "description": "Method used to save.", "details": {"Slug": "save_method", "Filter code": "Qapital.saveTowardGoal.SaveMethod", "Type": "String", "Example": "Round-up"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Qapital.saveTowardGoal.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "filter_code": NaN}
{"original_description": "Always hitting public transit delays or traffic? Customize this message and then keep this widget handy — when you press it, it'll tell the Slack channel you choose that you're hitting delays, but will be there soon. ", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "When a leak is detected by the Lyric Wi-Fi water leak and freeze detector it will turn on your chosen lights and make them Blue", "trigger_channel": "Honeywell Home", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "honeywell_lyric.water_leak"}, "trigger_details": [{"section": "Trigger fields", "title": "System\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select your system", "Slug": "system", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HoneywellLyric.waterLeak.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the leak detector being monitored", "description": "The name of the leak detector being monitored", "details": {"Slug": "device_name", "Filter code": "HoneywellLyric.waterLeak.DeviceName", "Type": "String", "Example": "Washing machine"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "The WWF is world’s leading conservation organization, active in 100 countries. Their mission is to \"protect life on our planet — including our own.\" Read up on their insights and actions in Pocket at your leisure — this Applet will save their new stories to your queue.\n\n", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Pocket", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "pocket.read_it_later", "Filter code method": "Pocket.readItLater.skip(string?: reason)", "Runtime method": "runAction(\"pocket.read_it_later\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Pocket.readItLater.setUrl(string: url)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Pocket.readItLater.setTags(string: tags)"}}], "filter_code": NaN}
{"original_description": "Do you regularly check in with your community to ask for feedback or remind them of an event? This Applet auto-posts a message every month to help you stay consistent.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_month_on_the"}, "trigger_details": [{"section": "Trigger fields", "title": "Month day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of the month", "Slug": "month_day", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyMonthOnThe.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Facebook Pages", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "facebook_pages.create_status_message_page", "Filter code method": "FacebookPages.createStatusMessagePage.skip(string?: reason)", "Runtime method": "runAction(\"facebook_pages.create_status_message_page\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Status message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "FacebookPages.createStatusMessagePage.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This creates a widget you can add to the home screen on your phone. When you press it,  a specific device you choose will get a faster internet connection on your TP-Link network.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "TP-Link Router", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "tplink_router.prioritize_device", "Filter code method": "TplinkRouter.prioritizeDevice.skip(string?: reason)", "Runtime method": "runAction(\"tplink_router.prioritize_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device?", "Helper text": "The name of the device to be prioritized.", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Duration of priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Duration of Priority", "Helper text": "The length of time the specified device will be prioritized for.", "Slug": "duration_of_priority", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Guarantee a faster internet connection for your Arlo each time a motion event is detected so you can find out what's happened right away.", "trigger_channel": "Arlo", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "arlo.motion"}, "trigger_details": [{"section": "Trigger fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "device_name", "Filter code": "Arlo.motion.DeviceName", "Type": "String", "Example": "48B14C740AD5E"}}, {"section": "Ingredients", "title": "Detection time\nDate and time of motion event detection.", "description": "Date and time of motion event detection.", "details": {"Slug": "detected_at", "Filter code": "Arlo.motion.DetectionTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "TP-Link Router", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "tplink_router.prioritize_device", "Filter code method": "TplinkRouter.prioritizeDevice.skip(string?: reason)", "Runtime method": "runAction(\"tplink_router.prioritize_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device?", "Helper text": "The name of the device to be prioritized.", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Duration of priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Duration of Priority", "Helper text": "The length of time the specified device will be prioritized for.", "Slug": "duration_of_priority", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Applet will locate and copy over any new event added from an iOS Calendar to a Google Calendar you choose.", "trigger_channel": "iOS Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_calendar.new_calendar_event"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nTitle of the calendar event.", "description": "Title of the calendar event.", "details": {"Slug": "Title", "Filter code": "IosCalendar.newCalendarEvent.Title", "Type": "String", "Example": "Coffee with Max"}}, {"section": "Ingredients", "title": "Url\nThe URL associated with the event, if any.", "description": "The URL associated with the event, if any.", "details": {"Slug": "URL", "Filter code": "IosCalendar.newCalendarEvent.URL", "Type": "String", "Example": "https://ifttt.com"}}, {"section": "Ingredients", "title": "End date\nThe date the event ends.", "description": "The date the event ends.", "details": {"Slug": "EndDate", "Filter code": "IosCalendar.newCalendarEvent.EndDate", "Type": "String", "Example": "February 9th, 2017 at 11:00AM"}}, {"section": "Ingredients", "title": "Calendar name\nThe name of the event's calendar.", "description": "The name of the event's calendar.", "details": {"Slug": "CalendarName", "Filter code": "IosCalendar.newCalendarEvent.CalendarName", "Type": "String", "Example": "Personal"}}, {"section": "Ingredients", "title": "Invitees\nA comma-separated list of people invited to the event.", "description": "A comma-separated list of people invited to the event.", "details": {"Slug": "Invitees", "Filter code": "IosCalendar.newCalendarEvent.Invitees", "Type": "String", "Example": "Eric, Jon, Max, and Zhe"}}, {"section": "Ingredients", "title": "Date created\nThe date the event was added to the calendar.", "description": "The date the event was added to the calendar.", "details": {"Slug": "DateCreated", "Filter code": "IosCalendar.newCalendarEvent.DateCreated", "Type": "String", "Example": "February 6th, 2017 at 3:00PM"}}, {"section": "Ingredients", "title": "Location\nThe location of the event, if any.", "description": "The location of the event, if any.", "details": {"Slug": "Location", "Filter code": "IosCalendar.newCalendarEvent.Location", "Type": "String", "Example": "Machine Coffee & Deli"}}, {"section": "Ingredients", "title": "Organizer\nThe organizer of the event, if any.", "description": "The organizer of the event, if any.", "details": {"Slug": "Organizer", "Filter code": "IosCalendar.newCalendarEvent.Organizer", "Type": "String", "Example": "Max Meyers"}}, {"section": "Ingredients", "title": "Start date\nThe date the event starts.", "description": "The date the event starts.", "details": {"Slug": "StartDate", "Filter code": "IosCalendar.newCalendarEvent.StartDate", "Type": "String", "Example": "February 9th, 2017 at 10:30AM"}}, {"section": "Ingredients", "title": "Notes\nThe notes associated with the event, if any.", "description": "The notes associated with the event, if any.", "details": {"Slug": "Notes", "Filter code": "IosCalendar.newCalendarEvent.Notes", "Type": "String", "Example": "Let's get together and talk!"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.add_detailed_event", "Filter code method": "GoogleCalendar.addDetailedEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.add_detailed_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Start time\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Start time", "Helper text": "Ex. 10AM, Next Monday at 3PM.", "Slug": "start_time", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setStart Time(string: start_time)"}}, {"section": "Action fields", "title": "End time\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "End time", "Slug": "end_time", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setEnd Time(string: end_time)"}}, {"section": "Action fields", "title": "All day\nDropdown list", "description": "Dropdown list", "details": {"Label": "All day?", "Helper text": "No by default. All day events will only consider the date in the start time and end time fields.", "Slug": "all_day", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setAll Day(string: all_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setDescription(string: description)"}}, {"section": "Action fields", "title": "Location\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Location", "Helper text": "Optional", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Attendees\nText input > Other", "description": "Text input > Other", "details": {"Label": "Attendees", "Helper text": "Optional comma separated list of attendee emails", "Slug": "attendees", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setAttendees(string: attendees)"}}], "filter_code": NaN}
{"original_description": "This Applet will locate and copy over any new event added from the iOS Calendar you choose to the Google Calendar you choose. Stay in sync!", "trigger_channel": "iOS Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_calendar.new_calendar_event"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nTitle of the calendar event.", "description": "Title of the calendar event.", "details": {"Slug": "Title", "Filter code": "IosCalendar.newCalendarEvent.Title", "Type": "String", "Example": "Coffee with Max"}}, {"section": "Ingredients", "title": "Url\nThe URL associated with the event, if any.", "description": "The URL associated with the event, if any.", "details": {"Slug": "URL", "Filter code": "IosCalendar.newCalendarEvent.URL", "Type": "String", "Example": "https://ifttt.com"}}, {"section": "Ingredients", "title": "End date\nThe date the event ends.", "description": "The date the event ends.", "details": {"Slug": "EndDate", "Filter code": "IosCalendar.newCalendarEvent.EndDate", "Type": "String", "Example": "February 9th, 2017 at 11:00AM"}}, {"section": "Ingredients", "title": "Calendar name\nThe name of the event's calendar.", "description": "The name of the event's calendar.", "details": {"Slug": "CalendarName", "Filter code": "IosCalendar.newCalendarEvent.CalendarName", "Type": "String", "Example": "Personal"}}, {"section": "Ingredients", "title": "Invitees\nA comma-separated list of people invited to the event.", "description": "A comma-separated list of people invited to the event.", "details": {"Slug": "Invitees", "Filter code": "IosCalendar.newCalendarEvent.Invitees", "Type": "String", "Example": "Eric, Jon, Max, and Zhe"}}, {"section": "Ingredients", "title": "Date created\nThe date the event was added to the calendar.", "description": "The date the event was added to the calendar.", "details": {"Slug": "DateCreated", "Filter code": "IosCalendar.newCalendarEvent.DateCreated", "Type": "String", "Example": "February 6th, 2017 at 3:00PM"}}, {"section": "Ingredients", "title": "Location\nThe location of the event, if any.", "description": "The location of the event, if any.", "details": {"Slug": "Location", "Filter code": "IosCalendar.newCalendarEvent.Location", "Type": "String", "Example": "Machine Coffee & Deli"}}, {"section": "Ingredients", "title": "Organizer\nThe organizer of the event, if any.", "description": "The organizer of the event, if any.", "details": {"Slug": "Organizer", "Filter code": "IosCalendar.newCalendarEvent.Organizer", "Type": "String", "Example": "Max Meyers"}}, {"section": "Ingredients", "title": "Start date\nThe date the event starts.", "description": "The date the event starts.", "details": {"Slug": "StartDate", "Filter code": "IosCalendar.newCalendarEvent.StartDate", "Type": "String", "Example": "February 9th, 2017 at 10:30AM"}}, {"section": "Ingredients", "title": "Notes\nThe notes associated with the event, if any.", "description": "The notes associated with the event, if any.", "details": {"Slug": "Notes", "Filter code": "IosCalendar.newCalendarEvent.Notes", "Type": "String", "Example": "Let's get together and talk!"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.add_detailed_event", "Filter code method": "GoogleCalendar.addDetailedEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.add_detailed_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Start time\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Start time", "Helper text": "Ex. 10AM, Next Monday at 3PM.", "Slug": "start_time", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setStart Time(string: start_time)"}}, {"section": "Action fields", "title": "End time\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "End time", "Slug": "end_time", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setEnd Time(string: end_time)"}}, {"section": "Action fields", "title": "All day\nDropdown list", "description": "Dropdown list", "details": {"Label": "All day?", "Helper text": "No by default. All day events will only consider the date in the start time and end time fields.", "Slug": "all_day", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setAll Day(string: all_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setDescription(string: description)"}}, {"section": "Action fields", "title": "Location\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Location", "Helper text": "Optional", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Attendees\nText input > Other", "description": "Text input > Other", "details": {"Label": "Attendees", "Helper text": "Optional comma separated list of attendee emails", "Slug": "attendees", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleCalendar.addDetailedEvent.setAttendees(string: attendees)"}}], "filter_code": NaN}
{"original_description": "Hit your fitness goals and your financial goals at the same time! Specify the type of activity (run or ride) and the amount you'd like to save when you set up the Applet. ", "trigger_channel": "Strava", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "strava.new_activity_by_you"}, "trigger_details": [{"section": "Trigger fields", "title": "Activity type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Slug": "activity_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time the activity was completed.", "description": "Date and time the activity was completed.", "details": {"Slug": "created_at", "Filter code": "Strava.newActivityByYou.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Activity type\nThe type of activity completed.", "description": "The type of activity completed.", "details": {"Slug": "activity_type", "Filter code": "Strava.newActivityByYou.ActivityType", "Type": "String", "Example": "Ride"}}, {"section": "Ingredients", "title": "Name\nThe name of the activity.", "description": "The name of the activity.", "details": {"Slug": "name", "Filter code": "Strava.newActivityByYou.Name", "Type": "String", "Example": "Evening Ride"}}, {"section": "Ingredients", "title": "Distance meters\nDistance moved in meters.", "description": "Distance moved in meters.", "details": {"Slug": "distance", "Filter code": "Strava.newActivityByYou.DistanceMeters", "Type": "String", "Example": "4475.4"}}, {"section": "Ingredients", "title": "Elapsed time\nTotal duration of the activity.", "description": "Total duration of the activity.", "details": {"Slug": "elapsed_time", "Filter code": "Strava.newActivityByYou.ElapsedTime", "Type": "String", "Example": "22 minutes, 13 seconds"}}, {"section": "Ingredients", "title": "Elapsed time in seconds\nTotal duration of the activity in seconds.", "description": "Total duration of the activity in seconds.", "details": {"Slug": "elapsed_time_in_seconds", "Filter code": "Strava.newActivityByYou.ElapsedTimeInSeconds", "Type": "String", "Example": "1333"}}, {"section": "Ingredients", "title": "Link to activity\nThe URL to the activity on Strava.", "description": "The URL to the activity on Strava.", "details": {"Slug": "link_to_activity", "Filter code": "Strava.newActivityByYou.LinkToActivity", "Type": "Web URL", "Example": "http://www.strava.com/activities/144461028"}}, {"section": "Ingredients", "title": "Route map image url\nURL to a map image of the route.", "description": "URL to a map image of the route.", "details": {"Slug": "route_map_image_url", "Filter code": "Strava.newActivityByYou.RouteMapImageUrl", "Type": "Image URL", "Example": "https://maps.googleapis.com/maps/api/staticmap?size=400x400&path=weight:3|color:0xFC4C02FF|enc:{qreFj}bjVZQ"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal"}, "action_details": [{"section": "Trigger fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Goal name\nName of the goal saved to.", "description": "Name of the goal saved to.", "details": {"Slug": "goal_name", "Filter code": "Qapital.saveTowardGoal.GoalName", "Type": "String", "Example": "Trip to Iceland"}}, {"section": "Ingredients", "title": "Amount\nAmount saved.", "description": "Amount saved.", "details": {"Slug": "amount", "Filter code": "Qapital.saveTowardGoal.Amount", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Save method\nMethod used to save.", "description": "Method used to save.", "details": {"Slug": "save_method", "Filter code": "Qapital.saveTowardGoal.SaveMethod", "Type": "String", "Example": "Round-up"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Qapital.saveTowardGoal.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "filter_code": NaN}
{"original_description": "What's your money worth? Compare any two currencies — every day the new rate will be logged to a Google spreadsheet. Great for trip planning!", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.currency_exchange_rate_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Input currency\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Input currency", "Slug": "input_currency", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Output currency\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Output currency", "Slug": "output_currency", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Helper text": "Based on your time zone settings", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Input currency\nThe symbol for the input currency.", "description": "The symbol for the input currency.", "details": {"Slug": "InputCurrency", "Filter code": "Finance.currencyExchangeRateStocks.InputCurrency", "Type": "String", "Example": "USD"}}, {"section": "Ingredients", "title": "Output currency\nThe symbol for the output currency.", "description": "The symbol for the output currency.", "details": {"Slug": "OutputCurrency", "Filter code": "Finance.currencyExchangeRateStocks.OutputCurrency", "Type": "String", "Example": "EUR"}}, {"section": "Ingredients", "title": "Exchange rate\nThe exchange rate between currencies.", "description": "The exchange rate between currencies.", "details": {"Slug": "ExchangeRate", "Filter code": "Finance.currencyExchangeRateStocks.ExchangeRate", "Type": "String", "Example": "0.75416"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the exchange rate.", "description": "A link to more information about the exchange rate.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.currencyExchangeRateStocks.InfoUrl", "Type": "String", "Example": "http://finance.yahoo.com/q/bc?s=USDEUR=X"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.currencyExchangeRateStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Docs", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_docs.append_to_google_doc", "Filter code method": "GoogleDocs.appendToGoogleDoc.skip(string?: reason)", "Runtime method": "runAction(\"google_docs.append_to_google_doc\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "Document name", "Helper text": "Will create a new file if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Content", "Helper text": "some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setBody(string: body)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Whenever it rains at a place of your choice, this Applet will move some money into one of your Monzo pots", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "The Center is a nonpartisan, independent, nonprofit research group that tracks money in US politics. Stay in the know on their findings and news with an email in your inbox every Wednesday morning. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "This Applet sends you a list of new BEA data weekly so you can catch up on the latest without crowding your inbox.", "trigger_channel": "Bureau of Economic Analysis", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "bea.new_data_from_the_bea"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Bea.newDataFromTheBea.EntryTitle", "Type": "String", "Example": "Personal Income and Outlays, April 2017"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Bea.newDataFromTheBea.EntryUrl", "Type": "String", "Example": "https://www.bea.gov/newsreleases/national/pi/2017/pi0417.htm"}}, {"section": "Ingredients", "title": "Preview content\nA preview of the entry's content, contains HTML.", "description": "A preview of the entry's content, contains HTML.", "details": {"Slug": "EntryContent", "Filter code": "Bea.newDataFromTheBea.PreviewContent", "Type": "String", "Example": "Personal income increased $58.4 billion (0.4 percent) in April according to estimates released today by the Bureau of Economic Analysis. Disposable personal income (DPI) increased $56.5 billion (0.4 percent) and personal consumption expenditures (PCE)..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Bea.newDataFromTheBea.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Keep a tracker of BEA releases. This Applet adds a new row whenever new data is published.", "trigger_channel": "Bureau of Economic Analysis", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "bea.new_data_from_the_bea"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Bea.newDataFromTheBea.EntryTitle", "Type": "String", "Example": "Personal Income and Outlays, April 2017"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Bea.newDataFromTheBea.EntryUrl", "Type": "String", "Example": "https://www.bea.gov/newsreleases/national/pi/2017/pi0417.htm"}}, {"section": "Ingredients", "title": "Preview content\nA preview of the entry's content, contains HTML.", "description": "A preview of the entry's content, contains HTML.", "details": {"Slug": "EntryContent", "Filter code": "Bea.newDataFromTheBea.PreviewContent", "Type": "String", "Example": "Personal income increased $58.4 billion (0.4 percent) in April according to estimates released today by the Bureau of Economic Analysis. Disposable personal income (DPI) increased $56.5 billion (0.4 percent) and personal consumption expenditures (PCE)..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Bea.newDataFromTheBea.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This Applet keeps your team in the loop by posting new data from the BEA to a Slack channel of your choosing.", "trigger_channel": "Bureau of Economic Analysis", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "bea.new_data_from_the_bea"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Bea.newDataFromTheBea.EntryTitle", "Type": "String", "Example": "Personal Income and Outlays, April 2017"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Bea.newDataFromTheBea.EntryUrl", "Type": "String", "Example": "https://www.bea.gov/newsreleases/national/pi/2017/pi0417.htm"}}, {"section": "Ingredients", "title": "Preview content\nA preview of the entry's content, contains HTML.", "description": "A preview of the entry's content, contains HTML.", "details": {"Slug": "EntryContent", "Filter code": "Bea.newDataFromTheBea.PreviewContent", "Type": "String", "Example": "Personal income increased $58.4 billion (0.4 percent) in April according to estimates released today by the Bureau of Economic Analysis. Disposable personal income (DPI) increased $56.5 billion (0.4 percent) and personal consumption expenditures (PCE)..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Bea.newDataFromTheBea.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "/r/worldnews is for major news from around the world except US-internal news and US politics. Great for staying on top of breaking news!", "trigger_channel": "Reddit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "reddit.new_top_post_in_subreddit"}, "trigger_details": [{"section": "Trigger fields", "title": "Subreddit\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subreddit", "Helper text": "e.g. worldnews", "Slug": "subreddit", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Subreddit\nName of the subreddit where this item was posted.", "description": "Name of the subreddit where this item was posted.", "details": {"Slug": "Subreddit", "Filter code": "Reddit.newTopPostInSubreddit.Subreddit", "Type": "String", "Example": "ifttt"}}, {"section": "Ingredients", "title": "Title\nTitle of this post.", "description": "Title of this post.", "details": {"Slug": "Title", "Filter code": "Reddit.newTopPostInSubreddit.Title", "Type": "String", "Example": "Little Bobby Tables!"}}, {"section": "Ingredients", "title": "Image url\nURL to the post's image if one exists.", "description": "URL to the post's image if one exists.", "details": {"Slug": "ImageURL", "Filter code": "Reddit.newTopPostInSubreddit.ImageURL", "Type": "String", "Example": "http://imgs.xkcd.com/comics/exploits_of_a_mom.png"}}, {"section": "Ingredients", "title": "Content\nContent of this post, may be text or external link.", "description": "Content of this post, may be text or external link.", "details": {"Slug": "Content", "Filter code": "Reddit.newTopPostInSubreddit.Content", "Type": "String", "Example": "http://xkcd.com/327"}}, {"section": "Ingredients", "title": "Content html\nContent of this post in HTML.", "description": "Content of this post in HTML.", "details": {"Slug": "ContentHTML", "Filter code": "Reddit.newTopPostInSubreddit.ContentHTML", "Type": "String", "Example": "http://xkcd.com/327"}}, {"section": "Ingredients", "title": "Post url\nURL to this post on reddit.", "description": "URL to this post on reddit.", "details": {"Slug": "PostURL", "Filter code": "Reddit.newTopPostInSubreddit.PostURL", "Type": "String", "Example": "http://www.reddit.com/r/ProgrammerHumor/comments/16dazp/little_bobby_tables_xkcd/"}}, {"section": "Ingredients", "title": "Author\nUsername of this post's author.", "description": "Username of this post's author.", "details": {"Slug": "Author", "Filter code": "Reddit.newTopPostInSubreddit.Author", "Type": "String", "Example": "ltibbets"}}, {"section": "Ingredients", "title": "Posted at\nDate this post was posted.", "description": "Date this post was posted.", "details": {"Slug": "PostedAt", "Filter code": "Reddit.newTopPostInSubreddit.PostedAt", "Type": "String", "Example": "August 23, 2013 at 05:00PM"}}], "action_channel": "Instapaper", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "instapaper.save_item", "Filter code method": "Instapaper.saveItem.skip(string?: reason)", "Runtime method": "runAction(\"instapaper.save_item\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setUrl(string: url)"}}, {"section": "Action fields", "title": "Description\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setDescription(string: description)"}}, {"section": "Action fields", "title": "Title\nText input > File name", "description": "Text input > File name", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setTitle(string: title)"}}, {"section": "Action fields", "title": "Folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which folder?", "Helper text": "Optional", "Slug": "folder", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Tags\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Which tags?", "Slug": "tags", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Never miss an official travel alert from the U.S Department of State. Keep your traveling salespeople informed!", "trigger_channel": "Department of State", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dos.travel_alerts"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Dos.travelAlerts.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Dos.travelAlerts.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Content html\nThe entry's content, contains HTML.", "description": "The entry's content, contains HTML.", "details": {"Slug": "EntryContent", "Filter code": "Dos.travelAlerts.ContentHtml", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Dos.travelAlerts.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "When the IFTTT Blog (ifttt.com/blog) publishes a new post, this Applet will send it to your inbox. Tips, data stories, new services, and more — be the first to know! 👍", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "One of the biggest wedding blogs in the world — get an email every Friday with their posts. Everything from real-life wedding photoshoots to planning tips to DIY projects to giveaways!", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "When the IFTTT Blog (ifttt.com/blog) publishes a new post, this Applet will send it to the Telegram chat of your choice. Tips, data stories, new services, and more — spread the news! 👐", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "When the IFTTT Blog (ifttt.com/blog) publishes a new post, this Applet will share the link to a Facebook page. Keep your community in the know on all things IoT, IFTTT tips, social media, and more. 🙌", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Facebook Pages", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "facebook_pages.create_link_page", "Filter code method": "FacebookPages.createLinkPage.skip(string?: reason)", "Runtime method": "runAction(\"facebook_pages.create_link_page\", {})"}, "action_details": [{"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Slug": "link_url", "Required": "true", "Can have default value": "true", "Filter code method": "FacebookPages.createLinkPage.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createLinkPage.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Automatically track your Fitbit sleep information into a Google Calendar.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.new-sleep-logged"}, "trigger_details": [{"section": "Ingredients", "title": "Time to leave bed seconds\nThe time spent in bed after awaking, in seconds", "description": "The time spent in bed after awaking, in seconds", "details": {"Slug": "TimeToLeaveBedSeconds", "Filter code": "Fitbit.newSleepLogged.TimeToLeaveBedSeconds", "Type": "String", "Example": "600"}}, {"section": "Ingredients", "title": "Total time slept\nThe total time you slept", "description": "The total time you slept", "details": {"Slug": "TotalTimeSlept", "Filter code": "Fitbit.newSleepLogged.TotalTimeSlept", "Type": "String", "Example": "8h 0m"}}, {"section": "Ingredients", "title": "Restless count\nNumber of moments you were restless while sleeping", "description": "Number of moments you were restless while sleeping", "details": {"Slug": "RestlessCount", "Filter code": "Fitbit.newSleepLogged.RestlessCount", "Type": "String", "Example": "4"}}, {"section": "Ingredients", "title": "Total time slept in seconds\nThe total time you slept, in seconds", "description": "The total time you slept, in seconds", "details": {"Slug": "TotalTimeSleptInSeconds", "Filter code": "Fitbit.newSleepLogged.TotalTimeSleptInSeconds", "Type": "String", "Example": "28800"}}, {"section": "Ingredients", "title": "Time to fall asleep\nNumber of minutes before falling asleep", "description": "Number of minutes before falling asleep", "details": {"Slug": "TimeToFallAsleep", "Filter code": "Fitbit.newSleepLogged.TimeToFallAsleep", "Type": "String", "Example": "7m"}}, {"section": "Ingredients", "title": "Time awake\nThe time spent awake", "description": "The time spent awake", "details": {"Slug": "TimeAwake", "Filter code": "Fitbit.newSleepLogged.TimeAwake", "Type": "String", "Example": "30m"}}, {"section": "Ingredients", "title": "Time awake seconds\nThe time spent awake, in seconds", "description": "The time spent awake, in seconds", "details": {"Slug": "TimeAwakeSeconds", "Filter code": "Fitbit.newSleepLogged.TimeAwakeSeconds", "Type": "String", "Example": "1800"}}, {"section": "Ingredients", "title": "Awake count\nNumber of moments you were awake while trying to sleep", "description": "Number of moments you were awake while trying to sleep", "details": {"Slug": "AwakeCount", "Filter code": "Fitbit.newSleepLogged.AwakeCount", "Type": "String", "Example": "2"}}, {"section": "Ingredients", "title": "Fell asleep at\nThe date and time you fell asleep, localized to your Fitbit timezone setting", "description": "The date and time you fell asleep, localized to your Fitbit timezone setting", "details": {"Slug": "FellAsleepAt", "Filter code": "Fitbit.newSleepLogged.FellAsleepAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Time to fall asleep seconds\nNumber of seconds before falling asleep", "description": "Number of seconds before falling asleep", "details": {"Slug": "TimeToFallAsleepSeconds", "Filter code": "Fitbit.newSleepLogged.TimeToFallAsleepSeconds", "Type": "String", "Example": "420"}}, {"section": "Ingredients", "title": "Time to leave bed\nThe time spent in bed after awaking", "description": "The time spent in bed after awaking", "details": {"Slug": "TimeToLeaveBed", "Filter code": "Fitbit.newSleepLogged.TimeToLeaveBed", "Type": "String", "Example": "10m"}}, {"section": "Ingredients", "title": "Awoke at\nThe date and time you woke up, localized to your Fitbit timezone setting", "description": "The date and time you woke up, localized to your Fitbit timezone setting", "details": {"Slug": "AwokeAt", "Filter code": "Fitbit.newSleepLogged.AwokeAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "How'd you sleep? This Applet will sync your Fitbit readings to Health so you can easily track your Zzzs. ", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.new-sleep-logged"}, "trigger_details": [{"section": "Ingredients", "title": "Time to leave bed seconds\nThe time spent in bed after awaking, in seconds", "description": "The time spent in bed after awaking, in seconds", "details": {"Slug": "TimeToLeaveBedSeconds", "Filter code": "Fitbit.newSleepLogged.TimeToLeaveBedSeconds", "Type": "String", "Example": "600"}}, {"section": "Ingredients", "title": "Total time slept\nThe total time you slept", "description": "The total time you slept", "details": {"Slug": "TotalTimeSlept", "Filter code": "Fitbit.newSleepLogged.TotalTimeSlept", "Type": "String", "Example": "8h 0m"}}, {"section": "Ingredients", "title": "Restless count\nNumber of moments you were restless while sleeping", "description": "Number of moments you were restless while sleeping", "details": {"Slug": "RestlessCount", "Filter code": "Fitbit.newSleepLogged.RestlessCount", "Type": "String", "Example": "4"}}, {"section": "Ingredients", "title": "Total time slept in seconds\nThe total time you slept, in seconds", "description": "The total time you slept, in seconds", "details": {"Slug": "TotalTimeSleptInSeconds", "Filter code": "Fitbit.newSleepLogged.TotalTimeSleptInSeconds", "Type": "String", "Example": "28800"}}, {"section": "Ingredients", "title": "Time to fall asleep\nNumber of minutes before falling asleep", "description": "Number of minutes before falling asleep", "details": {"Slug": "TimeToFallAsleep", "Filter code": "Fitbit.newSleepLogged.TimeToFallAsleep", "Type": "String", "Example": "7m"}}, {"section": "Ingredients", "title": "Time awake\nThe time spent awake", "description": "The time spent awake", "details": {"Slug": "TimeAwake", "Filter code": "Fitbit.newSleepLogged.TimeAwake", "Type": "String", "Example": "30m"}}, {"section": "Ingredients", "title": "Time awake seconds\nThe time spent awake, in seconds", "description": "The time spent awake, in seconds", "details": {"Slug": "TimeAwakeSeconds", "Filter code": "Fitbit.newSleepLogged.TimeAwakeSeconds", "Type": "String", "Example": "1800"}}, {"section": "Ingredients", "title": "Awake count\nNumber of moments you were awake while trying to sleep", "description": "Number of moments you were awake while trying to sleep", "details": {"Slug": "AwakeCount", "Filter code": "Fitbit.newSleepLogged.AwakeCount", "Type": "String", "Example": "2"}}, {"section": "Ingredients", "title": "Fell asleep at\nThe date and time you fell asleep, localized to your Fitbit timezone setting", "description": "The date and time you fell asleep, localized to your Fitbit timezone setting", "details": {"Slug": "FellAsleepAt", "Filter code": "Fitbit.newSleepLogged.FellAsleepAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Time to fall asleep seconds\nNumber of seconds before falling asleep", "description": "Number of seconds before falling asleep", "details": {"Slug": "TimeToFallAsleepSeconds", "Filter code": "Fitbit.newSleepLogged.TimeToFallAsleepSeconds", "Type": "String", "Example": "420"}}, {"section": "Ingredients", "title": "Time to leave bed\nThe time spent in bed after awaking", "description": "The time spent in bed after awaking", "details": {"Slug": "TimeToLeaveBed", "Filter code": "Fitbit.newSleepLogged.TimeToLeaveBed", "Type": "String", "Example": "10m"}}, {"section": "Ingredients", "title": "Awoke at\nThe date and time you woke up, localized to your Fitbit timezone setting", "description": "The date and time you woke up, localized to your Fitbit timezone setting", "details": {"Slug": "AwokeAt", "Filter code": "Fitbit.newSleepLogged.AwokeAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "iOS Health", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_health.log_sleep", "Filter code method": "IosHealth.logSleep.skip(string?: reason)", "Runtime method": "runAction(\"ios_health.log_sleep\", {})"}, "action_details": [{"section": "Action fields", "title": "Sleep duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration of sleep", "Helper text": "e.g. \"1 hour\" or \"90 minutes\"", "Slug": "sleep_duration", "Required": "false", "Can have default value": "true", "Filter code method": "IosHealth.logSleep.setSleep Duration(string: sleep_duration)"}}, {"section": "Action fields", "title": "Asleep at\nText input > Other", "description": "Text input > Other", "details": {"Label": "Date and time sleep started", "Helper text": "e.g. \"Today at 9pm\" or \"In two hours\" or \"06/21/2017\"", "Slug": "asleep_at", "Required": "true", "Can have default value": "true", "Filter code method": "IosHealth.logSleep.setAsleep At(string: asleep_at)"}}, {"section": "Action fields", "title": "Date sleep ended\nText input > Other", "description": "Text input > Other", "details": {"Label": "Date and time sleep ended", "Helper text": "Optional e.g. \"Tomorrow at 9am\" or \"In eight hours\" or \"06/22/2017\"", "Slug": "date_sleep_ended", "Required": "false", "Can have default value": "true", "Filter code method": "IosHealth.logSleep.setDate Sleep Ended(string: date_sleep_ended)"}}], "filter_code": NaN}
{"original_description": "This Applet uses the Camera widget to quickly take photos and automatically\npost them to the Slack channel you chose.", "trigger_channel": "Camera widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_camera.do_camera_new_photo"}, "trigger_details": [{"section": "Ingredients", "title": "Temporary public photo url\nA public URL to the photo that anyone can visit for 30 days.", "description": "A public URL to the photo that anyone can visit for 30 days.", "details": {"Slug": "TemporaryPublicPhotoURL", "Filter code": "DoCamera.doCameraNewPhoto.TemporaryPublicPhotoURL", "Type": "Image URL", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Public photo url\nA public URL to the photo that anyone can visit.", "description": "A public URL to the photo that anyone can visit.", "details": {"Slug": "PublicPhotoURL", "Filter code": "DoCamera.doCameraNewPhoto.PublicPhotoURL", "Type": "String", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Share url\nThe link to the Share page for the photo.", "description": "The link to the Share page for the photo.", "details": {"Slug": "ShareURL", "Filter code": "DoCamera.doCameraNewPhoto.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude", "description": "", "details": {"Slug": "Latitude", "Filter code": "DoCamera.doCameraNewPhoto.Latitude", "Type": "String", "Example": "37.78346333333333"}}, {"section": "Ingredients", "title": "Longitude", "description": "", "details": {"Slug": "Longitude", "Filter code": "DoCamera.doCameraNewPhoto.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the tap.", "description": "The link to the map of the location of the tap.", "details": {"Slug": "LocationMapURL", "Filter code": "DoCamera.doCameraNewPhoto.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the tap.", "description": "The image of the map of the location of the tap.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoCamera.doCameraNewPhoto.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time the photo was taken.", "description": "The date and time the photo was taken.", "details": {"Slug": "OccurredAt", "Filter code": "DoCamera.doCameraNewPhoto.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Caption\nThe text you write on top of a photo.", "description": "The text you write on top of a photo.", "details": {"Slug": "Caption", "Filter code": "DoCamera.doCameraNewPhoto.Caption", "Type": "String", "Example": "A cool photo"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Simply add a file to the Slack folder this Applet creates in your Dropbox and it will send the file to a Slack channel of your choosing.", "trigger_channel": "Dropbox", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dropbox.new_text_file_in_folder"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subfolder name", "Helper text": "Optional", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "FileUrl", "Filter code": "Dropbox.newTextFileInFolder.FileUrl", "Type": "String", "Example": "https://www.dropbox.com/s/qp3cqdjqachyr2x/cool_story.txt"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "Filename", "Filter code": "Dropbox.newTextFileInFolder.Filename", "Type": "String", "Example": "cool_story.txt"}}, {"section": "Ingredients", "title": "Filename no ext\nThe name of the file without extension.", "description": "The name of the file without extension.", "details": {"Slug": "FilenameNoExt", "Filter code": "Dropbox.newTextFileInFolder.FilenameNoExt", "Type": "String", "Example": "cool_story"}}, {"section": "Ingredients", "title": "Modified date\nDate file was created or modified in Dropbox.", "description": "Date file was created or modified in Dropbox.", "details": {"Slug": "ModifiedDate", "Filter code": "Dropbox.newTextFileInFolder.ModifiedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Simulating natural sunset and offering relaxing dimming to help you sleep. The light will be completely turned off after 10 minutes. Please select sunset in the dropdown list.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.set_color", "Filter code method": "Yeelight.setColor.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.set_color\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which color?", "Slug": "color_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When you don't hit your target hours of sleep in an evening with Fitbit, your Google Calendar will remind you to head to bed at a reasonable time. You can adjust your target sleep duration and bedtime reminder below.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.sleep-duration-below"}, "trigger_details": [{"section": "Trigger fields", "title": "Target hours\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Target hours", "Helper text": "e.g. 7.5", "Slug": "target_hours", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Total time slept\nThe total time you slept", "description": "The total time you slept", "details": {"Slug": "TotalTimeSlept", "Filter code": "Fitbit.sleepDurationBelow.TotalTimeSlept", "Type": "String", "Example": "8h 0m"}}, {"section": "Ingredients", "title": "Total time slept in seconds\nThe total time you slept in seconds", "description": "The total time you slept in seconds", "details": {"Slug": "TotalTimeSleptInSeconds", "Filter code": "Fitbit.sleepDurationBelow.TotalTimeSleptInSeconds", "Type": "String", "Example": "28800"}}, {"section": "Ingredients", "title": "Date awoken\nDate when you awoke", "description": "Date when you awoke", "details": {"Slug": "DateAwoken", "Filter code": "Fitbit.sleepDurationBelow.DateAwoken", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "This Action will post a message to the channel you choose in Slack.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Share your photos to Instagram and automatically have them posted to a Slack channel.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "An easy way to keep coworkers or collaborators in the know — when you publish a new post this Applet will share the title, link, and a thumbnail image to the Slack channel of your choice. ", "trigger_channel": "WordPress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wordpress.any_new_post_wp"}, "trigger_details": [{"section": "Ingredients", "title": "Post title\nThe post's title.", "description": "The post's title.", "details": {"Slug": "PostTitle", "Filter code": "Wordpress.anyNewPostWp.PostTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Post url\nThe post's URL.", "description": "The post's URL.", "details": {"Slug": "PostUrl", "Filter code": "Wordpress.anyNewPostWp.PostUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Post content\nThe post's content, may contain HTML.", "description": "The post's content, may contain HTML.", "details": {"Slug": "PostContent", "Filter code": "Wordpress.anyNewPostWp.PostContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Post image url\nURL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "details": {"Slug": "PostImageUrl", "Filter code": "Wordpress.anyNewPostWp.PostImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Tags and categories\nThe post's tags and categories, comma seperated.", "description": "The post's tags and categories, comma seperated.", "details": {"Slug": "TagsAndCategories", "Filter code": "Wordpress.anyNewPostWp.TagsAndCategories", "Type": "String", "Example": "neato, really cool"}}, {"section": "Ingredients", "title": "Post published\nDate post was created", "description": "Date post was created", "details": {"Slug": "PostPublished", "Filter code": "Wordpress.anyNewPostWp.PostPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Choose a Slack channel and a message will be posted whenever there is a new alert from USCERT.", "trigger_channel": "US-CERT", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "uscert.new_alert"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Uscert.newAlert.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Uscert.newAlert.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry publisher\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Uscert.newAlert.EntryPublisher", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content html\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Uscert.newAlert.EntryContentHtml", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Uscert.newAlert.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "This Applet delivers BrainyQuote's Quote of the Day to a Slack channel of your choosing.", "trigger_channel": "BrainyQuote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "brainyquote.today_s_quote"}, "trigger_details": [{"section": "Ingredients", "title": "Source\nThe source of the quote.", "description": "The source of the quote.", "details": {"Slug": "EntryTitle", "Filter code": "Brainyquote.todaySQuote.Source", "Type": "String", "Example": "Voltaire"}}, {"section": "Ingredients", "title": "Quote url\nThe BrainyQuote URL.", "description": "The BrainyQuote URL.", "details": {"Slug": "EntryUrl", "Filter code": "Brainyquote.todaySQuote.QuoteUrl", "Type": "String", "Example": "https://www.brainyquote.com/quotes/authors/f/frank_sinatra.html"}}, {"section": "Ingredients", "title": "Quote\nThe quote, may contain HTML.", "description": "The quote, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Brainyquote.todaySQuote.Quote", "Type": "String", "Example": "\"Je pense, donc je suis\""}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Choose the Slack channel when you configure the Applet, and popular business articles will automatically be posted. ", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.any_new_popular_article_today"}, "trigger_details": [{"section": "Trigger fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Section", "Slug": "section", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.anyNewPopularArticleToday.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.anyNewPopularArticleToday.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.anyNewPopularArticleToday.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.anyNewPopularArticleToday.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.anyNewPopularArticleToday.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.anyNewPopularArticleToday.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Straight from Congress.gov — new items on the day's agenda when the Senate is in session will be posted to the Slack channel of your choice. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Keep your colleagues or collaborators in the loop on new outbreaks — perfect for anyone working in global health. ", "trigger_channel": "World Health Organization", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "who.new_disease_outbreak_news_from_who"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Helper text": "E.g. MERS, Zika, Canada", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Who.newDiseaseOutbreakNewsFromWho.EntryTitle", "Type": "String", "Example": "Middle East respiratory syndrome coronavirus (MERS-CoV) – Saudi Arabia, United Arab Emirates, and Qatar"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Who.newDiseaseOutbreakNewsFromWho.EntryUrl", "Type": "String", "Example": "http://www.who.int/entity/csr/don/06-june-2017-mers-saudi-arabia-united-arab-emirates-qatar/en/index.html"}}, {"section": "Ingredients", "title": "Content preview\nA preview of the entry's content.", "description": "A preview of the entry's content.", "details": {"Slug": "EntryContent", "Filter code": "Who.newDiseaseOutbreakNewsFromWho.ContentPreview", "Type": "String", "Example": "Between 21 April and 29 May 2017, the National IHR Focal Point of Saudi Arabia reported 25 additional cases of Middle East Respiratory Syndrome Coronavirus (MERS-CoV) infection including six fatal cases. On 16 May 2017, the IHR NFP of the United Arab Emi"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Who.newDiseaseOutbreakNewsFromWho.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "This Applet sends you a notification from the IFTTT app when a new \"Ask Slashdot\" article is posted.", "trigger_channel": "Slashdot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "slashdot.new_story"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Slashdot.newStory.EntryTitle", "Type": "String", "Example": "Microsoft Is Bringing Office to the Windows Store"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Slashdot.newStory.EntryUrl", "Type": "String", "Example": "http://ift.tt/2qvWxfd"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Slashdot.newStory.EntryContent", "Type": "String", "Example": "An anonymous reader quotes a report from VentureBeat: At its Microsoft EDU event in New York City today, the company announced it is bringing Microsoft Office to the Windows Store. We're talking about the full Win32 version of Office -- this is not a..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Slashdot.newStory.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": "var title = Trigger.EntryTitle\nvar subject = 'Ask Slashdot'\n\nif (title.indexOf(subject) < 0) {\n   IfNotifications.sendNotification.skip(\"Not an 'Ask Slashdot' article\")\n}\n\n"}
{"original_description": "Save a set amount toward one of your Goals every time FitBit logs you’ve met your target for how long you want to sleep.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.sleep-duration-below"}, "trigger_details": [{"section": "Trigger fields", "title": "Target hours\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Target hours", "Helper text": "e.g. 7.5", "Slug": "target_hours", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Total time slept\nThe total time you slept", "description": "The total time you slept", "details": {"Slug": "TotalTimeSlept", "Filter code": "Fitbit.sleepDurationBelow.TotalTimeSlept", "Type": "String", "Example": "8h 0m"}}, {"section": "Ingredients", "title": "Total time slept in seconds\nThe total time you slept in seconds", "description": "The total time you slept in seconds", "details": {"Slug": "TotalTimeSleptInSeconds", "Filter code": "Fitbit.sleepDurationBelow.TotalTimeSleptInSeconds", "Type": "String", "Example": "28800"}}, {"section": "Ingredients", "title": "Date awoken\nDate when you awoke", "description": "Date when you awoke", "details": {"Slug": "DateAwoken", "Filter code": "Fitbit.sleepDurationBelow.DateAwoken", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal"}, "action_details": [{"section": "Trigger fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Goal name\nName of the goal saved to.", "description": "Name of the goal saved to.", "details": {"Slug": "goal_name", "Filter code": "Qapital.saveTowardGoal.GoalName", "Type": "String", "Example": "Trip to Iceland"}}, {"section": "Ingredients", "title": "Amount\nAmount saved.", "description": "Amount saved.", "details": {"Slug": "amount", "Filter code": "Qapital.saveTowardGoal.Amount", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Save method\nMethod used to save.", "description": "Method used to save.", "details": {"Slug": "save_method", "Filter code": "Qapital.saveTowardGoal.SaveMethod", "Type": "String", "Example": "Round-up"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Qapital.saveTowardGoal.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "filter_code": NaN}
{"original_description": "Stay on top of current services being added. Whether it's a brand new device, a trending mobile app, or the internet's latest connected car — learn about it first here.", "trigger_channel": "IFTTT", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ifttt.new_service_published"}, "trigger_details": [{"section": "Ingredients", "title": "Name\nThe name of the new service.", "description": "The name of the new service.", "details": {"Slug": "name", "Filter code": "Ifttt.newServicePublished.Name", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Service url\nURL to the service on IFTTT.", "description": "URL to the service on IFTTT.", "details": {"Slug": "url", "Filter code": "Ifttt.newServicePublished.ServiceUrl", "Type": "Web URL", "Example": "https://ifttt.com/ifttt"}}, {"section": "Ingredients", "title": "Description\nThe description of the service.", "description": "The description of the service.", "details": {"Slug": "description", "Filter code": "Ifttt.newServicePublished.Description", "Type": "String", "Example": "This service provides..."}}, {"section": "Ingredients", "title": "Service logo\nA URL to the service's logo.", "description": "A URL to the service's logo.", "details": {"Slug": "logo_url", "Filter code": "Ifttt.newServicePublished.ServiceLogo", "Type": "Image URL", "Example": "https://assets.ifttt.com/images/channels/1/icons/regular.png"}}, {"section": "Ingredients", "title": "Created at\nDate and time the service was published.", "description": "Date and time the service was published.", "details": {"Slug": "created_at", "Filter code": "Ifttt.newServicePublished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Keep a group informed on relevant news — just enter the keyword you want to search for and new articles will be posted in the Slack channel you specify.", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_article_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Term\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "term", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newArticleMatchingSearch.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newArticleMatchingSearch.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.newArticleMatchingSearch.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.newArticleMatchingSearch.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.newArticleMatchingSearch.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Keywords\nA comma separated list of article keywords", "description": "A comma separated list of article keywords", "details": {"Slug": "Keywords", "Filter code": "Nytimes.newArticleMatchingSearch.Keywords", "Type": "String", "Example": "fish, tanks, biology"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.newArticleMatchingSearch.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Choose a keyword that best fits your industry or expertise. When a new grant matches, it'll be posted to the Slack channel of your choice. Good luck!", "trigger_channel": "Grants.gov", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "grants.new_grant_opportunity"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Helper text": "Can be a city, field, or specialty (e.g. &quot;Seattle&quot;, &quot;Education&quot;, &quot;physics&quot;).", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Grant title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Grants.newGrantOpportunity.GrantTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Grant url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Grants.newGrantOpportunity.GrantUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Grant content html\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Grants.newGrantOpportunity.GrantContentHtml", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Grant posted\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Grants.newGrantOpportunity.GrantPosted", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Keep the team informed and aware — this Applet will post SEC investor alerts to the Slack channel of your choosing.", "trigger_channel": "Securities and Exchange Commission", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "sec.sec_investor_alerts"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Helper text": "E.g. &quot;crowdfunding&quot; or &quot;investor complaints&quot;", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Sec.secInvestorAlerts.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Link\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Sec.secInvestorAlerts.Link", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry description\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Sec.secInvestorAlerts.EntryDescription", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Sec.secInvestorAlerts.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Have a favorite service on IFTTT? Are you a crafty Applet maker? Want to follow along for all the latest trigger and action releases? If you answered YES to any of those questions, then this Applet is for you!", "trigger_channel": "IFTTT", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ifttt.new_trigger_or_action_published"}, "trigger_details": [{"section": "Trigger fields", "title": "Service\nText input", "description": "Text input", "details": {"Label": "Which service?", "Helper text": "Enter the service name or slug (e.g. Google Assistant or google_assistant)", "Slug": "service", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Name\nThe name of the new trigger or action.", "description": "The name of the new trigger or action.", "details": {"Slug": "name", "Filter code": "Ifttt.newTriggerOrActionPublished.Name", "Type": "String", "Example": "New IFTTT update"}}, {"section": "Ingredients", "title": "Description\nThe description of the new trigger or action.", "description": "The description of the new trigger or action.", "details": {"Slug": "description", "Filter code": "Ifttt.newTriggerOrActionPublished.Description", "Type": "String", "Example": "This trigger fires whenever..."}}, {"section": "Ingredients", "title": "Service url\nThe URL to the service that published the new trigger or action.", "description": "The URL to the service that published the new trigger or action.", "details": {"Slug": "service_url", "Filter code": "Ifttt.newTriggerOrActionPublished.ServiceUrl", "Type": "Web URL", "Example": "https://ifttt.com/ifttt"}}, {"section": "Ingredients", "title": "Service\nThe name of the service that published the new trigger or action.", "description": "The name of the service that published the new trigger or action.", "details": {"Slug": "service", "Filter code": "Ifttt.newTriggerOrActionPublished.Service", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Type\nWhether the addition is a trigger or an action.", "description": "Whether the addition is a trigger or an action.", "details": {"Slug": "type", "Filter code": "Ifttt.newTriggerOrActionPublished.Type", "Type": "String", "Example": "Trigger"}}, {"section": "Ingredients", "title": "Created at\nDate and time the trigger or action was added.", "description": "Date and time the trigger or action was added.", "details": {"Slug": "created_at", "Filter code": "Ifttt.newTriggerOrActionPublished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Just add the hashtag #Slack (or pick your own) to your Instas — when you publish them, they'll be shared to the Slack channel of your choice. ", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_photo_by_you_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newPhotoByYouTagged.Caption", "Type": "String", "Example": "A cool photo #tbt #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the specified tag", "description": "The caption without the specified tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newPhotoByYouTagged.CaptionNoTag", "Type": "String", "Example": "A cool photo #IFTTT"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.newPhotoByYouTagged.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.newPhotoByYouTagged.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newPhotoByYouTagged.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newPhotoByYouTagged.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Share notes with your co-workers — just tag them and they'll be posted to Slack. ", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.add_tag_to_note"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Specific tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.addTagToNote.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.addTagToNote.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.addTagToNote.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.addTagToNote.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.addTagToNote.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "When Withings Sleep detects you get into bed, your Nest Thermostat will adjust the room temperature to be optimal for sleeping.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": NaN}
{"original_description": "Send a predefined Slack message by pressing the pusher. ", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Set the folder path, and when you star a new file in it, this Applet will automatically share it with the Slack channel you specify. Easy, breezy, beautiful — Applet world! ", "trigger_channel": "Google Drive", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_drive.new_starred_file"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Drive folder path", "Helper text": "Format: folders separated by &quot;/&quot; like &quot;Documents/Photos/Receipts&quot;", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "filename", "Filter code": "GoogleDrive.newStarredFile.Filename", "Type": "String", "Example": "filename"}}, {"section": "Ingredients", "title": "Path\nThe path of the file.", "description": "The path of the file.", "details": {"Slug": "path", "Filter code": "GoogleDrive.newStarredFile.Path", "Type": "String", "Example": "/IFTTT/sample.txt"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "file_url", "Filter code": "GoogleDrive.newStarredFile.FileUrl", "Type": "File URL", "Example": "https://google.com"}}, {"section": "Ingredients", "title": "Created at\nDate and time file was created.", "description": "Date and time file was created.", "details": {"Slug": "created_at", "Filter code": "GoogleDrive.newStarredFile.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Keep the team updated on the FCC's notices. This Applet posts to Slack when a relevant notice is posted.", "trigger_channel": "Federal Communications Commission", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fcc.new_notice"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword(s) (optional)", "Helper text": "E.g. &quot;New Jersey&quot;, &quot;Bronx&quot;, etc.", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Notice recipient\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Fcc.newNotice.NoticeRecipient", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Link\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Fcc.newNotice.Link", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Notice subject\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Fcc.newNotice.NoticeSubject", "Type": "String", "Example": "Well here we are on, blah, blah..."}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Receive a notification in a Slack channel of your choosing whenever Ballotpedia features a new breaking news story.", "trigger_channel": "Ballotpedia", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ballotpedia.breaking_news"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword(s) (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Ballotpedia.breakingNews.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Ballotpedia.breakingNews.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Ballotpedia.breakingNews.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Ballotpedia.breakingNews.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Keep your team informed! This Applet posts the latest EPA news to the Slack channel of your choosing.", "trigger_channel": "Environmental Protection Agency", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "epa.latest_news"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Epa.latestNews.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Epa.latestNews.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry region\nThe region publishing the entry.", "description": "The region publishing the entry.", "details": {"Slug": "EntryAuthor", "Filter code": "Epa.latestNews.EntryRegion", "Type": "String", "Example": "Region 03"}}, {"section": "Ingredients", "title": "Entry content preview\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Epa.latestNews.EntryContentPreview", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Epa.latestNews.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Never miss a story! This Applet delivers breaking news from SFGATE to a Slack channel of your choosing.", "trigger_channel": "SFGATE", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "sfgate.breaking_news"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Sfgate.breakingNews.EntryTitle", "Type": "String", "Example": "Bay Bridge bike ride now goes halfway to SF 7 days a week"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Sfgate.breakingNews.EntryUrl", "Type": "String", "Example": "http://ift.tt/2p3XLwc"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Sfgate.breakingNews.EntryAuthor", "Type": "String", "Example": "Mark Morford"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Sfgate.breakingNews.EntryContent", "Type": "String", "Example": "When three kittens became trapped in a boom lift in Redwood City on Monday, officers from the Peninsula Humane Society (PHS) and SPCA had to think on their feet – and fast."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Sfgate.breakingNews.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Post new Pew articles about science to the Slack channel of your choice. ", "trigger_channel": "Pew Research Center", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pew_research.u_s_politics_news"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "What keyword do you want to track?", "Helper text": "Optional", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "PewResearch.uSPoliticsNews.EntryTitle", "Type": "String", "Example": "Muslims and Islam: Key findings in the U.S. and around the world"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "PewResearch.uSPoliticsNews.EntryUrl", "Type": "String", "Example": "http://www.pewresearch.org/fact-tank/2017/05/26/muslims-and-islam-key-findings-in-the-u-s-and-around-the-world/"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "PewResearch.uSPoliticsNews.EntryAuthor", "Type": "String", "Example": "Michael Lipka"}}, {"section": "Ingredients", "title": "Entry preview\nA short preview of the entry's content.", "description": "A short preview of the entry's content.", "details": {"Slug": "EntryContent", "Filter code": "PewResearch.uSPoliticsNews.EntryPreview", "Type": "String", "Example": "Muslims are the fastest-growing religious group in the world. Here are some questions and answers about their public opinions and demographics."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "PewResearch.uSPoliticsNews.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "The fiscal monitor surveys and analyzes the latest public finance developments. When IMF publishes a new report, this Applet will post to a channel in Slack. ", "trigger_channel": "International Monetary Fund", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "imf.fiscal_monitor_reports"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Imf.fiscalMonitorReports.Title", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Link\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Imf.fiscalMonitorReports.Link", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Imf.fiscalMonitorReports.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Imf.fiscalMonitorReports.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "An office full of commuters? This Applet shares Caltrain news to the Slack channel of your choice. ", "trigger_channel": "Caltrain", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "caltrain.new_update"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Caltrain.newUpdate.EntryTitle", "Type": "String", "Example": "SamTrans and Caltrain Get You to the San Mateo County Fair"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Caltrain.newUpdate.EntryUrl", "Type": "String", "Example": "http://ift.tt/2qUi9lf"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Caltrain.newUpdate.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Keep the team up-to-date on the FCC's orders. This Applet posts to Slack when the latest relevant orders are published. Filter by keyword to get more relevant results!", "trigger_channel": "Federal Communications Commission", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fcc.order"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword(s) (optional)", "Helper text": "E.g. &quot;Sprint&quot;, &quot;Wireline Competition Bureau&quot;, etc.", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Subject\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Fcc.order.Subject", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Link\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Fcc.order.Link", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Preview content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Fcc.order.PreviewContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "This Applet will share new updates from the U.S. Energy Information Administration to a channel in Slack. ", "trigger_channel": "Energy Information Administration", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "eia.today_in_energy"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Eia.todayInEnergy.EntryTitle", "Type": "String", "Example": "Gasoline prices ahead of Memorial Day are higher than 2016, but second lowest since 2009"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Eia.todayInEnergy.EntryUrl", "Type": "String", "Example": "http://www.eia.gov/todayinenergy/detail.cfm?id=31392"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content.", "description": "The entry's content.", "details": {"Slug": "EntryContent", "Filter code": "Eia.todayInEnergy.EntryContent", "Type": "String", "Example": "Gasoline prices heading into Memorial Day weekend average $2.40 per gallon (gal) nationally, up from last year's price of $2.30/gal. Despite the year-over-year increase, 2017 marks the second-lowest price ahead of the Memorial Day weekend since 2009, when"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Eia.todayInEnergy.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Every time your Fitbit logs new sleep, show it on your Glance Clock.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.new-sleep-logged"}, "trigger_details": [{"section": "Ingredients", "title": "Time to leave bed seconds\nThe time spent in bed after awaking, in seconds", "description": "The time spent in bed after awaking, in seconds", "details": {"Slug": "TimeToLeaveBedSeconds", "Filter code": "Fitbit.newSleepLogged.TimeToLeaveBedSeconds", "Type": "String", "Example": "600"}}, {"section": "Ingredients", "title": "Total time slept\nThe total time you slept", "description": "The total time you slept", "details": {"Slug": "TotalTimeSlept", "Filter code": "Fitbit.newSleepLogged.TotalTimeSlept", "Type": "String", "Example": "8h 0m"}}, {"section": "Ingredients", "title": "Restless count\nNumber of moments you were restless while sleeping", "description": "Number of moments you were restless while sleeping", "details": {"Slug": "RestlessCount", "Filter code": "Fitbit.newSleepLogged.RestlessCount", "Type": "String", "Example": "4"}}, {"section": "Ingredients", "title": "Total time slept in seconds\nThe total time you slept, in seconds", "description": "The total time you slept, in seconds", "details": {"Slug": "TotalTimeSleptInSeconds", "Filter code": "Fitbit.newSleepLogged.TotalTimeSleptInSeconds", "Type": "String", "Example": "28800"}}, {"section": "Ingredients", "title": "Time to fall asleep\nNumber of minutes before falling asleep", "description": "Number of minutes before falling asleep", "details": {"Slug": "TimeToFallAsleep", "Filter code": "Fitbit.newSleepLogged.TimeToFallAsleep", "Type": "String", "Example": "7m"}}, {"section": "Ingredients", "title": "Time awake\nThe time spent awake", "description": "The time spent awake", "details": {"Slug": "TimeAwake", "Filter code": "Fitbit.newSleepLogged.TimeAwake", "Type": "String", "Example": "30m"}}, {"section": "Ingredients", "title": "Time awake seconds\nThe time spent awake, in seconds", "description": "The time spent awake, in seconds", "details": {"Slug": "TimeAwakeSeconds", "Filter code": "Fitbit.newSleepLogged.TimeAwakeSeconds", "Type": "String", "Example": "1800"}}, {"section": "Ingredients", "title": "Awake count\nNumber of moments you were awake while trying to sleep", "description": "Number of moments you were awake while trying to sleep", "details": {"Slug": "AwakeCount", "Filter code": "Fitbit.newSleepLogged.AwakeCount", "Type": "String", "Example": "2"}}, {"section": "Ingredients", "title": "Fell asleep at\nThe date and time you fell asleep, localized to your Fitbit timezone setting", "description": "The date and time you fell asleep, localized to your Fitbit timezone setting", "details": {"Slug": "FellAsleepAt", "Filter code": "Fitbit.newSleepLogged.FellAsleepAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Time to fall asleep seconds\nNumber of seconds before falling asleep", "description": "Number of seconds before falling asleep", "details": {"Slug": "TimeToFallAsleepSeconds", "Filter code": "Fitbit.newSleepLogged.TimeToFallAsleepSeconds", "Type": "String", "Example": "420"}}, {"section": "Ingredients", "title": "Time to leave bed\nThe time spent in bed after awaking", "description": "The time spent in bed after awaking", "details": {"Slug": "TimeToLeaveBed", "Filter code": "Fitbit.newSleepLogged.TimeToLeaveBed", "Type": "String", "Example": "10m"}}, {"section": "Ingredients", "title": "Awoke at\nThe date and time you woke up, localized to your Fitbit timezone setting", "description": "The date and time you woke up, localized to your Fitbit timezone setting", "details": {"Slug": "AwokeAt", "Filter code": "Fitbit.newSleepLogged.AwokeAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Glance clock", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "glanceclock.notice", "Filter code method": "Glanceclock.notice.skip(string?: reason)", "Runtime method": "runAction(\"glanceclock.notice\", {})"}, "action_details": [{"section": "Action fields", "title": "Clock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Clock", "Slug": "clock", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > Title", "description": "Text input > Title", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Glanceclock.notice.setText(string: text)"}}, {"section": "Action fields", "title": "Sound\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sound", "Slug": "sound", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Animation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Type", "Slug": "animation", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Get a signal on your Das Keyboard at the end of the day indicating the market closing price of a specified stock. ", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.price_at_close_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Helper text": "Supported exchanges include NYSE, NASDAQ, and AMEX", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.priceAtCloseStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.priceAtCloseStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last trade price of the stock.", "description": "The last trade price of the stock.", "details": {"Slug": "Price", "Filter code": "Finance.priceAtCloseStocks.Price", "Type": "String", "Example": "603.7"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.priceAtCloseStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Date\nThe date of the last trade.", "description": "The date of the last trade.", "details": {"Slug": "Date", "Filter code": "Finance.priceAtCloseStocks.Date", "Type": "String", "Example": "September 05, 2014"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Kick off your team's analysis seamlessly when a new Fiscal Monitor report comes out from the IMF. This Applet creates a new Trello card and tags your team.", "trigger_channel": "International Monetary Fund", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "imf.fiscal_monitor_reports"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Imf.fiscalMonitorReports.Title", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Link\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Imf.fiscalMonitorReports.Link", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Imf.fiscalMonitorReports.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Imf.fiscalMonitorReports.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Trello", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "trello.create_card", "Filter code method": "Trello.createCard.skip(string?: reason)", "Runtime method": "runAction(\"trello.create_card\", {})"}, "action_details": [{"section": "Action fields", "title": "Board\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "List name\nText input > Other", "description": "Text input > Other", "details": {"Label": "List name", "Helper text": "We'll create a new list if one with this name doesn't exist", "Slug": "list_name", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setList Name(string: list_name)"}}, {"section": "Action fields", "title": "Pos\nDropdown list", "description": "Dropdown list", "details": {"Label": "Position", "Slug": "pos", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setPos(string: pos)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setTitle(string: title)"}}, {"section": "Action fields", "title": "Description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setDescription(string: description)"}}, {"section": "Action fields", "title": "Members\nText input > Other", "description": "Text input > Other", "details": {"Label": "Assign members", "Helper text": "Optional comma separated list of @usernames to assign to card", "Slug": "members", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setMembers(string: members)"}}, {"section": "Action fields", "title": "Labels\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Apply labels", "Helper text": "Optional comma separated list of label names — labels that do not exist on the board will be ignored", "Slug": "labels", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setLabels(string: labels)"}}, {"section": "Action fields", "title": "Url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Attachment URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Choose a stock to monitor and send a signal to your Das Keyboard whenever it rises by a specified percentage.", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.percentage_rise_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Percentage\nText input", "description": "Text input", "details": {"Label": "Percentage increase", "Helper text": "e.g. insert 15 for 15%", "Slug": "percentage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.percentageRiseStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.percentageRiseStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last price", "description": "The last price", "details": {"Slug": "Price", "Filter code": "Finance.percentageRiseStocks.Price", "Type": "String", "Example": "89"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.percentageRiseStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.percentageRiseStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Percentage change\nThe percentage change", "description": "The percentage change", "details": {"Slug": "PercentageChange", "Filter code": "Finance.percentageRiseStocks.PercentageChange", "Type": "String", "Example": "42"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Choose a stock to monitor and send a signal to your Das Keyboard whenever it drops by a specified percentage.", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.percentage_rise_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Percentage\nText input", "description": "Text input", "details": {"Label": "Percentage increase", "Helper text": "e.g. insert 15 for 15%", "Slug": "percentage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.percentageRiseStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.percentageRiseStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last price", "description": "The last price", "details": {"Slug": "Price", "Filter code": "Finance.percentageRiseStocks.Price", "Type": "String", "Example": "89"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.percentageRiseStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.percentageRiseStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Percentage change\nThe percentage change", "description": "The percentage change", "details": {"Slug": "PercentageChange", "Filter code": "Finance.percentageRiseStocks.PercentageChange", "Type": "String", "Example": "42"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Select a time during the day to remove the currently running event on the selected thermostat provided the event is not a mandatory demand response event.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.resume_program", "Filter code method": "Ecobee.resumeProgram.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.resume_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Thermostat Name", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Activate any Automate scene at sunset to close shades.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Automate Shades", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "automateshades.activate_scene", "Filter code method": "Automateshades.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"automateshades.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Sceneid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scene", "Helper text": "The scene to activate.", "Slug": "sceneID", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Activate any Automate scene at sunrise to open shades. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Automate Shades", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "automateshades.activate_scene", "Filter code method": "Automateshades.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"automateshades.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Sceneid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scene", "Helper text": "The scene to activate.", "Slug": "sceneID", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Activates an Automate scene to close your shades on a hot day (exterior temperature threshold can be configured). ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Automate Shades", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "automateshades.activate_scene", "Filter code method": "Automateshades.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"automateshades.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Sceneid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scene", "Helper text": "The scene to activate.", "Slug": "sceneID", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When the current UV index raises above a specified threshold, activate an Automate Shades scene to close your shades.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_humidity_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Humidity\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Humidity (%)", "Slug": "humidity", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentHumidityRisesAbove.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentHumidityRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentHumidityRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentHumidityRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentHumidityRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentHumidityRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Automate Shades", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "automateshades.activate_scene", "Filter code method": "Automateshades.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"automateshades.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Sceneid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scene", "Helper text": "The scene to activate.", "Slug": "sceneID", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Protect your privacy by lowering your shades when the sun goes down.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "SOMA Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "soma.set_shade_position", "Filter code method": "Soma.setShadePosition.skip(string?: reason)", "Runtime method": "runAction(\"soma.set_shade_position\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device name", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Position\nDropdown list", "description": "Dropdown list", "details": {"Label": "Position", "Helper text": "0 is open, 100 is closed", "Slug": "position", "Required": "true", "Can have default value": "true", "Filter code method": "Soma.setShadePosition.setPosition(string: position)"}}], "filter_code": NaN}
{"original_description": "Activates an Automate Pulse room to close your shades on a hot day.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Automate Shades V2", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "automateshades_v2.activate_room", "Filter code method": "AutomateshadesV2.activateRoom.skip(string?: reason)", "Runtime method": "runAction(\"automateshades_v2.activate_room\", {})"}, "action_details": [{"section": "Action fields", "title": "Roomid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which room?", "Slug": "roomID", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Movement position\nText input > Other", "description": "Text input > Other", "details": {"Label": "What percentage?", "Helper text": "Number only (0-100, where 0 is closed and 100 is open).", "Slug": "movement_position", "Required": "true", "Can have default value": "true", "Filter code method": "AutomateshadesV2.activateRoom.setMovement Position(string: movement_position)"}}], "filter_code": NaN}
{"original_description": "When the forecast calls for rain in your area you'll receive a push notification. Remember to bring an umbrella! Keep in mind this Applet requires the IFTTT app.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Fingers crossed for a snow day...", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Don't get caught in the rain without proper attire or an umbrella!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "You can change the forecast condition below to snow, clear, or cloudy if you would rather. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "VoIP Calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "voip_calls.call_my_device", "Filter code method": "VoipCalls.callMyDevice.skip(string?: reason)", "Runtime method": "runAction(\"voip_calls.call_my_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Voice message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "VoipCalls.callMyDevice.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Throw your sneakers in your bag the night before and you'll be ready to take that midday walk, afternoon run, or any other activity that gets you outside. No excuses!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Every day at the time of your choosing (defaults to 6 PM), the weather report for the tomorrow will be added to your iOS Calendar.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsWeatherAtTime.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsWeatherAtTime.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsWeatherAtTime.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "iOS Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_calendar.create_calendar_event", "Filter code method": "IosCalendar.createCalendarEvent.skip(string?: reason)", "Runtime method": "runAction(\"ios_calendar.create_calendar_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Calendar name", "Helper text": "If blank or calendar cannot be found, your default calendar will be used.", "Slug": "calendar_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Event title", "Helper text": "E.g. \"Coffee with Max\"", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Location\nText input > Other", "description": "Text input > Other", "details": {"Label": "Location", "Helper text": "E.g. \"Machine Coffee & Deli\"", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Start date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Start date", "Helper text": "E.g. \"Tomorrow at 5pm\" or \"In five hours\" or \"03/20/2017\"", "Slug": "start_date", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setStart Date(string: start_date)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration in minutes", "Helper text": "Defaults to 60 minutes. Enter \"all-day\" for all day events.", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setDuration(string: duration)"}}, {"section": "Action fields", "title": "Notes\nText input", "description": "Text input", "details": {"Label": "Notes", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Add URL", "Helper text": "Optional link for the event", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setUrl(string: url)"}}, {"section": "Action fields", "title": "Alert\nText input > Other", "description": "Text input > Other", "details": {"Label": "Alert timing", "Helper text": "Use phrases like \"15 minutes\" or \"one day.\" Leave blank for no alerts.", "Slug": "alert", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setAlert(string: alert)"}}], "filter_code": NaN}
{"original_description": "When tomorrow's forecast is rain, a task will be added to Remember The Milk. You can set the time that the task is due.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Remember The Milk", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rememberthemilk.tasks_add", "Filter code method": "Rememberthemilk.tasksAdd.skip(string?: reason)", "Runtime method": "runAction(\"rememberthemilk.tasks_add\", {})"}, "action_details": [{"section": "Action fields", "title": "Task\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Helper text": "Task name with properties in <a href=\"https://www.rememberthemilk.com/help/answer/basics-smartadd-howdoiuse\" target=\"_blank\">Smart Add</a> format. E.g. &quot;Call Bob at 9am Monday #work&quot;.", "Slug": "task", "Required": "true", "Can have default value": "true", "Filter code method": "Rememberthemilk.tasksAdd.setTask(string: task)"}}], "filter_code": NaN}
{"original_description": "Get tomorrow's weather report for your local area at the time of your choosing. This Applet reports the weather in Celsius.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsWeatherAtTime.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsWeatherAtTime.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsWeatherAtTime.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Send a rich notification if tomorrow's low drops below X degrees", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_low_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsLowDropsBelow.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsLowDropsBelow.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsLowDropsBelow.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsLowDropsBelow.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsLowDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsLowDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_rich_notification", "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Helper text": "Optional, bold text above the message", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Helper text": "Optional, link may open in a browser or installed app", "Slug": "link_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Adds a task to your Toodledo to-do list if it is going to rain tomorrow.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Toodledo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "toodledo.add-task", "Filter code method": "Toodledo.addTask.skip(string?: reason)", "Runtime method": "runAction(\"toodledo.add-task\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Toodledo.addTask.setTitle(string: title)"}}, {"section": "Action fields", "title": "Note\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Toodledo.addTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Tag\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tag", "Required": "false", "Can have default value": "true", "Filter code method": "Toodledo.addTask.setTag(string: tag)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Slug": "priority", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Add to folder", "Slug": "folder", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time there are changes in tomorrow’s forecasted weather condition with snow, a Signal will be sent to your Das Keyboard 5Q.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time there are changes in tomorrow’s forecasted weather condition, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time your Fitbit syncs on a new day, the previous day's stats will be added to a new row in a Google Drive spreadsheet.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.new-daily-activity-summary"}, "trigger_details": [{"section": "Ingredients", "title": "Date\nThe day of activity", "description": "The day of activity", "details": {"Slug": "date", "Filter code": "Fitbit.newDailyActivitySummary.Date", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Total steps\nNumber of steps taken", "description": "Number of steps taken", "details": {"Slug": "total_steps", "Filter code": "Fitbit.newDailyActivitySummary.TotalSteps", "Type": "String", "Example": "10123"}}, {"section": "Ingredients", "title": "Total floors climbed\nNumber of floors climbed", "description": "Number of floors climbed", "details": {"Slug": "total_floors_climbed", "Filter code": "Fitbit.newDailyActivitySummary.TotalFloorsClimbed", "Type": "String", "Example": "10"}}, {"section": "Ingredients", "title": "Total calories burned\nNumber of calories burned from BMR and activity", "description": "Number of calories burned from BMR and activity", "details": {"Slug": "total_calories_burned", "Filter code": "Fitbit.newDailyActivitySummary.TotalCaloriesBurned", "Type": "String", "Example": "2000"}}, {"section": "Ingredients", "title": "Total elevation gained\nDistance climbed", "description": "Distance climbed", "details": {"Slug": "total_elevation_gained", "Filter code": "Fitbit.newDailyActivitySummary.TotalElevationGained", "Type": "String", "Example": "200"}}, {"section": "Ingredients", "title": "Total elevation gained unit\nUnit for elevation gain based on your Fitbit preferences", "description": "Unit for elevation gain based on your Fitbit preferences", "details": {"Slug": "total_elevation_gained_unit", "Filter code": "Fitbit.newDailyActivitySummary.TotalElevationGainedUnit", "Type": "String", "Example": "meters"}}, {"section": "Ingredients", "title": "Total distance covered\nThe total amount of distance covered", "description": "The total amount of distance covered", "details": {"Slug": "total_distance_covered", "Filter code": "Fitbit.newDailyActivitySummary.TotalDistanceCovered", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Total distance covered unit\nUnit for distance covered based on your Fitbit preferences", "description": "Unit for distance covered based on your Fitbit preferences", "details": {"Slug": "total_distance_covered_unit", "Filter code": "Fitbit.newDailyActivitySummary.TotalDistanceCoveredUnit", "Type": "String", "Example": "kilometers"}}, {"section": "Ingredients", "title": "Sedentary minutes\nMinutes in the day you weren't moving much", "description": "Minutes in the day you weren't moving much", "details": {"Slug": "sedentary_minutes", "Filter code": "Fitbit.newDailyActivitySummary.SedentaryMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Lightly active minutes\nMinutes in the day you were moving but not exerting much effort, such as walking", "description": "Minutes in the day you were moving but not exerting much effort, such as walking", "details": {"Slug": "lightly_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.LightlyActiveMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Fairly active minutes\nMinutes in the day you were moving enough to elevate your heart rate", "description": "Minutes in the day you were moving enough to elevate your heart rate", "details": {"Slug": "fairly_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.FairlyActiveMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Very active minutes\nMinutes in the day doing cardio workouts and high-intensity activities like jogging and running", "description": "Minutes in the day doing cardio workouts and high-intensity activities like jogging and running", "details": {"Slug": "very_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.VeryActiveMinutes", "Type": "String", "Example": "20"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "A new Day One journal entry will be created when your daily activity summary is available from Fitbit.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.new-daily-activity-summary"}, "trigger_details": [{"section": "Ingredients", "title": "Date\nThe day of activity", "description": "The day of activity", "details": {"Slug": "date", "Filter code": "Fitbit.newDailyActivitySummary.Date", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Total steps\nNumber of steps taken", "description": "Number of steps taken", "details": {"Slug": "total_steps", "Filter code": "Fitbit.newDailyActivitySummary.TotalSteps", "Type": "String", "Example": "10123"}}, {"section": "Ingredients", "title": "Total floors climbed\nNumber of floors climbed", "description": "Number of floors climbed", "details": {"Slug": "total_floors_climbed", "Filter code": "Fitbit.newDailyActivitySummary.TotalFloorsClimbed", "Type": "String", "Example": "10"}}, {"section": "Ingredients", "title": "Total calories burned\nNumber of calories burned from BMR and activity", "description": "Number of calories burned from BMR and activity", "details": {"Slug": "total_calories_burned", "Filter code": "Fitbit.newDailyActivitySummary.TotalCaloriesBurned", "Type": "String", "Example": "2000"}}, {"section": "Ingredients", "title": "Total elevation gained\nDistance climbed", "description": "Distance climbed", "details": {"Slug": "total_elevation_gained", "Filter code": "Fitbit.newDailyActivitySummary.TotalElevationGained", "Type": "String", "Example": "200"}}, {"section": "Ingredients", "title": "Total elevation gained unit\nUnit for elevation gain based on your Fitbit preferences", "description": "Unit for elevation gain based on your Fitbit preferences", "details": {"Slug": "total_elevation_gained_unit", "Filter code": "Fitbit.newDailyActivitySummary.TotalElevationGainedUnit", "Type": "String", "Example": "meters"}}, {"section": "Ingredients", "title": "Total distance covered\nThe total amount of distance covered", "description": "The total amount of distance covered", "details": {"Slug": "total_distance_covered", "Filter code": "Fitbit.newDailyActivitySummary.TotalDistanceCovered", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Total distance covered unit\nUnit for distance covered based on your Fitbit preferences", "description": "Unit for distance covered based on your Fitbit preferences", "details": {"Slug": "total_distance_covered_unit", "Filter code": "Fitbit.newDailyActivitySummary.TotalDistanceCoveredUnit", "Type": "String", "Example": "kilometers"}}, {"section": "Ingredients", "title": "Sedentary minutes\nMinutes in the day you weren't moving much", "description": "Minutes in the day you weren't moving much", "details": {"Slug": "sedentary_minutes", "Filter code": "Fitbit.newDailyActivitySummary.SedentaryMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Lightly active minutes\nMinutes in the day you were moving but not exerting much effort, such as walking", "description": "Minutes in the day you were moving but not exerting much effort, such as walking", "details": {"Slug": "lightly_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.LightlyActiveMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Fairly active minutes\nMinutes in the day you were moving enough to elevate your heart rate", "description": "Minutes in the day you were moving enough to elevate your heart rate", "details": {"Slug": "fairly_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.FairlyActiveMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Very active minutes\nMinutes in the day doing cardio workouts and high-intensity activities like jogging and running", "description": "Minutes in the day doing cardio workouts and high-intensity activities like jogging and running", "details": {"Slug": "very_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.VeryActiveMinutes", "Type": "String", "Example": "20"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Start a Harmony Home activity.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Harmony", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "harmony.start-activity", "Filter code method": "Harmony.startActivity.skip(string?: reason)", "Runtime method": "runAction(\"harmony.start-activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Activity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Helper text": "Activities that include locks are not supported", "Slug": "activity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "End a Harmony Home activity.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Harmony", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "harmony.end-activity", "Filter code method": "Harmony.endActivity.skip(string?: reason)", "Runtime method": "runAction(\"harmony.end-activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Activity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Helper text": "Activities that include locks are not supported", "Slug": "activity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This creates a widget you can add to the home screen on your phone. When you press it,  the selected online activity will be prioritized on your TP-Link network.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "TP-Link Router", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "tplink_router.prioritize_online_activity", "Filter code method": "TplinkRouter.prioritizeOnlineActivity.skip(string?: reason)", "Runtime method": "runAction(\"tplink_router.prioritize_online_activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Qos mode name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Online Activity Name", "Helper text": "The online activity you would like to prioritize.", "Slug": "qos_mode_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Router name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Router?", "Helper text": "The name of the TP-Link router you want to prioritize online activity on.", "Slug": "router_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Hit your fitness goals and your financial goals at the same time! Specify the type of activity (run or ride) and the amount you'd like to save when you set up the Applet.", "trigger_channel": "Strava", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "strava.new_activity_by_you"}, "trigger_details": [{"section": "Trigger fields", "title": "Activity type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Slug": "activity_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time the activity was completed.", "description": "Date and time the activity was completed.", "details": {"Slug": "created_at", "Filter code": "Strava.newActivityByYou.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Activity type\nThe type of activity completed.", "description": "The type of activity completed.", "details": {"Slug": "activity_type", "Filter code": "Strava.newActivityByYou.ActivityType", "Type": "String", "Example": "Ride"}}, {"section": "Ingredients", "title": "Name\nThe name of the activity.", "description": "The name of the activity.", "details": {"Slug": "name", "Filter code": "Strava.newActivityByYou.Name", "Type": "String", "Example": "Evening Ride"}}, {"section": "Ingredients", "title": "Distance meters\nDistance moved in meters.", "description": "Distance moved in meters.", "details": {"Slug": "distance", "Filter code": "Strava.newActivityByYou.DistanceMeters", "Type": "String", "Example": "4475.4"}}, {"section": "Ingredients", "title": "Elapsed time\nTotal duration of the activity.", "description": "Total duration of the activity.", "details": {"Slug": "elapsed_time", "Filter code": "Strava.newActivityByYou.ElapsedTime", "Type": "String", "Example": "22 minutes, 13 seconds"}}, {"section": "Ingredients", "title": "Elapsed time in seconds\nTotal duration of the activity in seconds.", "description": "Total duration of the activity in seconds.", "details": {"Slug": "elapsed_time_in_seconds", "Filter code": "Strava.newActivityByYou.ElapsedTimeInSeconds", "Type": "String", "Example": "1333"}}, {"section": "Ingredients", "title": "Link to activity\nThe URL to the activity on Strava.", "description": "The URL to the activity on Strava.", "details": {"Slug": "link_to_activity", "Filter code": "Strava.newActivityByYou.LinkToActivity", "Type": "Web URL", "Example": "http://www.strava.com/activities/144461028"}}, {"section": "Ingredients", "title": "Route map image url\nURL to a map image of the route.", "description": "URL to a map image of the route.", "details": {"Slug": "route_map_image_url", "Filter code": "Strava.newActivityByYou.RouteMapImageUrl", "Type": "Image URL", "Example": "https://maps.googleapis.com/maps/api/staticmap?size=400x400&path=weight:3|color:0xFC4C02FF|enc:{qreFj}bjVZQ"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal"}, "action_details": [{"section": "Trigger fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Goal name\nName of the goal saved to.", "description": "Name of the goal saved to.", "details": {"Slug": "goal_name", "Filter code": "Qapital.saveTowardGoal.GoalName", "Type": "String", "Example": "Trip to Iceland"}}, {"section": "Ingredients", "title": "Amount\nAmount saved.", "description": "Amount saved.", "details": {"Slug": "amount", "Filter code": "Qapital.saveTowardGoal.Amount", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Save method\nMethod used to save.", "description": "Method used to save.", "details": {"Slug": "save_method", "Filter code": "Qapital.saveTowardGoal.SaveMethod", "Type": "String", "Example": "Round-up"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Qapital.saveTowardGoal.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "filter_code": NaN}
{"original_description": "This Action will start the Harmony Home activity you specify.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Harmony", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "harmony.start-activity", "Filter code method": "Harmony.startActivity.skip(string?: reason)", "Runtime method": "runAction(\"harmony.start-activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Activity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Helper text": "Activities that include locks are not supported", "Slug": "activity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time your Fitbit tracker syncs for the first time today and your previous day's stats are available, they are displayed on your Glance Clock.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.new-daily-activity-summary"}, "trigger_details": [{"section": "Ingredients", "title": "Date\nThe day of activity", "description": "The day of activity", "details": {"Slug": "date", "Filter code": "Fitbit.newDailyActivitySummary.Date", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Total steps\nNumber of steps taken", "description": "Number of steps taken", "details": {"Slug": "total_steps", "Filter code": "Fitbit.newDailyActivitySummary.TotalSteps", "Type": "String", "Example": "10123"}}, {"section": "Ingredients", "title": "Total floors climbed\nNumber of floors climbed", "description": "Number of floors climbed", "details": {"Slug": "total_floors_climbed", "Filter code": "Fitbit.newDailyActivitySummary.TotalFloorsClimbed", "Type": "String", "Example": "10"}}, {"section": "Ingredients", "title": "Total calories burned\nNumber of calories burned from BMR and activity", "description": "Number of calories burned from BMR and activity", "details": {"Slug": "total_calories_burned", "Filter code": "Fitbit.newDailyActivitySummary.TotalCaloriesBurned", "Type": "String", "Example": "2000"}}, {"section": "Ingredients", "title": "Total elevation gained\nDistance climbed", "description": "Distance climbed", "details": {"Slug": "total_elevation_gained", "Filter code": "Fitbit.newDailyActivitySummary.TotalElevationGained", "Type": "String", "Example": "200"}}, {"section": "Ingredients", "title": "Total elevation gained unit\nUnit for elevation gain based on your Fitbit preferences", "description": "Unit for elevation gain based on your Fitbit preferences", "details": {"Slug": "total_elevation_gained_unit", "Filter code": "Fitbit.newDailyActivitySummary.TotalElevationGainedUnit", "Type": "String", "Example": "meters"}}, {"section": "Ingredients", "title": "Total distance covered\nThe total amount of distance covered", "description": "The total amount of distance covered", "details": {"Slug": "total_distance_covered", "Filter code": "Fitbit.newDailyActivitySummary.TotalDistanceCovered", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Total distance covered unit\nUnit for distance covered based on your Fitbit preferences", "description": "Unit for distance covered based on your Fitbit preferences", "details": {"Slug": "total_distance_covered_unit", "Filter code": "Fitbit.newDailyActivitySummary.TotalDistanceCoveredUnit", "Type": "String", "Example": "kilometers"}}, {"section": "Ingredients", "title": "Sedentary minutes\nMinutes in the day you weren't moving much", "description": "Minutes in the day you weren't moving much", "details": {"Slug": "sedentary_minutes", "Filter code": "Fitbit.newDailyActivitySummary.SedentaryMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Lightly active minutes\nMinutes in the day you were moving but not exerting much effort, such as walking", "description": "Minutes in the day you were moving but not exerting much effort, such as walking", "details": {"Slug": "lightly_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.LightlyActiveMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Fairly active minutes\nMinutes in the day you were moving enough to elevate your heart rate", "description": "Minutes in the day you were moving enough to elevate your heart rate", "details": {"Slug": "fairly_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.FairlyActiveMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Very active minutes\nMinutes in the day doing cardio workouts and high-intensity activities like jogging and running", "description": "Minutes in the day doing cardio workouts and high-intensity activities like jogging and running", "details": {"Slug": "very_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.VeryActiveMinutes", "Type": "String", "Example": "20"}}], "action_channel": "Glance clock", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "glanceclock.notice", "Filter code method": "Glanceclock.notice.skip(string?: reason)", "Runtime method": "runAction(\"glanceclock.notice\", {})"}, "action_details": [{"section": "Action fields", "title": "Clock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Clock", "Slug": "clock", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > Title", "description": "Text input > Title", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Glanceclock.notice.setText(string: text)"}}, {"section": "Action fields", "title": "Sound\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sound", "Slug": "sound", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Animation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Type", "Slug": "animation", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Applet works with NASA JPL's news feed. When they share a new discovery, mission update, or bit of space news — you'll be the first to know with an email in your inbox and a notification on your phone. 🚀", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "Be the first to know about the latest breaking news. When there is a new breaking news alert, your Hue lights will start blinking.", "trigger_channel": "Fox News", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "foxnews.breaking_news_fnc"}, "trigger_details": [{"section": "Ingredients", "title": "Body\nSubject of the alert.", "description": "Subject of the alert.", "details": {"Slug": "subject", "Filter code": "Foxnews.breakingNewsFnc.Body", "Type": "String", "Example": "WATCH LIVE: Vice President Mike Pence speaks at CPAC at 7:30 p.m. ET"}}, {"section": "Ingredients", "title": "Header\nHeader for a breaking news alert.", "description": "Header for a breaking news alert.", "details": {"Slug": "list_name", "Filter code": "Foxnews.breakingNewsFnc.Header", "Type": "String", "Example": "Fox News Breaking News Alert"}}, {"section": "Ingredients", "title": "Date\nDate and time of the alert.", "description": "Date and time of the alert.", "details": {"Slug": "date", "Filter code": "Foxnews.breakingNewsFnc.Date", "Type": "String", "Example": "02/26/17 3:01 PM"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Foxnews.breakingNewsFnc.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time there is a breaking news alert on Fox News, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Fox News", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "foxnews.breaking_news_fnc"}, "trigger_details": [{"section": "Ingredients", "title": "Body\nSubject of the alert.", "description": "Subject of the alert.", "details": {"Slug": "subject", "Filter code": "Foxnews.breakingNewsFnc.Body", "Type": "String", "Example": "WATCH LIVE: Vice President Mike Pence speaks at CPAC at 7:30 p.m. ET"}}, {"section": "Ingredients", "title": "Header\nHeader for a breaking news alert.", "description": "Header for a breaking news alert.", "details": {"Slug": "list_name", "Filter code": "Foxnews.breakingNewsFnc.Header", "Type": "String", "Example": "Fox News Breaking News Alert"}}, {"section": "Ingredients", "title": "Date\nDate and time of the alert.", "description": "Date and time of the alert.", "details": {"Slug": "date", "Filter code": "Foxnews.breakingNewsFnc.Date", "Type": "String", "Example": "02/26/17 3:01 PM"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Foxnews.breakingNewsFnc.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When you miss an incoming call from an important person on your Android phone blink your LIFX lights a chosen color, even if your lights are off.", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.receive_a_phone_call_from_number"}, "trigger_details": [{"section": "Trigger fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Include country code e.g. 12024561111", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.receiveAPhoneCallFromNumber.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.receiveAPhoneCallFromNumber.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.receiveAPhoneCallFromNumber.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.receiveAPhoneCallFromNumber.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.receiveAPhoneCallFromNumber.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.blink", "Filter code method": "Lifx.blink.skip(string?: reason)", "Runtime method": "runAction(\"lifx.blink\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Number of blinks\nDropdown list", "description": "Dropdown list", "details": {"Label": "Number of blinks", "Slug": "number_of_blinks", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.blink.setNumber Of Blinks(string: number_of_blinks)"}}, {"section": "Action fields", "title": "Blink if off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on first?", "Helper text": "&quot;Yes&quot; will make your lights blink, even when they are turned off in the app.", "Slug": "blink_if_off", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.blink.setBlink If Off(string: blink_if_off)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: green saturation:0.2; number_of_blinks: 6&quot; for 6 pale green blinks. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.blink.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Missed a phone call on Android? Call back the calling party and play a text message.", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.miss_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.missAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.missAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.missAPhoneCall.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.missAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "woopla phone calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "woopla.tts_call_any", "Filter code method": "Woopla.ttsCallAny.skip(string?: reason)", "Runtime method": "runAction(\"woopla.tts_call_any\", {})"}, "action_details": [{"section": "Action fields", "title": "Tts\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Text", "Helper text": "Enter the text to be played when call connects.", "Slug": "tts", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCallAny.setTts(string: tts)"}}, {"section": "Action fields", "title": "Language\nDropdown list", "description": "Dropdown list", "details": {"Label": "Language", "Helper text": "Select text's language.", "Slug": "language", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCallAny.setLanguage(string: language)"}}, {"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone Number", "Helper text": "The phone number to call. International dialing format. Prefix with +. No zeros. Example: +4917098765432", "Slug": "phone_number", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCallAny.setPhone Number(string: phone_number)"}}], "filter_code": NaN}
{"original_description": "The Trigger of this Applet fires within 15 minutes of the starting time of an event on your Google Calendar that contains a specific keyword or phrase. The search looks at the event’s Title, Description, and Location. You can select, which project and section in MeisterTask the task will appear in.", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.event_from_search_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or phrase", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Offset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time before event starts", "Helper text": "Specify how much time before the event starts you'd like the Applet to trigger", "Slug": "offset", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.eventFromSearchStarts.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.eventFromSearchStarts.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.eventFromSearchStarts.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.eventFromSearchStarts.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.eventFromSearchStarts.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.eventFromSearchStarts.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.eventFromSearchStarts.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.eventFromSearchStarts.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "MeisterTask", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "meistertask.create_a_task", "Filter code method": "Meistertask.createATask.skip(string?: reason)", "Runtime method": "runAction(\"meistertask.create_a_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which section?", "Slug": "section_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Meistertask.createATask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "Keep track of when you meet new contacts by automatically adding an event to your iOS Calendar.", "trigger_channel": "iOS Contacts", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_contacts.new_contact_added"}, "trigger_details": [{"section": "Ingredients", "title": "Name\nName of the contact.", "description": "Name of the contact.", "details": {"Slug": "Name", "Filter code": "IosContacts.newContactAdded.Name", "Type": "String", "Example": "Cousin Bob"}}, {"section": "Ingredients", "title": "Phone number\nPhone number of the contact.", "description": "Phone number of the contact.", "details": {"Slug": "PhoneNumber", "Filter code": "IosContacts.newContactAdded.PhoneNumber", "Type": "String", "Example": "(415) 555-0101"}}, {"section": "Ingredients", "title": "Email\nEmail of the contact.", "description": "Email of the contact.", "details": {"Slug": "Email", "Filter code": "IosContacts.newContactAdded.Email", "Type": "String", "Example": "cousin.bob@example.com"}}, {"section": "Ingredients", "title": "Address\nAddress of the contact.", "description": "Address of the contact.", "details": {"Slug": "Address", "Filter code": "IosContacts.newContactAdded.Address", "Type": "String", "Example": "923 Market St"}}, {"section": "Ingredients", "title": "Organization\nOrganization of the contact.", "description": "Organization of the contact.", "details": {"Slug": "Organization", "Filter code": "IosContacts.newContactAdded.Organization", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Job title\nJob title of the contact.", "description": "Job title of the contact.", "details": {"Slug": "JobTitle", "Filter code": "IosContacts.newContactAdded.JobTitle", "Type": "String", "Example": "Chief"}}, {"section": "Ingredients", "title": "Date added\nDate the contact was added to your address book.", "description": "Date the contact was added to your address book.", "details": {"Slug": "DateAdded", "Filter code": "IosContacts.newContactAdded.DateAdded", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}, {"section": "Ingredients", "title": "Notes\nAny notes associated with the contact.", "description": "Any notes associated with the contact.", "details": {"Slug": "Notes", "Filter code": "IosContacts.newContactAdded.Notes", "Type": "String", "Example": "This guy is a big deal."}}], "action_channel": "iOS Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_calendar.create_calendar_event", "Filter code method": "IosCalendar.createCalendarEvent.skip(string?: reason)", "Runtime method": "runAction(\"ios_calendar.create_calendar_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Calendar name", "Helper text": "If blank or calendar cannot be found, your default calendar will be used.", "Slug": "calendar_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Event title", "Helper text": "E.g. \"Coffee with Max\"", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Location\nText input > Other", "description": "Text input > Other", "details": {"Label": "Location", "Helper text": "E.g. \"Machine Coffee & Deli\"", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Start date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Start date", "Helper text": "E.g. \"Tomorrow at 5pm\" or \"In five hours\" or \"03/20/2017\"", "Slug": "start_date", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setStart Date(string: start_date)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration in minutes", "Helper text": "Defaults to 60 minutes. Enter \"all-day\" for all day events.", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setDuration(string: duration)"}}, {"section": "Action fields", "title": "Notes\nText input", "description": "Text input", "details": {"Label": "Notes", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Add URL", "Helper text": "Optional link for the event", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setUrl(string: url)"}}, {"section": "Action fields", "title": "Alert\nText input > Other", "description": "Text input > Other", "details": {"Label": "Alert timing", "Helper text": "Use phrases like \"15 minutes\" or \"one day.\" Leave blank for no alerts.", "Slug": "alert", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setAlert(string: alert)"}}], "filter_code": NaN}
{"original_description": "When you check in using Swarm by Foursquare it will be added to the iOS Calendar you choose.", "trigger_channel": "Foursquare", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "foursquare.any_new_checkin"}, "trigger_details": [{"section": "Ingredients", "title": "Shout\nShout (message) associated with check-in.", "description": "Shout (message) associated with check-in.", "details": {"Slug": "Shout", "Filter code": "Foursquare.anyNewCheckin.Shout", "Type": "String", "Example": "Hanging out with my mates!"}}, {"section": "Ingredients", "title": "Venue name", "description": "", "details": {"Slug": "VenueName", "Filter code": "Foursquare.anyNewCheckin.VenueName", "Type": "String", "Example": "Sydney Opera House"}}, {"section": "Ingredients", "title": "Venue url\nThe short URL to the venue's Foursquare page.", "description": "The short URL to the venue's Foursquare page.", "details": {"Slug": "VenueUrl", "Filter code": "Foursquare.anyNewCheckin.VenueUrl", "Type": "String", "Example": "http://4sq.com/67UmdR"}}, {"section": "Ingredients", "title": "Venue map image url\nA URL to a static map image of the venue's location.", "description": "A URL to a static map image of the venue's location.", "details": {"Slug": "VenueMapImageUrl", "Filter code": "Foursquare.anyNewCheckin.VenueMapImageUrl", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=-33.85733737872545,151.21505856513977&zoom=16&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C-33.85733737872545,151.21505856513977"}}, {"section": "Ingredients", "title": "Checkin date\nDate and time you checked in.", "description": "Date and time you checked in.", "details": {"Slug": "CheckinDate", "Filter code": "Foursquare.anyNewCheckin.CheckinDate", "Type": "String", "Example": "November 26, 2013 at 11:01AM"}}], "action_channel": "iOS Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_calendar.create_calendar_event", "Filter code method": "IosCalendar.createCalendarEvent.skip(string?: reason)", "Runtime method": "runAction(\"ios_calendar.create_calendar_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Calendar name", "Helper text": "If blank or calendar cannot be found, your default calendar will be used.", "Slug": "calendar_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Event title", "Helper text": "E.g. \"Coffee with Max\"", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Location\nText input > Other", "description": "Text input > Other", "details": {"Label": "Location", "Helper text": "E.g. \"Machine Coffee & Deli\"", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Start date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Start date", "Helper text": "E.g. \"Tomorrow at 5pm\" or \"In five hours\" or \"03/20/2017\"", "Slug": "start_date", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setStart Date(string: start_date)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration in minutes", "Helper text": "Defaults to 60 minutes. Enter \"all-day\" for all day events.", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setDuration(string: duration)"}}, {"section": "Action fields", "title": "Notes\nText input", "description": "Text input", "details": {"Label": "Notes", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Add URL", "Helper text": "Optional link for the event", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setUrl(string: url)"}}, {"section": "Action fields", "title": "Alert\nText input > Other", "description": "Text input > Other", "details": {"Label": "Alert timing", "Helper text": "Use phrases like \"15 minutes\" or \"one day.\" Leave blank for no alerts.", "Slug": "alert", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setAlert(string: alert)"}}], "filter_code": NaN}
{"original_description": "Keep track of when you met new contacts. For every new iOS contact, an event will be made in Google Calendar on the day the contact was added.", "trigger_channel": "iOS Contacts", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_contacts.new_contact_added"}, "trigger_details": [{"section": "Ingredients", "title": "Name\nName of the contact.", "description": "Name of the contact.", "details": {"Slug": "Name", "Filter code": "IosContacts.newContactAdded.Name", "Type": "String", "Example": "Cousin Bob"}}, {"section": "Ingredients", "title": "Phone number\nPhone number of the contact.", "description": "Phone number of the contact.", "details": {"Slug": "PhoneNumber", "Filter code": "IosContacts.newContactAdded.PhoneNumber", "Type": "String", "Example": "(415) 555-0101"}}, {"section": "Ingredients", "title": "Email\nEmail of the contact.", "description": "Email of the contact.", "details": {"Slug": "Email", "Filter code": "IosContacts.newContactAdded.Email", "Type": "String", "Example": "cousin.bob@example.com"}}, {"section": "Ingredients", "title": "Address\nAddress of the contact.", "description": "Address of the contact.", "details": {"Slug": "Address", "Filter code": "IosContacts.newContactAdded.Address", "Type": "String", "Example": "923 Market St"}}, {"section": "Ingredients", "title": "Organization\nOrganization of the contact.", "description": "Organization of the contact.", "details": {"Slug": "Organization", "Filter code": "IosContacts.newContactAdded.Organization", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Job title\nJob title of the contact.", "description": "Job title of the contact.", "details": {"Slug": "JobTitle", "Filter code": "IosContacts.newContactAdded.JobTitle", "Type": "String", "Example": "Chief"}}, {"section": "Ingredients", "title": "Date added\nDate the contact was added to your address book.", "description": "Date the contact was added to your address book.", "details": {"Slug": "DateAdded", "Filter code": "IosContacts.newContactAdded.DateAdded", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}, {"section": "Ingredients", "title": "Notes\nAny notes associated with the contact.", "description": "Any notes associated with the contact.", "details": {"Slug": "Notes", "Filter code": "IosContacts.newContactAdded.Notes", "Type": "String", "Example": "This guy is a big deal."}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Every day at 8pm, you'll get an email with all of the events that have been added to your calendar since 8pm the previous day.", "trigger_channel": "iOS Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_calendar.new_calendar_event"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nTitle of the calendar event.", "description": "Title of the calendar event.", "details": {"Slug": "Title", "Filter code": "IosCalendar.newCalendarEvent.Title", "Type": "String", "Example": "Coffee with Max"}}, {"section": "Ingredients", "title": "Url\nThe URL associated with the event, if any.", "description": "The URL associated with the event, if any.", "details": {"Slug": "URL", "Filter code": "IosCalendar.newCalendarEvent.URL", "Type": "String", "Example": "https://ifttt.com"}}, {"section": "Ingredients", "title": "End date\nThe date the event ends.", "description": "The date the event ends.", "details": {"Slug": "EndDate", "Filter code": "IosCalendar.newCalendarEvent.EndDate", "Type": "String", "Example": "February 9th, 2017 at 11:00AM"}}, {"section": "Ingredients", "title": "Calendar name\nThe name of the event's calendar.", "description": "The name of the event's calendar.", "details": {"Slug": "CalendarName", "Filter code": "IosCalendar.newCalendarEvent.CalendarName", "Type": "String", "Example": "Personal"}}, {"section": "Ingredients", "title": "Invitees\nA comma-separated list of people invited to the event.", "description": "A comma-separated list of people invited to the event.", "details": {"Slug": "Invitees", "Filter code": "IosCalendar.newCalendarEvent.Invitees", "Type": "String", "Example": "Eric, Jon, Max, and Zhe"}}, {"section": "Ingredients", "title": "Date created\nThe date the event was added to the calendar.", "description": "The date the event was added to the calendar.", "details": {"Slug": "DateCreated", "Filter code": "IosCalendar.newCalendarEvent.DateCreated", "Type": "String", "Example": "February 6th, 2017 at 3:00PM"}}, {"section": "Ingredients", "title": "Location\nThe location of the event, if any.", "description": "The location of the event, if any.", "details": {"Slug": "Location", "Filter code": "IosCalendar.newCalendarEvent.Location", "Type": "String", "Example": "Machine Coffee & Deli"}}, {"section": "Ingredients", "title": "Organizer\nThe organizer of the event, if any.", "description": "The organizer of the event, if any.", "details": {"Slug": "Organizer", "Filter code": "IosCalendar.newCalendarEvent.Organizer", "Type": "String", "Example": "Max Meyers"}}, {"section": "Ingredients", "title": "Start date\nThe date the event starts.", "description": "The date the event starts.", "details": {"Slug": "StartDate", "Filter code": "IosCalendar.newCalendarEvent.StartDate", "Type": "String", "Example": "February 9th, 2017 at 10:30AM"}}, {"section": "Ingredients", "title": "Notes\nThe notes associated with the event, if any.", "description": "The notes associated with the event, if any.", "details": {"Slug": "Notes", "Filter code": "IosCalendar.newCalendarEvent.Notes", "Type": "String", "Example": "Let's get together and talk!"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Automatically save new iOS Contacts you add to a Google spreadsheet for easy sorting and searching.", "trigger_channel": "iOS Contacts", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_contacts.new_contact_added"}, "trigger_details": [{"section": "Ingredients", "title": "Name\nName of the contact.", "description": "Name of the contact.", "details": {"Slug": "Name", "Filter code": "IosContacts.newContactAdded.Name", "Type": "String", "Example": "Cousin Bob"}}, {"section": "Ingredients", "title": "Phone number\nPhone number of the contact.", "description": "Phone number of the contact.", "details": {"Slug": "PhoneNumber", "Filter code": "IosContacts.newContactAdded.PhoneNumber", "Type": "String", "Example": "(415) 555-0101"}}, {"section": "Ingredients", "title": "Email\nEmail of the contact.", "description": "Email of the contact.", "details": {"Slug": "Email", "Filter code": "IosContacts.newContactAdded.Email", "Type": "String", "Example": "cousin.bob@example.com"}}, {"section": "Ingredients", "title": "Address\nAddress of the contact.", "description": "Address of the contact.", "details": {"Slug": "Address", "Filter code": "IosContacts.newContactAdded.Address", "Type": "String", "Example": "923 Market St"}}, {"section": "Ingredients", "title": "Organization\nOrganization of the contact.", "description": "Organization of the contact.", "details": {"Slug": "Organization", "Filter code": "IosContacts.newContactAdded.Organization", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Job title\nJob title of the contact.", "description": "Job title of the contact.", "details": {"Slug": "JobTitle", "Filter code": "IosContacts.newContactAdded.JobTitle", "Type": "String", "Example": "Chief"}}, {"section": "Ingredients", "title": "Date added\nDate the contact was added to your address book.", "description": "Date the contact was added to your address book.", "details": {"Slug": "DateAdded", "Filter code": "IosContacts.newContactAdded.DateAdded", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}, {"section": "Ingredients", "title": "Notes\nAny notes associated with the contact.", "description": "Any notes associated with the contact.", "details": {"Slug": "Notes", "Filter code": "IosContacts.newContactAdded.Notes", "Type": "String", "Example": "This guy is a big deal."}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This Applet watches a specific iOS Reminders list for when you complete an item. It's set to your \"Reminders\" list by default.", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.any_reminder_completed"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.anyReminderCompleted.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.anyReminderCompleted.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.anyReminderCompleted.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.anyReminderCompleted.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.anyReminderCompleted.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}, {"section": "Ingredients", "title": "Completed date\nThe date the reminder was completed.", "description": "The date the reminder was completed.", "details": {"Slug": "CompletedDate", "Filter code": "IosReminders.anyReminderCompleted.CompletedDate", "Type": "String", "Example": "August 23, 2014 at 11:31PM"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "The Applet allows you to sync new iOS contacts with your most used Google services. New contacts will be added to a Google spreadsheet, added to your Google contacts, and marked in your Google calendar.", "trigger_channel": "iOS Contacts", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_contacts.new_contact_added"}, "trigger_details": [{"section": "Ingredients", "title": "Name\nName of the contact.", "description": "Name of the contact.", "details": {"Slug": "Name", "Filter code": "IosContacts.newContactAdded.Name", "Type": "String", "Example": "Cousin Bob"}}, {"section": "Ingredients", "title": "Phone number\nPhone number of the contact.", "description": "Phone number of the contact.", "details": {"Slug": "PhoneNumber", "Filter code": "IosContacts.newContactAdded.PhoneNumber", "Type": "String", "Example": "(415) 555-0101"}}, {"section": "Ingredients", "title": "Email\nEmail of the contact.", "description": "Email of the contact.", "details": {"Slug": "Email", "Filter code": "IosContacts.newContactAdded.Email", "Type": "String", "Example": "cousin.bob@example.com"}}, {"section": "Ingredients", "title": "Address\nAddress of the contact.", "description": "Address of the contact.", "details": {"Slug": "Address", "Filter code": "IosContacts.newContactAdded.Address", "Type": "String", "Example": "923 Market St"}}, {"section": "Ingredients", "title": "Organization\nOrganization of the contact.", "description": "Organization of the contact.", "details": {"Slug": "Organization", "Filter code": "IosContacts.newContactAdded.Organization", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Job title\nJob title of the contact.", "description": "Job title of the contact.", "details": {"Slug": "JobTitle", "Filter code": "IosContacts.newContactAdded.JobTitle", "Type": "String", "Example": "Chief"}}, {"section": "Ingredients", "title": "Date added\nDate the contact was added to your address book.", "description": "Date the contact was added to your address book.", "details": {"Slug": "DateAdded", "Filter code": "IosContacts.newContactAdded.DateAdded", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}, {"section": "Ingredients", "title": "Notes\nAny notes associated with the contact.", "description": "Any notes associated with the contact.", "details": {"Slug": "Notes", "Filter code": "IosContacts.newContactAdded.Notes", "Type": "String", "Example": "This guy is a big deal."}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Find out how busy you and how your activities affect your body and mind", "trigger_channel": "iOS Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_calendar.new_calendar_event"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nTitle of the calendar event.", "description": "Title of the calendar event.", "details": {"Slug": "Title", "Filter code": "IosCalendar.newCalendarEvent.Title", "Type": "String", "Example": "Coffee with Max"}}, {"section": "Ingredients", "title": "Url\nThe URL associated with the event, if any.", "description": "The URL associated with the event, if any.", "details": {"Slug": "URL", "Filter code": "IosCalendar.newCalendarEvent.URL", "Type": "String", "Example": "https://ifttt.com"}}, {"section": "Ingredients", "title": "End date\nThe date the event ends.", "description": "The date the event ends.", "details": {"Slug": "EndDate", "Filter code": "IosCalendar.newCalendarEvent.EndDate", "Type": "String", "Example": "February 9th, 2017 at 11:00AM"}}, {"section": "Ingredients", "title": "Calendar name\nThe name of the event's calendar.", "description": "The name of the event's calendar.", "details": {"Slug": "CalendarName", "Filter code": "IosCalendar.newCalendarEvent.CalendarName", "Type": "String", "Example": "Personal"}}, {"section": "Ingredients", "title": "Invitees\nA comma-separated list of people invited to the event.", "description": "A comma-separated list of people invited to the event.", "details": {"Slug": "Invitees", "Filter code": "IosCalendar.newCalendarEvent.Invitees", "Type": "String", "Example": "Eric, Jon, Max, and Zhe"}}, {"section": "Ingredients", "title": "Date created\nThe date the event was added to the calendar.", "description": "The date the event was added to the calendar.", "details": {"Slug": "DateCreated", "Filter code": "IosCalendar.newCalendarEvent.DateCreated", "Type": "String", "Example": "February 6th, 2017 at 3:00PM"}}, {"section": "Ingredients", "title": "Location\nThe location of the event, if any.", "description": "The location of the event, if any.", "details": {"Slug": "Location", "Filter code": "IosCalendar.newCalendarEvent.Location", "Type": "String", "Example": "Machine Coffee & Deli"}}, {"section": "Ingredients", "title": "Organizer\nThe organizer of the event, if any.", "description": "The organizer of the event, if any.", "details": {"Slug": "Organizer", "Filter code": "IosCalendar.newCalendarEvent.Organizer", "Type": "String", "Example": "Max Meyers"}}, {"section": "Ingredients", "title": "Start date\nThe date the event starts.", "description": "The date the event starts.", "details": {"Slug": "StartDate", "Filter code": "IosCalendar.newCalendarEvent.StartDate", "Type": "String", "Example": "February 9th, 2017 at 10:30AM"}}, {"section": "Ingredients", "title": "Notes\nThe notes associated with the event, if any.", "description": "The notes associated with the event, if any.", "details": {"Slug": "Notes", "Filter code": "IosCalendar.newCalendarEvent.Notes", "Type": "String", "Example": "Let's get together and talk!"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_activity", "Filter code method": "Welltory.sendActivity.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Begin\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When should we start tracking it?", "Helper text": "Add an ingredient containing {at}, {starts}, or similar", "Slug": "begin", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setBegin(string: begin)"}}, {"section": "Action fields", "title": "End\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When should we stop tracking it?", "Helper text": "Add an ingredient containing {ends}, {at}, or similar", "Slug": "end", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setEnd(string: end)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "When you complete a reminder in the list you specify, it will be marked on your calendar.", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.any_reminder_completed"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.anyReminderCompleted.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.anyReminderCompleted.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.anyReminderCompleted.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.anyReminderCompleted.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.anyReminderCompleted.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}, {"section": "Ingredients", "title": "Completed date\nThe date the reminder was completed.", "description": "The date the reminder was completed.", "details": {"Slug": "CompletedDate", "Filter code": "IosReminders.anyReminderCompleted.CompletedDate", "Type": "String", "Example": "August 23, 2014 at 11:31PM"}}], "action_channel": "iOS Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_calendar.create_calendar_event", "Filter code method": "IosCalendar.createCalendarEvent.skip(string?: reason)", "Runtime method": "runAction(\"ios_calendar.create_calendar_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Calendar name", "Helper text": "If blank or calendar cannot be found, your default calendar will be used.", "Slug": "calendar_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Event title", "Helper text": "E.g. \"Coffee with Max\"", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Location\nText input > Other", "description": "Text input > Other", "details": {"Label": "Location", "Helper text": "E.g. \"Machine Coffee & Deli\"", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Start date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Start date", "Helper text": "E.g. \"Tomorrow at 5pm\" or \"In five hours\" or \"03/20/2017\"", "Slug": "start_date", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setStart Date(string: start_date)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration in minutes", "Helper text": "Defaults to 60 minutes. Enter \"all-day\" for all day events.", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setDuration(string: duration)"}}, {"section": "Action fields", "title": "Notes\nText input", "description": "Text input", "details": {"Label": "Notes", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Add URL", "Helper text": "Optional link for the event", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setUrl(string: url)"}}, {"section": "Action fields", "title": "Alert\nText input > Other", "description": "Text input > Other", "details": {"Label": "Alert timing", "Helper text": "Use phrases like \"15 minutes\" or \"one day.\" Leave blank for no alerts.", "Slug": "alert", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setAlert(string: alert)"}}], "filter_code": NaN}
{"original_description": "Every morning at 6 AM, the weather report for the day will be added to your Google Calendar. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Every day at the time of your choosing (defaults to 6 AM), the weather report for the day will be added to your iOS Calendar.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "iOS Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_calendar.create_calendar_event", "Filter code method": "IosCalendar.createCalendarEvent.skip(string?: reason)", "Runtime method": "runAction(\"ios_calendar.create_calendar_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Calendar name", "Helper text": "If blank or calendar cannot be found, your default calendar will be used.", "Slug": "calendar_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Event title", "Helper text": "E.g. \"Coffee with Max\"", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Location\nText input > Other", "description": "Text input > Other", "details": {"Label": "Location", "Helper text": "E.g. \"Machine Coffee & Deli\"", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Start date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Start date", "Helper text": "E.g. \"Tomorrow at 5pm\" or \"In five hours\" or \"03/20/2017\"", "Slug": "start_date", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setStart Date(string: start_date)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration in minutes", "Helper text": "Defaults to 60 minutes. Enter \"all-day\" for all day events.", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setDuration(string: duration)"}}, {"section": "Action fields", "title": "Notes\nText input", "description": "Text input", "details": {"Label": "Notes", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Add URL", "Helper text": "Optional link for the event", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setUrl(string: url)"}}, {"section": "Action fields", "title": "Alert\nText input > Other", "description": "Text input > Other", "details": {"Label": "Alert timing", "Helper text": "Use phrases like \"15 minutes\" or \"one day.\" Leave blank for no alerts.", "Slug": "alert", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setAlert(string: alert)"}}], "filter_code": NaN}
{"original_description": "When you archive an item in Pocket, a note of it will be added to Google Calendar. It's easy to look back on what you read, and when! ", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_read_item_ril"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newReadItemRil.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newReadItemRil.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newReadItemRil.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newReadItemRil.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newReadItemRil.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newReadItemRil.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Find out how your photos correlate with other lifestyle events", "trigger_channel": "iOS Photos", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_photos.new_photo_in_camera_roll"}, "trigger_details": [{"section": "Ingredients", "title": "Temporary public photo url\nA public URL to the photo that anyone can visit for 30 days.", "description": "A public URL to the photo that anyone can visit for 30 days.", "details": {"Slug": "TemporaryPublicPhotoURL", "Filter code": "IosPhotos.newPhotoInCameraRoll.TemporaryPublicPhotoURL", "Type": "Image URL", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Public photo url\nA public URL to the photo that anyone can visit.", "description": "A public URL to the photo that anyone can visit.", "details": {"Slug": "PublicPhotoURL", "Filter code": "IosPhotos.newPhotoInCameraRoll.PublicPhotoURL", "Type": "String", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Album name\nThe photo album on your phone that you saved the photo to.", "description": "The photo album on your phone that you saved the photo to.", "details": {"Slug": "AlbumName", "Filter code": "IosPhotos.newPhotoInCameraRoll.AlbumName", "Type": "String", "Example": "Pets"}}, {"section": "Ingredients", "title": "Taken date\nThe time the photo was taken.", "description": "The time the photo was taken.", "details": {"Slug": "TakenDate", "Filter code": "IosPhotos.newPhotoInCameraRoll.TakenDate", "Type": "String", "Example": "April 19, 2013 at 11:01PM"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "Tasks that you create on Toodledo with a due-date will be automatically added to your Google Calendar.", "trigger_channel": "Toodledo", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "toodledo.task-added"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the task.", "description": "The title of the task.", "details": {"Slug": "Title", "Filter code": "Toodledo.taskAdded.Title", "Type": "String", "Example": "Finish today's homework"}}, {"section": "Ingredients", "title": "Note\nThe note associated with the task.", "description": "The note associated with the task.", "details": {"Slug": "Note", "Filter code": "Toodledo.taskAdded.Note", "Type": "String", "Example": "Don't forget to read the last Computer Science chapter for bonus points!"}}, {"section": "Ingredients", "title": "Folder\nThe name of the folder the task is in.", "description": "The name of the folder the task is in.", "details": {"Slug": "Folder", "Filter code": "Toodledo.taskAdded.Folder", "Type": "String", "Example": "School To-dos"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the task.", "description": "The priority of the task.", "details": {"Slug": "Priority", "Filter code": "Toodledo.taskAdded.Priority", "Type": "String", "Example": "High"}}, {"section": "Ingredients", "title": "Tags\nTags comma separated.", "description": "Tags comma separated.", "details": {"Slug": "Tags", "Filter code": "Toodledo.taskAdded.Tags", "Type": "String", "Example": "homework, programming"}}, {"section": "Ingredients", "title": "Due date\nThe date the task is due.", "description": "The date the task is due.", "details": {"Slug": "DueDate", "Filter code": "Toodledo.taskAdded.DueDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Context\nThe name of the context the task is in.", "description": "The name of the context the task is in.", "details": {"Slug": "Context", "Filter code": "Toodledo.taskAdded.Context", "Type": "String", "Example": "Work"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Keep track of all your new tasks", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.new_reminder_added"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.newReminderAdded.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.newReminderAdded.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.newReminderAdded.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.newReminderAdded.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.newReminderAdded.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "When you add a new reminder in the iOS Reminders app, the same task will be added to Remember The Milk.", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.new_reminder_added"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.newReminderAdded.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.newReminderAdded.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.newReminderAdded.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.newReminderAdded.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.newReminderAdded.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}], "action_channel": "Remember The Milk", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rememberthemilk.tasks_add", "Filter code method": "Rememberthemilk.tasksAdd.skip(string?: reason)", "Runtime method": "runAction(\"rememberthemilk.tasks_add\", {})"}, "action_details": [{"section": "Action fields", "title": "Task\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Helper text": "Task name with properties in <a href=\"https://www.rememberthemilk.com/help/answer/basics-smartadd-howdoiuse\" target=\"_blank\">Smart Add</a> format. E.g. &quot;Call Bob at 9am Monday #work&quot;.", "Slug": "task", "Required": "true", "Can have default value": "true", "Filter code method": "Rememberthemilk.tasksAdd.setTask(string: task)"}}], "filter_code": NaN}
{"original_description": "For any new reminder you add using your iOS Reminders app, it will be marked on your calendar at the time of creation.", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.new_reminder_added"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.newReminderAdded.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.newReminderAdded.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.newReminderAdded.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.newReminderAdded.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.newReminderAdded.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}], "action_channel": "iOS Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_calendar.create_calendar_event", "Filter code method": "IosCalendar.createCalendarEvent.skip(string?: reason)", "Runtime method": "runAction(\"ios_calendar.create_calendar_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Calendar name", "Helper text": "If blank or calendar cannot be found, your default calendar will be used.", "Slug": "calendar_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Event title", "Helper text": "E.g. \"Coffee with Max\"", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Location\nText input > Other", "description": "Text input > Other", "details": {"Label": "Location", "Helper text": "E.g. \"Machine Coffee & Deli\"", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Start date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Start date", "Helper text": "E.g. \"Tomorrow at 5pm\" or \"In five hours\" or \"03/20/2017\"", "Slug": "start_date", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setStart Date(string: start_date)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration in minutes", "Helper text": "Defaults to 60 minutes. Enter \"all-day\" for all day events.", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setDuration(string: duration)"}}, {"section": "Action fields", "title": "Notes\nText input", "description": "Text input", "details": {"Label": "Notes", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Add URL", "Helper text": "Optional link for the event", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setUrl(string: url)"}}, {"section": "Action fields", "title": "Alert\nText input > Other", "description": "Text input > Other", "details": {"Label": "Alert timing", "Helper text": "Use phrases like \"15 minutes\" or \"one day.\" Leave blank for no alerts.", "Slug": "alert", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setAlert(string: alert)"}}], "filter_code": NaN}
{"original_description": "Upload any new iOS photo to your Unforgettable Me account.", "trigger_channel": "iOS Photos", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_photos.new_photo_in_camera_roll"}, "trigger_details": [{"section": "Ingredients", "title": "Temporary public photo url\nA public URL to the photo that anyone can visit for 30 days.", "description": "A public URL to the photo that anyone can visit for 30 days.", "details": {"Slug": "TemporaryPublicPhotoURL", "Filter code": "IosPhotos.newPhotoInCameraRoll.TemporaryPublicPhotoURL", "Type": "Image URL", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Public photo url\nA public URL to the photo that anyone can visit.", "description": "A public URL to the photo that anyone can visit.", "details": {"Slug": "PublicPhotoURL", "Filter code": "IosPhotos.newPhotoInCameraRoll.PublicPhotoURL", "Type": "String", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Album name\nThe photo album on your phone that you saved the photo to.", "description": "The photo album on your phone that you saved the photo to.", "details": {"Slug": "AlbumName", "Filter code": "IosPhotos.newPhotoInCameraRoll.AlbumName", "Type": "String", "Example": "Pets"}}, {"section": "Ingredients", "title": "Taken date\nThe time the photo was taken.", "description": "The time the photo was taken.", "details": {"Slug": "TakenDate", "Filter code": "IosPhotos.newPhotoInCameraRoll.TakenDate", "Type": "String", "Example": "April 19, 2013 at 11:01PM"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "This Action will add an event to your Google Calendar. Simply include a detailed description of when and what.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "This Applet will sync your Fitbit to iOS Health so you can easily track how often you're reaching your step goal. ", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.daily-step-goal"}, "trigger_details": [{"section": "Ingredients", "title": "Step goal\nYour daily step goal", "description": "Your daily step goal", "details": {"Slug": "StepGoal", "Filter code": "Fitbit.dailyStepGoal.StepGoal", "Type": "String", "Example": "10000"}}, {"section": "Ingredients", "title": "Steps\nNumber of steps you have taken", "description": "Number of steps you have taken", "details": {"Slug": "Steps", "Filter code": "Fitbit.dailyStepGoal.Steps", "Type": "String", "Example": "12546"}}, {"section": "Ingredients", "title": "Date achieved\nDate you achieved your step goal", "description": "Date you achieved your step goal", "details": {"Slug": "DateAchieved", "Filter code": "Fitbit.dailyStepGoal.DateAchieved", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "iOS Health", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_health.log_workout", "Filter code method": "IosHealth.logWorkout.skip(string?: reason)", "Runtime method": "runAction(\"ios_health.log_workout\", {})"}, "action_details": [{"section": "Action fields", "title": "Activity type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Workout type", "Slug": "activity_type", "Required": "true", "Can have default value": "true", "Filter code method": "IosHealth.logWorkout.setActivity Type(string: activity_type)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration of workout", "Helper text": "e.g. \"60 minutes\"", "Slug": "duration", "Required": "true", "Can have default value": "true", "Filter code method": "IosHealth.logWorkout.setDuration(string: duration)"}}, {"section": "Action fields", "title": "Energy\nText input > Other", "description": "Text input > Other", "details": {"Label": "Calories burned", "Helper text": "Optional e.g. 225", "Slug": "energy", "Required": "false", "Can have default value": "true", "Filter code method": "IosHealth.logWorkout.setEnergy(string: energy)"}}, {"section": "Action fields", "title": "Distance\nText input > Other", "description": "Text input > Other", "details": {"Label": "Distance", "Helper text": "Optional e.g. 25", "Slug": "distance", "Required": "false", "Can have default value": "true", "Filter code method": "IosHealth.logWorkout.setDistance(string: distance)"}}, {"section": "Action fields", "title": "Distance units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Distance units", "Slug": "distance_units", "Required": "false", "Can have default value": "true", "Filter code method": "IosHealth.logWorkout.setDistance Units(string: distance_units)"}}, {"section": "Action fields", "title": "Start date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Date and time workout started", "Helper text": "Optional and will use current time if blank", "Slug": "start_date", "Required": "false", "Can have default value": "true", "Filter code method": "IosHealth.logWorkout.setStart Date(string: start_date)"}}], "filter_code": NaN}
{"original_description": "Works best when the task has a due date. If not, an event will be created for the time that the task was created.", "trigger_channel": "Asana", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "asana.new_task_in_project"}, "trigger_details": [{"section": "Trigger fields", "title": "Which workspace\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which workspace is the project in?", "Slug": "which_workspace", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Project name\nText input", "description": "Text input", "details": {"Label": "Project name or URL:", "Helper text": "Enter the project name exactly as it appears in Asana. The project URL is also accepted.", "Slug": "project_name", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Asana.newTaskInProject.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Project name\nThe name of the project the task is for.", "description": "The name of the project the task is for.", "details": {"Slug": "project_name", "Filter code": "Asana.newTaskInProject.ProjectName", "Type": "String", "Example": "Cool things to do with Asana!"}}, {"section": "Ingredients", "title": "Task name\nThe name of the task.", "description": "The name of the task.", "details": {"Slug": "task_name", "Filter code": "Asana.newTaskInProject.TaskName", "Type": "String", "Example": "Build the Asana Channel on IFTTT"}}, {"section": "Ingredients", "title": "Task notes\nThe notes associated with the task.", "description": "The notes associated with the task.", "details": {"Slug": "task_notes", "Filter code": "Asana.newTaskInProject.TaskNotes", "Type": "String", "Example": "Make it one of the best on IFTTT!"}}, {"section": "Ingredients", "title": "Due on\nThe date that the task is due.", "description": "The date that the task is due.", "details": {"Slug": "due_on", "Filter code": "Asana.newTaskInProject.DueOn", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Assignee\nThe name of the assignee for the project.", "description": "The name of the assignee for the project.", "details": {"Slug": "assignee", "Filter code": "Asana.newTaskInProject.Assignee", "Type": "String", "Example": "Biff McIFTTT"}}, {"section": "Ingredients", "title": "Workspace\nThe name of the workspace.", "description": "The name of the workspace.", "details": {"Slug": "workspace", "Filter code": "Asana.newTaskInProject.Workspace", "Type": "String", "Example": "Team Asana"}}, {"section": "Ingredients", "title": "Tags\nThe tags associated with the task. Comma separated if more than one.", "description": "The tags associated with the task. Comma separated if more than one.", "details": {"Slug": "tags", "Filter code": "Asana.newTaskInProject.Tags", "Type": "String", "Example": "IFTTT, Integrations"}}, {"section": "Ingredients", "title": "Task url\nThe URL to the task on Asana.", "description": "The URL to the task on Asana.", "details": {"Slug": "task_url", "Filter code": "Asana.newTaskInProject.TaskURL", "Type": "Web URL", "Example": "asana.com/"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Find out how much time you spend in meetings and how it impacts your body", "trigger_channel": "iOS Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_calendar.new_calendar_event_from_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or phrase", "Helper text": "Searches an event's attributes, including title, location, notes, and invitees.", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Invitees\nA comma-separated list of people invited to the event.", "description": "A comma-separated list of people invited to the event.", "details": {"Slug": "Invitees", "Filter code": "IosCalendar.newCalendarEventFromSearch.Invitees", "Type": "String", "Example": "Eric, Jon, Max, and Zhe"}}, {"section": "Ingredients", "title": "Notes\nThe notes associated with the event, if any.", "description": "The notes associated with the event, if any.", "details": {"Slug": "Notes", "Filter code": "IosCalendar.newCalendarEventFromSearch.Notes", "Type": "String", "Example": "Let's get together and talk!"}}, {"section": "Ingredients", "title": "Title\nTitle of the calendar event.", "description": "Title of the calendar event.", "details": {"Slug": "Title", "Filter code": "IosCalendar.newCalendarEventFromSearch.Title", "Type": "String", "Example": "Coffee with Max"}}, {"section": "Ingredients", "title": "Organizer\nThe organizer of the event, if any.", "description": "The organizer of the event, if any.", "details": {"Slug": "Organizer", "Filter code": "IosCalendar.newCalendarEventFromSearch.Organizer", "Type": "String", "Example": "Max Meyers"}}, {"section": "Ingredients", "title": "Start date\nThe date the event starts.", "description": "The date the event starts.", "details": {"Slug": "StartDate", "Filter code": "IosCalendar.newCalendarEventFromSearch.StartDate", "Type": "String", "Example": "February 9th, 2017 at 10:30AM"}}, {"section": "Ingredients", "title": "Location\nThe location of the event, if any.", "description": "The location of the event, if any.", "details": {"Slug": "Location", "Filter code": "IosCalendar.newCalendarEventFromSearch.Location", "Type": "String", "Example": "Machine Coffee & Deli"}}, {"section": "Ingredients", "title": "Url\nThe URL associated with the event, if any.", "description": "The URL associated with the event, if any.", "details": {"Slug": "URL", "Filter code": "IosCalendar.newCalendarEventFromSearch.URL", "Type": "String", "Example": "https://ifttt.com"}}, {"section": "Ingredients", "title": "Calendar name\nThe name of the event's calendar.", "description": "The name of the event's calendar.", "details": {"Slug": "CalendarName", "Filter code": "IosCalendar.newCalendarEventFromSearch.CalendarName", "Type": "String", "Example": "Personal"}}, {"section": "Ingredients", "title": "End date\nThe date the event ends.", "description": "The date the event ends.", "details": {"Slug": "EndDate", "Filter code": "IosCalendar.newCalendarEventFromSearch.EndDate", "Type": "String", "Example": "February 9th, 2017 at 11:00AM"}}, {"section": "Ingredients", "title": "Date created\nThe date the event was added to the calendar.", "description": "The date the event was added to the calendar.", "details": {"Slug": "DateCreated", "Filter code": "IosCalendar.newCalendarEventFromSearch.DateCreated", "Type": "String", "Example": "February 6th, 2017 at 3:00PM"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_activity", "Filter code method": "Welltory.sendActivity.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Begin\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When should we start tracking it?", "Helper text": "Add an ingredient containing {at}, {starts}, or similar", "Slug": "begin", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setBegin(string: begin)"}}, {"section": "Action fields", "title": "End\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When should we stop tracking it?", "Helper text": "Add an ingredient containing {ends}, {at}, or similar", "Slug": "end", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setEnd(string: end)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendActivity.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "Find correlations between your lifestyle and productivity", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.any_reminder_completed"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.anyReminderCompleted.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.anyReminderCompleted.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.anyReminderCompleted.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.anyReminderCompleted.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.anyReminderCompleted.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}, {"section": "Ingredients", "title": "Completed date\nThe date the reminder was completed.", "description": "The date the reminder was completed.", "details": {"Slug": "CompletedDate", "Filter code": "IosReminders.anyReminderCompleted.CompletedDate", "Type": "String", "Example": "August 23, 2014 at 11:31PM"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "When a new episode of your chosen podcast is released this Applet will automatically block off time at 7 am to listen to it, the start time field can be customized by making this Applet your own and you can then choose a different time of day to block off on your calendar. ", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_episode"}, "trigger_details": [{"section": "Trigger fields", "title": "Show\nDropdown list", "description": "Dropdown list", "details": {"Label": "ShowID", "Slug": "show_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Episode\nThe episode's ID.", "description": "The episode's ID.", "details": {"Slug": "episode_id", "Filter code": "Spotify.newEpisode.EpisodeId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "Episode release date\nThe day when the episode was released.", "description": "The day when the episode was released.", "details": {"Slug": "episode_release_date", "Filter code": "Spotify.newEpisode.EpisodeReleaseDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Episode name\nThe episode's name.", "description": "The episode's name.", "details": {"Slug": "episode_name", "Filter code": "Spotify.newEpisode.EpisodeName", "Type": "String", "Example": "Is \\\"Resources\\\" a Dirty Word?"}}, {"section": "Ingredients", "title": "Episode cover url\nEpisode cover art.", "description": "Episode cover art.", "details": {"Slug": "episode_cover_url", "Filter code": "Spotify.newEpisode.EpisodeCoverUrl", "Type": "Image URL", "Example": "https://i.scdn.co/image/a3f8306a743873e12282bf48395d9ad45e704cb7"}}, {"section": "Ingredients", "title": "Episode description\nThe episode's description. May contain HTML.", "description": "The episode's description. May contain HTML.", "details": {"Slug": "episode_description", "Filter code": "Spotify.newEpisode.EpisodeDescription", "Type": "String", "Example": "In this episode, ..."}}, {"section": "Ingredients", "title": "Episode url\nThe URL to the episode on Spotify.", "description": "The URL to the episode on Spotify.", "details": {"Slug": "episode_url", "Filter code": "Spotify.newEpisode.EpisodeUrl", "Type": "Web URL", "Example": "https://open.spotify.com/episode/19TIFzN141JLsIUFVPqS5Q"}}, {"section": "Ingredients", "title": "Episode languages\nA list of the languages used in the episode, identified by their ISO 639 code.", "description": "A list of the languages used in the episode, identified by their ISO 639 code.", "details": {"Slug": "episode_languages", "Filter code": "Spotify.newEpisode.EpisodeLanguages", "Type": "String", "Example": "en,es"}}], "action_channel": "iOS Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_calendar.create_calendar_event", "Filter code method": "IosCalendar.createCalendarEvent.skip(string?: reason)", "Runtime method": "runAction(\"ios_calendar.create_calendar_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Calendar name", "Helper text": "If blank or calendar cannot be found, your default calendar will be used.", "Slug": "calendar_name", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Event title", "Helper text": "E.g. \"Coffee with Max\"", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setTitle(string: title)"}}, {"section": "Action fields", "title": "Location\nText input > Other", "description": "Text input > Other", "details": {"Label": "Location", "Helper text": "E.g. \"Machine Coffee & Deli\"", "Slug": "location", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setLocation(string: location)"}}, {"section": "Action fields", "title": "Start date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Start date", "Helper text": "E.g. \"Tomorrow at 5pm\" or \"In five hours\" or \"03/20/2017\"", "Slug": "start_date", "Required": "true", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setStart Date(string: start_date)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration in minutes", "Helper text": "Defaults to 60 minutes. Enter \"all-day\" for all day events.", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setDuration(string: duration)"}}, {"section": "Action fields", "title": "Notes\nText input", "description": "Text input", "details": {"Label": "Notes", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Add URL", "Helper text": "Optional link for the event", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setUrl(string: url)"}}, {"section": "Action fields", "title": "Alert\nText input > Other", "description": "Text input > Other", "details": {"Label": "Alert timing", "Helper text": "Use phrases like \"15 minutes\" or \"one day.\" Leave blank for no alerts.", "Slug": "alert", "Required": "false", "Can have default value": "true", "Filter code method": "IosCalendar.createCalendarEvent.setAlert(string: alert)"}}], "filter_code": NaN}
{"original_description": "Share details of a new calendar event with a group chat on Chatwork.", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.new_event_added"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.newEventAdded.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.newEventAdded.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.newEventAdded.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.newEventAdded.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.newEventAdded.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.newEventAdded.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.newEventAdded.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Created at\nDate and time the event was created.", "description": "Date and time the event was created.", "details": {"Slug": "CreatedAt", "Filter code": "GoogleCalendar.newEventAdded.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.newEventAdded.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "When radon levels go above a defined level, an event with the time stamp and radon level will be added to your Google Calendar.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.radon-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Measurement unit", "Helper text": "What unit of measurement would you like to receive your radon levels in?", "Slug": "unit", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get radon levels from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.radonAbove.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Radon level\nThe radon level. In the measurement unit specified.", "description": "The radon level. In the measurement unit specified.", "details": {"Slug": "value", "Filter code": "Airthings.radonAbove.RadonLevel", "Type": "String", "Example": "120"}}, {"section": "Ingredients", "title": "Measurement unit\nThe unit of measurement used for radon, Bq/m3 or pCi/L.", "description": "The unit of measurement used for radon, Bq/m3 or pCi/L.", "details": {"Slug": "unit", "Filter code": "Airthings.radonAbove.MeasurementUnit", "Type": "String", "Example": "Bq/m3"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.radonAbove.Device", "Type": "String", "Example": "Home - Living Room"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Post a reminder to Chatwork whenever a calendar event is about to start.", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.any_event_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Helper text": "Select a calendar", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Offset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time before event starts", "Helper text": "Specify how much time before the event starts you'd like the Applet to trigger", "Slug": "offset", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.anyEventStarts.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.anyEventStarts.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.anyEventStarts.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.anyEventStarts.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.anyEventStarts.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.anyEventStarts.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.anyEventStarts.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.anyEventStarts.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "If you live a calendar driven life, then this recipe will help you out by adding an event into your calendar whenever you have a Beemergency day for one of your Beeminder goals.", "trigger_channel": "Beeminder", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "beeminder.goal_red"}, "trigger_details": [{"section": "Trigger fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Goal", "Helper text": "Specific goal to Trigger on", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Deadline\nThe time that this goal is due", "description": "The time that this goal is due", "details": {"Slug": "deadline", "Filter code": "Beeminder.goalRed.Deadline", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Goal title\nThe descriptive title of the goal in danger", "description": "The descriptive title of the goal in danger", "details": {"Slug": "goal_title", "Filter code": "Beeminder.goalRed.GoalTitle", "Type": "String", "Example": "My Most Excellent Goal"}}, {"section": "Ingredients", "title": "Goal\nThe name of the goal that's in danger", "description": "The name of the goal that's in danger", "details": {"Slug": "goal", "Filter code": "Beeminder.goalRed.Goal", "Type": "String", "Example": "productivehours"}}, {"section": "Ingredients", "title": "Goal url\nThe URL to the goal page on Beeminder", "description": "The URL to the goal page on Beeminder", "details": {"Slug": "goal_url", "Filter code": "Beeminder.goalRed.GoalURL", "Type": "String", "Example": "https://www.beeminder.com/meta/running"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "When any new article is posted to the SFGATE homepage, you'll find it saved on your iOS reading list to read later.", "trigger_channel": "SFGATE", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "sfgate.sfgate_homepage"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Sfgate.sfgateHomepage.EntryTitle", "Type": "String", "Example": "Bay Bridge bike ride now goes halfway to SF 7 days a week"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Sfgate.sfgateHomepage.EntryUrl", "Type": "String", "Example": "http://ift.tt/2p3XLwc"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Sfgate.sfgateHomepage.EntryAuthor", "Type": "String", "Example": "Mark Morford"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Sfgate.sfgateHomepage.EntryContent", "Type": "String", "Example": "When three kittens became trapped in a boom lift in Redwood City on Monday, officers from the Peninsula Humane Society (PHS) and SPCA had to think on their feet – and fast."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Sfgate.sfgateHomepage.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "iOS Reading List", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_reading_list.create_reading_list_item", "Filter code method": "IosReadingList.createReadingListItem.skip(string?: reason)", "Runtime method": "runAction(\"ios_reading_list.create_reading_list_item\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IosReadingList.createReadingListItem.setTitle(string: title)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "IosReadingList.createReadingListItem.setUrl(string: url)"}}, {"section": "Action fields", "title": "Preview text\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Preview text", "Slug": "preview_text", "Required": "false", "Can have default value": "true", "Filter code method": "IosReadingList.createReadingListItem.setPreview Text(string: preview_text)"}}], "filter_code": "var title = Trigger.EntryTitle\nvar subject = 'Mission'\n\nif (title.indexOf(subject) < 0) {\n   IosReadingList.createReadingListItem.skip(\"Not related to the Mission\")\n}\n\n"}
{"original_description": "Use the hashtag #workout in your check-in to add it to your calendar so you can easily keep track of your gym visits, yoga classes, hikes, and more. You beast, you! 💪", "trigger_channel": "Foursquare", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "foursquare.new_checkin_with_hashtag"}, "trigger_details": [{"section": "Trigger fields", "title": "Hashtag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "hashtag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Shout\nShout (message) associated with check-in.", "description": "Shout (message) associated with check-in.", "details": {"Slug": "Shout", "Filter code": "Foursquare.newCheckinWithHashtag.Shout", "Type": "String", "Example": "Hanging out with my #IFTTT mates!"}}, {"section": "Ingredients", "title": "Shout no hashtag\nThe shout without the hashtag.", "description": "The shout without the hashtag.", "details": {"Slug": "ShoutNoHashtag", "Filter code": "Foursquare.newCheckinWithHashtag.ShoutNoHashtag", "Type": "String", "Example": "Hanging out with my mates!"}}, {"section": "Ingredients", "title": "Venue name", "description": "", "details": {"Slug": "VenueName", "Filter code": "Foursquare.newCheckinWithHashtag.VenueName", "Type": "String", "Example": "Sydney Opera House"}}, {"section": "Ingredients", "title": "Venue url\nThe short URL to the venue's Foursquare page.", "description": "The short URL to the venue's Foursquare page.", "details": {"Slug": "VenueUrl", "Filter code": "Foursquare.newCheckinWithHashtag.VenueUrl", "Type": "String", "Example": "http://4sq.com/67UmdR"}}, {"section": "Ingredients", "title": "Venue map image url\nA URL to a static map image of the venue's location.", "description": "A URL to a static map image of the venue's location.", "details": {"Slug": "VenueMapImageUrl", "Filter code": "Foursquare.newCheckinWithHashtag.VenueMapImageUrl", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=-33.85733737872545,151.21505856513977&zoom=16&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C-33.85733737872545,151.21505856513977"}}, {"section": "Ingredients", "title": "Checkin date\nDate and time you checked in.", "description": "Date and time you checked in.", "details": {"Slug": "CheckinDate", "Filter code": "Foursquare.newCheckinWithHashtag.CheckinDate", "Type": "String", "Example": "November 26, 2013 at 11:01AM"}}, {"section": "Ingredients", "title": "Hashtag\nHashtag contained in the shout.", "description": "Hashtag contained in the shout.", "details": {"Slug": "Hashtag", "Filter code": "Foursquare.newCheckinWithHashtag.Hashtag", "Type": "String", "Example": "#IFTTT"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Add a 60 minute event in your Google Calendar so that no one else can book you.", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "This Applet adds a new event to your Google Calendar on the exact date and time your content is scheduled to post to social media.", "trigger_channel": "Buffer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "buffer.new_status_item_buffer"}, "trigger_details": [{"section": "Ingredients", "title": "Text\nThe text of the posts, including any links.", "description": "The text of the posts, including any links.", "details": {"Slug": "Text", "Filter code": "Buffer.newStatusItemBuffer.Text", "Type": "String", "Example": "Having a sandwich"}}, {"section": "Ingredients", "title": "First link url\nThe first link included in the post.", "description": "The first link included in the post.", "details": {"Slug": "FirstLinkUrl", "Filter code": "Buffer.newStatusItemBuffer.FirstLinkUrl", "Type": "String", "Example": "http://wadesabout.tumblr.com/"}}, {"section": "Ingredients", "title": "Due at\nDate and time the post is scheduled to go out.", "description": "Date and time the post is scheduled to go out.", "details": {"Slug": "DueAt", "Filter code": "Buffer.newStatusItemBuffer.DueAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Created at\nDate and time the post was added to Buffer.", "description": "Date and time the post was added to Buffer.", "details": {"Slug": "CreatedAt", "Filter code": "Buffer.newStatusItemBuffer.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Save your laundry history by adding an event to your Google Calendar every time your washer with Home Connect starts.", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_started"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleStarted.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Every time a new event is added to your Google Calendar, this Applet automatically turns it into a MeisterTask task and adds it in the project and section of your choice.", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.new_event_added"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.newEventAdded.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.newEventAdded.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.newEventAdded.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.newEventAdded.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.newEventAdded.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.newEventAdded.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.newEventAdded.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Created at\nDate and time the event was created.", "description": "Date and time the event was created.", "details": {"Slug": "CreatedAt", "Filter code": "GoogleCalendar.newEventAdded.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.newEventAdded.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "MeisterTask", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "meistertask.create_a_task", "Filter code method": "Meistertask.createATask.skip(string?: reason)", "Runtime method": "runAction(\"meistertask.create_a_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which section?", "Slug": "section_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Meistertask.createATask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "Keep a calendar of all your form submissions. You could identify patterns that help you understand the best days and times to get submissions.", "trigger_channel": "Jotform", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "jotform.latest_form_submission"}, "trigger_details": [{"section": "Trigger fields", "title": "Form\nDropdown list", "description": "Dropdown list", "details": {"Label": "Form", "Helper text": "Choose a form", "Slug": "form_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Question filter\nText input > Other", "description": "Text input > Other", "details": {"Label": "Question Filter", "Helper text": "Optional question filter (label text) e.g. Name, Email, Address", "Slug": "question_filter", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Ip\nThe form respondent's detected IP address.", "description": "The form respondent's detected IP address.", "details": {"Slug": "ip", "Filter code": "Jotform.latestFormSubmission.IP", "Type": "String", "Example": "192.168.0.100"}}, {"section": "Ingredients", "title": "Form title\nThe form title.", "description": "The form title.", "details": {"Slug": "form_title", "Filter code": "Jotform.latestFormSubmission.FormTitle", "Type": "String", "Example": "My Contact Form"}}, {"section": "Ingredients", "title": "Submission date time\nThe date and time of the form submission.", "description": "The date and time of the form submission.", "details": {"Slug": "submission_date_time", "Filter code": "Jotform.latestFormSubmission.SubmissionDateTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Total submissions\nThe total submission count.", "description": "The total submission count.", "details": {"Slug": "total_submissions", "Filter code": "Jotform.latestFormSubmission.TotalSubmissions", "Type": "String", "Example": "8"}}, {"section": "Ingredients", "title": "Form\nA number that uniquely identifies the form.", "description": "A number that uniquely identifies the form.", "details": {"Slug": "form_id", "Filter code": "Jotform.latestFormSubmission.FormID", "Type": "String", "Example": "1234567890"}}, {"section": "Ingredients", "title": "Submission\nA number that uniquely identifies the form submission.", "description": "A number that uniquely identifies the form submission.", "details": {"Slug": "submission_id", "Filter code": "Jotform.latestFormSubmission.SubmissionID", "Type": "String", "Example": "850507727987654321"}}, {"section": "Ingredients", "title": "Rich text data\nThe form data in a tabulated HTML format.", "description": "The form data in a tabulated HTML format.", "details": {"Slug": "rich_text_data", "Filter code": "Jotform.latestFormSubmission.RichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Spreadsheet data\nThe form data in a CSV format.", "description": "The form data in a CSV format.", "details": {"Slug": "spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.SpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "Filtered rich text data\nThe filtered form data in a tabulated HTML format.", "description": "The filtered form data in a tabulated HTML format.", "details": {"Slug": "filtered_rich_text_data", "Filter code": "Jotform.latestFormSubmission.FilteredRichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Filtered spreadsheet data\nThe filtered form data in a CSV format.", "description": "The filtered form data in a CSV format.", "details": {"Slug": "filtered_spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.FilteredSpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "File url\nThe URL of the file(s) uploaded on your form.", "description": "The URL of the file(s) uploaded on your form.", "details": {"Slug": "file_url", "Filter code": "Jotform.latestFormSubmission.FileUrl", "Type": "String", "Example": "http://www.jotform.com/uploads/user/1234567890/9876543210/images.zip"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "Save your dishwasher history by adding an event to your Google Calendar every time your dishwasher with Home Connect starts.", "trigger_channel": "Home Connect Dishwasher", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_cycle_started"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDishwasher.dishwasherCycleStarted.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "This Applet automatically creates a task in the MeisterTask project and section of your choice. The trigger fires within 15 minutes of the starting time of any event on your Google Calendar.", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.any_event_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Helper text": "Select a calendar", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Offset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time before event starts", "Helper text": "Specify how much time before the event starts you'd like the Applet to trigger", "Slug": "offset", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.anyEventStarts.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.anyEventStarts.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.anyEventStarts.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.anyEventStarts.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.anyEventStarts.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.anyEventStarts.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.anyEventStarts.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.anyEventStarts.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "MeisterTask", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "meistertask.create_a_task", "Filter code method": "Meistertask.createATask.skip(string?: reason)", "Runtime method": "runAction(\"meistertask.create_a_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which section?", "Slug": "section_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Meistertask.createATask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "Save your dryer history by adding an event to your Google Calendar every time your dryer with Home Connect starts.\n", "trigger_channel": "Home Connect Dryer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dryer.dryer_cycle_started"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dryer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDryer.dryerCycleStarted.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Calendar", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_calendar.quick_add_event", "Filter code method": "GoogleCalendar.quickAddEvent.skip(string?: reason)", "Runtime method": "runAction(\"google_calendar.quick_add_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Quick add\nText input", "description": "Text input", "details": {"Label": "Quick add text", "Helper text": "Note: Google's Quick Add feature is English-only e.g. “dinner with Alex tomorrow 7pm”", "Slug": "quick_add", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleCalendar.quickAddEvent.setQuick Add(string: quick_add)"}}], "filter_code": NaN}
{"original_description": "When you turn this Applet on, every weight logged on your Fitbit Aria will automatically get added to the Health app on iOS.", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.new-weight-logged"}, "trigger_details": [{"section": "Ingredients", "title": "Bmi\nYour body mass index", "description": "Your body mass index", "details": {"Slug": "BMI", "Filter code": "Fitbit.newWeightLogged.BMI", "Type": "String", "Example": "19.62"}}, {"section": "Ingredients", "title": "Weight\nYour weight", "description": "Your weight", "details": {"Slug": "Weight", "Filter code": "Fitbit.newWeightLogged.Weight", "Type": "String", "Example": "65.0"}}, {"section": "Ingredients", "title": "Weight unit\nThe unit of your weight measurement (kilograms, pounds, stone)", "description": "The unit of your weight measurement (kilograms, pounds, stone)", "details": {"Slug": "WeightUnit", "Filter code": "Fitbit.newWeightLogged.WeightUnit", "Type": "String", "Example": "kilograms"}}, {"section": "Ingredients", "title": "Date\nThe date and time of the weight log entry", "description": "The date and time of the weight log entry", "details": {"Slug": "Date", "Filter code": "Fitbit.newWeightLogged.Date", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "iOS Health", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_health.log_body_mass", "Filter code method": "IosHealth.logBodyMass.skip(string?: reason)", "Runtime method": "runAction(\"ios_health.log_body_mass\", {})"}, "action_details": [{"section": "Action fields", "title": "Number of units\nText input > Other", "description": "Text input > Other", "details": {"Label": "Weight", "Helper text": "e.g. 182", "Slug": "number_of_units", "Required": "true", "Can have default value": "true", "Filter code method": "IosHealth.logBodyMass.setNumber Of Units(string: number_of_units)"}}, {"section": "Action fields", "title": "Units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Units", "Slug": "units", "Required": "true", "Can have default value": "true", "Filter code method": "IosHealth.logBodyMass.setUnits(string: units)"}}, {"section": "Action fields", "title": "Occurred at\nText input > Other", "description": "Text input > Other", "details": {"Label": "Date and time weighed", "Helper text": "Optional and will use current time if blank", "Slug": "occurred_at", "Required": "false", "Can have default value": "true", "Filter code method": "IosHealth.logBodyMass.setOccurred At(string: occurred_at)"}}], "filter_code": NaN}
{"original_description": "Add NY Times Best Sellers to an iOS Reading List", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_book_on_a_best_seller_list"}, "trigger_details": [{"section": "Trigger fields", "title": "List\nDropdown list", "description": "Dropdown list", "details": {"Label": "Best Sellers List", "Slug": "list", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newBookOnABestSellerList.Title", "Type": "String", "Example": "Thinking, Fast and Slow"}}, {"section": "Ingredients", "title": "Description\nThe book's description", "description": "The book's description", "details": {"Slug": "Description", "Filter code": "Nytimes.newBookOnABestSellerList.Description", "Type": "String", "Example": "The winner of the Nobel in economic science discusses how we make choices..."}}, {"section": "Ingredients", "title": "Book cover image url\nA URL to the book's cover image", "description": "A URL to the book's cover image", "details": {"Slug": "BookCoverImageUrl", "Filter code": "Nytimes.newBookOnABestSellerList.BookCoverImageUrl", "Type": "String", "Example": "http://images.amazon.com/images/P/0553801473.01.LZZZZZZZ.jpg"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newBookOnABestSellerList.Author", "Type": "String", "Example": "Daniel Kahneman"}}, {"section": "Ingredients", "title": "Publisher\nThe name of the book's publisher", "description": "The name of the book's publisher", "details": {"Slug": "Publisher", "Filter code": "Nytimes.newBookOnABestSellerList.Publisher", "Type": "String", "Example": "Farrar, Straus and Giroux"}}, {"section": "Ingredients", "title": "Best seller category", "description": "", "details": {"Slug": "BestSellerCategory", "Filter code": "Nytimes.newBookOnABestSellerList.BestSellerCategory", "Type": "String", "Example": "Business"}}, {"section": "Ingredients", "title": "Rank\nRank this week on the list", "description": "Rank this week on the list", "details": {"Slug": "Rank", "Filter code": "Nytimes.newBookOnABestSellerList.Rank", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Weeks on list\nNumber of weeks on the list", "description": "Number of weeks on the list", "details": {"Slug": "WeeksOnList", "Filter code": "Nytimes.newBookOnABestSellerList.WeeksOnList", "Type": "String", "Example": "23"}}, {"section": "Ingredients", "title": "Best seller listed date\nThe listed date of the book", "description": "The listed date of the book", "details": {"Slug": "BestSellerListedDate", "Filter code": "Nytimes.newBookOnABestSellerList.BestSellerListedDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Isbn\nISBN Number (ISBN 13)", "description": "ISBN Number (ISBN 13)", "details": {"Slug": "ISBN", "Filter code": "Nytimes.newBookOnABestSellerList.ISBN", "Type": "String", "Example": "1726474927483"}}], "action_channel": "iOS Reading List", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ios_reading_list.create_reading_list_item", "Filter code method": "IosReadingList.createReadingListItem.skip(string?: reason)", "Runtime method": "runAction(\"ios_reading_list.create_reading_list_item\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IosReadingList.createReadingListItem.setTitle(string: title)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "IosReadingList.createReadingListItem.setUrl(string: url)"}}, {"section": "Action fields", "title": "Preview text\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Preview text", "Slug": "preview_text", "Required": "false", "Can have default value": "true", "Filter code method": "IosReadingList.createReadingListItem.setPreview Text(string: preview_text)"}}], "filter_code": NaN}
{"original_description": "New tasks added to your chosen list in iOS Reminders are also added as tasks due today in Google tasks", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.new_reminder_added_to_list"}, "trigger_details": [{"section": "Trigger fields", "title": "List name\nText input > Other", "description": "Text input > Other", "details": {"Label": "List name", "Slug": "list_name", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.newReminderAddedToList.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.newReminderAddedToList.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.newReminderAddedToList.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.newReminderAddedToList.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.newReminderAddedToList.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}], "action_channel": "Google Tasks", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_tasks.add_task_to_tasklist", "Filter code method": "GoogleTasks.addTaskToTasklist.skip(string?: reason)", "Runtime method": "runAction(\"google_tasks.add_task_to_tasklist\", {})"}, "action_details": [{"section": "Action fields", "title": "Tasklist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which task list?", "Helper text": "The task list to which the task should be added.", "Slug": "tasklist_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task title\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What is the title of the task?", "Slug": "task_title", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Title(string: task_title)"}}, {"section": "Action fields", "title": "Task notes\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What are the notes to include in the task?", "Helper text": "Notes describing the task", "Slug": "task_notes", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Notes(string: task_notes)"}}, {"section": "Action fields", "title": "Due date\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Does the task have a due date?", "Helper text": "Field only sets the date. Ex. Next Tuesday, Today.", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setDue Date(string: due_date)"}}], "filter_code": NaN}
{"original_description": "When Google Calendar event \"vacation\" (or your custom name) starts, arm Blink", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.event_from_search_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or phrase", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Offset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time before event starts", "Helper text": "Specify how much time before the event starts you'd like the Applet to trigger", "Slug": "offset", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.eventFromSearchStarts.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.eventFromSearchStarts.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.eventFromSearchStarts.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.eventFromSearchStarts.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.eventFromSearchStarts.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.eventFromSearchStarts.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.eventFromSearchStarts.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.eventFromSearchStarts.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Automatically play a Smart Life scene whenever the current weather changes. Choose to be alerted about the weather changing to rain, snow, cloudy or clear then pick a Smart Life scene and you're all set.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Smart Life", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "smartlife.activate_scene", "Filter code method": "Smartlife.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"smartlife.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Which scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scene", "Helper text": "Please set a scene in the app before enabling this action.", "Slug": "which_scene", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Let TMT Chow automatically close your gate like daily routine ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "TMT Chow", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "tmt_chow.close_door", "Filter code method": "TmtChow.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"tmt_chow.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device Name", "Slug": "uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Pincode\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Pin Code", "Helper text": "max 6 digital numbers", "Slug": "pincode", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Whenever anyone unlocks your lock, the selected Hue lights will turn on.", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_unlocked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Unlocked at\nDate and time lock was unlocked.", "description": "Date and time lock was unlocked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockUnlocked.UnlockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who unlocked the lock.", "description": "The user who unlocked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockUnlocked.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockUnlocked.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockUnlocked.HouseName", "Type": "String", "Example": "San Diego Beach House"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who unlocked the lock.", "description": "An image url to the profile photo of the user who unlocked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockUnlocked.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "In a Telegram group with coworkers or family members? Allow anyone in the group to turn off the lights at the end of the work day or as they're leaving the house. Simply type '/ifttt lights off' in the group you specify to turn your Hue lights off.", "trigger_channel": "Telegram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "telegram.new_group_text_filter"}, "trigger_details": [{"section": "Trigger fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which group?", "Helper text": "You can use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot to <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">connect new groups</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Filter\nText input", "description": "Text input", "details": {"Label": "Key phrase", "Helper text": "Any #hashtag or keyword. The Trigger fires when anyone sends a message with the command /ifttt and the key phrase to the group.", "Slug": "filter", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Reply text\nText input > Other", "description": "Text input > Other", "details": {"Label": "What to send as a reply?", "Helper text": "The bot will reply to the command with this text. Leave blank for a standard message.", "Slug": "reply_text", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was triggered.", "description": "Date and time event was triggered.", "details": {"Slug": "created_at", "Filter code": "Telegram.newGroupTextFilter.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Group title\nThe title of the group.", "description": "The title of the group.", "details": {"Slug": "group_title", "Filter code": "Telegram.newGroupTextFilter.GroupTitle", "Type": "String", "Example": "Bot News Group"}}, {"section": "Ingredients", "title": "Author name\nThe name of the author who triggered the Applet.", "description": "The name of the author who triggered the Applet.", "details": {"Slug": "author_name", "Filter code": "Telegram.newGroupTextFilter.AuthorName", "Type": "String", "Example": "Pavel Durov"}}, {"section": "Ingredients", "title": "Author username\nAuthor username, when available.", "description": "Author username, when available.", "details": {"Slug": "author_username", "Filter code": "Telegram.newGroupTextFilter.AuthorUsername", "Type": "String", "Example": "durov"}}, {"section": "Ingredients", "title": "Text\nRepresents a plain-text message contents. Does not include the 'Key phrase'.", "description": "Represents a plain-text message contents. Does not include the 'Key phrase'.", "details": {"Slug": "text", "Filter code": "Telegram.newGroupTextFilter.Text", "Type": "String", "Example": "Hello world!"}}, {"section": "Ingredients", "title": "Html\nRepresents HTML-formatted message contents.", "description": "Represents HTML-formatted message contents.", "details": {"Slug": "html", "Filter code": "Telegram.newGroupTextFilter.HTML", "Type": "String", "Example": "Hello <b>world</b>.<br/>This string <i>can</i> contain <pre>some</pre> HTML <code>tags</code>."}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use a Flic button to toggle MagicHue Smart Lights on/off. Quick, reliable and simple enough for anyone to use - even your kids!", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.Togglelight", "Filter code method": "Magichue.togglelight.skip(string?: reason)", "Runtime method": "runAction(\"magichue.Togglelight\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "\"They gotta see the BABY!\" — even if they don't have Instagram. When you post a new pic with the hashtag #TheKid (or pick your own), this Applet will send it to up to 20 emails via Gmail. Grandma, grandpa, cousin Sue...up to you!", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_photo_by_you_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newPhotoByYouTagged.Caption", "Type": "String", "Example": "A cool photo #tbt #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the specified tag", "description": "The caption without the specified tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newPhotoByYouTagged.CaptionNoTag", "Type": "String", "Example": "A cool photo #IFTTT"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.newPhotoByYouTagged.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.newPhotoByYouTagged.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newPhotoByYouTagged.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newPhotoByYouTagged.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Gmail", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "gmail.send_an_email", "Filter code method": "Gmail.sendAnEmail.skip(string?: reason)", "Runtime method": "runAction(\"gmail.send_an_email\", {})"}, "action_details": [{"section": "Action fields", "title": "To\nText input > Other", "description": "Text input > Other", "details": {"Label": "To address", "Helper text": "Accepts up to twenty email addresses, each separated with a space or comma", "Slug": "to", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Cc\nText input > Other", "description": "Text input > Other", "details": {"Label": "CC address", "Helper text": "Accepts up to twenty email addresses, each separated with a space or comma", "Slug": "cc", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Bcc\nText input > Other", "description": "Text input > Other", "details": {"Label": "BCC address", "Helper text": "Accepts up to twenty email addresses, each separated with a space or comma", "Slug": "bcc", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Gmail.sendAnEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Helper text": "Some HTML ok", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Gmail.sendAnEmail.setBody(string: body)"}}, {"section": "Action fields", "title": "Attachment url\nText input > File", "description": "Text input > File", "details": {"Label": "Attachment URL", "Helper text": "URL to include as an attachment", "Slug": "attachment_url", "Required": "false", "Can have default value": "true", "Filter code method": "Gmail.sendAnEmail.setAttachment Url(string: attachment_url)"}}], "filter_code": NaN}
{"original_description": "This Applet will send a notification via the IFTTT app each time the IMF publishes a new World Economic Outlook report. ", "trigger_channel": "International Monetary Fund", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "imf.world_economic_outlook"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Imf.worldEconomicOutlook.Title", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Link\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Imf.worldEconomicOutlook.Link", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Imf.worldEconomicOutlook.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Imf.worldEconomicOutlook.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Automatically adjust my ecobee Thermostat to my preferred temperature setpoint when PTS Hours begin. We recommend raising the setpoint at least 3 degrees (Fahrenheit) or to 78 degrees (Fahrenheit).\n \nPart 2 of 3 applets to automate your thermostat's response before, during, and after PTS Hours.", "trigger_channel": "ComEd", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ComEd.pts_savings_hours"}, "trigger_details": [{"section": "Trigger fields", "title": "Stage\nDropdown list", "description": "Dropdown list", "details": {"Label": "During which event stage do you want this to trigger?", "Helper text": "Allows you to select a specific event stage you want to use or all stages. Precooling is typically triggered an hour before start time.", "Slug": "stage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Event date\nDate for the event", "description": "Date for the event", "details": {"Slug": "event_date", "Filter code": "ComEd.ptsSavingsHours.EventDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Stage\nWhich stage the event is currently in", "description": "Which stage the event is currently in", "details": {"Slug": "stage", "Filter code": "ComEd.ptsSavingsHours.Stage", "Type": "String", "Example": "Scheduled"}}, {"section": "Ingredients", "title": "Precool time\nThe recommended time to start precooling", "description": "The recommended time to start precooling", "details": {"Slug": "precool_time", "Filter code": "ComEd.ptsSavingsHours.PrecoolTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Start time\nThe start time of the savings hours", "description": "The start time of the savings hours", "details": {"Slug": "start_time", "Filter code": "ComEd.ptsSavingsHours.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "End time\nThe end time of the savings hours", "description": "The end time of the savings hours", "details": {"Slug": "end_time", "Filter code": "ComEd.ptsSavingsHours.EndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.hold_indefinite", "Filter code method": "Ecobee.holdIndefinite.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.hold_indefinite\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Thermostat Name", "Helper text": "Select which thermostat will execute the hold.", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Desired temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Desired Temperature", "Helper text": "The temperature to set the hold to.", "Slug": "desired_temperature", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When Peak Time Savings Hours end, resume the programmed schedule on my ecobee thermostat.\n\nPart 3 of 3 applets to automate your thermostat's response before, during, and after PTS Hours.", "trigger_channel": "ComEd", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ComEd.pts_savings_hours"}, "trigger_details": [{"section": "Trigger fields", "title": "Stage\nDropdown list", "description": "Dropdown list", "details": {"Label": "During which event stage do you want this to trigger?", "Helper text": "Allows you to select a specific event stage you want to use or all stages. Precooling is typically triggered an hour before start time.", "Slug": "stage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Event date\nDate for the event", "description": "Date for the event", "details": {"Slug": "event_date", "Filter code": "ComEd.ptsSavingsHours.EventDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Stage\nWhich stage the event is currently in", "description": "Which stage the event is currently in", "details": {"Slug": "stage", "Filter code": "ComEd.ptsSavingsHours.Stage", "Type": "String", "Example": "Scheduled"}}, {"section": "Ingredients", "title": "Precool time\nThe recommended time to start precooling", "description": "The recommended time to start precooling", "details": {"Slug": "precool_time", "Filter code": "ComEd.ptsSavingsHours.PrecoolTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Start time\nThe start time of the savings hours", "description": "The start time of the savings hours", "details": {"Slug": "start_time", "Filter code": "ComEd.ptsSavingsHours.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "End time\nThe end time of the savings hours", "description": "The end time of the savings hours", "details": {"Slug": "end_time", "Filter code": "ComEd.ptsSavingsHours.EndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.resume_program", "Filter code method": "Ecobee.resumeProgram.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.resume_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Thermostat Name", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Update my ecobee Thermostat to the recommended temperature to pre cool before the Peak Time Savings Event starts. We recommend lowering the setpoint at least 3 degrees (Fahrenheit) or to 68 degrees (Fahrenheit).\n \nPart 1 of 3 applets to automate your thermostat's response before, during, and after PTS Hours.", "trigger_channel": "ComEd", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ComEd.pts_savings_hours"}, "trigger_details": [{"section": "Trigger fields", "title": "Stage\nDropdown list", "description": "Dropdown list", "details": {"Label": "During which event stage do you want this to trigger?", "Helper text": "Allows you to select a specific event stage you want to use or all stages. Precooling is typically triggered an hour before start time.", "Slug": "stage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Event date\nDate for the event", "description": "Date for the event", "details": {"Slug": "event_date", "Filter code": "ComEd.ptsSavingsHours.EventDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Stage\nWhich stage the event is currently in", "description": "Which stage the event is currently in", "details": {"Slug": "stage", "Filter code": "ComEd.ptsSavingsHours.Stage", "Type": "String", "Example": "Scheduled"}}, {"section": "Ingredients", "title": "Precool time\nThe recommended time to start precooling", "description": "The recommended time to start precooling", "details": {"Slug": "precool_time", "Filter code": "ComEd.ptsSavingsHours.PrecoolTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Start time\nThe start time of the savings hours", "description": "The start time of the savings hours", "details": {"Slug": "start_time", "Filter code": "ComEd.ptsSavingsHours.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "End time\nThe end time of the savings hours", "description": "The end time of the savings hours", "details": {"Slug": "end_time", "Filter code": "ComEd.ptsSavingsHours.EndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.hold_indefinite", "Filter code method": "Ecobee.holdIndefinite.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.hold_indefinite\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Thermostat Name", "Helper text": "Select which thermostat will execute the hold.", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Desired temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Desired Temperature", "Helper text": "The temperature to set the hold to.", "Slug": "desired_temperature", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Want to share new pics with your community, fans, or customers? But not *every* pic? Use this Applet to selectively post — just choose the hashtag and when you use it, that photo will be added to an album on your FB page (the hashtag will be removed from the caption, too). ", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_photo_by_you_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newPhotoByYouTagged.Caption", "Type": "String", "Example": "A cool photo #tbt #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the specified tag", "description": "The caption without the specified tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newPhotoByYouTagged.CaptionNoTag", "Type": "String", "Example": "A cool photo #IFTTT"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.newPhotoByYouTagged.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.newPhotoByYouTagged.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newPhotoByYouTagged.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newPhotoByYouTagged.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Facebook Pages", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "facebook_pages.create_photo_page", "Filter code method": "FacebookPages.createPhotoPage.skip(string?: reason)", "Runtime method": "runAction(\"facebook_pages.create_photo_page\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setMessage(string: message)"}}, {"section": "Action fields", "title": "Album\nText input > Other", "description": "Text input > Other", "details": {"Label": "Album name", "Helper text": "Provide the name of an existing album, or leave blank for no album. If a non-existent album name is provided, you'll receive <a href=\"https://help.ifttt.com/hc/en-us/articles/5343334604187\" target=\"_blank\">this error</a>", "Slug": "album", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setAlbum(string: album)"}}], "filter_code": NaN}
{"original_description": "This Applet will save all Longreads to your Instapaper. Good luck keeping up! 📃⏳\n\nUse Pocket? Try this Applet instead: https://ift.tt/2sMZLg8", "trigger_channel": "Longreads", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "longreads.any_new_post_on_longreads"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Longreads.anyNewPostOnLongreads.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Longreads.anyNewPostOnLongreads.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Longreads.anyNewPostOnLongreads.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Longreads.anyNewPostOnLongreads.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Longreads.anyNewPostOnLongreads.EntryImageUrl", "Type": "String", "Example": "https://longreadsblog.files.wordpress.com/2018/06/26474-books-origjpg.jpg?w=320&amp;h=483"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Longreads.anyNewPostOnLongreads.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Instapaper", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "instapaper.save_item", "Filter code method": "Instapaper.saveItem.skip(string?: reason)", "Runtime method": "runAction(\"instapaper.save_item\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setUrl(string: url)"}}, {"section": "Action fields", "title": "Description\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setDescription(string: description)"}}, {"section": "Action fields", "title": "Title\nText input > File name", "description": "Text input > File name", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setTitle(string: title)"}}, {"section": "Action fields", "title": "Folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which folder?", "Helper text": "Optional", "Slug": "folder", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Tags\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Which tags?", "Slug": "tags", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Let mother nature do the work. Whenever the sun rises, your Philips Hue bulbs will automatically turn off.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Pick the days of the week and time to send encouraging messages like \"Lunch break, everyone!\" or \"Now back to work, you maggots!\" to your coworkers in a Telegram chat.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "Your bot will turn on at sunset. Let mother nature do the work!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.turn_on_bot", "Filter code method": "Switchbot.turnOnBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.turn_on_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever you upload a public photo to Flickr, a copy will be saved to a folder in Dropbox. Keep in mind that private photo uploads will not work for this Applet.\n", "trigger_channel": "Flickr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flickr.any_new_public_photo"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Flickr.anyNewPublicPhoto.Title", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Description\nOptional photo description.", "description": "Optional photo description.", "details": {"Slug": "Description", "Filter code": "Flickr.anyNewPublicPhoto.Description", "Type": "String", "Example": "Taken at my birthday party!"}}, {"section": "Ingredients", "title": "Flickr url\nThe long URL to the photo's Flickr page.", "description": "The long URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrl", "Filter code": "Flickr.anyNewPublicPhoto.FlickrUrl", "Type": "String", "Example": "http://www.flickr.com/photos/sh4de/5197127926/"}}, {"section": "Ingredients", "title": "Flickr url short\nThe shortened URL to the photo's Flickr page.", "description": "The shortened URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrlShort", "Filter code": "Flickr.anyNewPublicPhoto.FlickrUrlShort", "Type": "String", "Example": "http://flic.kr/p/4mdhBE"}}, {"section": "Ingredients", "title": "Source url\nURL to the largest available flickr image file.", "description": "URL to the largest available flickr image file.", "details": {"Slug": "SourceUrl", "Filter code": "Flickr.anyNewPublicPhoto.SourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Original source url\nURL to the orginal image file if available.", "description": "URL to the orginal image file if available.", "details": {"Slug": "OriginalSourceUrl", "Filter code": "Flickr.anyNewPublicPhoto.OriginalSourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Uploaded date\nDate and time the photo was uploaded.", "description": "Date and time the photo was uploaded.", "details": {"Slug": "UploadedDate", "Filter code": "Flickr.anyNewPublicPhoto.UploadedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Taken date\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "TakenDate", "Filter code": "Flickr.anyNewPublicPhoto.TakenDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Tags\nTags added to the photo.", "description": "Tags added to the photo.", "details": {"Slug": "Tags", "Filter code": "Flickr.anyNewPublicPhoto.Tags", "Type": "String", "Example": "baby, pumpkin"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "When the current weather condition is changed to Rain, Snow, Cloudy or Clear, a new condition will be displayed on Glance Clock.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Glance clock", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "glanceclock.notice", "Filter code method": "Glanceclock.notice.skip(string?: reason)", "Runtime method": "runAction(\"glanceclock.notice\", {})"}, "action_details": [{"section": "Action fields", "title": "Clock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Clock", "Slug": "clock", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > Title", "description": "Text input > Title", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Glanceclock.notice.setText(string: text)"}}, {"section": "Action fields", "title": "Sound\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sound", "Slug": "sound", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Animation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Type", "Slug": "animation", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every hour between 10am and 5pm, get eight notifications to drink a glass of water.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_hour_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Minutes past the hour", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyHourAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Whenever the temperature drops below the value you provide, the current temperature will be displayed on your Glance Clock.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Glance clock", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "glanceclock.notice", "Filter code method": "Glanceclock.notice.skip(string?: reason)", "Runtime method": "runAction(\"glanceclock.notice\", {})"}, "action_details": [{"section": "Action fields", "title": "Clock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Clock", "Slug": "clock", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > Title", "description": "Text input > Title", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Glanceclock.notice.setText(string: text)"}}, {"section": "Action fields", "title": "Sound\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sound", "Slug": "sound", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Animation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Type", "Slug": "animation", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever the temperature rises above the value you provide, it will be displayed on your Glance Clock.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Glance clock", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "glanceclock.notice", "Filter code method": "Glanceclock.notice.skip(string?: reason)", "Runtime method": "runAction(\"glanceclock.notice\", {})"}, "action_details": [{"section": "Action fields", "title": "Clock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Clock", "Slug": "clock", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > Title", "description": "Text input > Title", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Glanceclock.notice.setText(string: text)"}}, {"section": "Action fields", "title": "Sound\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sound", "Slug": "sound", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Animation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Type", "Slug": "animation", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every single day at a specific time set by you, show the current time on your Glance Clock.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Glance clock", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "glanceclock.notice", "Filter code method": "Glanceclock.notice.skip(string?: reason)", "Runtime method": "runAction(\"glanceclock.notice\", {})"}, "action_details": [{"section": "Action fields", "title": "Clock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Clock", "Slug": "clock", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > Title", "description": "Text input > Title", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Glanceclock.notice.setText(string: text)"}}, {"section": "Action fields", "title": "Sound\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sound", "Slug": "sound", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Animation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Type", "Slug": "animation", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Animation Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": " Enter the search terms that matter to you and get the latest news on those topics in a Wednesday morning digest. The Hill is weekly political paper that keeps Congress in the know — and can keep you in the know, too!", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item_matches"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or simple phrase", "Helper text": "Search operators are not supported", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItemMatches.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItemMatches.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItemMatches.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItemMatches.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItemMatches.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItemMatches.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItemMatches.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItemMatches.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "The Pew Research Center is a nonpartisan fact tank that conducts public polls, demographic research, content analysis and more. Stay up to date on their latest findings with a weekly email, delivered to your inbox every Wednesday morning. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "The show airs on Wednesday — so every Thursday you'll get an email with the latest GIFs tagged RHONY. Turtle time!", "trigger_channel": "Giphy", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "giphy.search"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Url\nURL to this gif on Giphy", "description": "URL to this gif on Giphy", "details": {"Slug": "url", "Filter code": "Giphy.search.URL", "Type": "Web URL", "Example": "http://giphy.com/posts/dreams-are-real-and-best-with-cats"}}, {"section": "Ingredients", "title": "Image url\nURL to the gif's image if one exists", "description": "URL to the gif's image if one exists", "details": {"Slug": "image_url", "Filter code": "Giphy.search.ImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/9WsTM8zLbys4o/giphy.gif"}}, {"section": "Ingredients", "title": "Tumblr image url\nGIF image URL for posting GIFs on tumblr.", "description": "GIF image URL for posting GIFs on tumblr.", "details": {"Slug": "tumblr_image_url", "Filter code": "Giphy.search.TumblrImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/QT3k4ZWD6XOaA/giphy-tumblr.gif"}}, {"section": "Ingredients", "title": "Email html\nHTML to include an in-line GIF in the body of an email.", "description": "HTML to include an in-line GIF in the body of an email.", "details": {"Slug": "email_html", "Filter code": "Giphy.search.EmailHTML", "Type": "String", "Example": "<a href=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif><img src=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif border='0'/></a><br />via <a href=http://giphy.com/gifs/vhp0BocGjkVjO>giphy.com</a>"}}, {"section": "Ingredients", "title": "Embed code\nIFrame embed code of gif", "description": "IFrame embed code of gif", "details": {"Slug": "embed_code", "Filter code": "Giphy.search.EmbedCode", "Type": "String", "Example": "<iframe src=\"//giphy.com/embed/PfquFkRaRAv5u\" width=\"500\" height=\"391\" frameBorder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"}}, {"section": "Ingredients", "title": "Tags\nNewline separate string of tags of this gif", "description": "Newline separate string of tags of this gif", "details": {"Slug": "tags", "Filter code": "Giphy.search.Tags", "Type": "String", "Example": "cats party"}}, {"section": "Ingredients", "title": "Created date\nDate and time when this gif was created", "description": "Date and time when this gif was created", "details": {"Slug": "created_date", "Filter code": "Giphy.search.CreatedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "This Applet works with NASA JPL's news feed. It'll gather up all the robotic space goodness they're posting and send it to you in a Friday email digest. See you in the stars! 🌟", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "When you set up the Applet just pick the board and your \"Done\" list, and whenever you move a card there it'll be logged in a Google Drive spreadsheet (An IFTTT folder will be created in your drive). Then you can gaze back at your accomplishments with awe, at your leisure. You did it!", "trigger_channel": "Trello", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "trello.card_added_to_list"}, "trigger_details": [{"section": "Trigger fields", "title": "Board\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "List name\nText input", "description": "Text input", "details": {"Label": "List name", "Helper text": "Type a list name as it appears in your Trello board", "Slug": "list_name", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe title of the card.", "description": "The title of the card.", "details": {"Slug": "title", "Filter code": "Trello.cardAddedToList.Title", "Type": "String", "Example": "Book flights"}}, {"section": "Ingredients", "title": "Description\nThe description of the card.", "description": "The description of the card.", "details": {"Slug": "description", "Filter code": "Trello.cardAddedToList.Description", "Type": "String", "Example": "Check various airline websites to find the best deal."}}, {"section": "Ingredients", "title": "Creator full name\nThe full name of the member who added the card.", "description": "The full name of the member who added the card.", "details": {"Slug": "creator_name", "Filter code": "Trello.cardAddedToList.CreatorFullName", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Creator username\nThe username of the member who added the card.", "description": "The username of the member who added the card.", "details": {"Slug": "creator_username", "Filter code": "Trello.cardAddedToList.CreatorUsername", "Type": "String", "Example": "sfjetsetter"}}, {"section": "Ingredients", "title": "List name\nThe name of the list the card was added to.", "description": "The name of the list the card was added to.", "details": {"Slug": "list_name", "Filter code": "Trello.cardAddedToList.ListName", "Type": "String", "Example": "To dos"}}, {"section": "Ingredients", "title": "Board name\nThe name of the board the card was added to.", "description": "The name of the board the card was added to.", "details": {"Slug": "board_name", "Filter code": "Trello.cardAddedToList.BoardName", "Type": "String", "Example": "New Zealand Trip"}}, {"section": "Ingredients", "title": "Card url\nThe URL to the card.", "description": "The URL to the card.", "details": {"Slug": "url", "Filter code": "Trello.cardAddedToList.CardURL", "Type": "Web URL", "Example": "https://trello.com/c/example"}}, {"section": "Ingredients", "title": "Added at\nDate and time the card was added to the list.", "description": "Date and time the card was added to the list.", "details": {"Slug": "added_at", "Filter code": "Trello.cardAddedToList.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This applet enable users to move UP/DOWN a shutter with a button widget", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Vimar VIEW", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "view_prod.up_down_action_blind", "Filter code method": "ViewProd.upDownActionBlind.skip(string?: reason)", "Runtime method": "runAction(\"view_prod.up_down_action_blind\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "State\nDropdown list", "description": "Dropdown list", "details": {"Label": "State", "Slug": "state", "Required": "false", "Can have default value": "true", "Filter code method": "ViewProd.upDownActionBlind.setState(string: state)"}}], "filter_code": NaN}
{"original_description": "On the move and can't type? Call your IFTTT phone number and leave a message. The audio from the message will be sent to the Telegram chat you specify. This only works with US-based phone numbers at the moment.", "trigger_channel": "Phone Call (US only)", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "phone_call.leave_ifttt_a_voicemail"}, "trigger_details": [{"section": "Ingredients", "title": "Temporary mp3 url\nA public URL to the voicemail audio in mp3 format that anyone can visit for 30 days.", "description": "A public URL to the voicemail audio in mp3 format that anyone can visit for 30 days.", "details": {"Slug": "TemporaryMp3Url", "Filter code": "PhoneCall.leaveIftttAVoicemail.TemporaryMp3Url", "Type": "File URL", "Example": "http://media.ifttt.com/calls/4-RE16dd33bca24641284e2bdffc6c246427.mp3"}}, {"section": "Ingredients", "title": "From\nThe phone number you called ifttt from.", "description": "The phone number you called ifttt from.", "details": {"Slug": "From", "Filter code": "PhoneCall.leaveIftttAVoicemail.From", "Type": "String", "Example": "(415)-222-2222"}}, {"section": "Ingredients", "title": "Message\nThe transcribed message.", "description": "The transcribed message.", "details": {"Slug": "Message", "Filter code": "PhoneCall.leaveIftttAVoicemail.Message", "Type": "String", "Example": "Hello, it is a really sunny day in..."}}, {"section": "Ingredients", "title": "Mp3 url\nA public URL to the voicemail audio in mp3 format.", "description": "A public URL to the voicemail audio in mp3 format.", "details": {"Slug": "Mp3Url", "Filter code": "PhoneCall.leaveIftttAVoicemail.Mp3Url", "Type": "String", "Example": "http://media.ifttt.com/calls/4-RE16dd33bca24641284e2bdffc6c246427.mp3"}}, {"section": "Ingredients", "title": "Received at\nThe date and time you called ifttt.", "description": "The date and time you called ifttt.", "details": {"Slug": "ReceivedAt", "Filter code": "PhoneCall.leaveIftttAVoicemail.ReceivedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_mp3", "Filter code method": "Telegram.sendMp3.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_mp3\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Audio url\nText input > Audio", "description": "Text input > Audio", "details": {"Label": "Audio URL", "Helper text": "Mime type must be audio/mpeg.", "Slug": "audio_url", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMp3.setAudio Url(string: audio_url)"}}, {"section": "Action fields", "title": "Caption\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Caption", "Helper text": "Optional, 200 characters max.", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMp3.setCaption(string: caption)"}}, {"section": "Action fields", "title": "Performer\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Performer", "Helper text": "Optional", "Slug": "performer", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMp3.setPerformer(string: performer)"}}, {"section": "Action fields", "title": "Title\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMp3.setTitle(string: title)"}}], "filter_code": NaN}
{"original_description": "Have a fan, portable AC unit, or other cooling device hooked up to a Smart Life plug or outlet? Use this Applet to automatically turn it off whenever the temperature drops below a threshold. Pair this Applet with Applet HZCxKUhq (https://ifttt.com/applets/HZCxKUhq-turn-on-a-smart-life-device-if-the-temperature-rises-above-a-threshold) to also turn your device on when the temperature rises above a threshold. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Smart Life", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "smartlife.turn_off", "Filter code method": "Smartlife.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"smartlife.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Which device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device/group?", "Helper text": "Not all Smart Life devices are supported by this service. Refer to the device manufacturer for further information.", "Slug": "which_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Help your family, friends, or community group stay in the know on reporting from the American Civil Liberties Union. Enter up to 5 emails and they'll get updates with the latest from the ACLU feed (you can include your own!)", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Gmail", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "gmail.send_an_email", "Filter code method": "Gmail.sendAnEmail.skip(string?: reason)", "Runtime method": "runAction(\"gmail.send_an_email\", {})"}, "action_details": [{"section": "Action fields", "title": "To\nText input > Other", "description": "Text input > Other", "details": {"Label": "To address", "Helper text": "Accepts up to twenty email addresses, each separated with a space or comma", "Slug": "to", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Cc\nText input > Other", "description": "Text input > Other", "details": {"Label": "CC address", "Helper text": "Accepts up to twenty email addresses, each separated with a space or comma", "Slug": "cc", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Bcc\nText input > Other", "description": "Text input > Other", "details": {"Label": "BCC address", "Helper text": "Accepts up to twenty email addresses, each separated with a space or comma", "Slug": "bcc", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Gmail.sendAnEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Helper text": "Some HTML ok", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Gmail.sendAnEmail.setBody(string: body)"}}, {"section": "Action fields", "title": "Attachment url\nText input > File", "description": "Text input > File", "details": {"Label": "Attachment URL", "Helper text": "URL to include as an attachment", "Slug": "attachment_url", "Required": "false", "Can have default value": "true", "Filter code method": "Gmail.sendAnEmail.setAttachment Url(string: attachment_url)"}}], "filter_code": NaN}
{"original_description": "Your Wi-Fi will turn off at a time you set for family time. That means more time to spend  quality time together without any modern world interference!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "ASUS Router", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "asusrouter.turn_wifi_off", "Filter code method": "Asusrouter.turnWifiOff.skip(string?: reason)", "Runtime method": "runAction(\"asusrouter.turn_wifi_off\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Stop worrying about stray litter. Let your iRobot Roomba handle the cleaning!", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.start_robot", "Filter code method": "Irobot.startRobot.skip(string?: reason)", "Runtime method": "runAction(\"irobot.start_robot\", {})"}, "action_details": [{"section": "Action fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": NaN, "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.toggle_all_hue", "Filter code method": "Hue.toggleAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.toggle_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Create a colour loop with your your Hue lights by pressing this widget button.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "Use this applet to create a button that triggers your robot to start. Ideal for starting your robot straight from your smart watch or home screen on your phone!", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.start_robot", "Filter code method": "Irobot.startRobot.skip(string?: reason)", "Runtime method": "runAction(\"irobot.start_robot\", {})"}, "action_details": [{"section": "Action fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on this Applet and each time you post a photo on Instagram it will be set as your Android device's wallpaper", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.set_wallpaper", "Filter code method": "AndroidDevice.setWallpaper.skip(string?: reason)", "Runtime method": "runAction(\"android_device.set_wallpaper\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.setWallpaper.setPhoto Url(string: photo_url)"}}], "filter_code": NaN}
{"original_description": "Every morning at 6:00AM you will receive a mobile notification with the temperature forecast. Tap the notification to open a Weather Underground forecast for your area. Have a nice day!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_rich_notification", "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Helper text": "Optional, bold text above the message", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Helper text": "Optional, link may open in a browser or installed app", "Slug": "link_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "A great way to quickly share photos with a Telegram chat.", "trigger_channel": "Camera widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_camera.do_camera_new_photo"}, "trigger_details": [{"section": "Ingredients", "title": "Temporary public photo url\nA public URL to the photo that anyone can visit for 30 days.", "description": "A public URL to the photo that anyone can visit for 30 days.", "details": {"Slug": "TemporaryPublicPhotoURL", "Filter code": "DoCamera.doCameraNewPhoto.TemporaryPublicPhotoURL", "Type": "Image URL", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Public photo url\nA public URL to the photo that anyone can visit.", "description": "A public URL to the photo that anyone can visit.", "details": {"Slug": "PublicPhotoURL", "Filter code": "DoCamera.doCameraNewPhoto.PublicPhotoURL", "Type": "String", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Share url\nThe link to the Share page for the photo.", "description": "The link to the Share page for the photo.", "details": {"Slug": "ShareURL", "Filter code": "DoCamera.doCameraNewPhoto.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude", "description": "", "details": {"Slug": "Latitude", "Filter code": "DoCamera.doCameraNewPhoto.Latitude", "Type": "String", "Example": "37.78346333333333"}}, {"section": "Ingredients", "title": "Longitude", "description": "", "details": {"Slug": "Longitude", "Filter code": "DoCamera.doCameraNewPhoto.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the tap.", "description": "The link to the map of the location of the tap.", "details": {"Slug": "LocationMapURL", "Filter code": "DoCamera.doCameraNewPhoto.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the tap.", "description": "The image of the map of the location of the tap.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoCamera.doCameraNewPhoto.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time the photo was taken.", "description": "The date and time the photo was taken.", "details": {"Slug": "OccurredAt", "Filter code": "DoCamera.doCameraNewPhoto.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Caption\nThe text you write on top of a photo.", "description": "The text you write on top of a photo.", "details": {"Slug": "Caption", "Filter code": "DoCamera.doCameraNewPhoto.Caption", "Type": "String", "Example": "A cool photo"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_photo", "Filter code method": "Telegram.sendPhoto.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_photo\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Caption\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Caption", "Helper text": "Optional, 200 characters max.", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setCaption(string: caption)"}}], "filter_code": NaN}
{"original_description": "With the press of a button, share your location with a Telegram chat. Includes a map image of your current location and a Google Maps URL.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_photo", "Filter code method": "Telegram.sendPhoto.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_photo\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Caption\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Caption", "Helper text": "Optional, 200 characters max.", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setCaption(string: caption)"}}], "filter_code": NaN}
{"original_description": "Just set the time and we'll give you a call and read you the current weather report. Good morning, and have a great day! 🙌", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "VoIP Calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "voip_calls.call_my_device", "Filter code method": "VoipCalls.callMyDevice.skip(string?: reason)", "Runtime method": "runAction(\"voip_calls.call_my_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Voice message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "VoipCalls.callMyDevice.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Set the mood and dim your Hue lights with this button.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_brightness_all_hue", "Filter code method": "Hue.setBrightnessAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_brightness_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nText input > Other", "description": "Text input > Other", "details": {"Label": "Brightness", "Helper text": "Value between 0-100", "Slug": "brightness", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setBrightnessAllHue.setBrightness(string: brightness)"}}], "filter_code": NaN}
{"original_description": "Husqvarna Automower® will be parked until further notice when wind speed rises above high wind (above 50 kph).", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.wind_speed_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Wind speed\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Speed", "Helper text": "Numbers only", "Slug": "wind_speed", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Units", "Slug": "units", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Wind direction\nDropdown list", "description": "Dropdown list", "details": {"Label": "Direction", "Slug": "wind_direction", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.windSpeedRisesAbove.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.windSpeedRisesAbove.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.windSpeedRisesAbove.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.windSpeedRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.windSpeedRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Husqvarna Automower®", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "automower.park_until_further_notice", "Filter code method": "Automower.parkUntilFurtherNotice.skip(string?: reason)", "Runtime method": "runAction(\"automower.park_until_further_notice\", {})"}, "action_details": [{"section": "Action fields", "title": "Automower\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Automower", "Slug": "automower", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "What to see in the night sky, updates on the most exciting new missions, deep dives into exoplanet discoveries — Universe Today covers all things outer space. This Applet will send their latest content straight to your inbox. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "101 Cookbooks is an award-winning food blog by Heidi Swanson. It keeps the focus on foods and recipes that are fresh, seasonal, healthy and delicious. Turn on this Applet to get the latest posts in a convenient Friday digest so you can plan your meals and find inspiration for the week to come! ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Open garage door with button widget on your smartphone.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Garadget", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garadget.open_door", "Filter code method": "Garadget.openDoor.skip(string?: reason)", "Runtime method": "runAction(\"garadget.open_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Helper text": "Please identify which door in your account you want to open", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Close garage door with button widget on your smartphone", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Garadget", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garadget.close_door", "Filter code method": "Garadget.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"garadget.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Straight from Congress.gov — when they're in session, you'll get an email with the bills and resolutions scheduled for the Senate floor at 9 AM every day.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Every day at the time you specify, a draft journal entry will be created in your Day One and you'll get a push notification reminding you to write.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This applet will save 1p for every 10 metres you cycle or run using Strava.", "trigger_channel": "Strava", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "strava.new_activity_by_you"}, "trigger_details": [{"section": "Trigger fields", "title": "Activity type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Slug": "activity_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time the activity was completed.", "description": "Date and time the activity was completed.", "details": {"Slug": "created_at", "Filter code": "Strava.newActivityByYou.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Activity type\nThe type of activity completed.", "description": "The type of activity completed.", "details": {"Slug": "activity_type", "Filter code": "Strava.newActivityByYou.ActivityType", "Type": "String", "Example": "Ride"}}, {"section": "Ingredients", "title": "Name\nThe name of the activity.", "description": "The name of the activity.", "details": {"Slug": "name", "Filter code": "Strava.newActivityByYou.Name", "Type": "String", "Example": "Evening Ride"}}, {"section": "Ingredients", "title": "Distance meters\nDistance moved in meters.", "description": "Distance moved in meters.", "details": {"Slug": "distance", "Filter code": "Strava.newActivityByYou.DistanceMeters", "Type": "String", "Example": "4475.4"}}, {"section": "Ingredients", "title": "Elapsed time\nTotal duration of the activity.", "description": "Total duration of the activity.", "details": {"Slug": "elapsed_time", "Filter code": "Strava.newActivityByYou.ElapsedTime", "Type": "String", "Example": "22 minutes, 13 seconds"}}, {"section": "Ingredients", "title": "Elapsed time in seconds\nTotal duration of the activity in seconds.", "description": "Total duration of the activity in seconds.", "details": {"Slug": "elapsed_time_in_seconds", "Filter code": "Strava.newActivityByYou.ElapsedTimeInSeconds", "Type": "String", "Example": "1333"}}, {"section": "Ingredients", "title": "Link to activity\nThe URL to the activity on Strava.", "description": "The URL to the activity on Strava.", "details": {"Slug": "link_to_activity", "Filter code": "Strava.newActivityByYou.LinkToActivity", "Type": "Web URL", "Example": "http://www.strava.com/activities/144461028"}}, {"section": "Ingredients", "title": "Route map image url\nURL to a map image of the route.", "description": "URL to a map image of the route.", "details": {"Slug": "route_map_image_url", "Filter code": "Strava.newActivityByYou.RouteMapImageUrl", "Type": "Image URL", "Example": "https://maps.googleapis.com/maps/api/staticmap?size=400x400&path=weight:3|color:0xFC4C02FF|enc:{qreFj}bjVZQ"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "var distance = parseInt(Strava.newActivityByYou.DistanceMeters);\nvar amount = distance/1000;\nMonzo.potDeposit.setAmount(amount.toFixed(2));\n\n"}
{"original_description": "Up your style game with this Applet. Every Saturday you'll get an email with the most popular articles in the Style section. Then it's up to you to hit the shops!", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.any_new_popular_article_today"}, "trigger_details": [{"section": "Trigger fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Section", "Slug": "section", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.anyNewPopularArticleToday.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.anyNewPopularArticleToday.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.anyNewPopularArticleToday.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.anyNewPopularArticleToday.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.anyNewPopularArticleToday.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.anyNewPopularArticleToday.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "When you tag an Evernote note with a specific tag, a new Day One journal entry will be created.", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.add_tag_to_note"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Specific tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.addTagToNote.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.addTagToNote.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.addTagToNote.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.addTagToNote.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.addTagToNote.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Use the Button widget to quickly and easily change the comfort profile of your ecobee.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.climate_next_transition", "Filter code method": "Ecobee.climateNextTransition.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.climate_next_transition\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Thermostat Name", "Helper text": "Select which thermostat will execute the climate hold.", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Comfort profile\nDropdown list", "description": "Dropdown list", "details": {"Label": "Comfort Profile", "Helper text": "Select which comfort profile to use for the hold.", "Slug": "comfort_profile", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "A great way to automatically turn on your lights as the sun goes down. Select a shortcut that controls your lights and it'll run every day at sunset!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Wink: Shortcuts", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wink_shortcuts.activate_scene", "Filter code method": "WinkShortcuts.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"wink_shortcuts.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which shortcut?", "Slug": "scene_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Straight from Congress.gov — you'll get an email with the bills and resolutions scheduled for the House floor at 9 AM every day (when they're in session).", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Wind down to a brief forecast of the day when the sun sets.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "VoIP Calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "voip_calls.call_my_device", "Filter code method": "VoipCalls.callMyDevice.skip(string?: reason)", "Runtime method": "runAction(\"voip_calls.call_my_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Voice message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "VoipCalls.callMyDevice.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Add some visual flair to your journal. When you add the hashtag #journal to your Instagram caption, it'll tell this Applet this one's a keeper. It'll be added to Day One along with the caption (with the hashtag stripped out). ", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_photo_by_you_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newPhotoByYouTagged.Caption", "Type": "String", "Example": "A cool photo #tbt #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the specified tag", "description": "The caption without the specified tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newPhotoByYouTagged.CaptionNoTag", "Type": "String", "Example": "A cool photo #IFTTT"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.newPhotoByYouTagged.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.newPhotoByYouTagged.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newPhotoByYouTagged.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newPhotoByYouTagged.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Because nothing brightens your day like a superhero in your inbox. ", "trigger_channel": "Giphy", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "giphy.translate"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Url\nURL to this gif on Giphy", "description": "URL to this gif on Giphy", "details": {"Slug": "url", "Filter code": "Giphy.translate.URL", "Type": "Web URL", "Example": "http://giphy.com/posts/dreams-are-real-and-best-with-cats"}}, {"section": "Ingredients", "title": "Image url\nURL to the gif's image if one exists", "description": "URL to the gif's image if one exists", "details": {"Slug": "image_url", "Filter code": "Giphy.translate.ImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/9WsTM8zLbys4o/giphy.gif"}}, {"section": "Ingredients", "title": "Tumblr image url\nGIF image URL for posting GIFs on tumblr.", "description": "GIF image URL for posting GIFs on tumblr.", "details": {"Slug": "tumblr_image_url", "Filter code": "Giphy.translate.TumblrImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/QT3k4ZWD6XOaA/giphy-tumblr.gif"}}, {"section": "Ingredients", "title": "Email html\nHTML to include an in-line GIF in the body of an email.", "description": "HTML to include an in-line GIF in the body of an email.", "details": {"Slug": "email_html", "Filter code": "Giphy.translate.EmailHTML", "Type": "String", "Example": "<a href=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif><img src=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif border='0'/></a><br />via <a href=http://giphy.com/gifs/vhp0BocGjkVjO>giphy.com</a>"}}, {"section": "Ingredients", "title": "Embed code\nIFrame embed code of gif", "description": "IFrame embed code of gif", "details": {"Slug": "embed_code", "Filter code": "Giphy.translate.EmbedCode", "Type": "String", "Example": "<iframe src=\"//giphy.com/embed/PfquFkRaRAv5u\" width=\"500\" height=\"391\" frameBorder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"}}, {"section": "Ingredients", "title": "Created date\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_date", "Filter code": "Giphy.translate.CreatedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "When you post a new video with the hashtag you specify, it will be sent to a Telegram chat.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_video_by_you_instagram"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewVideoByYouInstagram.Caption", "Type": "String", "Example": "A cool video"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the video's Instagram page.", "description": "The short URL to the video's Instagram page.", "details": {"Slug": "URL", "Filter code": "Instagram.anyNewVideoByYouInstagram.URL", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Video source url\nURL to the video file.", "description": "URL to the video file.", "details": {"Slug": "VideoSourceURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.VideoSourceURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4"}}, {"section": "Ingredients", "title": "Image thumbnail url\nURL to the video's thumbnail image.", "description": "URL to the video's thumbnail image.", "details": {"Slug": "ImageThumbnailURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.ImageThumbnailURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the video was taken.", "description": "Date and time the video was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewVideoByYouInstagram.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the video.", "description": "The HTML embed code for the video.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewVideoByYouInstagram.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_video", "Filter code method": "Telegram.sendVideo.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_video\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Video url\nText input > File", "description": "Text input > File", "details": {"Label": "Video URL", "Helper text": "Mime type should be video/mp4.", "Slug": "video_url", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendVideo.setVideo Url(string: video_url)"}}, {"section": "Action fields", "title": "Caption\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Caption", "Helper text": "Optional, 200 characters max.", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendVideo.setCaption(string: caption)"}}], "filter_code": NaN}
{"original_description": "Build your own weekend edition! This Applet will take your search term and gather up relevant New York Times articles in an email that you'll get every Sunday.", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_article_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Term\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "term", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newArticleMatchingSearch.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newArticleMatchingSearch.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.newArticleMatchingSearch.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.newArticleMatchingSearch.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.newArticleMatchingSearch.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Keywords\nA comma separated list of article keywords", "description": "A comma separated list of article keywords", "details": {"Slug": "Keywords", "Filter code": "Nytimes.newArticleMatchingSearch.Keywords", "Type": "String", "Example": "fish, tanks, biology"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.newArticleMatchingSearch.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "When it's Christmas Day, set a Scene on your Nanoleaf Aurora. Works great with holiday-themed featured Scenes =)", "trigger_channel": "Is It Christmas?", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "isitchristmas.christmas"}, "trigger_details": [{"section": "Trigger fields", "title": "Timezone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which timezone?", "Slug": "timezone", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Year\nThe year in which it is Christmas.", "description": "The year in which it is Christmas.", "details": {"Slug": "year", "Filter code": "Isitchristmas.christmas.Year", "Type": "String", "Example": "2014"}}, {"section": "Ingredients", "title": "Created at\nChristmas time.", "description": "Christmas time.", "details": {"Slug": "created_at", "Filter code": "Isitchristmas.christmas.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Answer\nIt will always be \"YES\".", "description": "It will always be \"YES\".", "details": {"Slug": "answer", "Filter code": "Isitchristmas.christmas.Answer", "Type": "String", "Example": "YES"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.turn_on_scene", "Filter code method": "Nanoleaf.turnOnScene.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.turn_on_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "My scenes\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "my_scenes", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Toggle your Hue lights with this shortcut widget button.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.toggle_all_hue", "Filter code method": "Hue.toggleAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.toggle_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every day at 5:00 PM this Applet will roundup and send you an email with the latest Winter Olympic news coverage.", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_article_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Term\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "term", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newArticleMatchingSearch.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newArticleMatchingSearch.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.newArticleMatchingSearch.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.newArticleMatchingSearch.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.newArticleMatchingSearch.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Keywords\nA comma separated list of article keywords", "description": "A comma separated list of article keywords", "details": {"Slug": "Keywords", "Filter code": "Nytimes.newArticleMatchingSearch.Keywords", "Type": "String", "Example": "fish, tanks, biology"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.newArticleMatchingSearch.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Time your sleep patterns to mother nature with this handy Applet — configure this as the sun rises, your LIFX bulbs will turn on slowly.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.turn_on", "Filter code method": "Lifx.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"lifx.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fade in duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Fade in duration", "Helper text": "How long should it take for the lights to fade in.", "Slug": "fade_in_duration", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not available? Specify them here. Example: &quot;color: #ff0000; brightness: 0.3; fade_in_duration: 12&quot; for red at 30% brightness, 12 second fade in. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.turnOn.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Dark and dreary winters? Start your morning off with daylight white to clear away the sleepy brain cobwebs quicker. Just pick a time to start!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.change_color_request", "Filter code method": "Nanoleaf.changeColorRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.change_color_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "Set the color value in hex (00FF00) or by name (Green). The hash (#) is not required for hex value input.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.changeColorRequest.setValue(string: value)"}}], "filter_code": NaN}
{"original_description": "Great for keep tabs on specific categories and types of apps. Search terms like \"camera,\" \"photography,\" and \"home\" are easy to get started with. ", "trigger_channel": "Apple App Store", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "app_store.new_app_from_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Search query\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "search_query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Name\nThe name of the App.", "description": "The name of the App.", "details": {"Slug": "name", "Filter code": "AppStore.newAppFromSearch.Name", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Description\nThe description of the App.", "description": "The description of the App.", "details": {"Slug": "description", "Filter code": "AppStore.newAppFromSearch.Description", "Type": "String", "Example": "Applets bring your favorite services together to create new experiences..."}}, {"section": "Ingredients", "title": "App store url\nThe URL to the App in the App Store.", "description": "The URL to the App in the App Store.", "details": {"Slug": "app_store_url", "Filter code": "AppStore.newAppFromSearch.AppStoreUrl", "Type": "String", "Example": "https://itunes.apple.com/us/app/ifttt/id660944635"}}, {"section": "Ingredients", "title": "Developer\nThe name of the developer of the App.", "description": "The name of the developer of the App.", "details": {"Slug": "developer", "Filter code": "AppStore.newAppFromSearch.Developer", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Category\nThe category the App falls under.", "description": "The category the App falls under.", "details": {"Slug": "category", "Filter code": "AppStore.newAppFromSearch.Category", "Type": "String", "Example": "Productivity"}}, {"section": "Ingredients", "title": "Price\nThe current price of the App.", "description": "The current price of the App.", "details": {"Slug": "price", "Filter code": "AppStore.newAppFromSearch.Price", "Type": "String", "Example": "$9.99"}}, {"section": "Ingredients", "title": "Rating\nThe current rating of the App.", "description": "The current rating of the App.", "details": {"Slug": "rating", "Filter code": "AppStore.newAppFromSearch.Rating", "Type": "String", "Example": "5 stars"}}, {"section": "Ingredients", "title": "Screenshot\nThe URL to a screenshot of the App.", "description": "The URL to a screenshot of the App.", "details": {"Slug": "screenshot", "Filter code": "AppStore.newAppFromSearch.Screenshot", "Type": "Image URL", "Example": "http://ifttt.com"}}, {"section": "Ingredients", "title": "Icon\nThe URL to an image of the App's icon.", "description": "The URL to an image of the App's icon.", "details": {"Slug": "icon", "Filter code": "AppStore.newAppFromSearch.Icon", "Type": "String", "Example": "http://is2.mzstatic.com/image/thumb/Purple111/v4/5c/3d/43/5c3d4327-22d0-45d0-73c6-bbaf56c08902/source/512x512bb.jpg"}}, {"section": "Ingredients", "title": "Version\nThe current version of the App.", "description": "The current version of the App.", "details": {"Slug": "version", "Filter code": "AppStore.newAppFromSearch.Version", "Type": "String", "Example": "2.1.3"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "AppStore.newAppFromSearch.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Want to sync some of your notes to GDrive, but not all of them? This Applet will append them to a Google Doc when you use the Drive tag. ", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.add_tag_to_note"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Specific tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.addTagToNote.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.addTagToNote.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.addTagToNote.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.addTagToNote.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.addTagToNote.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Google Docs", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_docs.append_to_google_doc", "Filter code method": "GoogleDocs.appendToGoogleDoc.skip(string?: reason)", "Runtime method": "runAction(\"google_docs.append_to_google_doc\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "Document name", "Helper text": "Will create a new file if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Content", "Helper text": "some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setBody(string: body)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Taco tuesday on your plate! Taco tuesday in your...inbox?! Yes. This Applet will send any new GIFs tagged \"Taco\" to your email every Tuesday.  🌮 ❤️", "trigger_channel": "Giphy", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "giphy.search"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Url\nURL to this gif on Giphy", "description": "URL to this gif on Giphy", "details": {"Slug": "url", "Filter code": "Giphy.search.URL", "Type": "Web URL", "Example": "http://giphy.com/posts/dreams-are-real-and-best-with-cats"}}, {"section": "Ingredients", "title": "Image url\nURL to the gif's image if one exists", "description": "URL to the gif's image if one exists", "details": {"Slug": "image_url", "Filter code": "Giphy.search.ImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/9WsTM8zLbys4o/giphy.gif"}}, {"section": "Ingredients", "title": "Tumblr image url\nGIF image URL for posting GIFs on tumblr.", "description": "GIF image URL for posting GIFs on tumblr.", "details": {"Slug": "tumblr_image_url", "Filter code": "Giphy.search.TumblrImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/QT3k4ZWD6XOaA/giphy-tumblr.gif"}}, {"section": "Ingredients", "title": "Email html\nHTML to include an in-line GIF in the body of an email.", "description": "HTML to include an in-line GIF in the body of an email.", "details": {"Slug": "email_html", "Filter code": "Giphy.search.EmailHTML", "Type": "String", "Example": "<a href=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif><img src=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif border='0'/></a><br />via <a href=http://giphy.com/gifs/vhp0BocGjkVjO>giphy.com</a>"}}, {"section": "Ingredients", "title": "Embed code\nIFrame embed code of gif", "description": "IFrame embed code of gif", "details": {"Slug": "embed_code", "Filter code": "Giphy.search.EmbedCode", "Type": "String", "Example": "<iframe src=\"//giphy.com/embed/PfquFkRaRAv5u\" width=\"500\" height=\"391\" frameBorder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"}}, {"section": "Ingredients", "title": "Tags\nNewline separate string of tags of this gif", "description": "Newline separate string of tags of this gif", "details": {"Slug": "tags", "Filter code": "Giphy.search.Tags", "Type": "String", "Example": "cats party"}}, {"section": "Ingredients", "title": "Created date\nDate and time when this gif was created", "description": "Date and time when this gif was created", "details": {"Slug": "created_date", "Filter code": "Giphy.search.CreatedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Turn on your SwitchBot with one tap on your phone", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.turn_on_bot", "Filter code method": "Switchbot.turnOnBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.turn_on_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Universe Today covers all things outer space, from aliens and exoplanets to solar flares and satellites. This Applet will gather up their news and share it with you every Friday in an email digest. Weekend plans: Oh just traveling to outer space...WITH MY MIND! 💫", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Keep track of stormy days", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.gust-speed-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target speed", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Speed in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred.", "description": "The date and time the measurement occurred.", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.gustSpeedAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo device reading the wind speed.", "description": "The name of the Netatmo device reading the wind speed.", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.gustSpeedAbove.DeviceName", "Type": "String", "Example": "My Home - Wind gauge"}}, {"section": "Ingredients", "title": "Target gust speed kmh\nThe target gust speed in km/h.", "description": "The target gust speed in km/h.", "details": {"Slug": "TargetGustSpeedKmh", "Filter code": "Netatmo.gustSpeedAbove.TargetGustSpeedKmh", "Type": "String", "Example": "38.6"}}, {"section": "Ingredients", "title": "Target gust speed mph\nThe target gust speed in mph.", "description": "The target gust speed in mph.", "details": {"Slug": "TargetGustSpeedMph", "Filter code": "Netatmo.gustSpeedAbove.TargetGustSpeedMph", "Type": "String", "Example": "24"}}, {"section": "Ingredients", "title": "Gust speed kmh\nThe measured gust speed in km/h.", "description": "The measured gust speed in km/h.", "details": {"Slug": "GustSpeedKmh", "Filter code": "Netatmo.gustSpeedAbove.GustSpeedKmh", "Type": "String", "Example": "38.6"}}, {"section": "Ingredients", "title": "Gust speed mph\nThe measured gust speed in mph.", "description": "The measured gust speed in mph.", "details": {"Slug": "GustSpeedMph", "Filter code": "Netatmo.gustSpeedAbove.GustSpeedMph", "Type": "String", "Example": "24"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Turn your phone into a history museum and art gallery! When the LOC publishes something new to \"Picture this\" it'll become your Android wallpaper. ", "trigger_channel": "Library of Congress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "loc.new_picture_this_post"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe post's title.", "description": "The post's title.", "details": {"Slug": "EntryTitle", "Filter code": "Loc.newPictureThisPost.Title", "Type": "String", "Example": "Sumo Sights"}}, {"section": "Ingredients", "title": "Post url\nThe URL to the blog post.", "description": "The URL to the blog post.", "details": {"Slug": "EntryUrl", "Filter code": "Loc.newPictureThisPost.PostUrl", "Type": "String", "Example": "http://blogs.loc.gov/picturethis/2017/06/sumo-sights/"}}, {"section": "Ingredients", "title": "Blog author\nThe author of the blog post.", "description": "The author of the blog post.", "details": {"Slug": "EntryAuthor", "Filter code": "Loc.newPictureThisPost.BlogAuthor", "Type": "String", "Example": "Lara Szypszak"}}, {"section": "Ingredients", "title": "Post content html\nThe blog post content, may contain HTML.", "description": "The blog post content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Loc.newPictureThisPost.PostContentHtml", "Type": "String", "Example": "<p>On a recent trip to Japan, I was on a tour bus from Nikko to Tokyo..."}}, {"section": "Ingredients", "title": "Post image url\nURL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Loc.newPictureThisPost.PostImageUrl", "Type": "String", "Example": "http://blogs.loc.gov/picturethis/files/2017/05/3g14324u.jpg"}}, {"section": "Ingredients", "title": "Published date\nDate the post was published.", "description": "Date the post was published.", "details": {"Slug": "EntryPublished", "Filter code": "Loc.newPictureThisPost.PublishedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.set_wallpaper", "Filter code method": "AndroidDevice.setWallpaper.skip(string?: reason)", "Runtime method": "runAction(\"android_device.set_wallpaper\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.setWallpaper.setPhoto Url(string: photo_url)"}}], "filter_code": NaN}
{"original_description": "This Applet sends you a notification with the FCC's latest news. Use the keyword filter to only receive the most relevant updates.", "trigger_channel": "Federal Communications Commission", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fcc.new_news_release"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword(s) (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Fcc.newNewsRelease.Title", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Link\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Fcc.newNewsRelease.Link", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Preview content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Fcc.newNewsRelease.PreviewContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This Applet uses the VoIP service, powered by the IFTTT mobile app, to call your device every morning at the time you choose. Expect to hear the highs and lows for the day in Fahrenheit, wind speed, conditions, and the UV Index.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "VoIP Calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "voip_calls.call_my_device", "Filter code method": "VoipCalls.callMyDevice.skip(string?: reason)", "Runtime method": "runAction(\"voip_calls.call_my_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Voice message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "VoipCalls.callMyDevice.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This applet enable users to switch a light ON/OFF with a button widget", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Vimar VIEW", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "view_prod.on_off_action_light", "Filter code method": "ViewProd.onOffActionLight.skip(string?: reason)", "Runtime method": "runAction(\"view_prod.on_off_action_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "State\nDropdown list", "description": "Dropdown list", "details": {"Label": "State", "Slug": "state", "Required": "false", "Can have default value": "true", "Filter code method": "ViewProd.onOffActionLight.setState(string: state)"}}], "filter_code": NaN}
{"original_description": "Turn of your sprinklers that are managed with Rachio if your Ambient Weather device shows that it's too windy.", "trigger_channel": "Ambient Weather", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ambient_weather.windspdmph_gt"}, "trigger_details": [{"section": "Trigger fields", "title": "Value\nText input", "description": "Text input", "details": {"Label": "What wind speed?", "Helper text": "in mph", "Slug": "value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "If you have more than one device, choose the one you'd like to watch.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Wind speed\nThe Wind Speed", "description": "The Wind Speed", "details": {"Slug": "value", "Filter code": "AmbientWeather.windspdmphGt.WindSpeed", "Type": "String", "Example": "1.2"}}, {"section": "Ingredients", "title": "Date\nThe date and time the event took place", "description": "The date and time the event took place", "details": {"Slug": "dateutc", "Filter code": "AmbientWeather.windspdmphGt.Date", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Rachio Irrigation Controller", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rachio_iro.stop_watering", "Filter code method": "RachioIro.stopWatering.skip(string?: reason)", "Runtime method": "runAction(\"rachio_iro.stop_watering\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on a ​device with SwitchBot (mechanically) or with SwitchBot Hub Plus (via infrared).", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.turn_on_bot", "Filter code method": "Switchbot.turnOnBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.turn_on_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "All you have to do is \"Favorite\" an article in Pocket and this Applet will add it to your Buffer queue with a headline and image. Share great content easily! ", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_favorite_item_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newFavoriteItemPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newFavoriteItemPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newFavoriteItemPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newFavoriteItemPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newFavoriteItemPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newFavoriteItemPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Buffer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "buffer.add_to_buffer_with_photo", "Filter code method": "Buffer.addToBufferWithPhoto.skip(string?: reason)", "Runtime method": "runAction(\"buffer.add_to_buffer_with_photo\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBufferWithPhoto.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Description", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBufferWithPhoto.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This applet enable users to acivate a scene with a button widget", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Vimar VIEW", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "view_prod.scene_action", "Filter code method": "ViewProd.sceneAction.skip(string?: reason)", "Runtime method": "runAction(\"view_prod.scene_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Alert me via my Hue if the wind gets dangerous", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.gust-speed-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target speed", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Speed in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred.", "description": "The date and time the measurement occurred.", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.gustSpeedAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo device reading the wind speed.", "description": "The name of the Netatmo device reading the wind speed.", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.gustSpeedAbove.DeviceName", "Type": "String", "Example": "My Home - Wind gauge"}}, {"section": "Ingredients", "title": "Target gust speed kmh\nThe target gust speed in km/h.", "description": "The target gust speed in km/h.", "details": {"Slug": "TargetGustSpeedKmh", "Filter code": "Netatmo.gustSpeedAbove.TargetGustSpeedKmh", "Type": "String", "Example": "38.6"}}, {"section": "Ingredients", "title": "Target gust speed mph\nThe target gust speed in mph.", "description": "The target gust speed in mph.", "details": {"Slug": "TargetGustSpeedMph", "Filter code": "Netatmo.gustSpeedAbove.TargetGustSpeedMph", "Type": "String", "Example": "24"}}, {"section": "Ingredients", "title": "Gust speed kmh\nThe measured gust speed in km/h.", "description": "The measured gust speed in km/h.", "details": {"Slug": "GustSpeedKmh", "Filter code": "Netatmo.gustSpeedAbove.GustSpeedKmh", "Type": "String", "Example": "38.6"}}, {"section": "Ingredients", "title": "Gust speed mph\nThe measured gust speed in mph.", "description": "The measured gust speed in mph.", "details": {"Slug": "GustSpeedMph", "Filter code": "Netatmo.gustSpeedAbove.GustSpeedMph", "Type": "String", "Example": "24"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "Make savings easy by setting an amount to automatically save each month", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_month_on_the"}, "trigger_details": [{"section": "Trigger fields", "title": "Month day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of the month", "Slug": "month_day", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyMonthOnThe.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "Start one of your preset media at a given time on a specified Triby", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Invoxia Triby", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "invoxia_triby.play_media_preset_on_specified_triby", "Filter code method": "InvoxiaTriby.playMediaPresetOnSpecifiedTriby.skip(string?: reason)", "Runtime method": "runAction(\"invoxia_triby.play_media_preset_on_specified_triby\", {})"}, "action_details": [{"section": "Action fields", "title": "Triby\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Triby IO?", "Slug": "triby", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Preset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which media?", "Helper text": "A preset media is a media that has been attributed to at least one button of a Triby in your group.", "Slug": "preset", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Volume\nDropdown list", "description": "Dropdown list", "details": {"Label": "What volume?", "Slug": "volume", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "New GIFs that are tagged \"drag race\" will be tucked up into an email for you weekly. Sissy that walk. ", "trigger_channel": "Giphy", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "giphy.search"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Url\nURL to this gif on Giphy", "description": "URL to this gif on Giphy", "details": {"Slug": "url", "Filter code": "Giphy.search.URL", "Type": "Web URL", "Example": "http://giphy.com/posts/dreams-are-real-and-best-with-cats"}}, {"section": "Ingredients", "title": "Image url\nURL to the gif's image if one exists", "description": "URL to the gif's image if one exists", "details": {"Slug": "image_url", "Filter code": "Giphy.search.ImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/9WsTM8zLbys4o/giphy.gif"}}, {"section": "Ingredients", "title": "Tumblr image url\nGIF image URL for posting GIFs on tumblr.", "description": "GIF image URL for posting GIFs on tumblr.", "details": {"Slug": "tumblr_image_url", "Filter code": "Giphy.search.TumblrImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/QT3k4ZWD6XOaA/giphy-tumblr.gif"}}, {"section": "Ingredients", "title": "Email html\nHTML to include an in-line GIF in the body of an email.", "description": "HTML to include an in-line GIF in the body of an email.", "details": {"Slug": "email_html", "Filter code": "Giphy.search.EmailHTML", "Type": "String", "Example": "<a href=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif><img src=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif border='0'/></a><br />via <a href=http://giphy.com/gifs/vhp0BocGjkVjO>giphy.com</a>"}}, {"section": "Ingredients", "title": "Embed code\nIFrame embed code of gif", "description": "IFrame embed code of gif", "details": {"Slug": "embed_code", "Filter code": "Giphy.search.EmbedCode", "Type": "String", "Example": "<iframe src=\"//giphy.com/embed/PfquFkRaRAv5u\" width=\"500\" height=\"391\" frameBorder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"}}, {"section": "Ingredients", "title": "Tags\nNewline separate string of tags of this gif", "description": "Newline separate string of tags of this gif", "details": {"Slug": "tags", "Filter code": "Giphy.search.Tags", "Type": "String", "Example": "cats party"}}, {"section": "Ingredients", "title": "Created date\nDate and time when this gif was created", "description": "Date and time when this gif was created", "details": {"Slug": "created_date", "Filter code": "Giphy.search.CreatedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "With the push of a button on your phone, your Signature thermostat is set to a certain temperature.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "nVent Nuheat Signature Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nVent_Nuheat.set_temperature", "Filter code method": "NVentNuheat.setTemperature.skip(string?: reason)", "Runtime method": "runAction(\"nVent_Nuheat.set_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which thermostat?", "Helper text": "The thermostat to set the temperature for", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Scale\nDropdown list", "description": "Dropdown list", "details": {"Label": "What scale?", "Helper text": "Celsius or fahrenheit", "Slug": "scale", "Required": "true", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setScale(string: scale)"}}, {"section": "Action fields", "title": "Setpoint temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "What setpoint temperature?", "Helper text": "The setpoint temperature", "Slug": "setpoint_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setSetpoint Temperature(string: setpoint_temperature)"}}, {"section": "Action fields", "title": "Duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "What duration?", "Helper text": "The time to hold the temperature until", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setDuration(string: duration)"}}], "filter_code": NaN}
{"original_description": "Send @IFTTT a message with #tvon to turn on your Harmony connected TV.", "trigger_channel": "Telegram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "telegram.new_group_text_filter"}, "trigger_details": [{"section": "Trigger fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which group?", "Helper text": "You can use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot to <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">connect new groups</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Filter\nText input", "description": "Text input", "details": {"Label": "Key phrase", "Helper text": "Any #hashtag or keyword. The Trigger fires when anyone sends a message with the command /ifttt and the key phrase to the group.", "Slug": "filter", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Reply text\nText input > Other", "description": "Text input > Other", "details": {"Label": "What to send as a reply?", "Helper text": "The bot will reply to the command with this text. Leave blank for a standard message.", "Slug": "reply_text", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was triggered.", "description": "Date and time event was triggered.", "details": {"Slug": "created_at", "Filter code": "Telegram.newGroupTextFilter.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Group title\nThe title of the group.", "description": "The title of the group.", "details": {"Slug": "group_title", "Filter code": "Telegram.newGroupTextFilter.GroupTitle", "Type": "String", "Example": "Bot News Group"}}, {"section": "Ingredients", "title": "Author name\nThe name of the author who triggered the Applet.", "description": "The name of the author who triggered the Applet.", "details": {"Slug": "author_name", "Filter code": "Telegram.newGroupTextFilter.AuthorName", "Type": "String", "Example": "Pavel Durov"}}, {"section": "Ingredients", "title": "Author username\nAuthor username, when available.", "description": "Author username, when available.", "details": {"Slug": "author_username", "Filter code": "Telegram.newGroupTextFilter.AuthorUsername", "Type": "String", "Example": "durov"}}, {"section": "Ingredients", "title": "Text\nRepresents a plain-text message contents. Does not include the 'Key phrase'.", "description": "Represents a plain-text message contents. Does not include the 'Key phrase'.", "details": {"Slug": "text", "Filter code": "Telegram.newGroupTextFilter.Text", "Type": "String", "Example": "Hello world!"}}, {"section": "Ingredients", "title": "Html\nRepresents HTML-formatted message contents.", "description": "Represents HTML-formatted message contents.", "details": {"Slug": "html", "Filter code": "Telegram.newGroupTextFilter.HTML", "Type": "String", "Example": "Hello <b>world</b>.<br/>This string <i>can</i> contain <pre>some</pre> HTML <code>tags</code>."}}], "action_channel": "Harmony", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "harmony.start-activity", "Filter code method": "Harmony.startActivity.skip(string?: reason)", "Runtime method": "runAction(\"harmony.start-activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Activity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Helper text": "Activities that include locks are not supported", "Slug": "activity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This boat trip will be a blast.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.wind-average-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target speed", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Speed in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred.", "description": "The date and time the measurement occurred.", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.windAverageAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo device reading the wind speed.", "description": "The name of the Netatmo device reading the wind speed.", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.windAverageAbove.DeviceName", "Type": "String", "Example": "My Home - Wind gauge"}}, {"section": "Ingredients", "title": "Target wind speed kmh\nThe target wind speed in km/h.", "description": "The target wind speed in km/h.", "details": {"Slug": "TargetWindSpeedKmh", "Filter code": "Netatmo.windAverageAbove.TargetWindSpeedKmh", "Type": "String", "Example": "24"}}, {"section": "Ingredients", "title": "Target wind speed mph\nThe target wind speed in mph.", "description": "The target wind speed in mph.", "details": {"Slug": "TargetWindSpeedMph", "Filter code": "Netatmo.windAverageAbove.TargetWindSpeedMph", "Type": "String", "Example": "24"}}, {"section": "Ingredients", "title": "Wind speed kmh\nThe measured wind speed in km/h.", "description": "The measured wind speed in km/h.", "details": {"Slug": "WindSpeedKmh", "Filter code": "Netatmo.windAverageAbove.WindSpeedKmh", "Type": "String", "Example": "13"}}, {"section": "Ingredients", "title": "Wind speed mph\nThe measured wind speed in mph.", "description": "The measured wind speed in mph.", "details": {"Slug": "WindSpeedMph", "Filter code": "Netatmo.windAverageAbove.WindSpeedMph", "Type": "String", "Example": "8"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "When IFTTT Do button is pressed, AirTouch will turn on the home air conditioning.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "AirTouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "airtouch.ac_power", "Filter code method": "Airtouch.acPower.skip(string?: reason)", "Runtime method": "runAction(\"airtouch.ac_power\", {})"}, "action_details": [{"section": "Action fields", "title": "Ac index\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which air conditioning?", "Slug": "ac_index", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Power on off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or turn off?", "Slug": "power_on_off", "Required": "true", "Can have default value": "true", "Filter code method": "Airtouch.acPower.setPower On Off(string: power_on_off)"}}], "filter_code": NaN}
{"original_description": "Flicボタンを一回クリックすると、Atmoph Window がつきます。もう一度クリックすると画面スリープになります。", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Atmoph", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "atmoph.turn_on", "Filter code method": "Atmoph.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"atmoph.turn_on\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Turn your WIFIPLUG on everyday at sunset. This Applet means that you no longer have to update your timers throughout the year. Let IFTTT do it for you!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WIFIPLUG", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wifiplug.turn_on", "Filter code method": "Wifiplug.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wifiplug.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Which switch\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Switch?", "Helper text": "Please choose your device.", "Slug": "which_switch", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Just click on a button and turn on/off your device", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Fanimation", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "fansync.on_off", "Filter code method": "Fansync.onOff.skip(string?: reason)", "Runtime method": "runAction(\"fansync.on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "which device?", "Helper text": "Please select the device you have on Fanimation solution.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "On off\nDropdown list", "description": "Dropdown list", "details": {"Label": "on or off?", "Helper text": "Please choose switch on or off", "Slug": "on_off", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "When IFTTT Do button is pressed, AirTouch will turn off the home air conditioning.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "AirTouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "airtouch.ac_power", "Filter code method": "Airtouch.acPower.skip(string?: reason)", "Runtime method": "runAction(\"airtouch.ac_power\", {})"}, "action_details": [{"section": "Action fields", "title": "Ac index\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which air conditioning?", "Slug": "ac_index", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Power on off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or turn off?", "Slug": "power_on_off", "Required": "true", "Can have default value": "true", "Filter code method": "Airtouch.acPower.setPower On Off(string: power_on_off)"}}], "filter_code": NaN}
{"original_description": "Use Weather Underground to automatically close your awning when winds reach a speed of 10mph or higher to prevent damage.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.wind_speed_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Wind speed\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Speed", "Helper text": "Numbers only", "Slug": "wind_speed", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Units", "Slug": "units", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Wind direction\nDropdown list", "description": "Dropdown list", "details": {"Label": "Direction", "Slug": "wind_direction", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.windSpeedRisesAbove.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.windSpeedRisesAbove.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.windSpeedRisesAbove.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.windSpeedRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.windSpeedRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Somfy myLink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "somfy_mylink.move", "Filter code method": "SomfyMylink.move.skip(string?: reason)", "Runtime method": "runAction(\"somfy_mylink.move\", {})"}, "action_details": [{"section": "Action fields", "title": "Command\nDropdown list", "description": "Dropdown list", "details": {"Label": "What command ?", "Slug": "command", "Required": "true", "Can have default value": "true", "Filter code method": "SomfyMylink.move.setCommand(string: command)"}}, {"section": "Action fields", "title": "Target\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which connected product ?", "Slug": "target", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When you tag an item with a specific tag in Pocket, a task will be added to Remember The Milk to remind you to (actually!) read it later.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_tagged_item_pocket"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Single tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newTaggedItemPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newTaggedItemPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newTaggedItemPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newTaggedItemPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newTaggedItemPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newTaggedItemPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Remember The Milk", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rememberthemilk.tasks_add", "Filter code method": "Rememberthemilk.tasksAdd.skip(string?: reason)", "Runtime method": "runAction(\"rememberthemilk.tasks_add\", {})"}, "action_details": [{"section": "Action fields", "title": "Task\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Helper text": "Task name with properties in <a href=\"https://www.rememberthemilk.com/help/answer/basics-smartadd-howdoiuse\" target=\"_blank\">Smart Add</a> format. E.g. &quot;Call Bob at 9am Monday #work&quot;.", "Slug": "task", "Required": "true", "Can have default value": "true", "Filter code method": "Rememberthemilk.tasksAdd.setTask(string: task)"}}], "filter_code": NaN}
{"original_description": "Try the label \"Telegram\" — when you make a new task with it, the details will be sent to the Telegram chat of your choice. ", "trigger_channel": "Todoist", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "todoist.new_task_created"}, "trigger_details": [{"section": "Trigger fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project to watch", "Helper text": "Configure this trigger to fire only when a task is created in the specified project.", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Task content\nContent of the task.", "description": "Content of the task.", "details": {"Slug": "task_content", "Filter code": "Todoist.newTaskCreated.TaskContent", "Type": "String", "Example": "Pay telephone bill"}}, {"section": "Ingredients", "title": "Task description\nDescription of the task.", "description": "Description of the task.", "details": {"Slug": "task_description", "Filter code": "Todoist.newTaskCreated.TaskDescription", "Type": "String", "Example": "Go to gym website and click renew in account settings"}}, {"section": "Ingredients", "title": "Link to task\nThe URL of the task.", "description": "The URL of the task.", "details": {"Slug": "link_to_task", "Filter code": "Todoist.newTaskCreated.LinkToTask", "Type": "Web URL", "Example": "https://todoist.com/showTask?id=999"}}, {"section": "Ingredients", "title": "Project\nProject to which the task belongs.", "description": "Project to which the task belongs.", "details": {"Slug": "project", "Filter code": "Todoist.newTaskCreated.Project", "Type": "String", "Example": "Household Tasks"}}, {"section": "Ingredients", "title": "Labels\nLabels assigned to the task.", "description": "Labels assigned to the task.", "details": {"Slug": "labels", "Filter code": "Todoist.newTaskCreated.Labels", "Type": "String", "Example": "to_follow_up"}}, {"section": "Ingredients", "title": "Priority\nPriority of the task.", "description": "Priority of the task.", "details": {"Slug": "priority", "Filter code": "Todoist.newTaskCreated.Priority", "Type": "String", "Example": "Priority 1"}}, {"section": "Ingredients", "title": "Created at\nDate and time the task was created.", "description": "Date and time the task was created.", "details": {"Slug": "created_at", "Filter code": "Todoist.newTaskCreated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Due date\nDue date of the task.", "description": "Due date of the task.", "details": {"Slug": "due_date", "Filter code": "Todoist.newTaskCreated.DueDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Section\nSection to which the task belongs (if any).", "description": "Section to which the task belongs (if any).", "details": {"Slug": "section", "Filter code": "Todoist.newTaskCreated.Section", "Type": "String", "Example": "Cleaning tasks"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "Press a button to close Skylink Atoms Garage Door Opener", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SkylinkNet", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "skylinknet.gdo_close", "Filter code method": "Skylinknet.gdoClose.skip(string?: reason)", "Runtime method": "runAction(\"skylinknet.gdo_close\", {})"}, "action_details": [{"section": "Action fields", "title": "Hub dev\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Garage Door?", "Slug": "hub_dev", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Key\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hub Password", "Slug": "key", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Wake up softly with a LightwaveRF Dimmer switched to a low dim level in the morning and avoid the groggy feeling from a loud alarm clock", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "LightwaveRF Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lightwaverf_lighting.dim_a_light", "Filter code method": "LightwaverfLighting.dimALight.skip(string?: reason)", "Runtime method": "runAction(\"lightwaverf_lighting.dim_a_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Which light\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Light?", "Slug": "which_light", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "What dim level\nText input > Other", "description": "Text input > Other", "details": {"Label": "What Dim Level?", "Helper text": "Enter any numeric value between 0 and 100 (increments are 5%, closest match will be used)", "Slug": "what_dim_level", "Required": "true", "Can have default value": "true", "Filter code method": "LightwaverfLighting.dimALight.setWhat Dim Level(string: what_dim_level)"}}], "filter_code": NaN}
{"original_description": "Ajout d'un bouton raccourci pour votre smartphone.\nCe bouton permet de contrôler votre heatzy pilote.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Heatzy", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "heatzy.a-set-heat-mode", "Filter code method": "Heatzy.aSetHeatMode.skip(string?: reason)", "Runtime method": "runAction(\"heatzy.a-set-heat-mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "Select supported device.", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Open Garage door by pressing on the Flic button", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.tag"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tag", "Helper text": "The tag that should be triggered", "Slug": "tag", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.tag.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.tag.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.tag.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.tag.ClickType", "Type": "String", "Example": "double_click"}}, {"section": "Ingredients", "title": "Flic name\nThe name of the Flic.", "description": "The name of the Flic.", "details": {"Slug": "flic_name", "Filter code": "Flic.tag.FlicName", "Type": "String", "Example": "My New Flic"}}, {"section": "Ingredients", "title": "Tag\nThe Tag used.", "description": "The Tag used.", "details": {"Slug": "tag", "Filter code": "Flic.tag.Tag", "Type": "String", "Example": "Living Room"}}], "action_channel": "Garadget", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garadget.open_door", "Filter code method": "Garadget.openDoor.skip(string?: reason)", "Runtime method": "runAction(\"garadget.open_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Helper text": "Please identify which door in your account you want to open", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever my Android Phone connects to the Wifi in my home, the QNAP Device will start playing some playlist from Music Station \n\n(This applet requires IFTTT Agent v1.1 or above, Music Station v5.0.4 or above and Media Streaming addon v430.1.0.3 or above to be installed on your QNAP device)", "trigger_channel": "Android Device", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_device.connect_to_wifi_network_with_ssid"}, "trigger_details": [{"section": "Trigger fields", "title": "Ssid\nText input > Other", "description": "Text input > Other", "details": {"Label": "Network name", "Helper text": "Case sensitive e.g. Funny WiFi Name", "Slug": "ssid", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Ssid\nThe SSID of the WiFi network.", "description": "The SSID of the WiFi network.", "details": {"Slug": "SSID", "Filter code": "AndroidDevice.connectToWifiNetworkWithSsid.SSID", "Type": "String", "Example": "linksys"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the network change occurred.", "description": "The time the network change occurred.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidDevice.connectToWifiNetworkWithSsid.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of your device where the connection change occurred.", "description": "The name of your device where the connection change occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidDevice.connectToWifiNetworkWithSsid.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.play_music_on_qnap_device", "Filter code method": "Qnap.playMusicOnQnapDevice.skip(string?: reason)", "Runtime method": "runAction(\"qnap.play_music_on_qnap_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Option playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Playlist", "Helper text": "Select the playlist you want to play", "Slug": "option_playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Audio interface\nDropdown list", "description": "Dropdown list", "details": {"Label": "Audio interface", "Helper text": "The audio interface for Music Station", "Slug": "audio_interface", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.playMusicOnQnapDevice.setAudio Interface(string: audio_interface)"}}], "filter_code": NaN}
{"original_description": "This Applet uses a button widget on your phone to turn on your device. Simply add the button widget with the IFTTT mobile app to access it. Learn more at https://help.ifttt.com/hc/en-us/articles/115010361688", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "LinkJapan eHome", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "LinkJapan_eHome.powerState", "Filter code method": "LinkJapanEHome.powerState.skip(string?: reason)", "Runtime method": "runAction(\"LinkJapan_eHome.powerState\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Powercontrol changepowerstate string\nDropdown list", "description": "Dropdown list", "details": {"Label": "On or off?", "Helper text": "choose power", "Slug": "PowerControl_ChangePowerState_string", "Required": "true", "Can have default value": "true", "Filter code method": "LinkJapanEHome.powerState.setPower Control Change Power State String(string: PowerControl_ChangePowerState_string)"}}], "filter_code": NaN}
{"original_description": "Close Garage door by pressing on the Flic button", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.tag"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tag", "Helper text": "The tag that should be triggered", "Slug": "tag", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.tag.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.tag.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.tag.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.tag.ClickType", "Type": "String", "Example": "double_click"}}, {"section": "Ingredients", "title": "Flic name\nThe name of the Flic.", "description": "The name of the Flic.", "details": {"Slug": "flic_name", "Filter code": "Flic.tag.FlicName", "Type": "String", "Example": "My New Flic"}}, {"section": "Ingredients", "title": "Tag\nThe Tag used.", "description": "The Tag used.", "details": {"Slug": "tag", "Filter code": "Flic.tag.Tag", "Type": "String", "Example": "Living Room"}}], "action_channel": "Garadget", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garadget.close_door", "Filter code method": "Garadget.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"garadget.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Prepare your favorite coffee drink with milk using the Button widget. Choose between Americano, Caffe Latte, Cappuccino, Espresso Macchiato, Flat White and Latte Macchiato together with your preferred coffee settings.\n", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_start_milk_program", "Filter code method": "HcCoffeeMachine.coffeeMakerStartMilkProgram.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_start_milk_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Helper text": "Please note that your coffee machine has to be connected and turned on (but not active) to be listed.", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Program\nDropdown list", "description": "Dropdown list", "details": {"Label": "Program", "Slug": "program", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fill quantity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Size", "Slug": "fill_quantity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet enable users to switch a light ON/OFF with a timer schedule", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Vimar VIEW", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "view_prod.on_off_action_light", "Filter code method": "ViewProd.onOffActionLight.skip(string?: reason)", "Runtime method": "runAction(\"view_prod.on_off_action_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "State\nDropdown list", "description": "Dropdown list", "details": {"Label": "State", "Slug": "state", "Required": "false", "Can have default value": "true", "Filter code method": "ViewProd.onOffActionLight.setState(string: state)"}}], "filter_code": NaN}
{"original_description": "Turn your WIFIPLUG off everyday at sunrise. This Applet means that you no longer have to update your timers throughout the year. Let IFTTT do it for you!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WIFIPLUG", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wifiplug.turn_off", "Filter code method": "Wifiplug.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"wifiplug.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Which switch\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Switch?", "Helper text": "Please choose your device.", "Slug": "which_switch", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet enable users to activate a scene with a timer schedule", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Vimar VIEW", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "view_prod.scene_action", "Filter code method": "ViewProd.sceneAction.skip(string?: reason)", "Runtime method": "runAction(\"view_prod.scene_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Clicking a Flic button turns on your Atmoph Window. Clicking the button again turns off the window.", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Atmoph", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "atmoph.turn_on", "Filter code method": "Atmoph.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"atmoph.turn_on\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Wake up by turning on the lights and playing the Sonos", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_stream", "Filter code method": "Sonos.playStream.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_stream\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "What do you want to play?", "Helper text": "Enter the URL of the audio stream you want to play", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playStream.setUrl(string: url)"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Name\nText input > Title", "description": "Text input > Title", "details": {"Label": "What name do you want to show for this stream?", "Slug": "name", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.playStream.setName(string: name)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "What image do you want to show for this stream?", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.playStream.setImage Url(string: image_url)"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playStream.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Deactivates Away Mode at a time you specify. This will run every day until switched off. ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Wiser", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiser_heat.set_away", "Filter code method": "WiserHeat.setAway.skip(string?: reason)", "Runtime method": "runAction(\"wiser_heat.set_away\", {})"}, "action_details": [{"section": "Action fields", "title": "Away mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "On or Off", "Slug": "away_mode", "Required": "true", "Can have default value": "true", "Filter code method": "WiserHeat.setAway.setAway Mode(string: away_mode)"}}], "filter_code": NaN}
{"original_description": "This Applet will sync any tasks with a specific\nlabel (you could use Google Tasks) to a Google Tasks tasklist.", "trigger_channel": "Todoist", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "todoist.new_task_created"}, "trigger_details": [{"section": "Trigger fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project to watch", "Helper text": "Configure this trigger to fire only when a task is created in the specified project.", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Task content\nContent of the task.", "description": "Content of the task.", "details": {"Slug": "task_content", "Filter code": "Todoist.newTaskCreated.TaskContent", "Type": "String", "Example": "Pay telephone bill"}}, {"section": "Ingredients", "title": "Task description\nDescription of the task.", "description": "Description of the task.", "details": {"Slug": "task_description", "Filter code": "Todoist.newTaskCreated.TaskDescription", "Type": "String", "Example": "Go to gym website and click renew in account settings"}}, {"section": "Ingredients", "title": "Link to task\nThe URL of the task.", "description": "The URL of the task.", "details": {"Slug": "link_to_task", "Filter code": "Todoist.newTaskCreated.LinkToTask", "Type": "Web URL", "Example": "https://todoist.com/showTask?id=999"}}, {"section": "Ingredients", "title": "Project\nProject to which the task belongs.", "description": "Project to which the task belongs.", "details": {"Slug": "project", "Filter code": "Todoist.newTaskCreated.Project", "Type": "String", "Example": "Household Tasks"}}, {"section": "Ingredients", "title": "Labels\nLabels assigned to the task.", "description": "Labels assigned to the task.", "details": {"Slug": "labels", "Filter code": "Todoist.newTaskCreated.Labels", "Type": "String", "Example": "to_follow_up"}}, {"section": "Ingredients", "title": "Priority\nPriority of the task.", "description": "Priority of the task.", "details": {"Slug": "priority", "Filter code": "Todoist.newTaskCreated.Priority", "Type": "String", "Example": "Priority 1"}}, {"section": "Ingredients", "title": "Created at\nDate and time the task was created.", "description": "Date and time the task was created.", "details": {"Slug": "created_at", "Filter code": "Todoist.newTaskCreated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Due date\nDue date of the task.", "description": "Due date of the task.", "details": {"Slug": "due_date", "Filter code": "Todoist.newTaskCreated.DueDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Section\nSection to which the task belongs (if any).", "description": "Section to which the task belongs (if any).", "details": {"Slug": "section", "Filter code": "Todoist.newTaskCreated.Section", "Type": "String", "Example": "Cleaning tasks"}}], "action_channel": "Google Tasks", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_tasks.add_task_to_tasklist", "Filter code method": "GoogleTasks.addTaskToTasklist.skip(string?: reason)", "Runtime method": "runAction(\"google_tasks.add_task_to_tasklist\", {})"}, "action_details": [{"section": "Action fields", "title": "Tasklist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which task list?", "Helper text": "The task list to which the task should be added.", "Slug": "tasklist_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task title\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What is the title of the task?", "Slug": "task_title", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Title(string: task_title)"}}, {"section": "Action fields", "title": "Task notes\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What are the notes to include in the task?", "Helper text": "Notes describing the task", "Slug": "task_notes", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Notes(string: task_notes)"}}, {"section": "Action fields", "title": "Due date\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Does the task have a due date?", "Helper text": "Field only sets the date. Ex. Next Tuesday, Today.", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setDue Date(string: due_date)"}}], "filter_code": NaN}
{"original_description": "If the outdoor temperature drops below 55°F, then set your Wiser Air to heat mode.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Wiser Air", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiser_air.set_thermostats_system_mode", "Filter code method": "WiserAir.setThermostatsSystemMode.skip(string?: reason)", "Runtime method": "runAction(\"wiser_air.set_thermostats_system_mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system mode?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "WiserAir.setThermostatsSystemMode.setMode(string: mode)"}}], "filter_code": NaN}
{"original_description": "Whenever one of your favorite Feeds has a new item, send a message to a Telegram chat.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "Let your chat buddies know about your latest musical discoveries. When you save a track to \"Your Music\" the details, including album art, will be shared to the chat you specify.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_saved_track"}, "trigger_details": [{"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newSavedTrack.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newSavedTrack.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newSavedTrack.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newSavedTrack.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newSavedTrack.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Saved at\nThe time at which the track was saved.", "description": "The time at which the track was saved.", "details": {"Slug": "saved_at", "Filter code": "Spotify.newSavedTrack.SavedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newSavedTrack.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newSavedTrack.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "When you publish something new, the content will be posted in the chat of your choice. Cool Telegram sticker not included 😎", "trigger_channel": "WordPress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wordpress.any_new_post_wp"}, "trigger_details": [{"section": "Ingredients", "title": "Post title\nThe post's title.", "description": "The post's title.", "details": {"Slug": "PostTitle", "Filter code": "Wordpress.anyNewPostWp.PostTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Post url\nThe post's URL.", "description": "The post's URL.", "details": {"Slug": "PostUrl", "Filter code": "Wordpress.anyNewPostWp.PostUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Post content\nThe post's content, may contain HTML.", "description": "The post's content, may contain HTML.", "details": {"Slug": "PostContent", "Filter code": "Wordpress.anyNewPostWp.PostContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Post image url\nURL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "details": {"Slug": "PostImageUrl", "Filter code": "Wordpress.anyNewPostWp.PostImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Tags and categories\nThe post's tags and categories, comma seperated.", "description": "The post's tags and categories, comma seperated.", "details": {"Slug": "TagsAndCategories", "Filter code": "Wordpress.anyNewPostWp.TagsAndCategories", "Type": "String", "Example": "neato, really cool"}}, {"section": "Ingredients", "title": "Post published\nDate post was created", "description": "Date post was created", "details": {"Slug": "PostPublished", "Filter code": "Wordpress.anyNewPostWp.PostPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "Spread your photo-sharing tentacles to new regions at no added cost. This will automatically send new photos you post on Instagram to a Telegram group or channel. ", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_photo", "Filter code method": "Telegram.sendPhoto.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_photo\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Caption\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Caption", "Helper text": "Optional, 200 characters max.", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setCaption(string: caption)"}}], "filter_code": NaN}
{"original_description": "Pick the Notebook, and any new note will be sent into the Telegram chat of your choice. Presto! 👍", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "Google カレンダーに予定が追加された場合、グループチャットに通知します。", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.new_event_added"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.newEventAdded.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.newEventAdded.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.newEventAdded.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.newEventAdded.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.newEventAdded.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.newEventAdded.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.newEventAdded.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Created at\nDate and time the event was created.", "description": "Date and time the event was created.", "details": {"Slug": "CreatedAt", "Filter code": "GoogleCalendar.newEventAdded.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.newEventAdded.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "毎週、指定した曜日の時刻に、グループチャットにリマインドを通知します。", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Google カレンダーに登録されている予定が開始される◯◯分前に、グループチャットにリマインドを通知します。", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.any_event_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Helper text": "Select a calendar", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Offset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time before event starts", "Helper text": "Specify how much time before the event starts you'd like the Applet to trigger", "Slug": "offset", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.anyEventStarts.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.anyEventStarts.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.anyEventStarts.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.anyEventStarts.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.anyEventStarts.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.anyEventStarts.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.anyEventStarts.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.anyEventStarts.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Google スプレッドシートに新しい行が追加された場合、追加された行の情報（A列〜J列までの値）をグループチャットに通知します。", "trigger_channel": "Google Sheets", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_sheets.new_row_in_spreadsheet"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Enter the folder path...", "Helper text": "Format: folders separated by &quot;/&quot; like &quot;Recipes/Vegetables&quot;", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Filename\nText input > Other", "description": "Text input > Other", "details": {"Label": "and enter the filename", "Helper text": "E.g. Vegetable Recipes", "Slug": "filename", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Spreadsheet url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Or copy and paste the spreadsheet URL", "Helper text": "Must be a valid spreadsheet URL", "Slug": "spreadsheet_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Filename\nThe name of the spreadsheet.", "description": "The name of the spreadsheet.", "details": {"Slug": "spreadsheet_name", "Filter code": "GoogleSheets.newRowInSpreadsheet.Filename", "Type": "String", "Example": "2018 Trip ideas"}}, {"section": "Ingredients", "title": "Path\nPath of the new spreadsheet.", "description": "Path of the new spreadsheet.", "details": {"Slug": "path", "Filter code": "GoogleSheets.newRowInSpreadsheet.Path", "Type": "String", "Example": "IFTTT/Faves"}}, {"section": "Ingredients", "title": "Spreadsheet url\nThe URL to the spreadsheet on Google Sheets.", "description": "The URL to the spreadsheet on Google Sheets.", "details": {"Slug": "spreadsheet_url", "Filter code": "GoogleSheets.newRowInSpreadsheet.SpreadsheetUrl", "Type": "Web URL", "Example": "https://docs.google.com/spreadsheets/d/1va_bpHMbOIwbQb77orUzAQVs0ZGsyqHqgeyYXssa6Z0/edit#gid=0"}}, {"section": "Ingredients", "title": "Created at\nDate and time row was added.", "description": "Date and time row was added.", "details": {"Slug": "created_at", "Filter code": "GoogleSheets.newRowInSpreadsheet.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Row index\nThe numerical value of the new row.", "description": "The numerical value of the new row.", "details": {"Slug": "row_index", "Filter code": "GoogleSheets.newRowInSpreadsheet.RowIndex", "Type": "String", "Example": "4"}}, {"section": "Ingredients", "title": "Column a\nValue in column A", "description": "Value in column A", "details": {"Slug": "column_a", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnA", "Type": "String", "Example": "1234"}}, {"section": "Ingredients", "title": "Column b\nValue in column B", "description": "Value in column B", "details": {"Slug": "column_b", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnB", "Type": "String", "Example": "$99"}}, {"section": "Ingredients", "title": "Column c\nValue in column C", "description": "Value in column C", "details": {"Slug": "column_c", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnC", "Type": "String", "Example": "Towel"}}, {"section": "Ingredients", "title": "Column d\nValue in column D", "description": "Value in column D", "details": {"Slug": "column_d", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnD", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Column e\nValue in column E", "description": "Value in column E", "details": {"Slug": "column_e", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnE", "Type": "String", "Example": "FREE SHIPPING"}}, {"section": "Ingredients", "title": "Column f\nValue in column F", "description": "Value in column F", "details": {"Slug": "column_f", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnF", "Type": "String", "Example": "FREE SHIPPING"}}, {"section": "Ingredients", "title": "Column g\nValue in column G", "description": "Value in column G", "details": {"Slug": "column_g", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnG", "Type": "String", "Example": "Delivery Date"}}, {"section": "Ingredients", "title": "Column h\nValue in column H", "description": "Value in column H", "details": {"Slug": "column_h", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnH", "Type": "String", "Example": "November 7th, 2017"}}, {"section": "Ingredients", "title": "Column i\nValue in column I", "description": "Value in column I", "details": {"Slug": "column_i", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnI", "Type": "String", "Example": "Delivery Address"}}, {"section": "Ingredients", "title": "Column j\nValue in column J", "description": "Value in column J", "details": {"Slug": "column_j", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnJ", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column k\nValue in column K", "description": "Value in column K", "details": {"Slug": "column_k", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnK", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column l\nValue in column L", "description": "Value in column L", "details": {"Slug": "column_l", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnL", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column m\nValue in column M", "description": "Value in column M", "details": {"Slug": "column_m", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnM", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column n\nValue in column N", "description": "Value in column N", "details": {"Slug": "column_n", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnN", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column o\nValue in column O", "description": "Value in column O", "details": {"Slug": "column_o", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnO", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column p\nValue in column P", "description": "Value in column P", "details": {"Slug": "column_p", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnP", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column q\nValue in column Q", "description": "Value in column Q", "details": {"Slug": "column_q", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnQ", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column r\nValue in column R", "description": "Value in column R", "details": {"Slug": "column_r", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnR", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column s\nValue in column S", "description": "Value in column S", "details": {"Slug": "column_s", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnS", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column t\nValue in column T", "description": "Value in column T", "details": {"Slug": "column_t", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnT", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column u\nValue in column U", "description": "Value in column U", "details": {"Slug": "column_u", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnU", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column v\nValue in column V", "description": "Value in column V", "details": {"Slug": "column_v", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnV", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column w\nValue in column W", "description": "Value in column W", "details": {"Slug": "column_w", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnW", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column x\nValue in column X", "description": "Value in column X", "details": {"Slug": "column_x", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnX", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column y\nValue in column Y", "description": "Value in column Y", "details": {"Slug": "column_y", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnY", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column z\nValue in column Z", "description": "Value in column Z", "details": {"Slug": "column_z", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnZ", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "毎月、指定した日時に、グループチャットにリマインドを通知します。", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_month_on_the"}, "trigger_details": [{"section": "Trigger fields", "title": "Month day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of the month", "Slug": "month_day", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyMonthOnThe.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "毎日指定した時刻に、今日の天気・最高気温・最低気温を、グループチャットに通知します。", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Trelloの指定したボードに新しいカードが追加された場合、グループチャットに通知します。", "trigger_channel": "Trello", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "trello.card_added_to_board"}, "trigger_details": [{"section": "Trigger fields", "title": "Board\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe title of the card.", "description": "The title of the card.", "details": {"Slug": "title", "Filter code": "Trello.cardAddedToBoard.Title", "Type": "String", "Example": "Book flights"}}, {"section": "Ingredients", "title": "Description\nThe description of the card.", "description": "The description of the card.", "details": {"Slug": "description", "Filter code": "Trello.cardAddedToBoard.Description", "Type": "String", "Example": "Check various airline websites to find the best deal."}}, {"section": "Ingredients", "title": "Creator full name\nThe full name of the member who added the card.", "description": "The full name of the member who added the card.", "details": {"Slug": "creator_name", "Filter code": "Trello.cardAddedToBoard.CreatorFullName", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Creator username\nThe username of the member who added the card.", "description": "The username of the member who added the card.", "details": {"Slug": "creator_username", "Filter code": "Trello.cardAddedToBoard.CreatorUsername", "Type": "String", "Example": "sfjetsetter"}}, {"section": "Ingredients", "title": "List name\nThe name of the list the card was added to.", "description": "The name of the list the card was added to.", "details": {"Slug": "list_name", "Filter code": "Trello.cardAddedToBoard.ListName", "Type": "String", "Example": "To dos"}}, {"section": "Ingredients", "title": "Board name\nThe name of the board the card was added to.", "description": "The name of the board the card was added to.", "details": {"Slug": "board_name", "Filter code": "Trello.cardAddedToBoard.BoardName", "Type": "String", "Example": "New Zealand Trip"}}, {"section": "Ingredients", "title": "Card url\nThe URL to the card.", "description": "The URL to the card.", "details": {"Slug": "url", "Filter code": "Trello.cardAddedToBoard.CardURL", "Type": "Web URL", "Example": "https://trello.com/c/example"}}, {"section": "Ingredients", "title": "Added at\nDate and time the card was added to the board.", "description": "Date and time the card was added to the board.", "details": {"Slug": "added_at", "Filter code": "Trello.cardAddedToBoard.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "ChatWork 公式ブログの更新情報をグループチャットに通知します。", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This Applet sends the BrainyQuote quote of the day to the Telegram chat of your choosing.", "trigger_channel": "BrainyQuote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "brainyquote.today_s_quote"}, "trigger_details": [{"section": "Ingredients", "title": "Source\nThe source of the quote.", "description": "The source of the quote.", "details": {"Slug": "EntryTitle", "Filter code": "Brainyquote.todaySQuote.Source", "Type": "String", "Example": "Voltaire"}}, {"section": "Ingredients", "title": "Quote url\nThe BrainyQuote URL.", "description": "The BrainyQuote URL.", "details": {"Slug": "EntryUrl", "Filter code": "Brainyquote.todaySQuote.QuoteUrl", "Type": "String", "Example": "https://www.brainyquote.com/quotes/authors/f/frank_sinatra.html"}}, {"section": "Ingredients", "title": "Quote\nThe quote, may contain HTML.", "description": "The quote, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Brainyquote.todaySQuote.Quote", "Type": "String", "Example": "\"Je pense, donc je suis\""}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "指定したRSSフィールドの更新情報をグループチャットに通知します。", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "毎日指定した時刻に、明日の天気・最高気温・最低気温を、グループチャットに通知します。", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsWeatherAtTime.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsWeatherAtTime.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsWeatherAtTime.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Dropboxの指定されたフォルダに新しいファイルが追加された場合、グループチャットに通知します。", "trigger_channel": "Dropbox", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dropbox.new_text_file_in_folder"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subfolder name", "Helper text": "Optional", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "FileUrl", "Filter code": "Dropbox.newTextFileInFolder.FileUrl", "Type": "String", "Example": "https://www.dropbox.com/s/qp3cqdjqachyr2x/cool_story.txt"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "Filename", "Filter code": "Dropbox.newTextFileInFolder.Filename", "Type": "String", "Example": "cool_story.txt"}}, {"section": "Ingredients", "title": "Filename no ext\nThe name of the file without extension.", "description": "The name of the file without extension.", "details": {"Slug": "FilenameNoExt", "Filter code": "Dropbox.newTextFileInFolder.FilenameNoExt", "Type": "String", "Example": "cool_story"}}, {"section": "Ingredients", "title": "Modified date\nDate file was created or modified in Dropbox.", "description": "Date file was created or modified in Dropbox.", "details": {"Slug": "ModifiedDate", "Filter code": "Dropbox.newTextFileInFolder.ModifiedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Google ドライブの指定されたフォルダに新しいファイルが追加された場合、グループチャットに通知します。また、キーワードを指定することで、ファイル名にキーワードが含まれる場合だけ通知することも可能です。", "trigger_channel": "Google Drive", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_drive.new_file_from_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Drive folder path", "Helper text": "Format: folders separated by &quot;/&quot; like &quot;Documents/Photos/Receipts&quot;", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search query", "Helper text": "Searches for filenames that match your query.", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "filename", "Filter code": "GoogleDrive.newFileFromSearch.Filename", "Type": "String", "Example": "filename"}}, {"section": "Ingredients", "title": "Path\nThe path of the file.", "description": "The path of the file.", "details": {"Slug": "path", "Filter code": "GoogleDrive.newFileFromSearch.Path", "Type": "String", "Example": "/IFTTT/sample.txt"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "file_url", "Filter code": "GoogleDrive.newFileFromSearch.FileUrl", "Type": "File URL", "Example": "https://google.com"}}, {"section": "Ingredients", "title": "Created at\nDate and time file was created.", "description": "Date and time file was created.", "details": {"Slug": "created_at", "Filter code": "GoogleDrive.newFileFromSearch.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "毎週、指定した曜日の時刻に、グループチャットにタスクを設定します。", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_tasks", "Filter code method": "Chatwork.postTasks.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_tasks\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Helper text": "Select group chat", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Contents\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "contents", "Helper text": "Describe the task", "Slug": "contents", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Limit\nText input > Other", "description": "Text input > Other", "details": {"Label": "days until due date", "Helper text": "Set the due date in days", "Slug": "limit", "Required": "false", "Can have default value": "true", "Filter code method": "Chatwork.postTasks.setLimit(string: limit)"}}, {"section": "Action fields", "title": "To ids\nText input > Other", "description": "Text input > Other", "details": {"Label": "assign to", "Helper text": "Set Chatwork account IDs separated by commas. Enter all to assign everyone", "Slug": "to_ids", "Required": "false", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Post a monthly reminder to Chatwork.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_month_on_the"}, "trigger_details": [{"section": "Trigger fields", "title": "Month day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of the month", "Slug": "month_day", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyMonthOnThe.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "All you have to do is paste in a specific RSS Feed in the field below and select the group chat you want to keep up-to-date with the latest news.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Google カレンダーで、キーワードを含む予定が開始される◯◯分前に、グループチャットにリマインドを通知します。", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.event_from_search_starts"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or phrase", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Offset\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time before event starts", "Helper text": "Specify how much time before the event starts you'd like the Applet to trigger", "Slug": "offset", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.eventFromSearchStarts.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.eventFromSearchStarts.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.eventFromSearchStarts.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.eventFromSearchStarts.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.eventFromSearchStarts.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.eventFromSearchStarts.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.eventFromSearchStarts.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.eventFromSearchStarts.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "When you get a notification from a specific app, the notification will be forwarded to a Telegram chat.", "trigger_channel": "Android Device", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_device.new_notification_from_app"}, "trigger_details": [{"section": "Trigger fields", "title": "App name\nText input", "description": "Text input", "details": {"Label": "App name", "Helper text": "e.g. Twitter", "Slug": "app_name", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by notification keyword", "Helper text": "e.g. mentioned", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Received at\nThe time the notification was received.", "description": "The time the notification was received.", "details": {"Slug": "ReceivedAt", "Filter code": "AndroidDevice.newNotificationFromApp.ReceivedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "App name\nThe application name of the notification", "description": "The application name of the notification", "details": {"Slug": "AppName", "Filter code": "AndroidDevice.newNotificationFromApp.AppName", "Type": "String", "Example": "Twitter"}}, {"section": "Ingredients", "title": "Notification message\nMessage text of the notification", "description": "Message text of the notification", "details": {"Slug": "NotificationMessage", "Filter code": "AndroidDevice.newNotificationFromApp.NotificationMessage", "Type": "String", "Example": "@jamisonross12 oh I love that song by Toto too!"}}, {"section": "Ingredients", "title": "Notification title\nTitle of the notification", "description": "Title of the notification", "details": {"Slug": "NotificationTitle", "Filter code": "AndroidDevice.newNotificationFromApp.NotificationTitle", "Type": "String", "Example": "Mentioned by @MrTibbets"}}, {"section": "Ingredients", "title": "Device name\nThe name of your device where the notification was received.", "description": "The name of your device where the notification was received.", "details": {"Slug": "device_name", "Filter code": "AndroidDevice.newNotificationFromApp.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "Post a daily reminder to Chatwork.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Chatwork", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "chatwork.post_messages", "Filter code method": "Chatwork.postMessages.skip(string?: reason)", "Runtime method": "runAction(\"chatwork.post_messages\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Helper text": "post message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Chatwork.postMessages.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "The Fact Checker is a Washington Post section designed to dig into the data behind the headlines. This Applet will send new articles directly into the Telegram chat of your choice, so you can stay informed.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "This Applet will send the love quote of the day as an SMS from your Android to the phone number you specify. Who says romance is dead? ", "trigger_channel": "BrainyQuote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "brainyquote.love_quotes"}, "trigger_details": [{"section": "Ingredients", "title": "Source\nThe source of the quote.", "description": "The source of the quote.", "details": {"Slug": "EntryTitle", "Filter code": "Brainyquote.loveQuotes.Source", "Type": "String", "Example": "Voltaire"}}, {"section": "Ingredients", "title": "Quote url\nThe BrainyQuote URL.", "description": "The BrainyQuote URL.", "details": {"Slug": "EntryUrl", "Filter code": "Brainyquote.loveQuotes.QuoteUrl", "Type": "String", "Example": "https://www.brainyquote.com/quotes/authors/f/frank_sinatra.html"}}, {"section": "Ingredients", "title": "Quote\nThe quote, may contain HTML.", "description": "The quote, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Brainyquote.loveQuotes.Quote", "Type": "String", "Example": "\"Je pense, donc je suis\""}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "This Applet sends you BrainyQuote's art quote of the day via a push notification from the IFTTT app.", "trigger_channel": "BrainyQuote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "brainyquote.art_quotes"}, "trigger_details": [{"section": "Ingredients", "title": "Source\nThe source of the quote.", "description": "The source of the quote.", "details": {"Slug": "EntryTitle", "Filter code": "Brainyquote.artQuotes.Source", "Type": "String", "Example": "Voltaire"}}, {"section": "Ingredients", "title": "Quote url\nThe BrainyQuote URL.", "description": "The BrainyQuote URL.", "details": {"Slug": "EntryUrl", "Filter code": "Brainyquote.artQuotes.QuoteUrl", "Type": "String", "Example": "https://www.brainyquote.com/quotes/authors/f/frank_sinatra.html"}}, {"section": "Ingredients", "title": "Quote\nThe quote, may contain HTML.", "description": "The quote, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Brainyquote.artQuotes.Quote", "Type": "String", "Example": "\"Je pense, donc je suis\""}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Add a little flair to your daily journals — this Applet will make an entry with the QotD for you. ", "trigger_channel": "BrainyQuote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "brainyquote.today_s_quote"}, "trigger_details": [{"section": "Ingredients", "title": "Source\nThe source of the quote.", "description": "The source of the quote.", "details": {"Slug": "EntryTitle", "Filter code": "Brainyquote.todaySQuote.Source", "Type": "String", "Example": "Voltaire"}}, {"section": "Ingredients", "title": "Quote url\nThe BrainyQuote URL.", "description": "The BrainyQuote URL.", "details": {"Slug": "EntryUrl", "Filter code": "Brainyquote.todaySQuote.QuoteUrl", "Type": "String", "Example": "https://www.brainyquote.com/quotes/authors/f/frank_sinatra.html"}}, {"section": "Ingredients", "title": "Quote\nThe quote, may contain HTML.", "description": "The quote, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Brainyquote.todaySQuote.Quote", "Type": "String", "Example": "\"Je pense, donc je suis\""}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "With a simple tap, secure your home with smanos and enjoy your time away with complete peace of mind.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "smanos connect", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "smanos.arm_away", "Filter code method": "Smanos.armAway.skip(string?: reason)", "Runtime method": "runAction(\"smanos.arm_away\", {})"}, "action_details": [{"section": "Action fields", "title": "Which system\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "which_system", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Uploads a short video to the cloud every hour.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_hour_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Minutes past the hour", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyHourAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Wyze", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wyzecam.upload_alarm_video", "Filter code method": "Wyzecam.uploadAlarmVideo.skip(string?: reason)", "Runtime method": "runAction(\"wyzecam.upload_alarm_video\", {})"}, "action_details": [{"section": "Action fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet will start playing a Sonos favourite when you run a shortcut in Futurehome", "trigger_channel": "Futurehome", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "futurehome.shortcut_run"}, "trigger_details": [{"section": "Trigger fields", "title": "Shortcut\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which shortcut?", "Slug": "shortcut", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Shortcut\nThe name of the shortcut.", "description": "The name of the shortcut.", "details": {"Slug": "shortcut", "Filter code": "Futurehome.shortcutRun.Shortcut", "Type": "String", "Example": "Arm House"}}, {"section": "Ingredients", "title": "Site name\nName of the site the shortcut was triggered in.", "description": "Name of the site the shortcut was triggered in.", "details": {"Slug": "site_name", "Filter code": "Futurehome.shortcutRun.SiteName", "Type": "String", "Example": "Home"}}, {"section": "Ingredients", "title": "Triggered at\nThe time when the shortcut was triggered.", "description": "The time when the shortcut was triggered.", "details": {"Slug": "triggered_at", "Filter code": "Futurehome.shortcutRun.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_favorite", "Filter code method": "Sonos.playFavorite.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_favorite\", {})"}, "action_details": [{"section": "Action fields", "title": "Favorite\nDropdown list", "description": "Dropdown list", "details": {"Label": "What favorite do you want to play?", "Helper text": "Choose a Sonos Favorite", "Slug": "favorite", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playFavorite.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Toggle your Philip Hue lights on and off by pressing the pusher on your Jaguar watch.", "trigger_channel": "Jaguar Watches", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "jaguar_watches.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "JaguarWatches.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "JaguarWatches.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "JaguarWatches.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "JaguarWatches.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "JaguarWatches.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.toggle_all_hue", "Filter code method": "Hue.toggleAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.toggle_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Toss out that noisy alarm clock and set your Nanoleaf Light Panels to Sunrise mode to wake up gently with a simulated sunrise. Choose the Sunrise scene that ships with your Light Panels when asked to specify a scene and device (or create your own!). Pro tip: works best if you wake up in the same room as your Light Panels =)", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.turn_on_scene", "Filter code method": "Nanoleaf.turnOnScene.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.turn_on_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "My scenes\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "my_scenes", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time the temperature drops below the value you provide, a Signal will be sent to your Das Keyboard 5Q.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every day, at 9 PM, close the garage door.\n\nThis applet requires an active account linking subscription.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "MyQ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "myq_devices.close_door", "Filter code method": "MyqDevices.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"myq_devices.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door name\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the door name?", "Slug": "door_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on light switch at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "ecobee", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ecobee.turn_switch_on", "Filter code method": "Ecobee.turnSwitchOn.skip(string?: reason)", "Runtime method": "runAction(\"ecobee.turn_switch_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nDropdown list", "description": "Dropdown list", "details": {"Label": "For which light switch?", "Helper text": "This is the name of the light switch you'd like to turn on.", "Slug": "name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "What's Elon up to? Every Friday you'll get a digest of the latest NY Times reporting on SpaceX. 🖖", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_article_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Term\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "term", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newArticleMatchingSearch.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newArticleMatchingSearch.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.newArticleMatchingSearch.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.newArticleMatchingSearch.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.newArticleMatchingSearch.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Keywords\nA comma separated list of article keywords", "description": "A comma separated list of article keywords", "details": {"Slug": "Keywords", "Filter code": "Nytimes.newArticleMatchingSearch.Keywords", "Type": "String", "Example": "fish, tanks, biology"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.newArticleMatchingSearch.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "This Applet will pause your Roomba® when answering a call.", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.receive_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.receiveAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.receiveAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.receiveAPhoneCall.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.receiveAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.receiveAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.pause_robot", "Filter code method": "Irobot.pauseRobot.skip(string?: reason)", "Runtime method": "runAction(\"irobot.pause_robot\", {})"}, "action_details": [{"section": "Action fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Capture all those great \"on the fly\" blog ideas! Just jot down your note to the notebook of your choice and it'll be in your Wordpress \"Drafts\" folder when you have time to sit down, refine, and publish. ", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "WordPress", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wordpress.create_post_wp", "Filter code method": "Wordpress.createPostWp.skip(string?: reason)", "Runtime method": "runAction(\"wordpress.create_post_wp\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setTitle(string: title)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Helper text": "Some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setBody(string: body)"}}, {"section": "Action fields", "title": "Categories\nText input > Other", "description": "Text input > Other", "details": {"Label": "Categories", "Helper text": "Comma separated", "Slug": "categories", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setCategories(string: categories)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setTags(string: tags)"}}, {"section": "Action fields", "title": "Post status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Post status", "Slug": "post_status", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setPost Status(string: post_status)"}}], "filter_code": NaN}
{"original_description": "Track every time your WeMo switch has been turned on, into a Google Spreadsheet.", "trigger_channel": "WeMo Insight Switch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wemo_insight_switch.attribute_INSIGHTON_N"}, "trigger_details": [{"section": "Trigger fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which insight switch?", "Helper text": "Name of Your WeMo insight switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Switch name\nName of the WeMo switch.", "description": "Name of the WeMo switch.", "details": {"Slug": "device_name", "Filter code": "WemoInsightSwitch.attributeINSIGHTONN.SwitchName", "Type": "String", "Example": "Kitchen switch"}}, {"section": "Ingredients", "title": "Switched on at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "WemoInsightSwitch.attributeINSIGHTONN.SwitchedOnAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "When the smanos security system is armed, your Philip Hue lights will be turned off automatically.", "trigger_channel": "smanos connect", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smanos.tg_arm_away"}, "trigger_details": [{"section": "Trigger fields", "title": "Which system\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "which_system", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created time\ncreated time", "description": "created time", "details": {"Slug": "created_time", "Filter code": "Smanos.tgArmAway.CreatedTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\ndevice name", "description": "device name", "details": {"Slug": "device_name", "Filter code": "Smanos.tgArmAway.DeviceName", "Type": "String", "Example": "device name"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Just pop in the company name you'd like to track, and articles in TC that mention it will be sent straight to your inbox. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item_matches"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or simple phrase", "Helper text": "Search operators are not supported", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItemMatches.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItemMatches.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItemMatches.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItemMatches.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItemMatches.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItemMatches.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItemMatches.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItemMatches.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "A new saved track on Spotify creates a Journal Entry with track information and URL which auto-embeds the player in Day One.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_saved_track"}, "trigger_details": [{"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newSavedTrack.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newSavedTrack.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newSavedTrack.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newSavedTrack.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newSavedTrack.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Saved at\nThe time at which the track was saved.", "description": "The time at which the track was saved.", "details": {"Slug": "saved_at", "Filter code": "Spotify.newSavedTrack.SavedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newSavedTrack.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newSavedTrack.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Any saved/liked tracks will be saved to your journal with album art, embedded player, and URL.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_saved_track"}, "trigger_details": [{"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newSavedTrack.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newSavedTrack.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newSavedTrack.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newSavedTrack.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newSavedTrack.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Saved at\nThe time at which the track was saved.", "description": "The time at which the track was saved.", "details": {"Slug": "saved_at", "Filter code": "Spotify.newSavedTrack.SavedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newSavedTrack.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newSavedTrack.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Entry contains: title, description, link, tags and a photo if available.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "At the time you specify, a new Day One journal will be created with the days weather report.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Log Rides and Runs to a Day One entry with detailed info, and link. (no Photo)", "trigger_channel": "Strava", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "strava.new_activity_by_you"}, "trigger_details": [{"section": "Trigger fields", "title": "Activity type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Slug": "activity_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time the activity was completed.", "description": "Date and time the activity was completed.", "details": {"Slug": "created_at", "Filter code": "Strava.newActivityByYou.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Activity type\nThe type of activity completed.", "description": "The type of activity completed.", "details": {"Slug": "activity_type", "Filter code": "Strava.newActivityByYou.ActivityType", "Type": "String", "Example": "Ride"}}, {"section": "Ingredients", "title": "Name\nThe name of the activity.", "description": "The name of the activity.", "details": {"Slug": "name", "Filter code": "Strava.newActivityByYou.Name", "Type": "String", "Example": "Evening Ride"}}, {"section": "Ingredients", "title": "Distance meters\nDistance moved in meters.", "description": "Distance moved in meters.", "details": {"Slug": "distance", "Filter code": "Strava.newActivityByYou.DistanceMeters", "Type": "String", "Example": "4475.4"}}, {"section": "Ingredients", "title": "Elapsed time\nTotal duration of the activity.", "description": "Total duration of the activity.", "details": {"Slug": "elapsed_time", "Filter code": "Strava.newActivityByYou.ElapsedTime", "Type": "String", "Example": "22 minutes, 13 seconds"}}, {"section": "Ingredients", "title": "Elapsed time in seconds\nTotal duration of the activity in seconds.", "description": "Total duration of the activity in seconds.", "details": {"Slug": "elapsed_time_in_seconds", "Filter code": "Strava.newActivityByYou.ElapsedTimeInSeconds", "Type": "String", "Example": "1333"}}, {"section": "Ingredients", "title": "Link to activity\nThe URL to the activity on Strava.", "description": "The URL to the activity on Strava.", "details": {"Slug": "link_to_activity", "Filter code": "Strava.newActivityByYou.LinkToActivity", "Type": "Web URL", "Example": "http://www.strava.com/activities/144461028"}}, {"section": "Ingredients", "title": "Route map image url\nURL to a map image of the route.", "description": "URL to a map image of the route.", "details": {"Slug": "route_map_image_url", "Filter code": "Strava.newActivityByYou.RouteMapImageUrl", "Type": "Image URL", "Example": "https://maps.googleapis.com/maps/api/staticmap?size=400x400&path=weight:3|color:0xFC4C02FF|enc:{qreFj}bjVZQ"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Automatically save your Instagram photos to Day One. \nNote: This currently only works with single-photo Instagram posts.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Save your completed tasks from Todoist as a new Journal Entry in Day On.", "trigger_channel": "Todoist", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "todoist.new_completed_task"}, "trigger_details": [{"section": "Trigger fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project to watch", "Helper text": "Configure this trigger to fire only when the completed task is in the specified project.", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Task content\nContent of the task.", "description": "Content of the task.", "details": {"Slug": "task_content", "Filter code": "Todoist.newCompletedTask.TaskContent", "Type": "String", "Example": "Pay telephone bill"}}, {"section": "Ingredients", "title": "Task description\nDescription of the task.", "description": "Description of the task.", "details": {"Slug": "task_description", "Filter code": "Todoist.newCompletedTask.TaskDescription", "Type": "String", "Example": "Go to gym website and click renew in account settings"}}, {"section": "Ingredients", "title": "Link to task\nThe URL of the task.", "description": "The URL of the task.", "details": {"Slug": "link_to_task", "Filter code": "Todoist.newCompletedTask.LinkToTask", "Type": "Web URL", "Example": "https://todoist.com/showTask?id=999"}}, {"section": "Ingredients", "title": "Project\nProject to which the task belongs.", "description": "Project to which the task belongs.", "details": {"Slug": "project", "Filter code": "Todoist.newCompletedTask.Project", "Type": "String", "Example": "Household Tasks"}}, {"section": "Ingredients", "title": "Labels\nLabels assigned to the task.", "description": "Labels assigned to the task.", "details": {"Slug": "labels", "Filter code": "Todoist.newCompletedTask.Labels", "Type": "String", "Example": "to_follow_up"}}, {"section": "Ingredients", "title": "Priority\nPriority of the task.", "description": "Priority of the task.", "details": {"Slug": "priority", "Filter code": "Todoist.newCompletedTask.Priority", "Type": "String", "Example": "Priority 1"}}, {"section": "Ingredients", "title": "Completed at\nDate and time the task was completed.", "description": "Date and time the task was completed.", "details": {"Slug": "completed_at", "Filter code": "Todoist.newCompletedTask.CompletedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Due date\nDue date of the task.", "description": "Due date of the task.", "details": {"Slug": "due_date", "Filter code": "Todoist.newCompletedTask.DueDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Section\nSection to which the task belongs (if any).", "description": "Section to which the task belongs (if any).", "details": {"Slug": "section", "Filter code": "Todoist.newCompletedTask.Section", "Type": "String", "Example": "Cleaning tasks"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Any link added to Instapaper creates a new entry in Day One with, title, description, link, and tags.", "trigger_channel": "Instapaper", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instapaper.new_link_saved"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the saved item.", "description": "The title of the saved item.", "details": {"Slug": "title", "Filter code": "Instapaper.newLinkSaved.Title", "Type": "String", "Example": "The Computer for the 21st Century"}}, {"section": "Ingredients", "title": "Description\nThe description of the saved item.", "description": "The description of the saved item.", "details": {"Slug": "description", "Filter code": "Instapaper.newLinkSaved.Description", "Type": "String", "Example": "The most profound technologies are those that disappear. They weave themselves into the fabric of everyday life until they are indistinguishable from it. Consider writing, perhaps the first information..."}}, {"section": "Ingredients", "title": "Url\nThe URL of the saved item.", "description": "The URL of the saved item.", "details": {"Slug": "url", "Filter code": "Instapaper.newLinkSaved.URL", "Type": "Web URL", "Example": "http://www.ubiq.com/hypertext/weiser/SciAmDraft3.html"}}, {"section": "Ingredients", "title": "Created at\nDate and time the item was created.", "description": "Date and time the item was created.", "details": {"Slug": "created_at", "Filter code": "Instapaper.newLinkSaved.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Collect your check-in history to your Day One Journal.", "trigger_channel": "Foursquare", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "foursquare.any_new_checkin"}, "trigger_details": [{"section": "Ingredients", "title": "Shout\nShout (message) associated with check-in.", "description": "Shout (message) associated with check-in.", "details": {"Slug": "Shout", "Filter code": "Foursquare.anyNewCheckin.Shout", "Type": "String", "Example": "Hanging out with my mates!"}}, {"section": "Ingredients", "title": "Venue name", "description": "", "details": {"Slug": "VenueName", "Filter code": "Foursquare.anyNewCheckin.VenueName", "Type": "String", "Example": "Sydney Opera House"}}, {"section": "Ingredients", "title": "Venue url\nThe short URL to the venue's Foursquare page.", "description": "The short URL to the venue's Foursquare page.", "details": {"Slug": "VenueUrl", "Filter code": "Foursquare.anyNewCheckin.VenueUrl", "Type": "String", "Example": "http://4sq.com/67UmdR"}}, {"section": "Ingredients", "title": "Venue map image url\nA URL to a static map image of the venue's location.", "description": "A URL to a static map image of the venue's location.", "details": {"Slug": "VenueMapImageUrl", "Filter code": "Foursquare.anyNewCheckin.VenueMapImageUrl", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=-33.85733737872545,151.21505856513977&zoom=16&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C-33.85733737872545,151.21505856513977"}}, {"section": "Ingredients", "title": "Checkin date\nDate and time you checked in.", "description": "Date and time you checked in.", "details": {"Slug": "CheckinDate", "Filter code": "Foursquare.anyNewCheckin.CheckinDate", "Type": "String", "Example": "November 26, 2013 at 11:01AM"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "When you save a new item to Pocket, this will be added as a task in your Todoist account.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Todoist", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "todoist.create_task", "Filter code method": "Todoist.createTask.skip(string?: reason)", "Runtime method": "runAction(\"todoist.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project and section", "Helper text": "Project and section to which the task belongs", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task content\nText input", "description": "Text input", "details": {"Label": "Task content", "Helper text": "<a href=\"https://todoist.com/help/articles/205195102\" target=\"_blank\">Text formatting guide</a> and <a href=\"https://todoist.com/help/articles/360000029000\" target=\"_blank\">label format guide</a>", "Slug": "task_content", "Required": "true", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Content(string: task_content)"}}, {"section": "Action fields", "title": "Note\nText input > Other", "description": "Text input > Other", "details": {"Label": "Note", "Helper text": "Add additional task note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Due date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task's due date", "Helper text": "Check the <a href=\"https://todoist.com/help/articles/205325931\" target=\"_blank\">Due dates and times format guide</a>", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setDue Date(string: due_date)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Helper text": "Task's priority", "Slug": "priority", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setPriority(string: priority)"}}, {"section": "Action fields", "title": "Task description\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task description", "Helper text": "Task's description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "Includes total time tracked, productive, neutral and distracting, and a link to the full report on RescueTime.", "trigger_channel": "RescueTime", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "rescuetime.daily_summary"}, "trigger_details": [{"section": "Ingredients", "title": "Date\nThe date of the summary.", "description": "The date of the summary.", "details": {"Slug": "date", "Filter code": "Rescuetime.dailySummary.Date", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Date for urls\nA machine readable date that can be used in URLs.", "description": "A machine readable date that can be used in URLs.", "details": {"Slug": "date_for_urls", "Filter code": "Rescuetime.dailySummary.DateForUrls", "Type": "String", "Example": "2015-01-31"}}, {"section": "Ingredients", "title": "Total time\nThe total time logged.", "description": "The total time logged.", "details": {"Slug": "total_time", "Filter code": "Rescuetime.dailySummary.TotalTime", "Type": "String", "Example": "8h 30m"}}, {"section": "Ingredients", "title": "All productive time\nThe total 'productive' and 'very productive' time logged.", "description": "The total 'productive' and 'very productive' time logged.", "details": {"Slug": "all_productive_time", "Filter code": "Rescuetime.dailySummary.AllProductiveTime", "Type": "String", "Example": "3h 30m"}}, {"section": "Ingredients", "title": "Very productive time\nThe total 'very productive' time logged.", "description": "The total 'very productive' time logged.", "details": {"Slug": "very_productive_time", "Filter code": "Rescuetime.dailySummary.VeryProductiveTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Productive time\nThe total 'productive' time logged.", "description": "The total 'productive' time logged.", "details": {"Slug": "productive_time", "Filter code": "Rescuetime.dailySummary.ProductiveTime", "Type": "String", "Example": "3h 30m"}}, {"section": "Ingredients", "title": "Neutral time\nThe total 'neutral' time logged.", "description": "The total 'neutral' time logged.", "details": {"Slug": "neutral_time", "Filter code": "Rescuetime.dailySummary.NeutralTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Distracting time\nThe total 'distracting' time logged.", "description": "The total 'distracting' time logged.", "details": {"Slug": "distracting_time", "Filter code": "Rescuetime.dailySummary.DistractingTime", "Type": "String", "Example": "3h 30m"}}, {"section": "Ingredients", "title": "Very distracting time\nThe total 'very distracting' time logged.", "description": "The total 'very distracting' time logged.", "details": {"Slug": "very_distracting_time", "Filter code": "Rescuetime.dailySummary.VeryDistractingTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "All distracting time\nThe total 'distracting' and 'very distracting' time logged.", "description": "The total 'distracting' and 'very distracting' time logged.", "details": {"Slug": "all_distracting_time", "Filter code": "Rescuetime.dailySummary.AllDistractingTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Uncategorized time\nThe total 'uncategorized' time logged.", "description": "The total 'uncategorized' time logged.", "details": {"Slug": "uncategorized_time", "Filter code": "Rescuetime.dailySummary.UncategorizedTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Business time\nThe total 'business' time logged.", "description": "The total 'business' time logged.", "details": {"Slug": "business_time", "Filter code": "Rescuetime.dailySummary.BusinessTime", "Type": "String", "Example": "3h 30m"}}, {"section": "Ingredients", "title": "Communication and scheduling time\nThe total 'communication and scheduling' time logged.", "description": "The total 'communication and scheduling' time logged.", "details": {"Slug": "communication_and_scheduling_time", "Filter code": "Rescuetime.dailySummary.CommunicationAndSchedulingTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Social networking time\nThe total 'social networking' time logged.", "description": "The total 'social networking' time logged.", "details": {"Slug": "social_networking_time", "Filter code": "Rescuetime.dailySummary.SocialNetworkingTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Design and composition time\nThe total 'design and composition' time logged.", "description": "The total 'design and composition' time logged.", "details": {"Slug": "design_and_composition_time", "Filter code": "Rescuetime.dailySummary.DesignAndCompositionTime", "Type": "String", "Example": "3h 30m"}}, {"section": "Ingredients", "title": "Entertainment time\nThe total 'entertainment' time logged.", "description": "The total 'entertainment' time logged.", "details": {"Slug": "entertainment_time", "Filter code": "Rescuetime.dailySummary.EntertainmentTime", "Type": "String", "Example": "3h 30m"}}, {"section": "Ingredients", "title": "News time\nThe total 'news' time logged.", "description": "The total 'news' time logged.", "details": {"Slug": "news_time", "Filter code": "Rescuetime.dailySummary.NewsTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Software development time\nThe total 'software development' time.", "description": "The total 'software development' time.", "details": {"Slug": "software_development_time", "Filter code": "Rescuetime.dailySummary.SoftwareDevelopmentTime", "Type": "String", "Example": "3h 30m"}}, {"section": "Ingredients", "title": "Reference and learning time\nThe total 'reference and learning' time logged.", "description": "The total 'reference and learning' time logged.", "details": {"Slug": "reference_and_learning_time", "Filter code": "Rescuetime.dailySummary.ReferenceAndLearningTime", "Type": "String", "Example": "3h 30m"}}, {"section": "Ingredients", "title": "Shopping time\nThe total 'shopping' time logged.", "description": "The total 'shopping' time logged.", "details": {"Slug": "shopping_time", "Filter code": "Rescuetime.dailySummary.ShoppingTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Utilities time\nThe total 'utilities' time logged.", "description": "The total 'utilities' time logged.", "details": {"Slug": "utilities_time", "Filter code": "Rescuetime.dailySummary.UtilitiesTime", "Type": "String", "Example": "30m 30s"}}, {"section": "Ingredients", "title": "Productivity pulse\nThe average Productivity score for the day.", "description": "The average Productivity score for the day.", "details": {"Slug": "productivity_pulse", "Filter code": "Rescuetime.dailySummary.ProductivityPulse", "Type": "String", "Example": "85"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "Record Spotify tracks that you save to your Unforgettable Me account.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_saved_track"}, "trigger_details": [{"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newSavedTrack.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newSavedTrack.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newSavedTrack.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newSavedTrack.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newSavedTrack.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Saved at\nThe time at which the track was saved.", "description": "The time at which the track was saved.", "details": {"Slug": "saved_at", "Filter code": "Spotify.newSavedTrack.SavedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newSavedTrack.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newSavedTrack.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "Self explanatory", "trigger_channel": "SoundCloud", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "soundcloud.new_public_favorite_track"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Soundcloud.newPublicFavoriteTrack.Title", "Type": "String", "Example": "A cool track"}}, {"section": "Ingredients", "title": "Description\nThe track's description. May contain HTML.", "description": "The track's description. May contain HTML.", "details": {"Slug": "Description", "Filter code": "Soundcloud.newPublicFavoriteTrack.Description", "Type": "String", "Example": "This track is sweet"}}, {"section": "Ingredients", "title": "Tags\nThe track's tags, comma seperated.", "description": "The track's tags, comma seperated.", "details": {"Slug": "Tags", "Filter code": "Soundcloud.newPublicFavoriteTrack.Tags", "Type": "String", "Example": "killer, noise"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the tracks's Soundcloud page.", "description": "The URL to the tracks's Soundcloud page.", "details": {"Slug": "TrackUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.TrackUrl", "Type": "String", "Example": "http://soundcloud.com/ribbonmusic/john-maus-believer"}}, {"section": "Ingredients", "title": "Username\nThe name of the user who uploaded the track.", "description": "The name of the user who uploaded the track.", "details": {"Slug": "Username", "Filter code": "Soundcloud.newPublicFavoriteTrack.Username", "Type": "String", "Example": "gaga"}}, {"section": "Ingredients", "title": "User profile url\nThe URL to the profile of the user who uploaded the track.", "description": "The URL to the profile of the user who uploaded the track.", "details": {"Slug": "UserProfileUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.UserProfileUrl", "Type": "String", "Example": "http://soundcloud.com/gaga-digi"}}, {"section": "Ingredients", "title": "Image url\nURL to the track's image file.", "description": "URL to the track's image file.", "details": {"Slug": "ImageUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.ImageUrl", "Type": "String", "Example": "http://i1.sndcdn.com/artworks-000006560516-1730pb-large.jpg"}}, {"section": "Ingredients", "title": "Embed code\nHTML embed code for this track.", "description": "HTML embed code for this track.", "details": {"Slug": "EmbedCode", "Filter code": "Soundcloud.newPublicFavoriteTrack.EmbedCode", "Type": "String", "Example": "<object height='81' width='100%'> <param name='movie'..."}}, {"section": "Ingredients", "title": "Created at\nDate and time the track was uploaded.", "description": "Date and time the track was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "Soundcloud.newPublicFavoriteTrack.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "TrackId", "Filter code": "Soundcloud.newPublicFavoriteTrack.TrackId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "User\nThe ID of the user who uploaded the track.", "description": "The ID of the user who uploaded the track.", "details": {"Slug": "UserId", "Filter code": "Soundcloud.newPublicFavoriteTrack.UserId", "Type": "String", "Example": "123"}}], "action_channel": "put.io", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "putio.new_transfer", "Filter code method": "Putio.newTransfer.skip(string?: reason)", "Runtime method": "runAction(\"putio.new_transfer\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Other", "description": "Text input > Other", "details": {"Label": "What URL?", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Putio.newTransfer.setUrl(string: url)"}}, {"section": "Action fields", "title": "Folder\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which folder ID?", "Helper text": "File will be downloaded into this folder. Folder ID can be found in the address bar when the folder is open in your browser. If the folder with given ID does not exist, the files will be downloaded into your default download folder.", "Slug": "folder_id", "Required": "false", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "This Applet will change the color of your hue lights to match the dominant colors found in the cover art image of the show you last saved on Spotify.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_saved_show"}, "trigger_details": [{"section": "Ingredients", "title": "Show name\nThe name of the show.", "description": "The name of the show.", "details": {"Slug": "show_name", "Filter code": "Spotify.newSavedShow.ShowName", "Type": "String", "Example": "Darknet Diaries"}}, {"section": "Ingredients", "title": "Show description\nThe description of the show.", "description": "The description of the show.", "details": {"Slug": "show_description", "Filter code": "Spotify.newSavedShow.ShowDescription", "Type": "String", "Example": "Explore the dark side of the Internet with host Jack Rhysider as he takes you on a journey through the chilling world of privacy hacks, data breaches, and cyber crime. The masterful criminal hackers who dwell on the dark side show us just how vulnerable w"}}, {"section": "Ingredients", "title": "Show url\nThe URL to the show on Spotify.", "description": "The URL to the show on Spotify.", "details": {"Slug": "show_url", "Filter code": "Spotify.newSavedShow.ShowUrl", "Type": "Web URL", "Example": "https://open.spotify.com/show/4XPl3uEEL9hvqMkoZrzbx5"}}, {"section": "Ingredients", "title": "Show cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "show_cover_url", "Filter code": "Spotify.newSavedShow.ShowCoverUrl", "Type": "Image URL", "Example": "https://i.scdn.co/image/53ba2adaaf2d3e47898aed9edb64026145032e7b"}}, {"section": "Ingredients", "title": "Saved at\nThe time at which the show was saved.", "description": "The time at which the show was saved.", "details": {"Slug": "saved_at", "Filter code": "Spotify.newSavedShow.SavedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Show\nThe show's ID.", "description": "The show's ID.", "details": {"Slug": "show_id", "Filter code": "Spotify.newSavedShow.ShowId", "Type": "String", "Example": "123"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_from_image_all_hue", "Filter code method": "Hue.setColorFromImageAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_from_image_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Color mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color mode", "Slug": "color_mode", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorFromImageAllHue.setColor Mode(string: color_mode)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image_url", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorFromImageAllHue.setImage Url(string: image_url)"}}, {"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time a new file is saved in the specified Dropbox folder, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Dropbox", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dropbox.new_text_file_in_folder"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subfolder name", "Helper text": "Optional", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "FileUrl", "Filter code": "Dropbox.newTextFileInFolder.FileUrl", "Type": "String", "Example": "https://www.dropbox.com/s/qp3cqdjqachyr2x/cool_story.txt"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "Filename", "Filter code": "Dropbox.newTextFileInFolder.Filename", "Type": "String", "Example": "cool_story.txt"}}, {"section": "Ingredients", "title": "Filename no ext\nThe name of the file without extension.", "description": "The name of the file without extension.", "details": {"Slug": "FilenameNoExt", "Filter code": "Dropbox.newTextFileInFolder.FilenameNoExt", "Type": "String", "Example": "cool_story"}}, {"section": "Ingredients", "title": "Modified date\nDate file was created or modified in Dropbox.", "description": "Date file was created or modified in Dropbox.", "details": {"Slug": "ModifiedDate", "Filter code": "Dropbox.newTextFileInFolder.ModifiedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever you post a new photo on Instagram, a copy will be saved to a folder in Dropbox. Note: only works for single photo posts.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "An entry is saved with title, description, and URL.", "trigger_channel": "Instapaper", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instapaper.new_liked_item"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the liked item.", "description": "The title of the liked item.", "details": {"Slug": "title", "Filter code": "Instapaper.newLikedItem.Title", "Type": "String", "Example": "The Computer for the 21st Century"}}, {"section": "Ingredients", "title": "Description\nThe description of the liked item.", "description": "The description of the liked item.", "details": {"Slug": "description", "Filter code": "Instapaper.newLikedItem.Description", "Type": "String", "Example": "The most profound technologies are those that disappear. They weave themselves into the fabric of everyday life until they are indistinguishable from it. Consider writing, perhaps the first information..."}}, {"section": "Ingredients", "title": "Url\nThe URL of the liked item.", "description": "The URL of the liked item.", "details": {"Slug": "url", "Filter code": "Instapaper.newLikedItem.URL", "Type": "Web URL", "Example": "http://www.ubiq.com/hypertext/weiser/SciAmDraft3.html"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Instapaper.newLikedItem.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Day One", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "day_one.create_journal_entry", "Filter code method": "DayOne.createJournalEntry.skip(string?: reason)", "Runtime method": "runAction(\"day_one.create_journal_entry\", {})"}, "action_details": [{"section": "Action fields", "title": "Journal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Journal?", "Helper text": "Select a specific Journal. New Journals must be created in the Day One app.", "Slug": "journal_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "Add plain text and Markdown, HTML will be stripped.", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setBody(string: body)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated, spaces are ok.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setTags(string: tags)"}}, {"section": "Action fields", "title": "Latitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Latitude", "Helper text": "The latitude of the entry location.", "Slug": "latitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Longitude\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Longitude", "Helper text": "The longitude of the entry location.", "Slug": "longitude", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Placename\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Place Name", "Helper text": "The name of the entry location.", "Slug": "placename", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Image\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image", "Required": "false", "Can have default value": "true", "Filter code method": "DayOne.createJournalEntry.setImage(string: image)"}}], "filter_code": NaN}
{"original_description": "When you mark some item as favorite in Pocket, it will be automatically saved to Raindrop.io collection", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_favorite_item_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newFavoriteItemPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newFavoriteItemPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newFavoriteItemPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newFavoriteItemPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newFavoriteItemPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newFavoriteItemPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Raindrop.io", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "raindrop.raindrop", "Filter code method": "Raindrop.raindrop.skip(string?: reason)", "Runtime method": "runAction(\"raindrop.raindrop\", {})"}, "action_details": [{"section": "Action fields", "title": "Link\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "link", "Required": "true", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setLink(string: link)"}}, {"section": "Action fields", "title": "Collectionid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Collection", "Slug": "collectionId", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setTitle(string: title)"}}, {"section": "Action fields", "title": "Note\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Note", "Slug": "note", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Excerpt\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Description", "Slug": "excerpt", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setExcerpt(string: excerpt)"}}, {"section": "Action fields", "title": "Cover\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Slug": "cover", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setCover(string: cover)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Single or multiple separated by comma", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setTags(string: tags)"}}, {"section": "Action fields", "title": "Created\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Creation date", "Slug": "created", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setCreated(string: created)"}}], "filter_code": NaN}
{"original_description": "Whenever you post a new photo on Instagram, a copy will be saved to a folder in your Google Drive. Auto-pic archive! ", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Google Drive", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_drive.upload_file_from_url_google_drive", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.skip(string?: reason)", "Runtime method": "runAction(\"google_drive.upload_file_from_url_google_drive\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with uploadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Record to Unforgettable Me any new item saved to pocket ", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "The spreadsheet is saved in a folder called \"Buffer\" in your Google Drive and will automatically track every single new post created in Buffer.", "trigger_channel": "Buffer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "buffer.new_status_item_buffer"}, "trigger_details": [{"section": "Ingredients", "title": "Text\nThe text of the posts, including any links.", "description": "The text of the posts, including any links.", "details": {"Slug": "Text", "Filter code": "Buffer.newStatusItemBuffer.Text", "Type": "String", "Example": "Having a sandwich"}}, {"section": "Ingredients", "title": "First link url\nThe first link included in the post.", "description": "The first link included in the post.", "details": {"Slug": "FirstLinkUrl", "Filter code": "Buffer.newStatusItemBuffer.FirstLinkUrl", "Type": "String", "Example": "http://wadesabout.tumblr.com/"}}, {"section": "Ingredients", "title": "Due at\nDate and time the post is scheduled to go out.", "description": "Date and time the post is scheduled to go out.", "details": {"Slug": "DueAt", "Filter code": "Buffer.newStatusItemBuffer.DueAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Created at\nDate and time the post was added to Buffer.", "description": "Date and time the post was added to Buffer.", "details": {"Slug": "CreatedAt", "Filter code": "Buffer.newStatusItemBuffer.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "It's easy to automatically backup your Facebook Page photos! For any new photo uploaded by you, a copy will be saved in a Dropbox folder.", "trigger_channel": "Facebook Pages", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "facebook_pages.new_photo_from_page"}, "trigger_details": [{"section": "Ingredients", "title": "Page name\nYour Facebook Page's name.", "description": "Your Facebook Page's name.", "details": {"Slug": "PageName", "Filter code": "FacebookPages.newPhotoFromPage.PageName", "Type": "String", "Example": "The ifttt Office"}}, {"section": "Ingredients", "title": "Link\nThe link to the photo's FacebookPages page, may be private.", "description": "The link to the photo's FacebookPages page, may be private.", "details": {"Slug": "Link", "Filter code": "FacebookPages.newPhotoFromPage.Link", "Type": "String", "Example": "http://www.facebook.com/#!/photo.php?pid=33943077&id=7302486"}}, {"section": "Ingredients", "title": "Image source\nThe URL to the full sized version of the photo itself.", "description": "The URL to the full sized version of the photo itself.", "details": {"Slug": "ImageSource", "Filter code": "FacebookPages.newPhotoFromPage.ImageSource", "Type": "String", "Example": "http://sphotos.ak.fbcdn.net/hphotos-ak-snc1/hs229.snc1/7634_567487423564_7302486_33943077_6068537_n.jpg"}}, {"section": "Ingredients", "title": "Caption\nThe photo's caption.", "description": "The photo's caption.", "details": {"Slug": "Caption", "Filter code": "FacebookPages.newPhotoFromPage.Caption", "Type": "String", "Example": "Wow what a fun night!"}}, {"section": "Ingredients", "title": "Created at\nDate and time photo was uploaded.", "description": "Date and time photo was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "FacebookPages.newPhotoFromPage.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Page url\nThe link to the main Facebook Page.", "description": "The link to the main Facebook Page.", "details": {"Slug": "PageUrl", "Filter code": "FacebookPages.newPhotoFromPage.PageUrl", "Type": "String", "Example": "http://www.facebook.com/pages/The-ifttt-office/108073145941483"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Save the hourly average of your device's readings directly to a Google Spreadsheet. Every hour, when a new average of the past 60 minutes of readings is available for your device, it will be automatically saved to a spreadsheet.", "trigger_channel": "Kaiterra", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kaiterra.laseregg_aqi"}, "trigger_details": [{"section": "Trigger fields", "title": "Device udid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device do you want to monitor?", "Slug": "device_udid", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Kaiterra.lasereggAqi.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Aqi\nCurrent AQI", "description": "Current AQI", "details": {"Slug": "aqi", "Filter code": "Kaiterra.lasereggAqi.Aqi", "Type": "String", "Example": "10"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Save all of your device's readings directly to a Google Spreadsheet! Whenever new readings are available for your device, they will be automatically saved to a spreadsheet.", "trigger_channel": "Kaiterra", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kaiterra.laseregg_aqi"}, "trigger_details": [{"section": "Trigger fields", "title": "Device udid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device do you want to monitor?", "Slug": "device_udid", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Kaiterra.lasereggAqi.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Aqi\nCurrent AQI", "description": "Current AQI", "details": {"Slug": "aqi", "Filter code": "Kaiterra.lasereggAqi.Aqi", "Type": "String", "Example": "10"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Every morning you will receive a simple weather report notification at 7 AM. Keep in mind this Applet requires the IFTTT app.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Never be left in the dark. Whenever the sun starts to set, your Philips Hue bulbs will automatically turn on. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Each day at the time that you choose below, this Applet will mute your Android device. Don't forget to unmute it in the morning!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.mute_device", "Filter code method": "AndroidDevice.muteDevice.skip(string?: reason)", "Runtime method": "runAction(\"android_device.mute_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Vibrate\nDropdown list", "description": "Dropdown list", "details": {"Label": "Vibrate", "Slug": "vibrate", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.muteDevice.setVibrate(string: vibrate)"}}], "filter_code": NaN}
{"original_description": "This Applet will save your Flickr photos in one place.", "trigger_channel": "Flickr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flickr.any_new_public_photo"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Flickr.anyNewPublicPhoto.Title", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Description\nOptional photo description.", "description": "Optional photo description.", "details": {"Slug": "Description", "Filter code": "Flickr.anyNewPublicPhoto.Description", "Type": "String", "Example": "Taken at my birthday party!"}}, {"section": "Ingredients", "title": "Flickr url\nThe long URL to the photo's Flickr page.", "description": "The long URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrl", "Filter code": "Flickr.anyNewPublicPhoto.FlickrUrl", "Type": "String", "Example": "http://www.flickr.com/photos/sh4de/5197127926/"}}, {"section": "Ingredients", "title": "Flickr url short\nThe shortened URL to the photo's Flickr page.", "description": "The shortened URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrlShort", "Filter code": "Flickr.anyNewPublicPhoto.FlickrUrlShort", "Type": "String", "Example": "http://flic.kr/p/4mdhBE"}}, {"section": "Ingredients", "title": "Source url\nURL to the largest available flickr image file.", "description": "URL to the largest available flickr image file.", "details": {"Slug": "SourceUrl", "Filter code": "Flickr.anyNewPublicPhoto.SourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Original source url\nURL to the orginal image file if available.", "description": "URL to the orginal image file if available.", "details": {"Slug": "OriginalSourceUrl", "Filter code": "Flickr.anyNewPublicPhoto.OriginalSourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Uploaded date\nDate and time the photo was uploaded.", "description": "Date and time the photo was uploaded.", "details": {"Slug": "UploadedDate", "Filter code": "Flickr.anyNewPublicPhoto.UploadedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Taken date\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "TakenDate", "Filter code": "Flickr.anyNewPublicPhoto.TakenDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Tags\nTags added to the photo.", "description": "Tags added to the photo.", "details": {"Slug": "Tags", "Filter code": "Flickr.anyNewPublicPhoto.Tags", "Type": "String", "Example": "baby, pumpkin"}}], "action_channel": "Google Drive", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_drive.upload_file_from_url_google_drive", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.skip(string?: reason)", "Runtime method": "runAction(\"google_drive.upload_file_from_url_google_drive\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with uploadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This Applet will turn your WeMo Light Switch on at sunset every day.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsOnDiscrete", "Filter code method": "WemoLightSwitch.attributeLsOnDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsOnDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo light switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Keep your Facebook Page fresh and up-to-date with your latest Instagram photos. The pictures will be uploaded to an album called Instagram Photos.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Facebook Pages", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "facebook_pages.create_photo_page", "Filter code method": "FacebookPages.createPhotoPage.skip(string?: reason)", "Runtime method": "runAction(\"facebook_pages.create_photo_page\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setMessage(string: message)"}}, {"section": "Action fields", "title": "Album\nText input > Other", "description": "Text input > Other", "details": {"Label": "Album name", "Helper text": "Provide the name of an existing album, or leave blank for no album. If a non-existent album name is provided, you'll receive <a href=\"https://help.ifttt.com/hc/en-us/articles/5343334604187\" target=\"_blank\">this error</a>", "Slug": "album", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setAlbum(string: album)"}}], "filter_code": NaN}
{"original_description": "Like a track on Soundcloud to add it to your Spotify My Music collection (subject to track availability; this will add the first search result to your Spotify library).", "trigger_channel": "SoundCloud", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "soundcloud.new_public_favorite_track"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Soundcloud.newPublicFavoriteTrack.Title", "Type": "String", "Example": "A cool track"}}, {"section": "Ingredients", "title": "Description\nThe track's description. May contain HTML.", "description": "The track's description. May contain HTML.", "details": {"Slug": "Description", "Filter code": "Soundcloud.newPublicFavoriteTrack.Description", "Type": "String", "Example": "This track is sweet"}}, {"section": "Ingredients", "title": "Tags\nThe track's tags, comma seperated.", "description": "The track's tags, comma seperated.", "details": {"Slug": "Tags", "Filter code": "Soundcloud.newPublicFavoriteTrack.Tags", "Type": "String", "Example": "killer, noise"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the tracks's Soundcloud page.", "description": "The URL to the tracks's Soundcloud page.", "details": {"Slug": "TrackUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.TrackUrl", "Type": "String", "Example": "http://soundcloud.com/ribbonmusic/john-maus-believer"}}, {"section": "Ingredients", "title": "Username\nThe name of the user who uploaded the track.", "description": "The name of the user who uploaded the track.", "details": {"Slug": "Username", "Filter code": "Soundcloud.newPublicFavoriteTrack.Username", "Type": "String", "Example": "gaga"}}, {"section": "Ingredients", "title": "User profile url\nThe URL to the profile of the user who uploaded the track.", "description": "The URL to the profile of the user who uploaded the track.", "details": {"Slug": "UserProfileUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.UserProfileUrl", "Type": "String", "Example": "http://soundcloud.com/gaga-digi"}}, {"section": "Ingredients", "title": "Image url\nURL to the track's image file.", "description": "URL to the track's image file.", "details": {"Slug": "ImageUrl", "Filter code": "Soundcloud.newPublicFavoriteTrack.ImageUrl", "Type": "String", "Example": "http://i1.sndcdn.com/artworks-000006560516-1730pb-large.jpg"}}, {"section": "Ingredients", "title": "Embed code\nHTML embed code for this track.", "description": "HTML embed code for this track.", "details": {"Slug": "EmbedCode", "Filter code": "Soundcloud.newPublicFavoriteTrack.EmbedCode", "Type": "String", "Example": "<object height='81' width='100%'> <param name='movie'..."}}, {"section": "Ingredients", "title": "Created at\nDate and time the track was uploaded.", "description": "Date and time the track was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "Soundcloud.newPublicFavoriteTrack.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "TrackId", "Filter code": "Soundcloud.newPublicFavoriteTrack.TrackId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "User\nThe ID of the user who uploaded the track.", "description": "The ID of the user who uploaded the track.", "details": {"Slug": "UserId", "Filter code": "Soundcloud.newPublicFavoriteTrack.UserId", "Type": "String", "Example": "123"}}], "action_channel": "Spotify", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "spotify.save_a_track", "Filter code method": "Spotify.saveATrack.skip(string?: reason)", "Runtime method": "runAction(\"spotify.save_a_track\", {})"}, "action_details": [{"section": "Action fields", "title": "Search query\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Search query", "Helper text": "For maximum accuracy, include the song title here and the artist name in the &quot;Artist name&quot; field", "Slug": "search_query", "Required": "true", "Can have default value": "true", "Filter code method": "Spotify.saveATrack.setSearch Query(string: search_query)"}}, {"section": "Action fields", "title": "Artist name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Artist name", "Helper text": "Optional", "Slug": "artist_name", "Required": "false", "Can have default value": "true", "Filter code method": "Spotify.saveATrack.setArtist Name(string: artist_name)"}}], "filter_code": NaN}
{"original_description": "Never be left in the dark. Whenever the sun starts to set, your Philips Hue bulbs will automatically turn on. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Select what time and day you want a simple phone call and this Applet will deliver it for you, right on time.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "VoIP Calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "voip_calls.call_my_device", "Filter code method": "VoipCalls.callMyDevice.skip(string?: reason)", "Runtime method": "runAction(\"voip_calls.call_my_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Voice message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "VoipCalls.callMyDevice.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Automatically backup your Tumblr photos. For any photo you post, a copy will be uploaded in a Dropbox folder.", "trigger_channel": "Tumblr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tumblr.new_photo_post"}, "trigger_details": [{"section": "Trigger fields", "title": "Tumblelog\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tumblelog", "Helper text": "Enter the tumblelog name that this trigger should fire for", "Slug": "tumblelog", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Post body text\nThe post's body (text only)", "description": "The post's body (text only)", "details": {"Slug": "post_body_text", "Filter code": "Tumblr.newPhotoPost.PostBodyText", "Type": "String", "Example": "This is the body of a post. Neat."}}, {"section": "Ingredients", "title": "Url\nThe post URL", "description": "The post URL", "details": {"Slug": "url", "Filter code": "Tumblr.newPhotoPost.Url", "Type": "Web URL", "Example": "https://staff.tumblr.com/post/659803739627094017"}}, {"section": "Ingredients", "title": "Post body html\nThe post's body (HTML)", "description": "The post's body (HTML)", "details": {"Slug": "post_body_html", "Filter code": "Tumblr.newPhotoPost.PostBodyHtml", "Type": "String", "Example": "<figure class=\"tmblr-full\"><img src=\"https://64.media.tumblr.com/a-photo.jpg\"></figure><p>This is an HTML body.</p>"}}, {"section": "Ingredients", "title": "Thumbnail url\nThe thumbnail image URL for the post", "description": "The thumbnail image URL for the post", "details": {"Slug": "thumbnail_url", "Filter code": "Tumblr.newPhotoPost.ThumbnailUrl", "Type": "Web URL", "Example": "https://64.media.tumblr.com/a18c8063bf9d095d99f12b51d3dd1eda/57803298a6ae7123-0a/s1280x1920/fb2fce67958156e2231da15522ddb6850e1559ff.gifv"}}, {"section": "Ingredients", "title": "Full image url\nThe full size image URL", "description": "The full size image URL", "details": {"Slug": "full_image_url", "Filter code": "Tumblr.newPhotoPost.FullImageUrl", "Type": "Image URL", "Example": "https://64.media.tumblr.com/fd654c32f041cb02c757b5646c1cf9e1/a4c5782524284f82-d5/s1280x1920/8e97caae5a975889b3e170e42ea064b68410300a.jpg"}}, {"section": "Ingredients", "title": "Post tags\nThe post's tags", "description": "The post's tags", "details": {"Slug": "post_tags", "Filter code": "Tumblr.newPhotoPost.PostTags", "Type": "String", "Example": "Sky,Earth,Wind,Fire"}}, {"section": "Ingredients", "title": "Post\nThe ID of the post that has been created", "description": "The ID of the post that has been created", "details": {"Slug": "post_id", "Filter code": "Tumblr.newPhotoPost.PostId", "Type": "String", "Example": "123456789"}}, {"section": "Ingredients", "title": "Tumblelog\nThe name of the Tumblelog that published the post", "description": "The name of the Tumblelog that published the post", "details": {"Slug": "tumblelog", "Filter code": "Tumblr.newPhotoPost.Tumblelog", "Type": "String", "Example": "staff"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Tumblr.newPhotoPost.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This Applet will attempt to close your garage door or gate every night. If the garage door is already closed, it will remain closed.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "GarageWiFi & Gates", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garagewifi.close_door", "Filter code method": "Garagewifi.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"garagewifi.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Applet will send a mobile notification from the IFTTT app for every new entry in the RSS Feed you copy/paste in the field below. The notification will open the IFTTT app where you can then click through to the new article.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "When the Automower® change status, information about the status will be recorded in a Google spreadsheet.", "trigger_channel": "Husqvarna Automower®", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "automower.automower_newstatus"}, "trigger_details": [{"section": "Trigger fields", "title": "Automower\nDropdown list", "description": "Dropdown list", "details": {"Label": "Automower", "Slug": "automower", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Automower\nName of your mower", "description": "Name of your mower", "details": {"Slug": "automower", "Filter code": "Automower.automowerNewstatus.Automower", "Type": "String", "Example": "Apollo"}}, {"section": "Ingredients", "title": "Status\nCurrent status", "description": "Current status", "details": {"Slug": "status", "Filter code": "Automower.automowerNewstatus.Status", "Type": "String", "Example": "MOWING"}}, {"section": "Ingredients", "title": "Message\nText describing the status.", "description": "Text describing the status.", "details": {"Slug": "message", "Filter code": "Automower.automowerNewstatus.Message", "Type": "String", "Example": "Your Automower needs your help in the lawn."}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Automower.automowerNewstatus.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Timestamp\nTimestamp", "description": "Timestamp", "details": {"Slug": "timestamp", "Filter code": "Automower.automowerNewstatus.Timestamp", "Type": "String", "Example": "1548251631750"}}, {"section": "Ingredients", "title": "Latitude\nLatitude for Automower location", "description": "Latitude for Automower location", "details": {"Slug": "latitude", "Filter code": "Automower.automowerNewstatus.Latitude", "Type": "String", "Example": "57.7907083"}}, {"section": "Ingredients", "title": "Longitude\nLongitude for Automower location", "description": "Longitude for Automower location", "details": {"Slug": "longitude", "Filter code": "Automower.automowerNewstatus.Longitude", "Type": "String", "Example": "14.28353"}}, {"section": "Ingredients", "title": "Google maps url\nLink to Google maps with a pin on the location of Automower", "description": "Link to Google maps with a pin on the location of Automower", "details": {"Slug": "google_maps_url", "Filter code": "Automower.automowerNewstatus.GoogleMapsUrl", "Type": "String", "Example": "https://www.google.com/maps/search/?api=1&query=57.7907083,14.28353"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This Applet will blink your Hue lights when Roomba® completes a cleaning job", "trigger_channel": "iRobot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "irobot.mission_report"}, "trigger_details": [{"section": "Trigger fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Square footage\nSquare Footage of the job.", "description": "Square Footage of the job.", "details": {"Slug": "square_footage", "Filter code": "Irobot.missionReport.SquareFootage", "Type": "String", "Example": "975"}}, {"section": "Ingredients", "title": "Timestamp\nTime the job completed.", "description": "Time the job completed.", "details": {"Slug": "iso_timestamp", "Filter code": "Irobot.missionReport.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Start time\nThe time the job started.", "description": "The time the job started.", "details": {"Slug": "start_time", "Filter code": "Irobot.missionReport.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Minutes running\nThe number of minutes the robot spent running.", "description": "The number of minutes the robot spent running.", "details": {"Slug": "minutes_cleaning", "Filter code": "Irobot.missionReport.MinutesRunning", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Minutes paused\nThe number of minutes the robot spent paused.", "description": "The number of minutes the robot spent paused.", "details": {"Slug": "minutes_paused", "Filter code": "Irobot.missionReport.MinutesPaused", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Minutes charging\nThe number of minutes the robot spent charging.", "description": "The number of minutes the robot spent charging.", "details": {"Slug": "minutes_charging", "Filter code": "Irobot.missionReport.MinutesCharging", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Dirt detect events\nThe number of dirt detect events in the job.", "description": "The number of dirt detect events in the job.", "details": {"Slug": "dirt_detect_events", "Filter code": "Irobot.missionReport.DirtDetectEvents", "Type": "String", "Example": "2"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This will automatically turn on the WiZ light(s) of your choice a few minutes before Sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "When the sun sets, your WeMo switch will turn on. A great way to automatically control your lights.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WeMo Smart Plug", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_switch.attribute_socketOnOffDiscrete", "Filter code method": "WemoSwitch.attributeSocketOnOffDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_switch.attribute_socketOnOffDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Helper text": "Name of your WeMo switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Sync your systems: this Applet will transform your new notes to Trello cards on the board and list you specify.", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Trello", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "trello.create_card", "Filter code method": "Trello.createCard.skip(string?: reason)", "Runtime method": "runAction(\"trello.create_card\", {})"}, "action_details": [{"section": "Action fields", "title": "Board\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "List name\nText input > Other", "description": "Text input > Other", "details": {"Label": "List name", "Helper text": "We'll create a new list if one with this name doesn't exist", "Slug": "list_name", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setList Name(string: list_name)"}}, {"section": "Action fields", "title": "Pos\nDropdown list", "description": "Dropdown list", "details": {"Label": "Position", "Slug": "pos", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setPos(string: pos)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setTitle(string: title)"}}, {"section": "Action fields", "title": "Description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setDescription(string: description)"}}, {"section": "Action fields", "title": "Members\nText input > Other", "description": "Text input > Other", "details": {"Label": "Assign members", "Helper text": "Optional comma separated list of @usernames to assign to card", "Slug": "members", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setMembers(string: members)"}}, {"section": "Action fields", "title": "Labels\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Apply labels", "Helper text": "Optional comma separated list of label names — labels that do not exist on the board will be ignored", "Slug": "labels", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setLabels(string: labels)"}}, {"section": "Action fields", "title": "Url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Attachment URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Save new items from Pocket to Raindrop.io.\nTags will be the same +IFTTT, Pocket", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Raindrop.io", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "raindrop.raindrop", "Filter code method": "Raindrop.raindrop.skip(string?: reason)", "Runtime method": "runAction(\"raindrop.raindrop\", {})"}, "action_details": [{"section": "Action fields", "title": "Link\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "link", "Required": "true", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setLink(string: link)"}}, {"section": "Action fields", "title": "Collectionid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Collection", "Slug": "collectionId", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setTitle(string: title)"}}, {"section": "Action fields", "title": "Note\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Note", "Slug": "note", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Excerpt\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Description", "Slug": "excerpt", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setExcerpt(string: excerpt)"}}, {"section": "Action fields", "title": "Cover\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Slug": "cover", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setCover(string: cover)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Single or multiple separated by comma", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setTags(string: tags)"}}, {"section": "Action fields", "title": "Created\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Creation date", "Slug": "created", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setCreated(string: created)"}}], "filter_code": NaN}
{"original_description": "This applet will mute your phone every time you get into bed. Once muted, your phone will notify you with a quick vibration. Works with Android only.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.mute_device", "Filter code method": "AndroidDevice.muteDevice.skip(string?: reason)", "Runtime method": "runAction(\"android_device.mute_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Vibrate\nDropdown list", "description": "Dropdown list", "details": {"Label": "Vibrate", "Slug": "vibrate", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.muteDevice.setVibrate(string: vibrate)"}}], "filter_code": NaN}
{"original_description": "Add the #hashtag you choose to the caption your next Instagram post and this Applet will upload the photo to a Facebook Page. Note: only works for single photo posts.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_photo_by_you_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newPhotoByYouTagged.Caption", "Type": "String", "Example": "A cool photo #tbt #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the specified tag", "description": "The caption without the specified tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newPhotoByYouTagged.CaptionNoTag", "Type": "String", "Example": "A cool photo #IFTTT"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.newPhotoByYouTagged.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.newPhotoByYouTagged.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newPhotoByYouTagged.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newPhotoByYouTagged.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Facebook Pages", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "facebook_pages.create_photo_page", "Filter code method": "FacebookPages.createPhotoPage.skip(string?: reason)", "Runtime method": "runAction(\"facebook_pages.create_photo_page\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setMessage(string: message)"}}, {"section": "Action fields", "title": "Album\nText input > Other", "description": "Text input > Other", "details": {"Label": "Album name", "Helper text": "Provide the name of an existing album, or leave blank for no album. If a non-existent album name is provided, you'll receive <a href=\"https://help.ifttt.com/hc/en-us/articles/5343334604187\" target=\"_blank\">this error</a>", "Slug": "album", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setAlbum(string: album)"}}], "filter_code": NaN}
{"original_description": "This will automatically turn off the WiZ light(s) of your choice a few minutes before Sunrise.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_off", "Filter code method": "Wiz.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "Select the lights you want to turn off.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time Withings Sleep detects you get into bed, the time will be logged in a Google Spreadsheet. ", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This will arm your SkylinkNet every night by midnight. ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "SkylinkNet", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "skylinknet.alarm", "Filter code method": "Skylinknet.alarm.skip(string?: reason)", "Runtime method": "runAction(\"skylinknet.alarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Hub\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Hub?", "Slug": "hub_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Key\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hub Password", "Slug": "key", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Alarm\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Mode?", "Slug": "alarm", "Required": "true", "Can have default value": "true", "Filter code method": "Skylinknet.alarm.setAlarm(string: alarm)"}}], "filter_code": NaN}
{"original_description": "Whenever you get a new follower on Twitch, your LIFX lights will blink!", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.new_follower_on_your_channel"}, "trigger_details": [{"section": "Ingredients", "title": "Followed at\nDate and time the user followed your Channel.", "description": "Date and time the user followed your Channel.", "details": {"Slug": "created_at", "Filter code": "Twitch.newFollowerOnYourChannel.FollowedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Follower name\nThe name of the user who followed your channel.", "description": "The name of the user who followed your channel.", "details": {"Slug": "follower_name", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerName", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Follower bio\nThe bio of the user that followed you.", "description": "The bio of the user that followed you.", "details": {"Slug": "follower_bio", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerBio", "Type": "String", "Example": "A gaming fanatic from Boston."}}, {"section": "Ingredients", "title": "Follower url\nA url to the follower's profile on Twitch.", "description": "A url to the follower's profile on Twitch.", "details": {"Slug": "follower_url", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Follower count\nThe number of followers of your channel.", "description": "The number of followers of your channel.", "details": {"Slug": "follower_count", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerCount", "Type": "String", "Example": "215780"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.blink", "Filter code method": "Lifx.blink.skip(string?: reason)", "Runtime method": "runAction(\"lifx.blink\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Number of blinks\nDropdown list", "description": "Dropdown list", "details": {"Label": "Number of blinks", "Slug": "number_of_blinks", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.blink.setNumber Of Blinks(string: number_of_blinks)"}}, {"section": "Action fields", "title": "Blink if off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on first?", "Helper text": "&quot;Yes&quot; will make your lights blink, even when they are turned off in the app.", "Slug": "blink_if_off", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.blink.setBlink If Off(string: blink_if_off)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: green saturation:0.2; number_of_blinks: 6&quot; for 6 pale green blinks. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.blink.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Just pick your time and this Applet will send you a helpful daily notification. 💊  Yum. ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Never touch that dial again — when the temperature dips, this Applet will fire up your Nest. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": NaN}
{"original_description": "Every time Withings Sleep detects you get out of bed, the time will be logged in a Google Spreadsheet.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This Applet will attempt to close your garage door or gate every night. If the garage door is already closed, it will remain closed.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Gogogate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "gogogate.close_door", "Filter code method": "Gogogate.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"gogogate.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever you add a file in your specified Dropbox folder, this applet will automatically download that file to your QNAP Device", "trigger_channel": "Dropbox", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dropbox.new_text_file_in_folder"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subfolder name", "Helper text": "Optional", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "File url\nThe file's public URL.", "description": "The file's public URL.", "details": {"Slug": "FileUrl", "Filter code": "Dropbox.newTextFileInFolder.FileUrl", "Type": "String", "Example": "https://www.dropbox.com/s/qp3cqdjqachyr2x/cool_story.txt"}}, {"section": "Ingredients", "title": "Filename\nThe name of the file.", "description": "The name of the file.", "details": {"Slug": "Filename", "Filter code": "Dropbox.newTextFileInFolder.Filename", "Type": "String", "Example": "cool_story.txt"}}, {"section": "Ingredients", "title": "Filename no ext\nThe name of the file without extension.", "description": "The name of the file without extension.", "details": {"Slug": "FilenameNoExt", "Filter code": "Dropbox.newTextFileInFolder.FilenameNoExt", "Type": "String", "Example": "cool_story"}}, {"section": "Ingredients", "title": "Modified date\nDate file was created or modified in Dropbox.", "description": "Date file was created or modified in Dropbox.", "details": {"Slug": "ModifiedDate", "Filter code": "Dropbox.newTextFileInFolder.ModifiedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": NaN}
{"original_description": "When you send #partymode to @IFTTT in Telegram, your Hue lights will start a color loop.", "trigger_channel": "Telegram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "telegram.new_group_text_filter"}, "trigger_details": [{"section": "Trigger fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which group?", "Helper text": "You can use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot to <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">connect new groups</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Filter\nText input", "description": "Text input", "details": {"Label": "Key phrase", "Helper text": "Any #hashtag or keyword. The Trigger fires when anyone sends a message with the command /ifttt and the key phrase to the group.", "Slug": "filter", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Reply text\nText input > Other", "description": "Text input > Other", "details": {"Label": "What to send as a reply?", "Helper text": "The bot will reply to the command with this text. Leave blank for a standard message.", "Slug": "reply_text", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was triggered.", "description": "Date and time event was triggered.", "details": {"Slug": "created_at", "Filter code": "Telegram.newGroupTextFilter.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Group title\nThe title of the group.", "description": "The title of the group.", "details": {"Slug": "group_title", "Filter code": "Telegram.newGroupTextFilter.GroupTitle", "Type": "String", "Example": "Bot News Group"}}, {"section": "Ingredients", "title": "Author name\nThe name of the author who triggered the Applet.", "description": "The name of the author who triggered the Applet.", "details": {"Slug": "author_name", "Filter code": "Telegram.newGroupTextFilter.AuthorName", "Type": "String", "Example": "Pavel Durov"}}, {"section": "Ingredients", "title": "Author username\nAuthor username, when available.", "description": "Author username, when available.", "details": {"Slug": "author_username", "Filter code": "Telegram.newGroupTextFilter.AuthorUsername", "Type": "String", "Example": "durov"}}, {"section": "Ingredients", "title": "Text\nRepresents a plain-text message contents. Does not include the 'Key phrase'.", "description": "Represents a plain-text message contents. Does not include the 'Key phrase'.", "details": {"Slug": "text", "Filter code": "Telegram.newGroupTextFilter.Text", "Type": "String", "Example": "Hello world!"}}, {"section": "Ingredients", "title": "Html\nRepresents HTML-formatted message contents.", "description": "Represents HTML-formatted message contents.", "details": {"Slug": "html", "Filter code": "Telegram.newGroupTextFilter.HTML", "Type": "String", "Example": "Hello <b>world</b>.<br/>This string <i>can</i> contain <pre>some</pre> HTML <code>tags</code>."}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "Your Hue lights will automatically change to the color of your choice every weekday at the time of your choosing.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "This Applet will add all new notes in a notebook as a new doc in a folder under IFTTT/Evernote in your Drive. ", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Google Docs", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_docs.create_google_doc", "Filter code method": "GoogleDocs.createGoogleDoc.skip(string?: reason)", "Runtime method": "runAction(\"google_docs.create_google_doc\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "Document name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.createGoogleDoc.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Content", "Helper text": "Some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.createGoogleDoc.setBody(string: body)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: folders separated by &quot;/&quot; like &quot;Documents/Photos/Receipts&quot; (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDocs.createGoogleDoc.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Let the party begin! If your weather station registers noise above a certain threshold it will activate a color loop for your Philips Hue lights.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.noise-rises-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target noise level", "Helper text": "In decibels (dB)", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured noise level\nThe measured noise level in decibels", "description": "The measured noise level in decibels", "details": {"Slug": "MeasuredNoiseLevel", "Filter code": "Netatmo.noiseRisesAbove.MeasuredNoiseLevel", "Type": "String", "Example": "73"}}, {"section": "Ingredients", "title": "Target noise level\nThe target noise level in decibels", "description": "The target noise level in decibels", "details": {"Slug": "TargetNoiseLevel", "Filter code": "Netatmo.noiseRisesAbove.TargetNoiseLevel", "Type": "String", "Example": "53"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.noiseRisesAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the noise", "description": "This is the name of the Netamo device where you are reading the noise", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.noiseRisesAbove.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "This Applet will add the closing price for the stock of your choice to a spreadsheet in your Google Drive. Remember: if you analyze the data, crack the code and figure out how to make big $$$ — we get a cut! 🤑", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.price_at_close_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Helper text": "Supported exchanges include NYSE, NASDAQ, and AMEX", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.priceAtCloseStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.priceAtCloseStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last trade price of the stock.", "description": "The last trade price of the stock.", "details": {"Slug": "Price", "Filter code": "Finance.priceAtCloseStocks.Price", "Type": "String", "Example": "603.7"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.priceAtCloseStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Date\nThe date of the last trade.", "description": "The date of the last trade.", "details": {"Slug": "Date", "Filter code": "Finance.priceAtCloseStocks.Date", "Type": "String", "Example": "September 05, 2014"}}], "action_channel": "Google Docs", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_docs.append_to_google_doc", "Filter code method": "GoogleDocs.appendToGoogleDoc.skip(string?: reason)", "Runtime method": "runAction(\"google_docs.append_to_google_doc\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "Document name", "Helper text": "Will create a new file if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Content", "Helper text": "some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setBody(string: body)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This Applet will turn on or off your BroadLink device when the sun sets in your area.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "BroadLink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "broadlink.powerState", "Filter code method": "Broadlink.powerState.skip(string?: reason)", "Runtime method": "runAction(\"broadlink.powerState\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Powercontrol changepowerstate string\nDropdown list", "description": "Dropdown list", "details": {"Label": "On or off?", "Slug": "PowerControl_ChangePowerState_string", "Required": "true", "Can have default value": "true", "Filter code method": "Broadlink.powerState.setPower Control Change Power State String(string: PowerControl_ChangePowerState_string)"}}], "filter_code": NaN}
{"original_description": "Just pick the board and the list, and when a card is added in Trello, a corresponding task will be created in Todoist automatically. Get. More. Done!", "trigger_channel": "Trello", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "trello.card_added_to_list"}, "trigger_details": [{"section": "Trigger fields", "title": "Board\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "List name\nText input", "description": "Text input", "details": {"Label": "List name", "Helper text": "Type a list name as it appears in your Trello board", "Slug": "list_name", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe title of the card.", "description": "The title of the card.", "details": {"Slug": "title", "Filter code": "Trello.cardAddedToList.Title", "Type": "String", "Example": "Book flights"}}, {"section": "Ingredients", "title": "Description\nThe description of the card.", "description": "The description of the card.", "details": {"Slug": "description", "Filter code": "Trello.cardAddedToList.Description", "Type": "String", "Example": "Check various airline websites to find the best deal."}}, {"section": "Ingredients", "title": "Creator full name\nThe full name of the member who added the card.", "description": "The full name of the member who added the card.", "details": {"Slug": "creator_name", "Filter code": "Trello.cardAddedToList.CreatorFullName", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Creator username\nThe username of the member who added the card.", "description": "The username of the member who added the card.", "details": {"Slug": "creator_username", "Filter code": "Trello.cardAddedToList.CreatorUsername", "Type": "String", "Example": "sfjetsetter"}}, {"section": "Ingredients", "title": "List name\nThe name of the list the card was added to.", "description": "The name of the list the card was added to.", "details": {"Slug": "list_name", "Filter code": "Trello.cardAddedToList.ListName", "Type": "String", "Example": "To dos"}}, {"section": "Ingredients", "title": "Board name\nThe name of the board the card was added to.", "description": "The name of the board the card was added to.", "details": {"Slug": "board_name", "Filter code": "Trello.cardAddedToList.BoardName", "Type": "String", "Example": "New Zealand Trip"}}, {"section": "Ingredients", "title": "Card url\nThe URL to the card.", "description": "The URL to the card.", "details": {"Slug": "url", "Filter code": "Trello.cardAddedToList.CardURL", "Type": "Web URL", "Example": "https://trello.com/c/example"}}, {"section": "Ingredients", "title": "Added at\nDate and time the card was added to the list.", "description": "Date and time the card was added to the list.", "details": {"Slug": "added_at", "Filter code": "Trello.cardAddedToList.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Todoist", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "todoist.create_task", "Filter code method": "Todoist.createTask.skip(string?: reason)", "Runtime method": "runAction(\"todoist.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project and section", "Helper text": "Project and section to which the task belongs", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task content\nText input", "description": "Text input", "details": {"Label": "Task content", "Helper text": "<a href=\"https://todoist.com/help/articles/205195102\" target=\"_blank\">Text formatting guide</a> and <a href=\"https://todoist.com/help/articles/360000029000\" target=\"_blank\">label format guide</a>", "Slug": "task_content", "Required": "true", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Content(string: task_content)"}}, {"section": "Action fields", "title": "Note\nText input > Other", "description": "Text input > Other", "details": {"Label": "Note", "Helper text": "Add additional task note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Due date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task's due date", "Helper text": "Check the <a href=\"https://todoist.com/help/articles/205325931\" target=\"_blank\">Due dates and times format guide</a>", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setDue Date(string: due_date)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Helper text": "Task's priority", "Slug": "priority", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setPriority(string: priority)"}}, {"section": "Action fields", "title": "Task description\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task description", "Helper text": "Task's description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "Create your own email newsletter from any RSS Feed URL you paste in the field below. This Applet will send you an email for every new entry that a feed adds.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "Every new Instagram photo you post will be automatically added to your Buffer Queue!", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Buffer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "buffer.add_to_buffer_with_photo", "Filter code method": "Buffer.addToBufferWithPhoto.skip(string?: reason)", "Runtime method": "runAction(\"buffer.add_to_buffer_with_photo\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBufferWithPhoto.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Description", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBufferWithPhoto.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This applet will turn up the volume on your Sonos speaker when your robot starts cleaning. ", "trigger_channel": "iRobot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "irobot.robot_start"}, "trigger_details": [{"section": "Trigger fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nTime the robot started.", "description": "Time the robot started.", "details": {"Slug": "iso_timestamp", "Filter code": "Irobot.robotStart.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.increase_volume", "Filter code method": "Sonos.increaseVolume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.increase_volume\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to change the volume?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Change volume for this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.increaseVolume.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Looking for another perspective? CD is the largest English-language paper circulating in China. This Applet will send a roundup of their world news articles to your inbox every Tuesday morning.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Every Saturday morning this Applet will send you one email digest of the latest articles published by the Harvard Business Review", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Your coffee machine with Home Connect will turn on and run the rinsing program when you press the Button widget.\n", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_on", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Let nature do the heating for you — when the temperature outside hits your sweet spot, your Nest will automatically equalize. You can set the specifics when you turn on the Applet. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": NaN}
{"original_description": "Trippy, glitchy, beautiful, weird — or all of the above. This Applet will send you a daily email with the latest GIFs tagged \"digital art.\" ", "trigger_channel": "Giphy", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "giphy.search"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Url\nURL to this gif on Giphy", "description": "URL to this gif on Giphy", "details": {"Slug": "url", "Filter code": "Giphy.search.URL", "Type": "Web URL", "Example": "http://giphy.com/posts/dreams-are-real-and-best-with-cats"}}, {"section": "Ingredients", "title": "Image url\nURL to the gif's image if one exists", "description": "URL to the gif's image if one exists", "details": {"Slug": "image_url", "Filter code": "Giphy.search.ImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/9WsTM8zLbys4o/giphy.gif"}}, {"section": "Ingredients", "title": "Tumblr image url\nGIF image URL for posting GIFs on tumblr.", "description": "GIF image URL for posting GIFs on tumblr.", "details": {"Slug": "tumblr_image_url", "Filter code": "Giphy.search.TumblrImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/QT3k4ZWD6XOaA/giphy-tumblr.gif"}}, {"section": "Ingredients", "title": "Email html\nHTML to include an in-line GIF in the body of an email.", "description": "HTML to include an in-line GIF in the body of an email.", "details": {"Slug": "email_html", "Filter code": "Giphy.search.EmailHTML", "Type": "String", "Example": "<a href=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif><img src=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif border='0'/></a><br />via <a href=http://giphy.com/gifs/vhp0BocGjkVjO>giphy.com</a>"}}, {"section": "Ingredients", "title": "Embed code\nIFrame embed code of gif", "description": "IFrame embed code of gif", "details": {"Slug": "embed_code", "Filter code": "Giphy.search.EmbedCode", "Type": "String", "Example": "<iframe src=\"//giphy.com/embed/PfquFkRaRAv5u\" width=\"500\" height=\"391\" frameBorder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"}}, {"section": "Ingredients", "title": "Tags\nNewline separate string of tags of this gif", "description": "Newline separate string of tags of this gif", "details": {"Slug": "tags", "Filter code": "Giphy.search.Tags", "Type": "String", "Example": "cats party"}}, {"section": "Ingredients", "title": "Created date\nDate and time when this gif was created", "description": "Date and time when this gif was created", "details": {"Slug": "created_date", "Filter code": "Giphy.search.CreatedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "When your Android device's battery drops below 15%, you will get a text notification as a reminder to plug it in.", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_low"}, "trigger_details": [{"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryLow.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device's battery became low.", "description": "The time the device's battery became low.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryLow.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryLow.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "Perfect for adding to a playlist while the party is going — the color loop will let everyone know a new jam is in the mix. 🎉  GET HYPE! ", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_track_added_to_playlist"}, "trigger_details": [{"section": "Trigger fields", "title": "Playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which playlist?", "Helper text": "Only the first 50 playlists shown at <a href=\"https://open.spotify.com/\" target=\"_blank\">open.spotify.com</a> will be displayed here. You can click and drag playlists to reorder them", "Slug": "playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Playlist name\nThe name of the playlist.", "description": "The name of the playlist.", "details": {"Slug": "playlist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.PlaylistName", "Type": "String", "Example": "Mid-2000s Jamz"}}, {"section": "Ingredients", "title": "Added by\nThe name of the user that added this track to the playlist.", "description": "The name of the user that added this track to the playlist.", "details": {"Slug": "added_by", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedBy", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Added at\nThe time at which the track was added to the playlist.", "description": "The time at which the track was added to the playlist.", "details": {"Slug": "added_at", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "Twitch alert! The Hue light you select will turn purple when the channel you choose starts streaming. ", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "When an abode door or window equipped with a sensor is opened, Arlo will record a video clip.", "trigger_channel": "abode", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "abode.door_opened"}, "trigger_details": [{"section": "Trigger fields", "title": "Select door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select door", "Slug": "select_door", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Abode.doorOpened.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Door name\nName of door which is opened.", "description": "Name of door which is opened.", "details": {"Slug": "name", "Filter code": "Abode.doorOpened.DoorName", "Type": "String", "Example": "Door Name"}}], "action_channel": "Arlo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "arlo.record", "Filter code method": "Arlo.record.skip(string?: reason)", "Runtime method": "runAction(\"arlo.record\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "How long?", "Helper text": "How long Arlo will record in seconds.", "Slug": "duration", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Sync your Soundcloud favorites with your Spotify saves. When an artist you follow adds a new public track, this Applet will search the title on Spotify. If it finds it, it'll add it to Your Music. ", "trigger_channel": "SoundCloud", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "soundcloud.following_new_public_track"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Soundcloud.followingNewPublicTrack.Title", "Type": "String", "Example": "A cool track"}}, {"section": "Ingredients", "title": "Description\nThe track's description. May contain HTML.", "description": "The track's description. May contain HTML.", "details": {"Slug": "Description", "Filter code": "Soundcloud.followingNewPublicTrack.Description", "Type": "String", "Example": "This track is sweet"}}, {"section": "Ingredients", "title": "Tags\nThe track's tags, comma seperated.", "description": "The track's tags, comma seperated.", "details": {"Slug": "Tags", "Filter code": "Soundcloud.followingNewPublicTrack.Tags", "Type": "String", "Example": "killer, noise"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the tracks's Soundcloud page.", "description": "The URL to the tracks's Soundcloud page.", "details": {"Slug": "TrackUrl", "Filter code": "Soundcloud.followingNewPublicTrack.TrackUrl", "Type": "String", "Example": "http://soundcloud.com/ribbonmusic/john-maus-believer"}}, {"section": "Ingredients", "title": "Username\nThe name of the user who uploaded the track.", "description": "The name of the user who uploaded the track.", "details": {"Slug": "Username", "Filter code": "Soundcloud.followingNewPublicTrack.Username", "Type": "String", "Example": "gaga"}}, {"section": "Ingredients", "title": "User profile url\nThe URL to the profile of the user who uploaded the track.", "description": "The URL to the profile of the user who uploaded the track.", "details": {"Slug": "UserProfileUrl", "Filter code": "Soundcloud.followingNewPublicTrack.UserProfileUrl", "Type": "String", "Example": "http://soundcloud.com/gaga-digi"}}, {"section": "Ingredients", "title": "Image url\nURL to the track's image file.", "description": "URL to the track's image file.", "details": {"Slug": "ImageUrl", "Filter code": "Soundcloud.followingNewPublicTrack.ImageUrl", "Type": "String", "Example": "http://i1.sndcdn.com/artworks-000006560516-1730pb-large.jpg"}}, {"section": "Ingredients", "title": "Embed code\nHTML embed code for this track.", "description": "HTML embed code for this track.", "details": {"Slug": "EmbedCode", "Filter code": "Soundcloud.followingNewPublicTrack.EmbedCode", "Type": "String", "Example": "<object height='81' width='100%'> <param name='movie'..."}}, {"section": "Ingredients", "title": "Created at\nDate and time the track was uploaded.", "description": "Date and time the track was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "Soundcloud.followingNewPublicTrack.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "TrackId", "Filter code": "Soundcloud.followingNewPublicTrack.TrackId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "User\nThe ID of the user who uploaded the track.", "description": "The ID of the user who uploaded the track.", "details": {"Slug": "UserId", "Filter code": "Soundcloud.followingNewPublicTrack.UserId", "Type": "String", "Example": "123"}}], "action_channel": "Spotify", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "spotify.save_a_track", "Filter code method": "Spotify.saveATrack.skip(string?: reason)", "Runtime method": "runAction(\"spotify.save_a_track\", {})"}, "action_details": [{"section": "Action fields", "title": "Search query\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Search query", "Helper text": "For maximum accuracy, include the song title here and the artist name in the &quot;Artist name&quot; field", "Slug": "search_query", "Required": "true", "Can have default value": "true", "Filter code method": "Spotify.saveATrack.setSearch Query(string: search_query)"}}, {"section": "Action fields", "title": "Artist name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Artist name", "Helper text": "Optional", "Slug": "artist_name", "Required": "false", "Can have default value": "true", "Filter code method": "Spotify.saveATrack.setArtist Name(string: artist_name)"}}], "filter_code": NaN}
{"original_description": "You will get your daily weather and temperature (in °C) report on your Triby. You will be able to choose the time of day.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Invoxia Triby", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "invoxia_triby.send_an_image_to_specified_triby", "Filter code method": "InvoxiaTriby.sendAnImageToSpecifiedTriby.skip(string?: reason)", "Runtime method": "runAction(\"invoxia_triby.send_an_image_to_specified_triby\", {})"}, "action_details": [{"section": "Action fields", "title": "Triby\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Triby IO?", "Slug": "triby", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "What image URL?", "Helper text": "This has to be the URL of an image file (png, jpeg, bmp).", "Slug": "image_url", "Required": "true", "Can have default value": "true", "Filter code method": "InvoxiaTriby.sendAnImageToSpecifiedTriby.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Your coffee machine will turn on and run the rinsing program every morning at a specified day and time of the week.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_on", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When you post an Instagram with a specific hashtag (you choose what!), the photo and caption will be published on your Wordpress blog. Fancy!", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_photo_by_you_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newPhotoByYouTagged.Caption", "Type": "String", "Example": "A cool photo #tbt #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the specified tag", "description": "The caption without the specified tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newPhotoByYouTagged.CaptionNoTag", "Type": "String", "Example": "A cool photo #IFTTT"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.newPhotoByYouTagged.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.newPhotoByYouTagged.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newPhotoByYouTagged.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newPhotoByYouTagged.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "WordPress", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wordpress.create_photo_post_wp", "Filter code method": "Wordpress.createPhotoPostWp.skip(string?: reason)", "Runtime method": "runAction(\"wordpress.create_photo_post_wp\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setTitle(string: title)"}}, {"section": "Action fields", "title": "Source url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "source_url", "Required": "true", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setSource Url(string: source_url)"}}, {"section": "Action fields", "title": "Caption\nText input", "description": "Text input", "details": {"Label": "Caption", "Helper text": "Optional", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setCaption(string: caption)"}}, {"section": "Action fields", "title": "Categories\nText input > Other", "description": "Text input > Other", "details": {"Label": "Categories", "Helper text": "Comma separated", "Slug": "categories", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setCategories(string: categories)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setTags(string: tags)"}}, {"section": "Action fields", "title": "Post status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Post status", "Slug": "post_status", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setPost Status(string: post_status)"}}], "filter_code": NaN}
{"original_description": "Whenever you upload a video on Instagram, this applet will automatically download that video to the QNAP Device", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_video_by_you_instagram"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewVideoByYouInstagram.Caption", "Type": "String", "Example": "A cool video"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the video's Instagram page.", "description": "The short URL to the video's Instagram page.", "details": {"Slug": "URL", "Filter code": "Instagram.anyNewVideoByYouInstagram.URL", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Video source url\nURL to the video file.", "description": "URL to the video file.", "details": {"Slug": "VideoSourceURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.VideoSourceURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4"}}, {"section": "Ingredients", "title": "Image thumbnail url\nURL to the video's thumbnail image.", "description": "URL to the video's thumbnail image.", "details": {"Slug": "ImageThumbnailURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.ImageThumbnailURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the video was taken.", "description": "Date and time the video was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewVideoByYouInstagram.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the video.", "description": "The HTML embed code for the video.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewVideoByYouInstagram.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": NaN}
{"original_description": "This Applet will make sure you're not leaving your porch or garden lights on longer than necessary", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Futurehome", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "futurehome.power_off", "Filter code method": "Futurehome.powerOff.skip(string?: reason)", "Runtime method": "runAction(\"futurehome.power_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet will allow you to turn on your outside light whenever the sun sets", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Futurehome", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "futurehome.power_on", "Filter code method": "Futurehome.powerOn.skip(string?: reason)", "Runtime method": "runAction(\"futurehome.power_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every Saturday morning this Applet will send you one email digest of the latest articles published by the Harvard Business Review", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "This Applet will turn on or off your BroadLink device when the sun rises in your area.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "BroadLink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "broadlink.powerState", "Filter code method": "Broadlink.powerState.skip(string?: reason)", "Runtime method": "runAction(\"broadlink.powerState\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Powercontrol changepowerstate string\nDropdown list", "description": "Dropdown list", "details": {"Label": "On or off?", "Slug": "PowerControl_ChangePowerState_string", "Required": "true", "Can have default value": "true", "Filter code method": "Broadlink.powerState.setPower Control Change Power State String(string: PowerControl_ChangePowerState_string)"}}], "filter_code": NaN}
{"original_description": "Within 15 minutes of your locations sunset a LightwaveRF dimmer of your choice will switch on", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "LightwaveRF Lighting", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lightwaverf_lighting.switch_on_light", "Filter code method": "LightwaverfLighting.switchOnLight.skip(string?: reason)", "Runtime method": "runAction(\"lightwaverf_lighting.switch_on_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Which light\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Light?", "Slug": "which_light", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time  your Android phone's battery is low, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_low"}, "trigger_details": [{"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryLow.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device's battery became low.", "description": "The time the device's battery became low.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryLow.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryLow.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This will turn on the WiZ lights of your choice everyday at a given time. You can select the mode and brightness.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "This Applet will bundle up the week's Longreads posts and send you a digest of them every Saturday at 7am. (The digest includes the full posts. Only want links? Try this Applet instead: https://ift.tt/2yAD0Pi)", "trigger_channel": "Longreads", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "longreads.any_new_post_on_longreads"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Longreads.anyNewPostOnLongreads.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Longreads.anyNewPostOnLongreads.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Longreads.anyNewPostOnLongreads.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Longreads.anyNewPostOnLongreads.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Longreads.anyNewPostOnLongreads.EntryImageUrl", "Type": "String", "Example": "https://longreadsblog.files.wordpress.com/2018/06/26474-books-origjpg.jpg?w=320&amp;h=483"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Longreads.anyNewPostOnLongreads.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "When the sun sets, your eWeLink 4 Channels Switch will turn on or off.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.switches3_action", "Filter code method": "Ewelink.switches3Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.switches3_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Switches3 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 3-Channel Switch?", "Slug": "switches3_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Switches3 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "switches3_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "The Institute for Legislative Action (ILA) is the lobbying arm of the National Rifle Association. This Applet will send you an email every Monday morning with their latest news.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "A key on your Das Keyboard will change color when temperature outside is above a certain value.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever you upload a photo on Instagram, this applet will automatically download that photo to a specific folder on the QNAP device", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": NaN}
{"original_description": "Every day, a Signal will be sent to your Das Keyboard with the daily weather report.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When your Android battery drops below 15%, your Nanoleaf Aurora will change color to remind you to plug it in and charge. Red by default.", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_low"}, "trigger_details": [{"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryLow.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device's battery became low.", "description": "The time the device's battery became low.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryLow.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryLow.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.change_color_request", "Filter code method": "Nanoleaf.changeColorRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.change_color_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "Set the color value in hex (00FF00) or by name (Green). The hash (#) is not required for hex value input.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.changeColorRequest.setValue(string: value)"}}], "filter_code": NaN}
{"original_description": "This Applet will send a reminder 2 days before the end of the month to the Slack channel of your choice, making sure everyone knows to get their receipts in!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_month_on_the"}, "trigger_details": [{"section": "Trigger fields", "title": "Month day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of the month", "Slug": "month_day", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyMonthOnThe.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "The air conditioner will be set to your preset temperature every day at the time you set.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "BroadLink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "broadlink.fixedTargetTemperature", "Filter code method": "Broadlink.fixedTargetTemperature.skip(string?: reason)", "Runtime method": "runAction(\"broadlink.fixedTargetTemperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Thermostatcontrol setfixedtargettemperature num\nDropdown list", "description": "Dropdown list", "details": {"Label": "What temperature?", "Helper text": "temperature", "Slug": "ThermostatControl_SetFixedTargetTemperature_num", "Required": "true", "Can have default value": "true", "Filter code method": "Broadlink.fixedTargetTemperature.setThermostat Control Set Fixed Target Temperature Num(string: ThermostatControl_SetFixedTargetTemperature_num)"}}], "filter_code": NaN}
{"original_description": "Choose the subreddit when you set up the Applet. Your new blog posts will automatically be submitted to the Reddit community you choose as a link post. Sit back, and wait for the upvotes...", "trigger_channel": "WordPress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wordpress.any_new_post_wp"}, "trigger_details": [{"section": "Ingredients", "title": "Post title\nThe post's title.", "description": "The post's title.", "details": {"Slug": "PostTitle", "Filter code": "Wordpress.anyNewPostWp.PostTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Post url\nThe post's URL.", "description": "The post's URL.", "details": {"Slug": "PostUrl", "Filter code": "Wordpress.anyNewPostWp.PostUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Post content\nThe post's content, may contain HTML.", "description": "The post's content, may contain HTML.", "details": {"Slug": "PostContent", "Filter code": "Wordpress.anyNewPostWp.PostContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Post image url\nURL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the post. If the post doesn't have an image will point to a placeholder image.", "details": {"Slug": "PostImageUrl", "Filter code": "Wordpress.anyNewPostWp.PostImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Tags and categories\nThe post's tags and categories, comma seperated.", "description": "The post's tags and categories, comma seperated.", "details": {"Slug": "TagsAndCategories", "Filter code": "Wordpress.anyNewPostWp.TagsAndCategories", "Type": "String", "Example": "neato, really cool"}}, {"section": "Ingredients", "title": "Post published\nDate post was created", "description": "Date post was created", "details": {"Slug": "PostPublished", "Filter code": "Wordpress.anyNewPostWp.PostPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Reddit", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "reddit.submit_link_reddit", "Filter code method": "Reddit.submitLinkReddit.skip(string?: reason)", "Runtime method": "runAction(\"reddit.submit_link_reddit\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "Reddit.submitLinkReddit.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Slug": "link", "Required": "true", "Can have default value": "true", "Filter code method": "Reddit.submitLinkReddit.setLink(string: link)"}}, {"section": "Action fields", "title": "Subreddit\nText input > Other", "description": "Text input > Other", "details": {"Label": "Subreddit", "Helper text": "e.g. worldnews", "Slug": "subreddit", "Required": "true", "Can have default value": "true", "Filter code method": "Reddit.submitLinkReddit.setSubreddit(string: subreddit)"}}], "filter_code": NaN}
{"original_description": "Message the @IFTTT bot on Telegram with #color followed by the desired color name or CSS hex color value. E.g. '#color blue' or '#color #f0c080'.   If no matching color is found, lights will turn to white.", "trigger_channel": "Telegram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "telegram.new_group_text_filter"}, "trigger_details": [{"section": "Trigger fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which group?", "Helper text": "You can use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot to <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">connect new groups</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Filter\nText input", "description": "Text input", "details": {"Label": "Key phrase", "Helper text": "Any #hashtag or keyword. The Trigger fires when anyone sends a message with the command /ifttt and the key phrase to the group.", "Slug": "filter", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Reply text\nText input > Other", "description": "Text input > Other", "details": {"Label": "What to send as a reply?", "Helper text": "The bot will reply to the command with this text. Leave blank for a standard message.", "Slug": "reply_text", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was triggered.", "description": "Date and time event was triggered.", "details": {"Slug": "created_at", "Filter code": "Telegram.newGroupTextFilter.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Group title\nThe title of the group.", "description": "The title of the group.", "details": {"Slug": "group_title", "Filter code": "Telegram.newGroupTextFilter.GroupTitle", "Type": "String", "Example": "Bot News Group"}}, {"section": "Ingredients", "title": "Author name\nThe name of the author who triggered the Applet.", "description": "The name of the author who triggered the Applet.", "details": {"Slug": "author_name", "Filter code": "Telegram.newGroupTextFilter.AuthorName", "Type": "String", "Example": "Pavel Durov"}}, {"section": "Ingredients", "title": "Author username\nAuthor username, when available.", "description": "Author username, when available.", "details": {"Slug": "author_username", "Filter code": "Telegram.newGroupTextFilter.AuthorUsername", "Type": "String", "Example": "durov"}}, {"section": "Ingredients", "title": "Text\nRepresents a plain-text message contents. Does not include the 'Key phrase'.", "description": "Represents a plain-text message contents. Does not include the 'Key phrase'.", "details": {"Slug": "text", "Filter code": "Telegram.newGroupTextFilter.Text", "Type": "String", "Example": "Hello world!"}}, {"section": "Ingredients", "title": "Html\nRepresents HTML-formatted message contents.", "description": "Represents HTML-formatted message contents.", "details": {"Slug": "html", "Filter code": "Telegram.newGroupTextFilter.HTML", "Type": "String", "Example": "Hello <b>world</b>.<br/>This string <i>can</i> contain <pre>some</pre> HTML <code>tags</code>."}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "If your team uses Google Drive, this Applet will keep your form submissions easily accessible.", "trigger_channel": "Jotform", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "jotform.latest_form_submission"}, "trigger_details": [{"section": "Trigger fields", "title": "Form\nDropdown list", "description": "Dropdown list", "details": {"Label": "Form", "Helper text": "Choose a form", "Slug": "form_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Question filter\nText input > Other", "description": "Text input > Other", "details": {"Label": "Question Filter", "Helper text": "Optional question filter (label text) e.g. Name, Email, Address", "Slug": "question_filter", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Ip\nThe form respondent's detected IP address.", "description": "The form respondent's detected IP address.", "details": {"Slug": "ip", "Filter code": "Jotform.latestFormSubmission.IP", "Type": "String", "Example": "192.168.0.100"}}, {"section": "Ingredients", "title": "Form title\nThe form title.", "description": "The form title.", "details": {"Slug": "form_title", "Filter code": "Jotform.latestFormSubmission.FormTitle", "Type": "String", "Example": "My Contact Form"}}, {"section": "Ingredients", "title": "Submission date time\nThe date and time of the form submission.", "description": "The date and time of the form submission.", "details": {"Slug": "submission_date_time", "Filter code": "Jotform.latestFormSubmission.SubmissionDateTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Total submissions\nThe total submission count.", "description": "The total submission count.", "details": {"Slug": "total_submissions", "Filter code": "Jotform.latestFormSubmission.TotalSubmissions", "Type": "String", "Example": "8"}}, {"section": "Ingredients", "title": "Form\nA number that uniquely identifies the form.", "description": "A number that uniquely identifies the form.", "details": {"Slug": "form_id", "Filter code": "Jotform.latestFormSubmission.FormID", "Type": "String", "Example": "1234567890"}}, {"section": "Ingredients", "title": "Submission\nA number that uniquely identifies the form submission.", "description": "A number that uniquely identifies the form submission.", "details": {"Slug": "submission_id", "Filter code": "Jotform.latestFormSubmission.SubmissionID", "Type": "String", "Example": "850507727987654321"}}, {"section": "Ingredients", "title": "Rich text data\nThe form data in a tabulated HTML format.", "description": "The form data in a tabulated HTML format.", "details": {"Slug": "rich_text_data", "Filter code": "Jotform.latestFormSubmission.RichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Spreadsheet data\nThe form data in a CSV format.", "description": "The form data in a CSV format.", "details": {"Slug": "spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.SpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "Filtered rich text data\nThe filtered form data in a tabulated HTML format.", "description": "The filtered form data in a tabulated HTML format.", "details": {"Slug": "filtered_rich_text_data", "Filter code": "Jotform.latestFormSubmission.FilteredRichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Filtered spreadsheet data\nThe filtered form data in a CSV format.", "description": "The filtered form data in a CSV format.", "details": {"Slug": "filtered_spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.FilteredSpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "File url\nThe URL of the file(s) uploaded on your form.", "description": "The URL of the file(s) uploaded on your form.", "details": {"Slug": "file_url", "Filter code": "Jotform.latestFormSubmission.FileUrl", "Type": "String", "Example": "http://www.jotform.com/uploads/user/1234567890/9876543210/images.zip"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "This will change the WiZ light(s) of your choice to Party mode at the time and date you specify. Ideal for a birthday!\n(Only for WiZ Colors lights)", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_year_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Datetime\nText input", "description": "Text input", "details": {"Label": "Date and time", "Slug": "datetime", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyYearOn.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "This will change the WiZ light(s) of your choice to turquoise if Weather Underground records a current temperature below the point you defined. (Only for WiZ Colors lights)", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "When Wyze Cam detects your smoke alarm ringing, Noonlight will send the fire department to your location", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.smoke_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Smoke detected\nSmoke alarm detected on your wyze camera.", "description": "Smoke alarm detected on your wyze camera.", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.smokeTrigger.SmokeDetected", "Type": "String", "Example": "Smoke alarm detected on your wyze camera."}}, {"section": "Ingredients", "title": "Trigger time\nTime when smoke is triggered.", "description": "Time when smoke is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.smokeTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Noonlight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "safetrek.alert_address", "Filter code method": "Safetrek.alertAddress.skip(string?: reason)", "Runtime method": "runAction(\"safetrek.alert_address\", {})"}, "action_details": [{"section": "Action fields", "title": "Address line 1\nText input > Other", "description": "Text input > Other", "details": {"Label": "Street Address", "Slug": "address_line_1", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Address line 2\nText input > Other", "description": "Text input > Other", "details": {"Label": "Apt, suite, unit, etc.", "Slug": "address_line_2", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "City\nText input > Other", "description": "Text input > Other", "details": {"Label": "City", "Slug": "city", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "State\nText input > Other", "description": "Text input > Other", "details": {"Label": "State", "Slug": "state", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Zip\nText input > Other", "description": "Text input > Other", "details": {"Label": "Zip", "Slug": "zip", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "This will automatically change the WiZ light(s) of your choice to blue whenever the current condition reported by Weather Underground changes to \"rain\". A simple way to make sure you don't forget your umbrella! (Only for WiZ Colors lights)", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "This Applet will attempt to close your garage door 2 or gate every day at specific time. If the garage door is already closed, it will remain closed.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Gogogate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "gogogate.close_door", "Filter code method": "Gogogate.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"gogogate.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever a specified Twitch channel you follow goes live, your Das Keyboard will receive a notification.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "An easy way to share your favorite tracks on Spotify to the followers of your Telegram channel! Every time you add a track to the playlist you specify, a message will be posted to a Telegram channel that you're an admin of.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_track_added_to_playlist"}, "trigger_details": [{"section": "Trigger fields", "title": "Playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which playlist?", "Helper text": "Only the first 50 playlists shown at <a href=\"https://open.spotify.com/\" target=\"_blank\">open.spotify.com</a> will be displayed here. You can click and drag playlists to reorder them", "Slug": "playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Playlist name\nThe name of the playlist.", "description": "The name of the playlist.", "details": {"Slug": "playlist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.PlaylistName", "Type": "String", "Example": "Mid-2000s Jamz"}}, {"section": "Ingredients", "title": "Added by\nThe name of the user that added this track to the playlist.", "description": "The name of the user that added this track to the playlist.", "details": {"Slug": "added_by", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedBy", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Added at\nThe time at which the track was added to the playlist.", "description": "The time at which the track was added to the playlist.", "details": {"Slug": "added_at", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_photo", "Filter code method": "Telegram.sendPhoto.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_photo\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Caption\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Caption", "Helper text": "Optional, 200 characters max.", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendPhoto.setCaption(string: caption)"}}], "filter_code": NaN}
{"original_description": "When you plug in your phone to charge it, your Android's ringtone will be set to mute.", "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_plugged_in"}, "trigger_details": [{"section": "Ingredients", "title": "Power source\nThe source of the charge.", "description": "The source of the charge.", "details": {"Slug": "PowerSource", "Filter code": "AndroidBattery.batteryPluggedIn.PowerSource", "Type": "String", "Example": "AC"}}, {"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryPluggedIn.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device was plugged in.", "description": "The time the device was plugged in.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryPluggedIn.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryPluggedIn.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.mute_device", "Filter code method": "AndroidDevice.muteDevice.skip(string?: reason)", "Runtime method": "runAction(\"android_device.mute_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Vibrate\nDropdown list", "description": "Dropdown list", "details": {"Label": "Vibrate", "Slug": "vibrate", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.muteDevice.setVibrate(string: vibrate)"}}], "filter_code": NaN}
{"original_description": "This will turn on your Phillips Hue lights when you set your mode", "trigger_channel": "Futurehome", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "futurehome.mode_switched"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe Mode the site was set to.", "description": "The Mode the site was set to.", "details": {"Slug": "mode", "Filter code": "Futurehome.modeSwitched.Mode", "Type": "String", "Example": "home"}}, {"section": "Ingredients", "title": "Triggered at\nThe time when the mode was triggered.", "description": "The time when the mode was triggered.", "details": {"Slug": "triggered_at", "Filter code": "Futurehome.modeSwitched.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Site name\nThe name of the site where the trigger was triggered.", "description": "The name of the site where the trigger was triggered.", "details": {"Slug": "site_name", "Filter code": "Futurehome.modeSwitched.SiteName", "Type": "String", "Example": "Home"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time that you miss a call on your phone, a task will be added to Remember The Milk to remind you to follow up on the call.", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.miss_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.missAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.missAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.missAPhoneCall.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.missAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Remember The Milk", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rememberthemilk.tasks_add", "Filter code method": "Rememberthemilk.tasksAdd.skip(string?: reason)", "Runtime method": "runAction(\"rememberthemilk.tasks_add\", {})"}, "action_details": [{"section": "Action fields", "title": "Task\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Helper text": "Task name with properties in <a href=\"https://www.rememberthemilk.com/help/answer/basics-smartadd-howdoiuse\" target=\"_blank\">Smart Add</a> format. E.g. &quot;Call Bob at 9am Monday #work&quot;.", "Slug": "task", "Required": "true", "Can have default value": "true", "Filter code method": "Rememberthemilk.tasksAdd.setTask(string: task)"}}], "filter_code": NaN}
{"original_description": "This will automatically change the WiZ light(s) of your choice to orange if Weather Underground records a current temperature higher than the threshold you define. (Only for WiZ Colors lights)", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Every new Instagram video you post will be automatically added to your Buffer Queue!", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_video_by_you_instagram"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewVideoByYouInstagram.Caption", "Type": "String", "Example": "A cool video"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the video's Instagram page.", "description": "The short URL to the video's Instagram page.", "details": {"Slug": "URL", "Filter code": "Instagram.anyNewVideoByYouInstagram.URL", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Video source url\nURL to the video file.", "description": "URL to the video file.", "details": {"Slug": "VideoSourceURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.VideoSourceURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4"}}, {"section": "Ingredients", "title": "Image thumbnail url\nURL to the video's thumbnail image.", "description": "URL to the video's thumbnail image.", "details": {"Slug": "ImageThumbnailURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.ImageThumbnailURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the video was taken.", "description": "Date and time the video was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewVideoByYouInstagram.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the video.", "description": "The HTML embed code for the video.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewVideoByYouInstagram.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Buffer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "buffer.add_to_buffer", "Filter code method": "Buffer.addToBuffer.skip(string?: reason)", "Runtime method": "runAction(\"buffer.add_to_buffer\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Update", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBuffer.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Stay up-to-date with the latest blog posts from the Library of Congress. Every Saturday morning, you will receive an email with a digest of blog posts from the week.", "trigger_channel": "Library of Congress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "loc.new_blog_post"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe post's title.", "description": "The post's title.", "details": {"Slug": "EntryTitle", "Filter code": "Loc.newBlogPost.Title", "Type": "String", "Example": "Pic of the Week: Celebrating Classical Cambodian Dance"}}, {"section": "Ingredients", "title": "Post url\nThe URL to the blog post.", "description": "The URL to the blog post.", "details": {"Slug": "EntryUrl", "Filter code": "Loc.newBlogPost.PostUrl", "Type": "String", "Example": "http://blogs.loc.gov/loc/2017/05/pic-of-the-week-celebrating-classical-cambodian-dance/"}}, {"section": "Ingredients", "title": "Blog author\nThe author of the blog post.", "description": "The author of the blog post.", "details": {"Slug": "EntryAuthor", "Filter code": "Loc.newBlogPost.BlogAuthor", "Type": "String", "Example": "Wendi Maloney"}}, {"section": "Ingredients", "title": "Post content html\nThe blog post content, may contain HTML.", "description": "The blog post content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Loc.newBlogPost.PostContentHtml", "Type": "String", "Example": "<p>The Cambodian-American Heritage Dancers..."}}, {"section": "Ingredients", "title": "Post image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Loc.newBlogPost.PostImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Published date\nDate the post was published.", "description": "Date the post was published.", "details": {"Slug": "EntryPublished", "Filter code": "Loc.newBlogPost.PublishedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "If your Airthings device detects high radon levels above the set threshold, your Hue light will briefly blink.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.radon-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Measurement unit", "Helper text": "What unit of measurement would you like to receive your radon levels in?", "Slug": "unit", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get radon levels from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.radonAbove.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Radon level\nThe radon level. In the measurement unit specified.", "description": "The radon level. In the measurement unit specified.", "details": {"Slug": "value", "Filter code": "Airthings.radonAbove.RadonLevel", "Type": "String", "Example": "120"}}, {"section": "Ingredients", "title": "Measurement unit\nThe unit of measurement used for radon, Bq/m3 or pCi/L.", "description": "The unit of measurement used for radon, Bq/m3 or pCi/L.", "details": {"Slug": "unit", "Filter code": "Airthings.radonAbove.MeasurementUnit", "Type": "String", "Example": "Bq/m3"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.radonAbove.Device", "Type": "String", "Example": "Home - Living Room"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Create your own email newsletter from any RSS Feed URL you paste in the field below. Enter a keyword too and this Applet will send you an email for every new entry that matches.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item_matches"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or simple phrase", "Helper text": "Search operators are not supported", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItemMatches.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItemMatches.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItemMatches.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItemMatches.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItemMatches.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItemMatches.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItemMatches.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItemMatches.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "This applet will append Medium bookmarks to a stream in a data.world dataset.", "trigger_channel": "Medium", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "medium.post_bookmarked_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Bookmarked at\nDate and time post was bookmarked.", "description": "Date and time post was bookmarked.", "details": {"Slug": "bookmarked_at", "Filter code": "Medium.postBookmarkedByYou.BookmarkedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Post url\nThe URL to the post on Medium.", "description": "The URL to the post on Medium.", "details": {"Slug": "post_url", "Filter code": "Medium.postBookmarkedByYou.PostUrl", "Type": "Web URL", "Example": "https://medium.com/@majelbstoat/what-are-bloom-filters-1ec2a50c68ff"}}, {"section": "Ingredients", "title": "Post title\nThe title of the post on Medium.", "description": "The title of the post on Medium.", "details": {"Slug": "post_title", "Filter code": "Medium.postBookmarkedByYou.PostTitle", "Type": "String", "Example": "What are Bloom Filters?"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.append", "Filter code method": "Datadotworld.append.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.append\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to update? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Stream name\nText input > File name", "description": "Text input > File name", "details": {"Label": "Stream", "Helper text": "Which stream would you like to append records to? IMPORTANT: Stream names can only contain lowercase letters, numbers and dashes (e.g. my-stream).", "Slug": "stream_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setStream Name(string: stream_name)"}}, {"section": "Action fields", "title": "Payload\nText input > Other", "description": "Text input > Other", "details": {"Label": "Record", "Helper text": "Which keys and values would you like in your record? Keys and values must be separated by &quot;||&quot;. Key-value pairs must be separated by &quot;|||&quot;. Example: first||Steve|||last||Rogers", "Slug": "payload", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setPayload(string: payload)"}}], "filter_code": "const bookmark = (Medium.postBookmarkedByYou as any)\nconst pairs = Object.getOwnPropertyNames(bookmark).map(prop => prop + \"||\" + bookmark[prop])\nDatadotworld.append.setPayload(pairs.join(\"|||\"))\n\n"}
{"original_description": "When Wyze detects your CO alarm ringing, Noonlight will send the fire department to your location", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.co_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Co detected\nCO alarm detected on your wyze camera.", "description": "CO alarm detected on your wyze camera.", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.coTrigger.CoDetected", "Type": "String", "Example": "CO alarm detected on your wyze camera."}}, {"section": "Ingredients", "title": "Trigger time\nTime when CO is triggered.", "description": "Time when CO is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.coTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Noonlight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "safetrek.alert_address", "Filter code method": "Safetrek.alertAddress.skip(string?: reason)", "Runtime method": "runAction(\"safetrek.alert_address\", {})"}, "action_details": [{"section": "Action fields", "title": "Address line 1\nText input > Other", "description": "Text input > Other", "details": {"Label": "Street Address", "Slug": "address_line_1", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Address line 2\nText input > Other", "description": "Text input > Other", "details": {"Label": "Apt, suite, unit, etc.", "Slug": "address_line_2", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "City\nText input > Other", "description": "Text input > Other", "details": {"Label": "City", "Slug": "city", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "State\nText input > Other", "description": "Text input > Other", "details": {"Label": "State", "Slug": "state", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Zip\nText input > Other", "description": "Text input > Other", "details": {"Label": "Zip", "Slug": "zip", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Hey Chicago: this Applet will send you a notification from the IFTTT app when there's an alert during your morning commute (7-9am on weekdays).", "trigger_channel": "Chicago Transit Authority", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "cta.new_purple_line_alert"}, "trigger_details": [{"section": "Ingredients", "title": "Alert title\nThe alert's title.", "description": "The alert's title.", "details": {"Slug": "EntryTitle", "Filter code": "Cta.newPurpleLineAlert.AlertTitle", "Type": "String", "Example": "Elevator at Cumberland Temporarily Out-of-Service (Elevator Status)"}}, {"section": "Ingredients", "title": "Alert url\nThe alert's URL.", "description": "The alert's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Cta.newPurpleLineAlert.AlertUrl", "Type": "String", "Example": "http://ift.tt/2q1oEoI"}}, {"section": "Ingredients", "title": "Alert content\nThe alert's content.", "description": "The alert's content.", "details": {"Slug": "EntryContent", "Filter code": "Cta.newPurpleLineAlert.AlertContent", "Type": "String", "Example": "(Tue, May 9 2017 5:43 PM to TBD) The mezzanine-to-platform elevator at Cumberland (Blue Line) is temporarily out-of-service."}}, {"section": "Ingredients", "title": "Alert published\nDate alert was created.", "description": "Date alert was created.", "details": {"Slug": "EntryPublished", "Filter code": "Cta.newPurpleLineAlert.AlertPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": "var Day = Meta.currentUserTime.day()\nvar Hour = Meta.currentUserTime.hour()\n\nif (Day == 6 || Day ==7) {\n  IfNotifications.sendNotification.skip(\"Not a weekday\")\n}\n\nif (Hour < 7 || Hour > 9) {\n  IfNotifications.sendNotification.skip(\"Not commuting hours\")\n}\n\n"}
{"original_description": "This Applet will bundle up the week's Longreads posts and send you a digest of links to them every Saturday at 7am.", "trigger_channel": "Longreads", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "longreads.any_new_post_on_longreads"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Longreads.anyNewPostOnLongreads.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Longreads.anyNewPostOnLongreads.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Longreads.anyNewPostOnLongreads.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Longreads.anyNewPostOnLongreads.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Longreads.anyNewPostOnLongreads.EntryImageUrl", "Type": "String", "Example": "https://longreadsblog.files.wordpress.com/2018/06/26474-books-origjpg.jpg?w=320&amp;h=483"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Longreads.anyNewPostOnLongreads.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Your Homey will inform you as soon as your washer with Home Connect has finished.", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Homey", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "homey.let_homey_speak", "Filter code method": "Homey.letHomeySpeak.skip(string?: reason)", "Runtime method": "runAction(\"homey.let_homey_speak\", {})"}, "action_details": [{"section": "Action fields", "title": "Which homey\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Homey?", "Slug": "which_homey", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "What text\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What text?", "Slug": "what_text", "Required": "true", "Can have default value": "true", "Filter code method": "Homey.letHomeySpeak.setWhat Text(string: what_text)"}}], "filter_code": NaN}
{"original_description": "When you save an item in Pocket, a task will be added to Remember The Milk to remind you to (actually!) read it later.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Remember The Milk", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rememberthemilk.tasks_add", "Filter code method": "Rememberthemilk.tasksAdd.skip(string?: reason)", "Runtime method": "runAction(\"rememberthemilk.tasks_add\", {})"}, "action_details": [{"section": "Action fields", "title": "Task\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Helper text": "Task name with properties in <a href=\"https://www.rememberthemilk.com/help/answer/basics-smartadd-howdoiuse\" target=\"_blank\">Smart Add</a> format. E.g. &quot;Call Bob at 9am Monday #work&quot;.", "Slug": "task", "Required": "true", "Can have default value": "true", "Filter code method": "Rememberthemilk.tasksAdd.setTask(string: task)"}}], "filter_code": NaN}
{"original_description": "When you call IFTTT and leave voicemail, it will be added to your Toodledo task list. Find your IFTTT phone number at ift.tt/phone_call", "trigger_channel": "Phone Call (US only)", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "phone_call.leave_ifttt_a_voicemail"}, "trigger_details": [{"section": "Ingredients", "title": "Temporary mp3 url\nA public URL to the voicemail audio in mp3 format that anyone can visit for 30 days.", "description": "A public URL to the voicemail audio in mp3 format that anyone can visit for 30 days.", "details": {"Slug": "TemporaryMp3Url", "Filter code": "PhoneCall.leaveIftttAVoicemail.TemporaryMp3Url", "Type": "File URL", "Example": "http://media.ifttt.com/calls/4-RE16dd33bca24641284e2bdffc6c246427.mp3"}}, {"section": "Ingredients", "title": "From\nThe phone number you called ifttt from.", "description": "The phone number you called ifttt from.", "details": {"Slug": "From", "Filter code": "PhoneCall.leaveIftttAVoicemail.From", "Type": "String", "Example": "(415)-222-2222"}}, {"section": "Ingredients", "title": "Message\nThe transcribed message.", "description": "The transcribed message.", "details": {"Slug": "Message", "Filter code": "PhoneCall.leaveIftttAVoicemail.Message", "Type": "String", "Example": "Hello, it is a really sunny day in..."}}, {"section": "Ingredients", "title": "Mp3 url\nA public URL to the voicemail audio in mp3 format.", "description": "A public URL to the voicemail audio in mp3 format.", "details": {"Slug": "Mp3Url", "Filter code": "PhoneCall.leaveIftttAVoicemail.Mp3Url", "Type": "String", "Example": "http://media.ifttt.com/calls/4-RE16dd33bca24641284e2bdffc6c246427.mp3"}}, {"section": "Ingredients", "title": "Received at\nThe date and time you called ifttt.", "description": "The date and time you called ifttt.", "details": {"Slug": "ReceivedAt", "Filter code": "PhoneCall.leaveIftttAVoicemail.ReceivedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Toodledo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "toodledo.add-task", "Filter code method": "Toodledo.addTask.skip(string?: reason)", "Runtime method": "runAction(\"toodledo.add-task\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Toodledo.addTask.setTitle(string: title)"}}, {"section": "Action fields", "title": "Note\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Toodledo.addTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Tag\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tag", "Required": "false", "Can have default value": "true", "Filter code method": "Toodledo.addTask.setTag(string: tag)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Slug": "priority", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Add to folder", "Slug": "folder", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever a Trello card is assigned to you, your Das Keyboard will receive a new signal.", "trigger_channel": "Trello", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "trello.card_assigned_to_me"}, "trigger_details": [{"section": "Trigger fields", "title": "Board\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe title of the card.", "description": "The title of the card.", "details": {"Slug": "title", "Filter code": "Trello.cardAssignedToMe.Title", "Type": "String", "Example": "Weigh suitcases before leaving for airport"}}, {"section": "Ingredients", "title": "Description\nThe description of the card.", "description": "The description of the card.", "details": {"Slug": "description", "Filter code": "Trello.cardAssignedToMe.Description", "Type": "String", "Example": "Be sure to check airline maximum weight allowance!"}}, {"section": "Ingredients", "title": "Assigner full name\nThe full name of the member who assigned the card to you.", "description": "The full name of the member who assigned the card to you.", "details": {"Slug": "creator_name", "Filter code": "Trello.cardAssignedToMe.AssignerFullName", "Type": "String", "Example": "Mary Smith"}}, {"section": "Ingredients", "title": "Assigner username\nThe username of the member who assigned the card to you.", "description": "The username of the member who assigned the card to you.", "details": {"Slug": "creator_username", "Filter code": "Trello.cardAssignedToMe.AssignerUsername", "Type": "String", "Example": "sfjetsetbuddy"}}, {"section": "Ingredients", "title": "List name\nThe list that contained the card.", "description": "The list that contained the card.", "details": {"Slug": "list_name", "Filter code": "Trello.cardAssignedToMe.ListName", "Type": "String", "Example": "To dos"}}, {"section": "Ingredients", "title": "Board name\nThe board that contains the card.", "description": "The board that contains the card.", "details": {"Slug": "board_name", "Filter code": "Trello.cardAssignedToMe.BoardName", "Type": "String", "Example": "New Zealand Trip"}}, {"section": "Ingredients", "title": "Card url\nThe URL to the card.", "description": "The URL to the card.", "details": {"Slug": "url", "Filter code": "Trello.cardAssignedToMe.CardURL", "Type": "Web URL", "Example": "https://trello.com/c/hZtPQ5Af"}}, {"section": "Ingredients", "title": "Assigned at\nDate and time the card was assigned to you.", "description": "Date and time the card was assigned to you.", "details": {"Slug": "added_at", "Filter code": "Trello.cardAssignedToMe.AssignedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Applet will send you a push notification reminding you to take 5 minutes to meditate at the time you specify, and dim your Hue bulb to set the scene", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This applet will append Reddit posts to a stream in a data.world dataset.", "trigger_channel": "Reddit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "reddit.new_post_from_search_reddit"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Helper text": "Use reddit's <a target='_blank' class='open-native' href='https://support.reddithelp.com/hc/en-us/articles/19696541895316-Available-search-features'>search operators</a> for advanced search", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nTitle of this post.", "description": "Title of this post.", "details": {"Slug": "Title", "Filter code": "Reddit.newPostFromSearchReddit.Title", "Type": "String", "Example": "Little Bobby Tables!"}}, {"section": "Ingredients", "title": "Image url\nURL to the post's image if one exists.", "description": "URL to the post's image if one exists.", "details": {"Slug": "ImageURL", "Filter code": "Reddit.newPostFromSearchReddit.ImageURL", "Type": "String", "Example": "http://imgs.xkcd.com/comics/exploits_of_a_mom.png"}}, {"section": "Ingredients", "title": "Content\nContent of this post, may be text or external link.", "description": "Content of this post, may be text or external link.", "details": {"Slug": "Content", "Filter code": "Reddit.newPostFromSearchReddit.Content", "Type": "String", "Example": "http://xkcd.com/327"}}, {"section": "Ingredients", "title": "Content html\nContent of this post in HTML.", "description": "Content of this post in HTML.", "details": {"Slug": "ContentHTML", "Filter code": "Reddit.newPostFromSearchReddit.ContentHTML", "Type": "String", "Example": "http://xkcd.com/327"}}, {"section": "Ingredients", "title": "Post url\nURL to this post on reddit.", "description": "URL to this post on reddit.", "details": {"Slug": "PostURL", "Filter code": "Reddit.newPostFromSearchReddit.PostURL", "Type": "String", "Example": "http://www.reddit.com/r/ProgrammerHumor/comments/16dazp/little_bobby_tables_xkcd/"}}, {"section": "Ingredients", "title": "Subreddit\nName of the subreddit where this item was posted.", "description": "Name of the subreddit where this item was posted.", "details": {"Slug": "Subreddit", "Filter code": "Reddit.newPostFromSearchReddit.Subreddit", "Type": "String", "Example": "ifttt"}}, {"section": "Ingredients", "title": "Author\nUsername of this post's author.", "description": "Username of this post's author.", "details": {"Slug": "Author", "Filter code": "Reddit.newPostFromSearchReddit.Author", "Type": "String", "Example": "ltibbets"}}, {"section": "Ingredients", "title": "Posted at\nDate this post was posted.", "description": "Date this post was posted.", "details": {"Slug": "PostedAt", "Filter code": "Reddit.newPostFromSearchReddit.PostedAt", "Type": "String", "Example": "August 23, 2013 at 05:00PM"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.append", "Filter code method": "Datadotworld.append.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.append\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to update? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Stream name\nText input > File name", "description": "Text input > File name", "details": {"Label": "Stream", "Helper text": "Which stream would you like to append records to? IMPORTANT: Stream names can only contain lowercase letters, numbers and dashes (e.g. my-stream).", "Slug": "stream_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setStream Name(string: stream_name)"}}, {"section": "Action fields", "title": "Payload\nText input > Other", "description": "Text input > Other", "details": {"Label": "Record", "Helper text": "Which keys and values would you like in your record? Keys and values must be separated by &quot;||&quot;. Key-value pairs must be separated by &quot;|||&quot;. Example: first||Steve|||last||Rogers", "Slug": "payload", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setPayload(string: payload)"}}], "filter_code": "const post = (Reddit.newPostFromSearchReddit as any)\nconst pairs = Object.getOwnPropertyNames(post).map(prop => prop + \"||\" + post[prop])\nDatadotworld.append.setPayload(pairs.join(\"|||\"))\n\n"}
{"original_description": "This will turn on the WiZ lights of your choice in Wake-up mode within 15 minutes of the sunrise in your location. Wake up with the sun!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "When the temperature is higher than a certain value, your Connector blind will be closed.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Connector", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dooya_connector.close_blinds", "Filter code method": "DooyaConnector.closeBlinds.skip(string?: reason)", "Runtime method": "runAction(\"dooya_connector.close_blinds\", {})"}, "action_details": [{"section": "Action fields", "title": "Which blinds\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which blind?", "Slug": "which_blinds", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This will turn off your TV using Logitech Harmony Remote when your mode is set to sleep.", "trigger_channel": "Futurehome", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "futurehome.mode_switched"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe Mode the site was set to.", "description": "The Mode the site was set to.", "details": {"Slug": "mode", "Filter code": "Futurehome.modeSwitched.Mode", "Type": "String", "Example": "home"}}, {"section": "Ingredients", "title": "Triggered at\nThe time when the mode was triggered.", "description": "The time when the mode was triggered.", "details": {"Slug": "triggered_at", "Filter code": "Futurehome.modeSwitched.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Site name\nThe name of the site where the trigger was triggered.", "description": "The name of the site where the trigger was triggered.", "details": {"Slug": "site_name", "Filter code": "Futurehome.modeSwitched.SiteName", "Type": "String", "Example": "Home"}}], "action_channel": "Harmony", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "harmony.end-activity", "Filter code method": "Harmony.endActivity.skip(string?: reason)", "Runtime method": "runAction(\"harmony.end-activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Activity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Helper text": "Activities that include locks are not supported", "Slug": "activity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet will change the setpoint temperature of your AC when the outside temperature rises above a selected temperature.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "GE Appliances Window AC", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ge_appliances_wac.wac-set-target-temp", "Filter code method": "GeAppliancesWac.wacSetTargetTemp.skip(string?: reason)", "Runtime method": "runAction(\"ge_appliances_wac.wac-set-target-temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Applianceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which appliance?", "Slug": "applianceId", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Set-target-temp\nDropdown list", "description": "Dropdown list", "details": {"Label": "What temperature?", "Slug": "set-target-temp", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet will initiate sync for a data.world dataset or data project at a specific time every day.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.sync", "Filter code method": "Datadotworld.sync.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.sync\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to sync? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Action will activate the output of your cloudBit for 3 seconds.", "trigger_channel": "MESH", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mesh.events"}, "trigger_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "littleBits", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "littlebits.output", "Filter code method": "Littlebits.output.skip(string?: reason)", "Runtime method": "runAction(\"littlebits.output\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which cloudBit?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When a new subscriber joins your Twitch channel, your Kasa light bulb will change color. Color, brightness, and transition time is fully customizable by the user.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.new_follower_on_your_channel"}, "trigger_details": [{"section": "Ingredients", "title": "Followed at\nDate and time the user followed your Channel.", "description": "Date and time the user followed your Channel.", "details": {"Slug": "created_at", "Filter code": "Twitch.newFollowerOnYourChannel.FollowedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Follower name\nThe name of the user who followed your channel.", "description": "The name of the user who followed your channel.", "details": {"Slug": "follower_name", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerName", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Follower bio\nThe bio of the user that followed you.", "description": "The bio of the user that followed you.", "details": {"Slug": "follower_bio", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerBio", "Type": "String", "Example": "A gaming fanatic from Boston."}}, {"section": "Ingredients", "title": "Follower url\nA url to the follower's profile on Twitch.", "description": "A url to the follower's profile on Twitch.", "details": {"Slug": "follower_url", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Follower count\nThe number of followers of your channel.", "description": "The number of followers of your channel.", "details": {"Slug": "follower_count", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerCount", "Type": "String", "Example": "215780"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.change_color_temp", "Filter code method": "Kasa.changeColorTemp.skip(string?: reason)", "Runtime method": "runAction(\"kasa.change_color_temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color Temperature", "Slug": "color_temperature", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setColor Temperature(string: color_temperature)"}}, {"section": "Action fields", "title": "Kelvin\nDropdown list", "description": "Dropdown list", "details": {"Label": "Kelvin", "Helper text": "If set, kelvin value will override the color temperature.", "Slug": "kelvin", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setKelvin(string: kelvin)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setTransition Duration(string: transition_duration)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Provide custom options here. For example : &quot;color_temperature: cool; transition_duration: 3000” for cool and 3 seconds transition duration or “kelvin: 5000; transition_duration: 2000” for temperature of 5000K and 2 seconds transition duration", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "This applet will turn on your 1-channel switch/plug at sunset", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.switches3_action", "Filter code method": "Ewelink.switches3Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.switches3_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Switches3 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 3-Channel Switch?", "Slug": "switches3_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Switches3 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "switches3_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Do you find yourself sitting at your desk for long periods at a time? This applet will send a signal to a specified key on your Das Keyboard to remind you to stand up every hour. ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_hour_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Minutes past the hour", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyHourAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet will change the setpoint temperature of your AC when the outside temperature rises above a selected temperature.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "GE Appliances Window AC", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ge_appliances_wac.wac-set-target-temp", "Filter code method": "GeAppliancesWac.wacSetTargetTemp.skip(string?: reason)", "Runtime method": "runAction(\"ge_appliances_wac.wac-set-target-temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Applianceid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which appliance?", "Slug": "applianceId", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Set-target-temp\nDropdown list", "description": "Dropdown list", "details": {"Label": "What temperature?", "Slug": "set-target-temp", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "If an Airthings device detects high humidity levels above the set threshold your hue lights will briefly blink.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.humidity-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get humidity from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Helper text": "How humid, in percent, do you want it to be when it triggers? Example: 60", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.humidityAbove.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Humidity\nThe humidity, in percent.", "description": "The humidity, in percent.", "details": {"Slug": "value", "Filter code": "Airthings.humidityAbove.Humidity", "Type": "String", "Example": "60"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.humidityAbove.Device", "Type": "String", "Example": "Home - Living room"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet will ensure that your Indego Connect will return to the dock when it is raining. Ideal for users that have a Calendar set-up that isn't automatically avoiding when rain is forecast like our SmartMowing feature does.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.rain-has-started"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.rainHasStarted.DeviceName", "Type": "String", "Example": "My Rain gauge"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occured", "description": "The date and time the measurement occured", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.rainHasStarted.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Indego Connect", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "indegoconnect.send_dock", "Filter code method": "Indegoconnect.sendDock.skip(string?: reason)", "Runtime method": "runAction(\"indegoconnect.send_dock\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Every time the temperature drops below the specified value, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Applet will automatically create a task in Google Tasks with all the details of your note from Evernote. The Task created in Google Tasks will default to a due date of when the Evernote note was created.", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Google Tasks", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_tasks.add_task_to_tasklist", "Filter code method": "GoogleTasks.addTaskToTasklist.skip(string?: reason)", "Runtime method": "runAction(\"google_tasks.add_task_to_tasklist\", {})"}, "action_details": [{"section": "Action fields", "title": "Tasklist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which task list?", "Helper text": "The task list to which the task should be added.", "Slug": "tasklist_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task title\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What is the title of the task?", "Slug": "task_title", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Title(string: task_title)"}}, {"section": "Action fields", "title": "Task notes\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What are the notes to include in the task?", "Helper text": "Notes describing the task", "Slug": "task_notes", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Notes(string: task_notes)"}}, {"section": "Action fields", "title": "Due date\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Does the task have a due date?", "Helper text": "Field only sets the date. Ex. Next Tuesday, Today.", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setDue Date(string: due_date)"}}], "filter_code": NaN}
{"original_description": "This Applet will send you a notification from the IFTTT app whenever Mark Morford posts a new story.", "trigger_channel": "SFGATE", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "sfgate.author_mark_morford"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Sfgate.authorMarkMorford.EntryTitle", "Type": "String", "Example": "Male birth control is already here. Guess who’s blocking it?"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Sfgate.authorMarkMorford.EntryUrl", "Type": "String", "Example": "http://ift.tt/2oVuk4l"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Sfgate.authorMarkMorford.EntryAuthor", "Type": "String", "Example": "Mark Morford"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Sfgate.authorMarkMorford.EntryContent", "Type": "String", "Example": "Serious crimes fell 10 percent in San Francisco last year as the city saw fewer robberies, far fewer boosted cars and a slight but welcome reduction in the vehicle break-ins that have plagued many neighborhoods, according to police figures released..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Sfgate.authorMarkMorford.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "The Green Light Signal is a UK service that you connect your smart bulb to. It will make your bulb turn green every time the electricity in your area is generated with lowest possible CO2 levels. Simply put: when it turns green you can plug-in!", "trigger_channel": "Green Light Signal", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "green_light_signal.co2_level"}, "trigger_details": [{"section": "Trigger fields", "title": "Postcode\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "What is your postcode?", "Helper text": "Example 'LE6 7TR'", "Slug": "postcode", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Co2 index\nCO2 index", "description": "CO2 index", "details": {"Slug": "co2_index", "Filter code": "GreenLightSignal.co2Level.Co2Index", "Type": "String", "Example": "Low"}}, {"section": "Ingredients", "title": "Co2 level value\nCO2 level value", "description": "CO2 level value", "details": {"Slug": "co2_level_value", "Filter code": "GreenLightSignal.co2Level.Co2LevelValue", "Type": "String", "Example": "0"}}, {"section": "Ingredients", "title": "Date\nDate Created", "description": "Date Created", "details": {"Slug": "date", "Filter code": "GreenLightSignal.co2Level.Date", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.color", "Filter code method": "Lifx.color.skip(string?: reason)", "Runtime method": "runAction(\"lifx.color\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color if off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on first?", "Helper text": "&quot;Yes&quot; will make your lights turn on to the color, even when they are turned off in the app.", "Slug": "color_if_off", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.color.setColor If Off(string: color_if_off)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: #ff0000; brightness: 0.3; duration: 12&quot; for red at 30% brightness, 12 second fade. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.color.setAdvanced Options(string: advanced_options)"}}], "filter_code": "var co2Index = GreenLightSignal.co2Level.Co2Index \n\nif (co2Index === \"low\" || co2Index === \"very low\") {​​​​\n\n  Lifx.color.setAdvancedOptions('color: #00e600; brightness: 1; transition_duration: 0')\n\n}​​​​ else {​​​​\n\n  Lifx.color.setAdvancedOptions('color: #ffffff; brightness: 0; transition_duration: 0')\n\n}​​​​\n\n"}
{"original_description": "Whenever new photos are detected in your Flickr photostream, this applet will download those photos to your QNAP device", "trigger_channel": "Flickr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flickr.new_public_photos_batch"}, "trigger_details": [{"section": "Ingredients", "title": "Photostream url\nThe URL to your photostream on flickr.", "description": "The URL to your photostream on flickr.", "details": {"Slug": "PhotostreamUrl", "Filter code": "Flickr.newPublicPhotosBatch.PhotostreamUrl", "Type": "String", "Example": "http://www.flickr.com/photos/ltibbets/"}}, {"section": "Ingredients", "title": "Photo count\nThe number of photos uploaded in this batch.", "description": "The number of photos uploaded in this batch.", "details": {"Slug": "PhotoCount", "Filter code": "Flickr.newPublicPhotosBatch.PhotoCount", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Last flickr url\nThe long URL to the last photo's Flickr page.", "description": "The long URL to the last photo's Flickr page.", "details": {"Slug": "LastFlickrUrl", "Filter code": "Flickr.newPublicPhotosBatch.LastFlickrUrl", "Type": "String", "Example": "http://www.flickr.com/photos/sh4de/5197127926/"}}, {"section": "Ingredients", "title": "Last source url\nURL to the largest available image file for the last photo.", "description": "URL to the largest available image file for the last photo.", "details": {"Slug": "LastSourceUrl", "Filter code": "Flickr.newPublicPhotosBatch.LastSourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Last uploaded date\nDate and time the last photo was uploaded.", "description": "Date and time the last photo was uploaded.", "details": {"Slug": "LastUploadedDate", "Filter code": "Flickr.newPublicPhotosBatch.LastUploadedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Last tags\nTags added to the last photo.", "description": "Tags added to the last photo.", "details": {"Slug": "LastTags", "Filter code": "Flickr.newPublicPhotosBatch.LastTags", "Type": "String", "Example": "baby, pumpkin"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": NaN}
{"original_description": "This will automatically change the WiZ light(s) of your choice to green if the price of the stock you selected rises by more than a certain percentage compared to the last closing price. (Only for WiZ Colors lights)", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.percentage_rise_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Percentage\nText input", "description": "Text input", "details": {"Label": "Percentage increase", "Helper text": "e.g. insert 15 for 15%", "Slug": "percentage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.percentageRiseStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.percentageRiseStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last price", "description": "The last price", "details": {"Slug": "Price", "Filter code": "Finance.percentageRiseStocks.Price", "Type": "String", "Example": "89"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.percentageRiseStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.percentageRiseStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Percentage change\nThe percentage change", "description": "The percentage change", "details": {"Slug": "PercentageChange", "Filter code": "Finance.percentageRiseStocks.PercentageChange", "Type": "String", "Example": "42"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "This applet will let you turn on motion detection at specific time of the day", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Smitch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "Smitch.turn_on_motion_detection", "Filter code method": "Smitch.turnOnMotionDetection.skip(string?: reason)", "Runtime method": "runAction(\"Smitch.turn_on_motion_detection\", {})"}, "action_details": [{"section": "Action fields", "title": "Camera\nDropdown list", "description": "Dropdown list", "details": {"Label": "Camera", "Helper text": "Choose the camera to turn on motion detection", "Slug": "camera", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Motion detection type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Motion Detection Type", "Helper text": "Choose the motion detection type", "Slug": "motion_detection_type", "Required": "true", "Can have default value": "true", "Filter code method": "Smitch.turnOnMotionDetection.setMotion Detection Type(string: motion_detection_type)"}}], "filter_code": NaN}
{"original_description": "No idea what to watch on Netflix? This Applet will automatically add new Critics' Picks from the Times' reviewers to a Trello list. ", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_movie_review"}, "trigger_details": [{"section": "Ingredients", "title": "Movie title", "description": "", "details": {"Slug": "MovieTitle", "Filter code": "Nytimes.newMovieReview.MovieTitle", "Type": "String", "Example": "Exit Through the Gift Shop"}}, {"section": "Ingredients", "title": "Review headline\nThe headline of the review", "description": "The headline of the review", "details": {"Slug": "ReviewHeadline", "Filter code": "Nytimes.newMovieReview.ReviewHeadline", "Type": "String", "Example": "On the Street, at the Corner of Art and Trash"}}, {"section": "Ingredients", "title": "Review url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ReviewUrl", "Filter code": "Nytimes.newMovieReview.ReviewUrl", "Type": "String", "Example": "http://movies.nytimes.com/2010/04/16/movies/16exit.html"}}, {"section": "Ingredients", "title": "Author\nThe author of the review", "description": "The author of the review", "details": {"Slug": "Author", "Filter code": "Nytimes.newMovieReview.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Movie thumbnail url\nURL to the movie thumbnail image.", "description": "URL to the movie thumbnail image.", "details": {"Slug": "MovieThumbnailUrl", "Filter code": "Nytimes.newMovieReview.MovieThumbnailUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Movie opening date\nDate the movie opened", "description": "Date the movie opened", "details": {"Slug": "MovieOpeningDate", "Filter code": "Nytimes.newMovieReview.MovieOpeningDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Publication date\nDate the review was published.", "description": "Date the review was published.", "details": {"Slug": "PublicationDate", "Filter code": "Nytimes.newMovieReview.PublicationDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Mpaa rating\nA the rating, if any, given to this movie by the MPAA", "description": "A the rating, if any, given to this movie by the MPAA", "details": {"Slug": "MPAARating", "Filter code": "Nytimes.newMovieReview.MPAARating", "Type": "String", "Example": "R"}}], "action_channel": "Trello", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "trello.create_card", "Filter code method": "Trello.createCard.skip(string?: reason)", "Runtime method": "runAction(\"trello.create_card\", {})"}, "action_details": [{"section": "Action fields", "title": "Board\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "List name\nText input > Other", "description": "Text input > Other", "details": {"Label": "List name", "Helper text": "We'll create a new list if one with this name doesn't exist", "Slug": "list_name", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setList Name(string: list_name)"}}, {"section": "Action fields", "title": "Pos\nDropdown list", "description": "Dropdown list", "details": {"Label": "Position", "Slug": "pos", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setPos(string: pos)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setTitle(string: title)"}}, {"section": "Action fields", "title": "Description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setDescription(string: description)"}}, {"section": "Action fields", "title": "Members\nText input > Other", "description": "Text input > Other", "details": {"Label": "Assign members", "Helper text": "Optional comma separated list of @usernames to assign to card", "Slug": "members", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setMembers(string: members)"}}, {"section": "Action fields", "title": "Labels\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Apply labels", "Helper text": "Optional comma separated list of label names — labels that do not exist on the board will be ignored", "Slug": "labels", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setLabels(string: labels)"}}, {"section": "Action fields", "title": "Url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Attachment URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "This applet will append Today in History updates from the Library of Congress to a stream in a data.world dataset. ", "trigger_channel": "Library of Congress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "loc.today_in_history"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the day's post.", "description": "The title of the day's post.", "details": {"Slug": "EntryTitle", "Filter code": "Loc.todayInHistory.Title", "Type": "String", "Example": "Today in History - May 26"}}, {"section": "Ingredients", "title": "Post url\nThe URL for the day's post.", "description": "The URL for the day's post.", "details": {"Slug": "EntryUrl", "Filter code": "Loc.todayInHistory.PostUrl", "Type": "String", "Example": "https://www.loc.gov/item/today-in-history/may-26?loclr=eatod"}}, {"section": "Ingredients", "title": "Post content html\nThe post's content, may contain HTML.", "description": "The post's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Loc.todayInHistory.PostContentHtml", "Type": "String", "Example": "On May 26, 1864, President Lincoln signed..."}}, {"section": "Ingredients", "title": "Published date\nDate the post was published.", "description": "Date the post was published.", "details": {"Slug": "EntryPublished", "Filter code": "Loc.todayInHistory.PublishedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.append", "Filter code method": "Datadotworld.append.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.append\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to update? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Stream name\nText input > File name", "description": "Text input > File name", "details": {"Label": "Stream", "Helper text": "Which stream would you like to append records to? IMPORTANT: Stream names can only contain lowercase letters, numbers and dashes (e.g. my-stream).", "Slug": "stream_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setStream Name(string: stream_name)"}}, {"section": "Action fields", "title": "Payload\nText input > Other", "description": "Text input > Other", "details": {"Label": "Record", "Helper text": "Which keys and values would you like in your record? Keys and values must be separated by &quot;||&quot;. Key-value pairs must be separated by &quot;|||&quot;. Example: first||Steve|||last||Rogers", "Slug": "payload", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setPayload(string: payload)"}}], "filter_code": NaN}
{"original_description": "Whenever you favorite a public photo on Flickr, this applet will automatically download that photo to your QNAP device", "trigger_channel": "Flickr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flickr.new_favorite_public_photo"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Flickr.newFavoritePublicPhoto.Title", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Description\nOptional photo description.", "description": "Optional photo description.", "details": {"Slug": "Description", "Filter code": "Flickr.newFavoritePublicPhoto.Description", "Type": "String", "Example": "Taken at my birthday party!"}}, {"section": "Ingredients", "title": "Flickr url short\nThe shortened URL to the photo's Flickr page.", "description": "The shortened URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrlShort", "Filter code": "Flickr.newFavoritePublicPhoto.FlickrUrlShort", "Type": "String", "Example": "http://flic.kr/p/4mdhBE"}}, {"section": "Ingredients", "title": "Source url\nURL to the largest available flickr image file.", "description": "URL to the largest available flickr image file.", "details": {"Slug": "SourceUrl", "Filter code": "Flickr.newFavoritePublicPhoto.SourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Original source url\nURL to the orginal image file if available.", "description": "URL to the orginal image file if available.", "details": {"Slug": "OriginalSourceUrl", "Filter code": "Flickr.newFavoritePublicPhoto.OriginalSourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Owner name\nUsername of the person the photo belongs to.", "description": "Username of the person the photo belongs to.", "details": {"Slug": "OwnerName", "Filter code": "Flickr.newFavoritePublicPhoto.OwnerName", "Type": "String", "Example": "ltibbets"}}, {"section": "Ingredients", "title": "Uploaded date\nDate and time the photo was uploaded.", "description": "Date and time the photo was uploaded.", "details": {"Slug": "UploadedDate", "Filter code": "Flickr.newFavoritePublicPhoto.UploadedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Tags\nTags added to the photo.", "description": "Tags added to the photo.", "details": {"Slug": "Tags", "Filter code": "Flickr.newFavoritePublicPhoto.Tags", "Type": "String", "Example": "baby, pumpkin"}}], "action_channel": "QNAP", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qnap.download_file_from_url", "Filter code method": "Qnap.downloadFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"qnap.download_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Option shared folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Folder Path", "Slug": "option_shared_folder", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "File url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "file_url", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Url(string: file_url)"}}, {"section": "Action fields", "title": "File name\nText input > File name", "description": "Text input > File name", "details": {"Label": "File Name", "Helper text": "No file extension needed", "Slug": "file_name", "Required": "true", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFile Name(string: file_name)"}}, {"section": "Action fields", "title": "Folder path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Subfolder Path", "Helper text": "If the subfolders don't exist, they will be automatically created. Example Format: some/folder/path. (Only English folder names are supported)", "Slug": "folder_path", "Required": "false", "Can have default value": "true", "Filter code method": "Qnap.downloadFileFromUrl.setFolder Path(string: folder_path)"}}], "filter_code": NaN}
{"original_description": "When a Twitch stream for a channel you follow goes live, your Kasa light bulb will change color. Color, brightness, and transition time is fully customizable by the user.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.change_color_temp", "Filter code method": "Kasa.changeColorTemp.skip(string?: reason)", "Runtime method": "runAction(\"kasa.change_color_temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color Temperature", "Slug": "color_temperature", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setColor Temperature(string: color_temperature)"}}, {"section": "Action fields", "title": "Kelvin\nDropdown list", "description": "Dropdown list", "details": {"Label": "Kelvin", "Helper text": "If set, kelvin value will override the color temperature.", "Slug": "kelvin", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setKelvin(string: kelvin)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setTransition Duration(string: transition_duration)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Provide custom options here. For example : &quot;color_temperature: cool; transition_duration: 3000” for cool and 3 seconds transition duration or “kelvin: 5000; transition_duration: 2000” for temperature of 5000K and 2 seconds transition duration", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "This applet will initiate sync for a data.world dataset or data project at a specific time and on specific days of the week.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.sync", "Filter code method": "Datadotworld.sync.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.sync\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to sync? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Every time a new popular article is published on The New York Times, a Signal will be sent to your Das Keyboard.", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.any_new_popular_article_today"}, "trigger_details": [{"section": "Trigger fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Section", "Slug": "section", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.anyNewPopularArticleToday.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.anyNewPopularArticleToday.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.anyNewPopularArticleToday.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.anyNewPopularArticleToday.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.anyNewPopularArticleToday.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.anyNewPopularArticleToday.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This will change the WiZ lights of your choice to the mode and brightness you defined whenever a channel you follow starts a live stream on Twitch.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Every time the pollen count rises above the value you specify (1-12), a Signal will be sent to your Das Keyboard.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_pollen_count_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Count\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Pollen count", "Slug": "count", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentPollenCountRisesAbove.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentPollenCountRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentPollenCountRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentPollenCountRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentPollenCountRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentPollenCountRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This will automatically change the WiZ light(s) of your choice to lime color if Weather underground reports a pollen count above the threshold you have defined. Best way to know whether your allergies may be a problem... before heading out. (Only for WiZ Colors lights)", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_pollen_count_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Count\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Pollen count", "Slug": "count", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentPollenCountRisesAbove.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentPollenCountRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentPollenCountRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentPollenCountRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentPollenCountRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentPollenCountRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Every time a new track is added to a playlist you specify, a Signal will be sent to your Das Keyboard.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_track_added_to_playlist"}, "trigger_details": [{"section": "Trigger fields", "title": "Playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which playlist?", "Helper text": "Only the first 50 playlists shown at <a href=\"https://open.spotify.com/\" target=\"_blank\">open.spotify.com</a> will be displayed here. You can click and drag playlists to reorder them", "Slug": "playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Playlist name\nThe name of the playlist.", "description": "The name of the playlist.", "details": {"Slug": "playlist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.PlaylistName", "Type": "String", "Example": "Mid-2000s Jamz"}}, {"section": "Ingredients", "title": "Added by\nThe name of the user that added this track to the playlist.", "description": "The name of the user that added this track to the playlist.", "details": {"Slug": "added_by", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedBy", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Added at\nThe time at which the track was added to the playlist.", "description": "The time at which the track was added to the playlist.", "details": {"Slug": "added_at", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Das Keyboard Q", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "daskeyboardq.signals", "Filter code method": "Daskeyboardq.signals.skip(string?: reason)", "Runtime method": "runAction(\"daskeyboardq.signals\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Name", "Helper text": "Name of the Signal", "Slug": "name", "Required": "true", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setName(string: name)"}}, {"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Helper text": "Key which will be colored when the Signal is received", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Message", "Helper text": "Message of the Signal", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"}}, {"section": "Action fields", "title": "Effect\nDropdown list", "description": "Dropdown list", "details": {"Label": "Effect", "Helper text": "The effect is how your color will be displayed", "Slug": "effect", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This will turn on the WiZ lights of your choice in the mode and brightness you defined whenever your Wyze Cam detects motion.", "trigger_channel": "Wyze", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "wyzecam.motion_trigger"}, "trigger_details": [{"section": "Trigger fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Motion detected\nMotion detected on your wyze camera.", "description": "Motion detected on your wyze camera.", "details": {"Slug": "TriggerMessage", "Filter code": "Wyzecam.motionTrigger.MotionDetected", "Type": "String", "Example": "Motion detected on your wyze camera."}}, {"section": "Ingredients", "title": "Trigger time\nTime when motion is triggered.", "description": "Time when motion is triggered.", "details": {"Slug": "trigger_time", "Filter code": "Wyzecam.motionTrigger.TriggerTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Capture an amazing sunset? A bluer-than-blue ocean? Use the hashtag #Hue on your Insta and this Applet will do its best to match your lighting. Magic mood! ", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.new_photo_by_you_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Caption\nThe full caption", "description": "The full caption", "details": {"Slug": "Caption", "Filter code": "Instagram.newPhotoByYouTagged.Caption", "Type": "String", "Example": "A cool photo #tbt #IFTTT"}}, {"section": "Ingredients", "title": "Caption no tag\nThe caption without the specified tag", "description": "The caption without the specified tag", "details": {"Slug": "CaptionNoTag", "Filter code": "Instagram.newPhotoByYouTagged.CaptionNoTag", "Type": "String", "Example": "A cool photo #IFTTT"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.newPhotoByYouTagged.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.newPhotoByYouTagged.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.newPhotoByYouTagged.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.newPhotoByYouTagged.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_from_image_all_hue", "Filter code method": "Hue.setColorFromImageAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_from_image_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Color mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color mode", "Slug": "color_mode", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorFromImageAllHue.setColor Mode(string: color_mode)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Slug": "image_url", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorFromImageAllHue.setImage Url(string: image_url)"}}, {"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet will append today's current Weather Underground report at the time you specify to a stream named \"weather-underground-today\" in a data.world dataset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "data.world", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "datadotworld.append", "Filter code method": "Datadotworld.append.skip(string?: reason)", "Runtime method": "runAction(\"datadotworld.append\", {})"}, "action_details": [{"section": "Action fields", "title": "Dataset key\nDropdown list", "description": "Dropdown list", "details": {"Label": "Dataset or Data Project", "Helper text": "Which dataset or data project would you like to update? <a href=\"https://data.world/create-a-dataset\" target=\"_blank\">Create new</a>", "Slug": "dataset_key", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Stream name\nText input > File name", "description": "Text input > File name", "details": {"Label": "Stream", "Helper text": "Which stream would you like to append records to? IMPORTANT: Stream names can only contain lowercase letters, numbers and dashes (e.g. my-stream).", "Slug": "stream_name", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setStream Name(string: stream_name)"}}, {"section": "Action fields", "title": "Payload\nText input > Other", "description": "Text input > Other", "details": {"Label": "Record", "Helper text": "Which keys and values would you like in your record? Keys and values must be separated by &quot;||&quot;. Key-value pairs must be separated by &quot;|||&quot;. Example: first||Steve|||last||Rogers", "Slug": "payload", "Required": "true", "Can have default value": "true", "Filter code method": "Datadotworld.append.setPayload(string: payload)"}}], "filter_code": "const forecast = (Weather.currentWeatherAtTime as any)\nconst pairs = Object.getOwnPropertyNames(forecast).map(prop => prop + \"||\" + forecast[prop])\nDatadotworld.append.setPayload(pairs.join(\"|||\"))\n\n"}
{"original_description": "Leave a voicemail at your special IFTTT phone number, and the contents will be added as a task to Remember The Milk. Smart Add syntax is supported, e.g. \"Call Bob at 9am Monday\".", "trigger_channel": "Phone Call (US only)", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "phone_call.leave_ifttt_a_voicemail"}, "trigger_details": [{"section": "Ingredients", "title": "Temporary mp3 url\nA public URL to the voicemail audio in mp3 format that anyone can visit for 30 days.", "description": "A public URL to the voicemail audio in mp3 format that anyone can visit for 30 days.", "details": {"Slug": "TemporaryMp3Url", "Filter code": "PhoneCall.leaveIftttAVoicemail.TemporaryMp3Url", "Type": "File URL", "Example": "http://media.ifttt.com/calls/4-RE16dd33bca24641284e2bdffc6c246427.mp3"}}, {"section": "Ingredients", "title": "From\nThe phone number you called ifttt from.", "description": "The phone number you called ifttt from.", "details": {"Slug": "From", "Filter code": "PhoneCall.leaveIftttAVoicemail.From", "Type": "String", "Example": "(415)-222-2222"}}, {"section": "Ingredients", "title": "Message\nThe transcribed message.", "description": "The transcribed message.", "details": {"Slug": "Message", "Filter code": "PhoneCall.leaveIftttAVoicemail.Message", "Type": "String", "Example": "Hello, it is a really sunny day in..."}}, {"section": "Ingredients", "title": "Mp3 url\nA public URL to the voicemail audio in mp3 format.", "description": "A public URL to the voicemail audio in mp3 format.", "details": {"Slug": "Mp3Url", "Filter code": "PhoneCall.leaveIftttAVoicemail.Mp3Url", "Type": "String", "Example": "http://media.ifttt.com/calls/4-RE16dd33bca24641284e2bdffc6c246427.mp3"}}, {"section": "Ingredients", "title": "Received at\nThe date and time you called ifttt.", "description": "The date and time you called ifttt.", "details": {"Slug": "ReceivedAt", "Filter code": "PhoneCall.leaveIftttAVoicemail.ReceivedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Remember The Milk", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rememberthemilk.tasks_add", "Filter code method": "Rememberthemilk.tasksAdd.skip(string?: reason)", "Runtime method": "runAction(\"rememberthemilk.tasks_add\", {})"}, "action_details": [{"section": "Action fields", "title": "Task\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Task name", "Helper text": "Task name with properties in <a href=\"https://www.rememberthemilk.com/help/answer/basics-smartadd-howdoiuse\" target=\"_blank\">Smart Add</a> format. E.g. &quot;Call Bob at 9am Monday #work&quot;.", "Slug": "task", "Required": "true", "Can have default value": "true", "Filter code method": "Rememberthemilk.tasksAdd.setTask(string: task)"}}], "filter_code": NaN}
{"original_description": "Select a time that you normally go to bed and your eWeLink 4 Channels Plug will let you know it's time to go to sleep.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.plugs3_action", "Filter code method": "Ewelink.plugs3Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.plugs3_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Plugs3 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 3-Channel Plug?", "Slug": "plugs3_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Plugs3 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "plugs3_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This will automatically change the WiZ light(s) of your choice to red whenever the price of the stock you have selected falls by more than a certain percentage compared to the previous closing price. (Only for WiZ Colors lights)", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.percentage_rise_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Percentage\nText input", "description": "Text input", "details": {"Label": "Percentage increase", "Helper text": "e.g. insert 15 for 15%", "Slug": "percentage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.percentageRiseStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.percentageRiseStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last price", "description": "The last price", "details": {"Slug": "Price", "Filter code": "Finance.percentageRiseStocks.Price", "Type": "String", "Example": "89"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.percentageRiseStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.percentageRiseStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Percentage change\nThe percentage change", "description": "The percentage change", "details": {"Slug": "PercentageChange", "Filter code": "Finance.percentageRiseStocks.PercentageChange", "Type": "String", "Example": "42"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Set it and forget it. When your SmartThings device no longer detects a presence in your home, this applet will enable your robot to start cleaning.", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.new_present_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Arrived at\nThe date and time you arrived.", "description": "The date and time you arrived.", "details": {"Slug": "ArrivedAt", "Filter code": "SmartthingsV2.newPresentSmartthings.ArrivedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.newPresentSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.start_robot", "Filter code method": "Irobot.startRobot.skip(string?: reason)", "Runtime method": "runAction(\"irobot.start_robot\", {})"}, "action_details": [{"section": "Action fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "To-do? To-watch! Choose the channel, and when they post a new video the link and title will be added to the Todoist project you specify. ", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.new_video_by_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "What kind of videos\nDropdown list", "description": "Dropdown list", "details": {"Label": "What kind of videos?", "Helper text": "Archived broadcasts, only the highlights, or any.", "Slug": "what_kind_of_videos", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.newVideoByChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Video title\nThe title of the video.", "description": "The title of the video.", "details": {"Slug": "video_title", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoTitle", "Type": "String", "Example": "Twitch Weekly - February 6, 2015"}}, {"section": "Ingredients", "title": "Video description\nThe description of the video.", "description": "The description of the video.", "details": {"Slug": "video_description", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoDescription", "Type": "String", "Example": "Twitch Weekly LIVE on February 6, 2015!"}}, {"section": "Ingredients", "title": "Video preview image\nThe URL to a preview image of the video.", "description": "The URL to a preview image of the video.", "details": {"Slug": "video_preview_image", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoPreviewImage", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Video url\nThe URL to the video on Twitch.", "description": "The URL to the video on Twitch.", "details": {"Slug": "video_url", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Video channel\nThe name of the video's channel", "description": "The name of the video's channel", "details": {"Slug": "video_channel", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoChannel", "Type": "String", "Example": "Twitch"}}, {"section": "Ingredients", "title": "Video channel url\nThe URL to the video's channel on Twitch.", "description": "The URL to the video's channel on Twitch.", "details": {"Slug": "video_channel_url", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}], "action_channel": "Todoist", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "todoist.create_task", "Filter code method": "Todoist.createTask.skip(string?: reason)", "Runtime method": "runAction(\"todoist.create_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Project\nDropdown list", "description": "Dropdown list", "details": {"Label": "Project and section", "Helper text": "Project and section to which the task belongs", "Slug": "project_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task content\nText input", "description": "Text input", "details": {"Label": "Task content", "Helper text": "<a href=\"https://todoist.com/help/articles/205195102\" target=\"_blank\">Text formatting guide</a> and <a href=\"https://todoist.com/help/articles/360000029000\" target=\"_blank\">label format guide</a>", "Slug": "task_content", "Required": "true", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Content(string: task_content)"}}, {"section": "Action fields", "title": "Note\nText input > Other", "description": "Text input > Other", "details": {"Label": "Note", "Helper text": "Add additional task note", "Slug": "note", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setNote(string: note)"}}, {"section": "Action fields", "title": "Due date\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task's due date", "Helper text": "Check the <a href=\"https://todoist.com/help/articles/205325931\" target=\"_blank\">Due dates and times format guide</a>", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setDue Date(string: due_date)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Priority", "Helper text": "Task's priority", "Slug": "priority", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setPriority(string: priority)"}}, {"section": "Action fields", "title": "Task description\nText input > Other", "description": "Text input > Other", "details": {"Label": "Task description", "Helper text": "Task's description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Todoist.createTask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "This will automatically turn on the WiZ light(s) of your choice whenever your Withings Sleep detects that you're getting out of bed. No need to reach for the switch anymore!", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "This will turn off the WiZ light(s) of your choice whenever your Withings Sleep detects that you get into bed. Don't worry about turning off the lights anymore, just aim for the pillow and let WiZ do the rest!", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_off", "Filter code method": "Wiz.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "Select the lights you want to turn off.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet will change the color of a Philips Hue light bulb into green when the hour with the lowest CO2 intensity in the electricity production between a starting time and a finish time is reached", "trigger_channel": "Watts", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "watts.lowcarbon"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nDropdown list", "description": "Dropdown list", "details": {"Label": "Location", "Helper text": "Please select one of your Watts locations", "Slug": "location", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Start hour\nDropdown list", "description": "Dropdown list", "details": {"Label": "Starting time", "Helper text": "Example: You are leaving home at 07:00 in the morning and need your dishwasher to be finished at 16:00 in the afternoon when you return. The dishwasher takes two hours to complete its normal washing program. Set the starting time to 07:00.", "Slug": "start_hour", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "End hour\nDropdown list", "description": "Dropdown list", "details": {"Label": "Finish time", "Helper text": "Example: You are leaving home at 07:00 in the morning and need your dishwasher to be finished at 16:00 in the afternoon when you return. The dishwasher takes two hours to complete its normal washing program. Set the finish time to 16:00.", "Slug": "end_hour", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Run duration in hours\nDropdown list", "description": "Dropdown list", "details": {"Label": "Duration", "Helper text": "Example: You need your dishwasher to be finished at 16:00. The dish washer takes two hours to complete its normal washing program. In this case Watts will start the dishwasher at least two hours before the finish time. Set the Duration to 2 hours.", "Slug": "run_duration_in_hours", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Start time\nStart of time range trigger could have been activated at.", "description": "Start of time range trigger could have been activated at.", "details": {"Slug": "start_time", "Filter code": "Watts.lowcarbon.StartTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "End time\nSpecified end of time range (with run duration included) trigger could have been activated at.", "description": "Specified end of time range (with run duration included) trigger could have been activated at.", "details": {"Slug": "end_time", "Filter code": "Watts.lowcarbon.EndTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Run duration\nSpecified run duration.", "description": "Specified run duration.", "details": {"Slug": "run_duration", "Filter code": "Watts.lowcarbon.RunDuration", "Type": "String", "Example": "2"}}, {"section": "Ingredients", "title": "Co2 level\nAverage CO2 level during the run trigger activated.", "description": "Average CO2 level during the run trigger activated.", "details": {"Slug": "co2_level", "Filter code": "Watts.lowcarbon.Co2Level", "Type": "String", "Example": "126"}}, {"section": "Ingredients", "title": "Executed at\nTime trigger was activated at.", "description": "Time trigger was activated at.", "details": {"Slug": "executed_at", "Filter code": "Watts.lowcarbon.ExecutedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Location name\nName of the location CO2 level is referred to.", "description": "Name of the location CO2 level is referred to.", "details": {"Slug": "location_name", "Filter code": "Watts.lowcarbon.LocationName", "Type": "String", "Example": "Herstedøstervej 23"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "This will change the WiZ light(s) of your choice to red whenever the CO₂ level measured by your Netatmo Weather Station rises above a certain point. We suggest 1,000ppm as default - you can change it to fit your needs. (Only for WiZ Colors lights)", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.noise-rises-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target noise level", "Helper text": "In decibels (dB)", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured noise level\nThe measured noise level in decibels", "description": "The measured noise level in decibels", "details": {"Slug": "MeasuredNoiseLevel", "Filter code": "Netatmo.noiseRisesAbove.MeasuredNoiseLevel", "Type": "String", "Example": "73"}}, {"section": "Ingredients", "title": "Target noise level\nThe target noise level in decibels", "description": "The target noise level in decibels", "details": {"Slug": "TargetNoiseLevel", "Filter code": "Netatmo.noiseRisesAbove.TargetNoiseLevel", "Type": "String", "Example": "53"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.noiseRisesAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the noise", "description": "This is the name of the Netamo device where you are reading the noise", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.noiseRisesAbove.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}], "action_channel": "WiZ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wiz.turn_on", "Filter code method": "Wiz.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"wiz.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Entity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light(s)?", "Helper text": "This can be the whole home, a room, a group, or a light.", "Slug": "entity", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What light mode / color?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setMode(string: mode)"}}, {"section": "Action fields", "title": "Dimming\nDropdown list", "description": "Dropdown list", "details": {"Label": "What brightness?", "Helper text": "Select the brightness level of your choice.", "Slug": "dimming", "Required": "true", "Can have default value": "true", "Filter code method": "Wiz.turnOn.setDimming(string: dimming)"}}], "filter_code": NaN}
{"original_description": "Quick and easy way to control your SkylinkNet light switch", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SkylinkNet", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "skylinknet.dev_on", "Filter code method": "Skylinknet.devOn.skip(string?: reason)", "Runtime method": "runAction(\"skylinknet.dev_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Hub dev\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "hub_dev", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Key\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hub Password", "Slug": "key", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Quickly toggle your WeMo Light Switch on and off with this Button Widget. Note: IFTTT app is needed for this Applet.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsToggleDiscrete", "Filter code method": "WemoLightSwitch.attributeLsToggleDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsToggleDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Set the time everyday you would like to have your WeMo light switch automatically turn off.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "WeMo Light Switch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_light_switch.attribute_lsOffDiscrete", "Filter code method": "WemoLightSwitch.attributeLsOffDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_light_switch.attribute_lsOffDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light switch?", "Helper text": "Name of your WeMo light switch.", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Wake up with the sun by having your WeMo dimmer turn on at sunrise.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Wemo Dimmer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_dimmer.attribute_dimmerOnDiscrete", "Filter code method": "WemoDimmer.attributeDimmerOnDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_dimmer.attribute_dimmerOnDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Dimmer?", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Brighten the lights connected to your WeMo Dimmer at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Wemo Dimmer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wemo_dimmer.attribute_dimmerBrightnessChangeDiscrete", "Filter code method": "WemoDimmer.attributeDimmerBrightnessChangeDiscrete.skip(string?: reason)", "Runtime method": "runAction(\"wemo_dimmer.attribute_dimmerBrightnessChangeDiscrete\", {})"}, "action_details": [{"section": "Action fields", "title": "Macaddress\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Dimmer?", "Slug": "macaddress", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Subtype\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness Level", "Helper text": "Brightness Level", "Slug": "subType", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "At sunrise of your location, turn on/off 1-channel switch or plug. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "eWeLink Smart Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ewelink.switches3_action", "Filter code method": "Ewelink.switches3Action.skip(string?: reason)", "Runtime method": "runAction(\"ewelink.switches3_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Switches3 query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which 3-Channel Switch?", "Slug": "switches3_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Switches3 outlet query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Slug": "switches3_outlet_query", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Onoff act query\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or off?", "Slug": "onoff_act_query", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Best for turning on an outdoor or porch light at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Hager IoT", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hager_iot.switchon", "Filter code method": "HagerIot.switchon.skip(string?: reason)", "Runtime method": "runAction(\"hager_iot.switchon\", {})"}, "action_details": [{"section": "Action fields", "title": "Cid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "cid", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Best for turning off an outdoor or porch light when the sun rises.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Hager IoT", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hager_iot.switchoff", "Filter code method": "HagerIot.switchoff.skip(string?: reason)", "Runtime method": "runAction(\"hager_iot.switchoff\", {})"}, "action_details": [{"section": "Action fields", "title": "Cid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "cid", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Switches on the Philips Hue light you select when Apilio triggers the action you specify.", "trigger_channel": "Apilio", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "apilio.ifttt_action_reports"}, "trigger_details": [{"section": "Trigger fields", "title": "Ifttt action identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the name of the Apilio event?", "Slug": "ifttt_action_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Apilio.iftttActionReports.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event name\nName of the event that was received.", "description": "Name of the event that was received.", "details": {"Slug": "ifttt_action_name", "Filter code": "Apilio.iftttActionReports.EventName", "Type": "String", "Example": "run_only_at_nighttime"}}, {"section": "Ingredients", "title": "Apilio value1\nValue 1 received from Apilio", "description": "Value 1 received from Apilio", "details": {"Slug": "custom_value_1", "Filter code": "Apilio.iftttActionReports.ApilioValue1", "Type": "String", "Example": "Green"}}, {"section": "Ingredients", "title": "Apilio value2\nValue 2 received from Apilio", "description": "Value 2 received from Apilio", "details": {"Slug": "custom_value_2", "Filter code": "Apilio.iftttActionReports.ApilioValue2", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Apilio value3\nValue 3 received from Apilio", "description": "Value 3 received from Apilio", "details": {"Slug": "custom_value_3", "Filter code": "Apilio.iftttActionReports.ApilioValue3", "Type": "String", "Example": "Red"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use the button widget as a remote control for your home, turning on or off lights, coffee machines, fans, or anything else. This Applet requires special hardware, the SwitchBot and the SwitchBot Hub.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.press_bot", "Filter code method": "Switchbot.pressBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.press_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "IFTTT経由で「SwitchBot」を押します。該当のウィジェットも作ることができます。", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.press_bot", "Filter code method": "Switchbot.pressBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.press_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "IFTTT経由で「SwitchBot」をオフにします。該当のウィジェットも作ることができます。", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.turn_off_bot", "Filter code method": "Switchbot.turnOffBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.turn_off_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Tap a button on your mobile device to turn on a Hubitat light, switch, etc.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_on", "Filter code method": "Hubitat.actionOn.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "IFTTT経由で「SwitchBot」をオンにします。該当のウィジェットも作ることができます。", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SwitchBot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "switchbot.turn_on_bot", "Filter code method": "Switchbot.turnOnBot.skip(string?: reason)", "Runtime method": "runAction(\"switchbot.turn_on_bot\", {})"}, "action_details": [{"section": "Action fields", "title": "Chose a device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Choose a device", "Slug": "chose_a_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Tap a button on your mobile device to turn off a Hubitat light, switch, alarm, etc.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_off", "Filter code method": "Hubitat.actionOff.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use with an abode light switch to turn outside lights off after each day's sunrise.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "abode", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "abode.turn_on_switch", "Filter code method": "Abode.turnOnSwitch.skip(string?: reason)", "Runtime method": "runAction(\"abode.turn_on_switch\", {})"}, "action_details": [{"section": "Action fields", "title": "Select switch\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Slug": "select_switch", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Switch off your Hue bulbs in a Niko Home Control All Off routine", "trigger_channel": "Niko Home Control", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nikohomecontrol.routine_activated"}, "trigger_details": [{"section": "Trigger fields", "title": "Routine\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Routine will be the trigger?", "Helper text": "Select the Routine which will trigger an action when it is activated", "Slug": "routine", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nikohomecontrol.routineActivated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Routine\nThe Routine which was activated.", "description": "The Routine which was activated.", "details": {"Slug": "routine", "Filter code": "Nikohomecontrol.routineActivated.Routine", "Type": "String", "Example": "Party"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Get your outdoor plants' watering organized. Automatically record rainfall in a Google spreadsheet!", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.rain-yesterday-amount"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.rainYesterdayAmount.DeviceName", "Type": "String", "Example": "My Rain gauge"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occured", "description": "The date and time the measurement occured", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.rainYesterdayAmount.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Measured rainfall in\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "MeasuredRainfallIn", "Filter code": "Netatmo.rainYesterdayAmount.MeasuredRainfallIn", "Type": "String", "Example": "0.43"}}, {"section": "Ingredients", "title": "Measured rainfall mm\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "MeasuredRainfallMM", "Filter code": "Netatmo.rainYesterdayAmount.MeasuredRainfallMM", "Type": "String", "Example": "10.92"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Sync the notes you want: when you add the tag \"Dropbox\" to a note (or customize with your own), it'll be created as text file in Dropbox. Oooh. The cloud! ☁️", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.add_tag_to_note"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Specific tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.addTagToNote.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.addTagToNote.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.addTagToNote.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.addTagToNote.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.addTagToNote.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.create_text_file_db", "Filter code method": "Dropbox.createTextFileDb.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.create_text_file_db\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.createTextFileDb.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Content", "Helper text": "Use &lt;br&gt; to add line breaks", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.createTextFileDb.setBody(string: body)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.createTextFileDb.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Automatically have a task added to your Google Task list when there is a new event created on your Google Calendar.", "trigger_channel": "Google Calendar", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_calendar.new_event_added"}, "trigger_details": [{"section": "Trigger fields", "title": "Calendar\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which calendar?", "Slug": "calendar", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe event's title.", "description": "The event's title.", "details": {"Slug": "Title", "Filter code": "GoogleCalendar.newEventAdded.Title", "Type": "String", "Example": "Practice Presentation"}}, {"section": "Ingredients", "title": "Description\nThe event's description.", "description": "The event's description.", "details": {"Slug": "Description", "Filter code": "GoogleCalendar.newEventAdded.Description", "Type": "String", "Example": "Make a presentation about new channels on ifttt"}}, {"section": "Ingredients", "title": "Where\nThe location where the event takes place.", "description": "The location where the event takes place.", "details": {"Slug": "Where", "Filter code": "GoogleCalendar.newEventAdded.Where", "Type": "String", "Example": "Building A, Room 101"}}, {"section": "Ingredients", "title": "Starts\nDate and time the event starts.", "description": "Date and time the event starts.", "details": {"Slug": "Starts", "Filter code": "GoogleCalendar.newEventAdded.Starts", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Ends\nDate and time the event ends.", "description": "Date and time the event ends.", "details": {"Slug": "Ends", "Filter code": "GoogleCalendar.newEventAdded.Ends", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event url\nThe URL to the event on Google Calendar.", "description": "The URL to the event on Google Calendar.", "details": {"Slug": "EventUrl", "Filter code": "GoogleCalendar.newEventAdded.EventUrl", "Type": "Web URL", "Example": "https://www.google.com/calendar/event?eid=bmpmaDhnMm"}}, {"section": "Ingredients", "title": "Video call url\nA URL to the video call for the event if it exists.", "description": "A URL to the video call for the event if it exists.", "details": {"Slug": "HangoutsUrl", "Filter code": "GoogleCalendar.newEventAdded.VideoCallUrl", "Type": "Web URL", "Example": "https://meet.google.com"}}, {"section": "Ingredients", "title": "Created at\nDate and time the event was created.", "description": "Date and time the event was created.", "details": {"Slug": "CreatedAt", "Filter code": "GoogleCalendar.newEventAdded.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThe type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "description": "The type of the event. Can be \"birthday\", \"default\", \"focusTime\", \"fromGmail\", \"outOfOffice\", and \"workingLocation\".", "details": {"Slug": "EventType", "Filter code": "GoogleCalendar.newEventAdded.EventType", "Type": "String", "Example": "outOfOffice"}}], "action_channel": "Google Tasks", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_tasks.add_task_to_tasklist", "Filter code method": "GoogleTasks.addTaskToTasklist.skip(string?: reason)", "Runtime method": "runAction(\"google_tasks.add_task_to_tasklist\", {})"}, "action_details": [{"section": "Action fields", "title": "Tasklist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which task list?", "Helper text": "The task list to which the task should be added.", "Slug": "tasklist_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task title\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What is the title of the task?", "Slug": "task_title", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Title(string: task_title)"}}, {"section": "Action fields", "title": "Task notes\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What are the notes to include in the task?", "Helper text": "Notes describing the task", "Slug": "task_notes", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setTask Notes(string: task_notes)"}}, {"section": "Action fields", "title": "Due date\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Does the task have a due date?", "Helper text": "Field only sets the date. Ex. Next Tuesday, Today.", "Slug": "due_date", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleTasks.addTaskToTasklist.setDue Date(string: due_date)"}}], "filter_code": NaN}
{"original_description": "Set your Philips Hue lights to automatically turn orange if the temperature is below 10° outside.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.temperature-drops-below"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target temperature", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the temperature", "description": "This is the name of the Netamo device where you are reading the temperature", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.temperatureDropsBelow.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}, {"section": "Ingredients", "title": "Target temperature c\nThe target temperature in degrees Celsius", "description": "The target temperature in degrees Celsius", "details": {"Slug": "TargetTemperatureC", "Filter code": "Netatmo.temperatureDropsBelow.TargetTemperatureC", "Type": "String", "Example": "22.22"}}, {"section": "Ingredients", "title": "Target temperature f\nThe target temperature in degrees Fahrenheit", "description": "The target temperature in degrees Fahrenheit", "details": {"Slug": "TargetTemperatureF", "Filter code": "Netatmo.temperatureDropsBelow.TargetTemperatureF", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Measured temperature c\nThe measured temperature in degrees Celsius", "description": "The measured temperature in degrees Celsius", "details": {"Slug": "MeasuredTemperatureC", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredTemperatureC", "Type": "String", "Example": "22.78"}}, {"section": "Ingredients", "title": "Measured temperature f\nThe measured temperature in degrees Fahrenheit", "description": "The measured temperature in degrees Fahrenheit", "details": {"Slug": "MeasuredTemperatureF", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredTemperatureF", "Type": "String", "Example": "73"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "This Applet turns your Evernote notes into tasks - you specify the project and section as well as the task title.", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "MeisterTask", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "meistertask.create_a_task", "Filter code method": "Meistertask.createATask.skip(string?: reason)", "Runtime method": "runAction(\"meistertask.create_a_task\", {})"}, "action_details": [{"section": "Action fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which section?", "Slug": "section_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Task name\nText input > Title", "description": "Text input > Title", "details": {"Label": "Task name", "Slug": "task_name", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Task description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Slug": "task_description", "Required": "false", "Can have default value": "true", "Filter code method": "Meistertask.createATask.setTask Description(string: task_description)"}}], "filter_code": NaN}
{"original_description": "Create your own visual alert by blinking your Philips Hue lights when air quality goes bad.", "trigger_channel": "uHoo", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "uhoo.sensor_notification"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which uHoo?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Sensor\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which air quality parameter?", "Slug": "sensor", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nText input", "description": "Text input", "details": {"Label": "What is the target level?", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Sign\nDropdown list", "description": "Dropdown list", "details": {"Label": "Trigger alert when above or below target level?", "Slug": "sign", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Uhoo.sensorNotification.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Uhoo name\nThis is the name of your uHoo.", "description": "This is the name of your uHoo.", "details": {"Slug": "uhoo_name", "Filter code": "Uhoo.sensorNotification.UhooName", "Type": "String", "Example": "My Home"}}, {"section": "Ingredients", "title": "Sensor name\nThis is the parameter that triggered the alert.", "description": "This is the parameter that triggered the alert.", "details": {"Slug": "sensor", "Filter code": "Uhoo.sensorNotification.SensorName", "Type": "String", "Example": "Temperature"}}, {"section": "Ingredients", "title": "Sensor value\nThis is the parameter value when alert happened.", "description": "This is the parameter value when alert happened.", "details": {"Slug": "sensor_data", "Filter code": "Uhoo.sensorNotification.SensorValue", "Type": "String", "Example": "23.5"}}, {"section": "Ingredients", "title": "Sensor unit\nThis is the parameter unit.", "description": "This is the parameter unit.", "details": {"Slug": "sensor_unit", "Filter code": "Uhoo.sensorNotification.SensorUnit", "Type": "String", "Example": "°C"}}, {"section": "Ingredients", "title": "My threshold\nThis is the target level you set to trigger the alert.", "description": "This is the target level you set to trigger the alert.", "details": {"Slug": "my_threshold", "Filter code": "Uhoo.sensorNotification.MyThreshold", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Above or below\nThis tells you whether alert was sent when it's above or below your threshold", "description": "This tells you whether alert was sent when it's above or below your threshold", "details": {"Slug": "trigger_condition", "Filter code": "Uhoo.sensorNotification.AboveOrBelow", "Type": "String", "Example": "above"}}, {"section": "Ingredients", "title": "Data temperature\nThis is the Temperature value", "description": "This is the Temperature value", "details": {"Slug": "data_temp", "Filter code": "Uhoo.sensorNotification.DataTemperature", "Type": "String", "Example": "23.4"}}, {"section": "Ingredients", "title": "Data humidity\nThis is the Relative Humidity in %", "description": "This is the Relative Humidity in %", "details": {"Slug": "data_humidity", "Filter code": "Uhoo.sensorNotification.DataHumidity", "Type": "String", "Example": "56.7"}}, {"section": "Ingredients", "title": "Data pm25\nThis is the PM2.5 level in ug/m3", "description": "This is the PM2.5 level in ug/m3", "details": {"Slug": "data_dust", "Filter code": "Uhoo.sensorNotification.DataPm25", "Type": "String", "Example": "12.3"}}, {"section": "Ingredients", "title": "Data co2\nThis is the Carbon Dioxide (CO2) level in ppm", "description": "This is the Carbon Dioxide (CO2) level in ppm", "details": {"Slug": "data_co2", "Filter code": "Uhoo.sensorNotification.DataCo2", "Type": "String", "Example": "437"}}, {"section": "Ingredients", "title": "Data co\nThis is the Carbon Monoxide (CO) level in ppm", "description": "This is the Carbon Monoxide (CO) level in ppm", "details": {"Slug": "data_co", "Filter code": "Uhoo.sensorNotification.DataCo", "Type": "String", "Example": "1.3"}}, {"section": "Ingredients", "title": "Data tvoc\nThis is the TVOC level in ppb", "description": "This is the TVOC level in ppb", "details": {"Slug": "data_voc", "Filter code": "Uhoo.sensorNotification.DataTvoc", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Data no2\nThis is the Nitrogen Dioxide (NO2) level in ppb", "description": "This is the Nitrogen Dioxide (NO2) level in ppb", "details": {"Slug": "data_no2", "Filter code": "Uhoo.sensorNotification.DataNo2", "Type": "String", "Example": "12"}}, {"section": "Ingredients", "title": "Data ozone\nThis is the Ozone level in ppb", "description": "This is the Ozone level in ppb", "details": {"Slug": "data_ozone", "Filter code": "Uhoo.sensorNotification.DataOzone", "Type": "String", "Example": "10"}}, {"section": "Ingredients", "title": "Data air pressure\nThis is the Air Pressure level in hPa", "description": "This is the Air Pressure level in hPa", "details": {"Slug": "data_airpressure", "Filter code": "Uhoo.sensorNotification.DataAirPressure", "Type": "String", "Example": "1013.0"}}, {"section": "Ingredients", "title": "Data virus index\nThis is the uHoo Virus Index", "description": "This is the uHoo Virus Index", "details": {"Slug": "data_virusindex", "Filter code": "Uhoo.sensorNotification.DataVirusIndex", "Type": "String", "Example": "7"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": NaN, "trigger_channel": "Android Battery", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_battery.battery_plugged_in"}, "trigger_details": [{"section": "Ingredients", "title": "Power source\nThe source of the charge.", "description": "The source of the charge.", "details": {"Slug": "PowerSource", "Filter code": "AndroidBattery.batteryPluggedIn.PowerSource", "Type": "String", "Example": "AC"}}, {"section": "Ingredients", "title": "Battery percentage\nThe battery percentage of the device.", "description": "The battery percentage of the device.", "details": {"Slug": "BatteryPercentage", "Filter code": "AndroidBattery.batteryPluggedIn.BatteryPercentage", "Type": "String", "Example": "79"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the device was plugged in.", "description": "The time the device was plugged in.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidBattery.batteryPluggedIn.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the battery event occurred.", "description": "The name of the device on which the battery event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidBattery.batteryPluggedIn.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Telldus Live!", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telldus.turn_on_a_device", "Filter code method": "Telldus.turnOnADevice.skip(string?: reason)", "Runtime method": "runAction(\"telldus.turn_on_a_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Which device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "which_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Let MyQ garage close automatically whenever you lock your August lock.\n\nThis applet requires an active account linking subscription.", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_locked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Locked at\nDate and time lock was locked.", "description": "Date and time lock was locked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockLocked.LockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who locked the lock.", "description": "The user who locked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockLocked.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockLocked.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockLocked.HouseName", "Type": "String", "Example": "San Diego beach house"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who locked the lock.", "description": "An image url to the profile photo of the user who locked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockLocked.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "MyQ", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "myq_devices.close_door", "Filter code method": "MyqDevices.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"myq_devices.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door name\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the door name?", "Slug": "door_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have your Philips Hue lights blink to let you know that your oven with Home Connect has finished cooking.", "trigger_channel": "Home Connect Oven", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_oven.oven_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which oven?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcOven.ovenFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have your Philips hue lights change color when your oven with Home Connect has finished preheating.", "trigger_channel": "Home Connect Oven", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_oven.oven_preheated"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which oven?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcOven.ovenPreheated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "Keep track how often your dishwasher runs. Every finished dishwasher cycle gets logged into a Google spreadsheet.\n", "trigger_channel": "Home Connect Dishwasher", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDishwasher.dishwasherCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Keep track how often you wash. Every finished washer cycle gets logged into a Google spreadsheet.", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Connect Spotify with Google Sheets to keep track of all of your recently played tracks", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_recently_played_track"}, "trigger_details": [{"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newRecentlyPlayedTrack.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newRecentlyPlayedTrack.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newRecentlyPlayedTrack.TrackUrl", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Played at\nThe time at which the track was played.", "description": "The time at which the track was played.", "details": {"Slug": "played_at", "Filter code": "Spotify.newRecentlyPlayedTrack.PlayedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newRecentlyPlayedTrack.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newRecentlyPlayedTrack.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Log in Google Sheets when you start your Home Connect washer", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_started"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleStarted.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Have your Philips Hue lights blink to let you know that your laundry is complete.", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have your Philips Hue lights blink to let you know that your dishwasher cycle is complete.", "trigger_channel": "Home Connect Dishwasher", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDishwasher.dishwasherCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Keep track how often your dryer runs. Every finished dryer cycle gets logged into a Google spreadsheet.\n", "trigger_channel": "Home Connect Dryer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dryer.dryer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dryer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDryer.dryerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Get a notification on your iPhone, Android phone or any other device when your washer cycle is complete.", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Have your Philips Hue lights blink to let you know that your dryer cycle is complete.", "trigger_channel": "Home Connect Dryer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dryer.dryer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dryer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDryer.dryerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When your Withings Sleep detects you getting out of bed, turn on your Home Connect Coffee Machine", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_turn_on", "Filter code method": "HcCoffeeMachine.coffeeMakerTurnOn.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Play music on your Android device when your laundry is complete.", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.play_best_song", "Filter code method": "AndroidDevice.playBestSong.skip(string?: reason)", "Runtime method": "runAction(\"android_device.play_best_song\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Play music on your Android device when your dishwasher cycle is complete.\n", "trigger_channel": "Home Connect Dishwasher", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDishwasher.dishwasherCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.play_best_song", "Filter code method": "AndroidDevice.playBestSong.skip(string?: reason)", "Runtime method": "runAction(\"android_device.play_best_song\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "When your oven reaches preheat temperature, blink your Philips Hue lights.", "trigger_channel": "Home Connect Oven", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_oven.oven_preheated"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which oven?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcOven.ovenPreheated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Play music on your Android device when your dryer cycle is complete.", "trigger_channel": "Home Connect Dryer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dryer.dryer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dryer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDryer.dryerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.play_best_song", "Filter code method": "AndroidDevice.playBestSong.skip(string?: reason)", "Runtime method": "runAction(\"android_device.play_best_song\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Go to bed without having to thinking about turning off the hood light. Just define a time every evening when the light shall turn off.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Home Connect Hood", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_hood.hood_turn_off_functional_light", "Filter code method": "HcHood.hoodTurnOffFunctionalLight.skip(string?: reason)", "Runtime method": "runAction(\"hc_hood.hood_turn_off_functional_light\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which hood?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have your Philips Hue lights blink to let you know that your Cookit has finished cooking.", "trigger_channel": "Home Connect Cookit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_cook_processor.cook_processor_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Cookit?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcCookProcessor.cookProcessorFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Let your Sonos speaker play a favorite tune, when your washer cycle is complete.", "trigger_channel": "Home Connect Washer", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_washer.washer_cycle_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which washer?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcWasher.washerCycleFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_favorite", "Filter code method": "Sonos.playFavorite.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_favorite\", {})"}, "action_details": [{"section": "Action fields", "title": "Favorite\nDropdown list", "description": "Dropdown list", "details": {"Label": "What favorite do you want to play?", "Helper text": "Choose a Sonos Favorite", "Slug": "favorite", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playFavorite.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "When opening your dishwasher door, turn on a lighting scene with your Philips Hue lights in your kitchen.", "trigger_channel": "Home Connect Dishwasher", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_door_opened"}, "trigger_details": [{"section": "Trigger fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "HcDishwasher.dishwasherDoorOpened.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_scene", "Filter code method": "Hue.setScene.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Helper text": "Don't see your scenes? Make sure your lights connected to the latest hue app for iOS or Android.", "Slug": "scene", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Start your favorite coffee program with your preferred settings using the Button widget. \n", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Coffee Machine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_coffee_machine.coffee_maker_start_program", "Filter code method": "HcCoffeeMachine.coffeeMakerStartProgram.skip(string?: reason)", "Runtime method": "runAction(\"hc_coffee_machine.coffee_maker_start_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which coffee machine?", "Helper text": "Please note that your coffee machine has to be connected and turned on (but not active) to be listed.", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Program\nDropdown list", "description": "Dropdown list", "details": {"Label": "Program", "Slug": "program", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Bean amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Strength", "Helper text": "Please note that not every value is supported by each program. For more information please check your user manual.", "Slug": "bean_amount", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fill quantity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Size", "Slug": "fill_quantity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Wake up every morning to clean dishes. Just define a time when your dishwasher shall start every evening. Please make sure that remote start is activated and the door is closed.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Home Connect Dishwasher", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_dishwasher.dishwasher_start_program", "Filter code method": "HcDishwasher.dishwasherStartProgram.skip(string?: reason)", "Runtime method": "runAction(\"hc_dishwasher.dishwasher_start_program\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which dishwasher?", "Helper text": "Please note that your dishwasher has to be connected (but not running) to be listed.", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Program\nDropdown list", "description": "Dropdown list", "details": {"Label": "Program", "Slug": "program", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Press the Button widget to activate the Super Cooling mode of the refrigerator.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Fridge Freezer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_fridge.freezer_activate_super_cooling", "Filter code method": "HcFridge.freezerActivateSuperCooling.skip(string?: reason)", "Runtime method": "runAction(\"hc_fridge.freezer_activate_super_cooling\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which fridge?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Press the Button widget to activate the Super Freezing mode of the freezer.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Home Connect Fridge Freezer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hc_fridge.freezer_activate_super_cooling", "Filter code method": "HcFridge.freezerActivateSuperCooling.skip(string?: reason)", "Runtime method": "runAction(\"hc_fridge.freezer_activate_super_cooling\", {})"}, "action_details": [{"section": "Action fields", "title": "Ha\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which fridge?", "Slug": "ha_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Weather getting warm outside? Turn down your LightwaveRF heating devices target temperature.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "LightwaveRF Heating", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lightwaverf_heating.set_temperature", "Filter code method": "LightwaverfHeating.setTemperature.skip(string?: reason)", "Runtime method": "runAction(\"lightwaverf_heating.set_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Which thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which thermostat/trv?", "Slug": "which_thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "What temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "What temperature?", "Helper text": "Temperatures can be between 1 and 39 degrees°C, in 0.5 degree increments (e.g. &quot;32&quot; or &quot;32.5&quot;). You cannot set temperature ranges (e.g. “22-30”).", "Slug": "what_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "LightwaverfHeating.setTemperature.setWhat Temperature(string: what_temperature)"}}], "filter_code": NaN}
{"original_description": "If it's raining outside, you'll want some nice warm colors inside! ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.color", "Filter code method": "Lifx.color.skip(string?: reason)", "Runtime method": "runAction(\"lifx.color\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color if off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on first?", "Helper text": "&quot;Yes&quot; will make your lights turn on to the color, even when they are turned off in the app.", "Slug": "color_if_off", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.color.setColor If Off(string: color_if_off)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: #ff0000; brightness: 0.3; duration: 12&quot; for red at 30% brightness, 12 second fade. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.color.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Stay organized and share all your Instagram pics to an album on your Facebook Page, automatically. Great for small business marketing! You can customize the Album name. Note: only works for single photo posts.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Facebook Pages", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "facebook_pages.create_photo_page", "Filter code method": "FacebookPages.createPhotoPage.skip(string?: reason)", "Runtime method": "runAction(\"facebook_pages.create_photo_page\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setMessage(string: message)"}}, {"section": "Action fields", "title": "Album\nText input > Other", "description": "Text input > Other", "details": {"Label": "Album name", "Helper text": "Provide the name of an existing album, or leave blank for no album. If a non-existent album name is provided, you'll receive <a href=\"https://help.ifttt.com/hc/en-us/articles/5343334604187\" target=\"_blank\">this error</a>", "Slug": "album", "Required": "false", "Can have default value": "true", "Filter code method": "FacebookPages.createPhotoPage.setAlbum(string: album)"}}], "filter_code": NaN}
{"original_description": "Inspired by the @MrFinanceiQ tweet: \"to waste £5,000 in a year, all it takes is to spend an unnecessary £13.70 a day.\"", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "Get a daily email digest of new shows for you based on your keyword or topic. This can also be used for episodes with the New episode from search trigger.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.search_show"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input", "description": "Text input", "details": {"Label": "query", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Show\nThe show's ID.", "description": "The show's ID.", "details": {"Slug": "show_id", "Filter code": "Spotify.searchShow.ShowId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "Show name\nThe name of the show.", "description": "The name of the show.", "details": {"Slug": "show_name", "Filter code": "Spotify.searchShow.ShowName", "Type": "String", "Example": "Darknet Diaries"}}, {"section": "Ingredients", "title": "Show description\nThe description of the show.", "description": "The description of the show.", "details": {"Slug": "show_description", "Filter code": "Spotify.searchShow.ShowDescription", "Type": "String", "Example": "Explore the dark side of the Internet with host Jack Rhysider as he takes you on a journey through the chilling world of privacy hacks, data breaches, and cyber crime. The masterful criminal hackers who dwell on the dark side show us just how vulnerable w"}}, {"section": "Ingredients", "title": "Show url\nThe URL to the show on Spotify.", "description": "The URL to the show on Spotify.", "details": {"Slug": "show_url", "Filter code": "Spotify.searchShow.ShowUrl", "Type": "Web URL", "Example": "https://open.spotify.com/show/4XPl3uEEL9hvqMkoZrzbx5"}}, {"section": "Ingredients", "title": "Show cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "show_cover_url", "Filter code": "Spotify.searchShow.ShowCoverUrl", "Type": "Image URL", "Example": "https://i.scdn.co/image/53ba2adaaf2d3e47898aed9edb64026145032e7b"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Press this handy button to liquidate all positions at the end of the day.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.liquidate_positions", "Filter code method": "Alpaca.liquidatePositions.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.liquidate_positions\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Kick off Mondays with an email full of startup news and analysis from the number one site reporting on tech. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Make it easier to never miss a notification by blinking your Hue Lights anytime you get a notification from a specific app. Enter the name of the app under the \"Which App\" field then choose which Hue lights you'd like to blink.", "trigger_channel": "Android Device", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_device.new_notification_from_app"}, "trigger_details": [{"section": "Trigger fields", "title": "App name\nText input", "description": "Text input", "details": {"Label": "App name", "Helper text": "e.g. Twitter", "Slug": "app_name", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by notification keyword", "Helper text": "e.g. mentioned", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Received at\nThe time the notification was received.", "description": "The time the notification was received.", "details": {"Slug": "ReceivedAt", "Filter code": "AndroidDevice.newNotificationFromApp.ReceivedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "App name\nThe application name of the notification", "description": "The application name of the notification", "details": {"Slug": "AppName", "Filter code": "AndroidDevice.newNotificationFromApp.AppName", "Type": "String", "Example": "Twitter"}}, {"section": "Ingredients", "title": "Notification message\nMessage text of the notification", "description": "Message text of the notification", "details": {"Slug": "NotificationMessage", "Filter code": "AndroidDevice.newNotificationFromApp.NotificationMessage", "Type": "String", "Example": "@jamisonross12 oh I love that song by Toto too!"}}, {"section": "Ingredients", "title": "Notification title\nTitle of the notification", "description": "Title of the notification", "details": {"Slug": "NotificationTitle", "Filter code": "AndroidDevice.newNotificationFromApp.NotificationTitle", "Type": "String", "Example": "Mentioned by @MrTibbets"}}, {"section": "Ingredients", "title": "Device name\nThe name of your device where the notification was received.", "description": "The name of your device where the notification was received.", "details": {"Slug": "device_name", "Filter code": "AndroidDevice.newNotificationFromApp.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Input a topic or keyword of your choice to get a notification anytime a new episode on this topic is released. We have added filter code to limit the notifications per day. This Applet can be re-created using the New show from search trigger as well or with an email digest as an action.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.search_episode"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input", "description": "Text input", "details": {"Label": "query", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Episode\nThe episode's ID.", "description": "The episode's ID.", "details": {"Slug": "episode_id", "Filter code": "Spotify.searchEpisode.EpisodeId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "Episode release date\nThe date when episode was released.", "description": "The date when episode was released.", "details": {"Slug": "episode_release_date", "Filter code": "Spotify.searchEpisode.EpisodeReleaseDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Episode name\nThe episode's name.", "description": "The episode's name.", "details": {"Slug": "episode_name", "Filter code": "Spotify.searchEpisode.EpisodeName", "Type": "String", "Example": "Is \\\"Resources\\\" a Dirty Word?"}}, {"section": "Ingredients", "title": "Episode cover url\nEpisode cover art.", "description": "Episode cover art.", "details": {"Slug": "episode_cover_url", "Filter code": "Spotify.searchEpisode.EpisodeCoverUrl", "Type": "Image URL", "Example": "https://i.scdn.co/image/a3f8306a743873e12282bf48395d9ad45e704cb7"}}, {"section": "Ingredients", "title": "Episode description\nThe episode's description. May contain HTML.", "description": "The episode's description. May contain HTML.", "details": {"Slug": "episode_description", "Filter code": "Spotify.searchEpisode.EpisodeDescription", "Type": "String", "Example": "In this episode, ..."}}, {"section": "Ingredients", "title": "Episode url\nThe URL to the episode on Spotify.", "description": "The URL to the episode on Spotify.", "details": {"Slug": "episode_url", "Filter code": "Spotify.searchEpisode.EpisodeUrl", "Type": "Web URL", "Example": "https://open.spotify.com/episode/19TIFzN141JLsIUFVPqS5Q"}}, {"section": "Ingredients", "title": "Episode languages\nA list of the languages used in the episode, identified by their ISO 639 code.", "description": "A list of the languages used in the episode, identified by their ISO 639 code.", "details": {"Slug": "episode_languages", "Filter code": "Spotify.searchEpisode.EpisodeLanguages", "Type": "String", "Example": "en,es"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_rich_notification", "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Helper text": "Optional, bold text above the message", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Helper text": "Optional, link may open in a browser or installed app", "Slug": "link_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Slow down for 5 minutes! Pick a time and remind yourself to sit quietly and meditate.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "An easy way to turn off your lights automatically at a fixed time, every day!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Activate a TP-Link Kasa scene every day at a specific time.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.activate_scene", "Filter code method": "Kasa.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"kasa.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scene", "Helper text": "Select a scene from your account to activate", "Slug": "scene", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Save £1 every time it rains", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Dozens", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dozens.save", "Filter code method": "Dozens.save.skip(string?: reason)", "Runtime method": "runAction(\"dozens.save\", {})"}, "action_details": [{"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount", "Helper text": "Specify amount that should be moved to savings account", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Dozens.save.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "Excited for the new £50 note but concerned that you'll never actually get to hold one? By saving just 10p a day, you'll be ready when the big day comes 💵", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "You can set the days and time you would like your hue lights to turn on below. An easy way to automate your lights!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Modify the date and receive a message on your first day of classes for the school year.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_year_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Datetime\nText input", "description": "Text input", "details": {"Label": "Date and time", "Slug": "datetime", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyYearOn.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Send a predetermined message to your Teams channel on certain days and times.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Microsoft Teams", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "microsoft_teams.post_message_to_channel", "Filter code method": "MicrosoftTeams.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"microsoft_teams.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Team and channel ids\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "team_and_channel_ids", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "What is the subject of the message?", "Helper text": "This will appear as the header text of the message", "Slug": "message_subject", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Subject(string: message_subject)"}}, {"section": "Action fields", "title": "Message body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "What is the content of the message?", "Helper text": "This will appear as the body of the message", "Slug": "message_body", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Body(string: message_body)"}}, {"section": "Action fields", "title": "Message urgency\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the urgency of the message?", "Helper text": "Select between <a href=\"https://support.microsoft.com/en-us/office/mark-a-message-as-important-or-urgent-in-teams-ea99d5b6-1317-4550-8d75-86ff14cd4462\" target=\"_blank\">Normal, Important, or Urgent</a> to call desired attention to your message", "Slug": "message_urgency", "Required": "true", "Can have default value": "true", "Filter code method": "MicrosoftTeams.postMessageToChannel.setMessage Urgency(string: message_urgency)"}}], "filter_code": NaN}
{"original_description": "An easy way to turn on alerts of your SMACAME camera automatically at a fixed time, every day!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Planex", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "planex.start_arm", "Filter code method": "Planex.startArm.skip(string?: reason)", "Runtime method": "runAction(\"planex.start_arm\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Record mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "SD Recording mode", "Slug": "record_mode", "Required": "true", "Can have default value": "true", "Filter code method": "Planex.startArm.setRecord Mode(string: record_mode)"}}], "filter_code": NaN}
{"original_description": "An easy way to turn off alerts of your SMACAME camera automatically at a fixed time, every day!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Planex", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "planex.stop_arm", "Filter code method": "Planex.stopArm.skip(string?: reason)", "Runtime method": "runAction(\"planex.stop_arm\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Record mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "SD Recording mode", "Slug": "record_mode", "Required": "true", "Can have default value": "true", "Filter code method": "Planex.stopArm.setRecord Mode(string: record_mode)"}}], "filter_code": NaN}
{"original_description": "Simulate a natural and gentle sunrise. The brightness gradually increases within 15 minutes from dim yellow until your room is filled with bright yellow light. ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.set_color", "Filter code method": "Yeelight.setColor.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.set_color\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which color?", "Slug": "color_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "The brightness gradually increases within 15 minutes from 1% to 100% .", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.change_bright", "Filter code method": "Yeelight.changeBright.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.change_bright\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which light?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which brightness?", "Slug": "scene_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Start Christmas Day with your Hue Lights Colour looping. Happy holidays! ", "trigger_channel": "Is It Christmas?", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "isitchristmas.christmas"}, "trigger_details": [{"section": "Trigger fields", "title": "Timezone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which timezone?", "Slug": "timezone", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Year\nThe year in which it is Christmas.", "description": "The year in which it is Christmas.", "details": {"Slug": "year", "Filter code": "Isitchristmas.christmas.Year", "Type": "String", "Example": "2014"}}, {"section": "Ingredients", "title": "Created at\nChristmas time.", "description": "Christmas time.", "details": {"Slug": "created_at", "Filter code": "Isitchristmas.christmas.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Answer\nIt will always be \"YES\".", "description": "It will always be \"YES\".", "details": {"Slug": "answer", "Filter code": "Isitchristmas.christmas.Answer", "Type": "String", "Example": "YES"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "At 8 AM on the last day of the month you'll get a push notification reminding you to pay up. Sad wallet...happy landlord!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_month_on_the"}, "trigger_details": [{"section": "Trigger fields", "title": "Month day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of the month", "Slug": "month_day", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyMonthOnThe.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Daily email digest for good news for an uplifting start to your day.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_daily_email", "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Get a message from the IFTTT team on the first day of school. Modify the day to match your school's start date.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_year_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Datetime\nText input", "description": "Text input", "details": {"Label": "Date and time", "Slug": "datetime", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyYearOn.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Buy stocks using Google Sheets by entering symbol name in column A and quantity in column B.", "trigger_channel": "Google Sheets", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "google_sheets.new_row_in_spreadsheet"}, "trigger_details": [{"section": "Trigger fields", "title": "Path\nText input > Other", "description": "Text input > Other", "details": {"Label": "Enter the folder path...", "Helper text": "Format: folders separated by &quot;/&quot; like &quot;Recipes/Vegetables&quot;", "Slug": "path", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Filename\nText input > Other", "description": "Text input > Other", "details": {"Label": "and enter the filename", "Helper text": "E.g. Vegetable Recipes", "Slug": "filename", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Spreadsheet url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Or copy and paste the spreadsheet URL", "Helper text": "Must be a valid spreadsheet URL", "Slug": "spreadsheet_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Filename\nThe name of the spreadsheet.", "description": "The name of the spreadsheet.", "details": {"Slug": "spreadsheet_name", "Filter code": "GoogleSheets.newRowInSpreadsheet.Filename", "Type": "String", "Example": "2018 Trip ideas"}}, {"section": "Ingredients", "title": "Path\nPath of the new spreadsheet.", "description": "Path of the new spreadsheet.", "details": {"Slug": "path", "Filter code": "GoogleSheets.newRowInSpreadsheet.Path", "Type": "String", "Example": "IFTTT/Faves"}}, {"section": "Ingredients", "title": "Spreadsheet url\nThe URL to the spreadsheet on Google Sheets.", "description": "The URL to the spreadsheet on Google Sheets.", "details": {"Slug": "spreadsheet_url", "Filter code": "GoogleSheets.newRowInSpreadsheet.SpreadsheetUrl", "Type": "Web URL", "Example": "https://docs.google.com/spreadsheets/d/1va_bpHMbOIwbQb77orUzAQVs0ZGsyqHqgeyYXssa6Z0/edit#gid=0"}}, {"section": "Ingredients", "title": "Created at\nDate and time row was added.", "description": "Date and time row was added.", "details": {"Slug": "created_at", "Filter code": "GoogleSheets.newRowInSpreadsheet.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Row index\nThe numerical value of the new row.", "description": "The numerical value of the new row.", "details": {"Slug": "row_index", "Filter code": "GoogleSheets.newRowInSpreadsheet.RowIndex", "Type": "String", "Example": "4"}}, {"section": "Ingredients", "title": "Column a\nValue in column A", "description": "Value in column A", "details": {"Slug": "column_a", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnA", "Type": "String", "Example": "1234"}}, {"section": "Ingredients", "title": "Column b\nValue in column B", "description": "Value in column B", "details": {"Slug": "column_b", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnB", "Type": "String", "Example": "$99"}}, {"section": "Ingredients", "title": "Column c\nValue in column C", "description": "Value in column C", "details": {"Slug": "column_c", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnC", "Type": "String", "Example": "Towel"}}, {"section": "Ingredients", "title": "Column d\nValue in column D", "description": "Value in column D", "details": {"Slug": "column_d", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnD", "Type": "String", "Example": "Blue"}}, {"section": "Ingredients", "title": "Column e\nValue in column E", "description": "Value in column E", "details": {"Slug": "column_e", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnE", "Type": "String", "Example": "FREE SHIPPING"}}, {"section": "Ingredients", "title": "Column f\nValue in column F", "description": "Value in column F", "details": {"Slug": "column_f", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnF", "Type": "String", "Example": "FREE SHIPPING"}}, {"section": "Ingredients", "title": "Column g\nValue in column G", "description": "Value in column G", "details": {"Slug": "column_g", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnG", "Type": "String", "Example": "Delivery Date"}}, {"section": "Ingredients", "title": "Column h\nValue in column H", "description": "Value in column H", "details": {"Slug": "column_h", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnH", "Type": "String", "Example": "November 7th, 2017"}}, {"section": "Ingredients", "title": "Column i\nValue in column I", "description": "Value in column I", "details": {"Slug": "column_i", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnI", "Type": "String", "Example": "Delivery Address"}}, {"section": "Ingredients", "title": "Column j\nValue in column J", "description": "Value in column J", "details": {"Slug": "column_j", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnJ", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column k\nValue in column K", "description": "Value in column K", "details": {"Slug": "column_k", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnK", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column l\nValue in column L", "description": "Value in column L", "details": {"Slug": "column_l", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnL", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column m\nValue in column M", "description": "Value in column M", "details": {"Slug": "column_m", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnM", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column n\nValue in column N", "description": "Value in column N", "details": {"Slug": "column_n", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnN", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column o\nValue in column O", "description": "Value in column O", "details": {"Slug": "column_o", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnO", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column p\nValue in column P", "description": "Value in column P", "details": {"Slug": "column_p", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnP", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column q\nValue in column Q", "description": "Value in column Q", "details": {"Slug": "column_q", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnQ", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column r\nValue in column R", "description": "Value in column R", "details": {"Slug": "column_r", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnR", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column s\nValue in column S", "description": "Value in column S", "details": {"Slug": "column_s", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnS", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column t\nValue in column T", "description": "Value in column T", "details": {"Slug": "column_t", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnT", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column u\nValue in column U", "description": "Value in column U", "details": {"Slug": "column_u", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnU", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column v\nValue in column V", "description": "Value in column V", "details": {"Slug": "column_v", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnV", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column w\nValue in column W", "description": "Value in column W", "details": {"Slug": "column_w", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnW", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column x\nValue in column X", "description": "Value in column X", "details": {"Slug": "column_x", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnX", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column y\nValue in column Y", "description": "Value in column Y", "details": {"Slug": "column_y", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnY", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}, {"section": "Ingredients", "title": "Column z\nValue in column Z", "description": "Value in column Z", "details": {"Slug": "column_z", "Filter code": "GoogleSheets.newRowInSpreadsheet.ColumnZ", "Type": "String", "Example": "923 Market St. San Francisco, CA 94117"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.place_market_order", "Filter code method": "Alpaca.placeMarketOrder.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.place_market_order\", {})"}, "action_details": [{"section": "Action fields", "title": "Symbol\nText input > Title", "description": "Text input > Title", "details": {"Label": "Symbol", "Helper text": "The symbol to place the order for.", "Slug": "symbol", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSymbol(string: symbol)"}}, {"section": "Action fields", "title": "Side\nDropdown list", "description": "Dropdown list", "details": {"Label": "Side", "Helper text": "The side to place the order for.", "Slug": "side", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSide(string: side)"}}, {"section": "Action fields", "title": "Qty\nText input > Title", "description": "Text input > Title", "details": {"Label": "Quantity", "Helper text": "The number of shares to place the order for.", "Slug": "qty", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setQty(string: qty)"}}], "filter_code": NaN}
{"original_description": "Runs every day. Save £3.65 on January 1st, £3.64 on January 2nd and so on - until 1p on December 31st.\n\nIt resets automatically on January 1st every year.\n\nThis is the reverse of our popular 1p Savings Challenge.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "const today = Meta.currentUserTime;\n\n// How many days are there this year?\nconst days_in_year = today.isLeapYear() ? 366 : 365\n\nconst day_of_year = today.format('DDD');\n\n// Figure out how many days are left in the year\nconst days_left_in_the_year = days_in_year-parseInt(day_of_year); \n\n// Move to pot the number of days left in the year + 1 (so that 1st of Jan is £3.65 and 31st December is 1p)\n// Divide by 100 for pence\nconst amount = (days_left_in_the_year+1) / 100;\n\nMonzo.potDeposit.setAmount(amount.toFixed(2));\n\n"}
{"original_description": "This Applet sends you the week's worth of updates from the EPA to your inbox on a day and time of your choosing.", "trigger_channel": "Environmental Protection Agency", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "epa.latest_news"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword (optional)", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Epa.latestNews.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Epa.latestNews.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry region\nThe region publishing the entry.", "description": "The region publishing the entry.", "details": {"Slug": "EntryAuthor", "Filter code": "Epa.latestNews.EntryRegion", "Type": "String", "Example": "Region 03"}}, {"section": "Ingredients", "title": "Entry content preview\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Epa.latestNews.EntryContentPreview", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Epa.latestNews.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Receive a wake up call every day at a specific time.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "woopla phone calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "woopla.tts_call", "Filter code method": "Woopla.ttsCall.skip(string?: reason)", "Runtime method": "runAction(\"woopla.tts_call\", {})"}, "action_details": [{"section": "Action fields", "title": "Tts\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Text", "Helper text": "Enter the text to be played when call connects.", "Slug": "tts", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCall.setTts(string: tts)"}}, {"section": "Action fields", "title": "Language\nDropdown list", "description": "Dropdown list", "details": {"Label": "Language", "Helper text": "Select text's language.", "Slug": "language", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCall.setLanguage(string: language)"}}], "filter_code": NaN}
{"original_description": "At a certain time of the day, speak today's weather report into an Orion Group.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Orion - Voice for Teams", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "orion.send_voice_message", "Filter code method": "Orion.sendVoiceMessage.skip(string?: reason)", "Runtime method": "runAction(\"orion.send_voice_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which group?", "Helper text": "The Orion group where you'll hear your message.", "Slug": "group", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "User\nDropdown list", "description": "Dropdown list", "details": {"Label": "Who hears it?", "Helper text": "Select whether everyone in the group should hear the message, or just you.", "Slug": "user", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What to say?", "Helper text": "This is the message that you'll hear in your group.", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Orion.sendVoiceMessage.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Reason is a monthly US-based Libertarian magazine. Stay up to date on the topics you care about, from a Libertarian perspective, by adding the keyword or phrase you want to track. You'll get an email whenever a new article matches the term!", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item_matches"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or simple phrase", "Helper text": "Search operators are not supported", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItemMatches.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItemMatches.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItemMatches.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItemMatches.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItemMatches.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItemMatches.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItemMatches.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItemMatches.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "Set up a birthday surprise and Boost your chosen amount to your child's account on their special day!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_year_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Datetime\nText input", "description": "Text input", "details": {"Label": "Date and time", "Slug": "datetime", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyYearOn.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "RoosterMoney", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "roostermoney.boost", "Filter code method": "Roostermoney.boost.skip(string?: reason)", "Runtime method": "runAction(\"roostermoney.boost\", {})"}, "action_details": [{"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "If you want it to boost 10.00 enter 10. Do not include the currency character.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Roostermoney.boost.setAmount(string: amount)"}}, {"section": "Action fields", "title": "Child\nDropdown list", "description": "Dropdown list", "details": {"Label": "Child", "Slug": "child", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Slug": "pot", "Required": "true", "Can have default value": "true", "Filter code method": "Roostermoney.boost.setPot(string: pot)"}}, {"section": "Action fields", "title": "Description\nText input > Title", "description": "Text input > Title", "details": {"Label": "Description", "Helper text": "Description to show in transaction history", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Roostermoney.boost.setDescription(string: description)"}}], "filter_code": NaN}
{"original_description": "This applet turns off your Philips Hue bulbs when activating your Niko Home Control all-off. Turn all your lights off with one touch on a button!", "trigger_channel": "Niko Home Control", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nikohomecontrol.routine_activated"}, "trigger_details": [{"section": "Trigger fields", "title": "Routine\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Routine will be the trigger?", "Helper text": "Select the Routine which will trigger an action when it is activated", "Slug": "routine", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nikohomecontrol.routineActivated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Routine\nThe Routine which was activated.", "description": "The Routine which was activated.", "details": {"Slug": "routine", "Filter code": "Nikohomecontrol.routineActivated.Routine", "Type": "String", "Example": "Party"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Toggle your light by pressing widget button. This Applet makes a widget that you can use from IFTTT app or your phone screen. ", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.Togglelight", "Filter code method": "Magichue.togglelight.skip(string?: reason)", "Runtime method": "runAction(\"magichue.Togglelight\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on your light within 15 minutes of the sunset at your location.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_on", "Filter code method": "Kasa.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn on", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have your smart light automatically turn on at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.poweron", "Filter code method": "Magichue.poweron.skip(string?: reason)", "Runtime method": "runAction(\"magichue.poweron\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness level", "Slug": "brightness", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Runs every Monday. Save £1 in Week 1 of the year, £2 in Week 2 of the year,... . Feel free to jump in part way though the year, and see how far you can get!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "var week_of_year = Meta.currentUserTime.format('w');\nvar amount = parseInt(week_of_year);\nMonzo.potDeposit.setAmount(amount.toFixed(2));\n\n"}
{"original_description": "A UV Index reading of 6 to 7 means high risk of harm from unprotected sun exposure. This acts as a reminder for you to consider wearing sunscreen. Stay safe!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_humidity_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Humidity\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Humidity (%)", "Slug": "humidity", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentHumidityRisesAbove.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentHumidityRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentHumidityRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentHumidityRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentHumidityRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentHumidityRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Toggle your Philip Hue lights on and off by pressing the pusher on your Kronaby watch.", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.toggle_all_hue", "Filter code method": "Hue.toggleAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.toggle_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Automatically apply a light scene when weather condition changes", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.set_scene", "Filter code method": "Yeelight.setScene.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.set_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Bundle\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "bundle_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "To use this applet,you can turn on your bulbs when the evening coming.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.on_off", "Filter code method": "Yeelight.onOff.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "On off option\nDropdown list", "description": "Dropdown list", "details": {"Label": "On, off or toggle?", "Slug": "on_off_option", "Required": "true", "Can have default value": "true", "Filter code method": "Yeelight.onOff.setOn Off Option(string: on_off_option)"}}], "filter_code": NaN}
{"original_description": "Have your product turn on at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "iDevices", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "idevices.turn_device_on", "Filter code method": "Idevices.turnDeviceOn.skip(string?: reason)", "Runtime method": "runAction(\"idevices.turn_device_on\", {})"}, "action_details": [{"section": "Action fields", "title": "What device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which product?", "Slug": "what_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When Arlo detects motion, turn on your lights.", "trigger_channel": "Arlo", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "arlo.motion"}, "trigger_details": [{"section": "Trigger fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "device_name", "Filter code": "Arlo.motion.DeviceName", "Type": "String", "Example": "48B14C740AD5E"}}, {"section": "Ingredients", "title": "Detection time\nDate and time of motion event detection.", "description": "Date and time of motion event detection.", "details": {"Slug": "detected_at", "Filter code": "Arlo.motion.DetectionTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_on", "Filter code method": "Kasa.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn on", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on a device.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_on", "Filter code method": "Kasa.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn on", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "See what impacts your ability to write great posts", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "Make every picture count... save a set amount toward one of your Goals every time you add a picture to your feed.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal", "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)", "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"}, "action_details": [{"section": "Action fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount to transfer", "Slug": "amount", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on your lights or other devices if it is cloudy outside.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_on", "Filter code method": "Kasa.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn on", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Let there be light! This applet turns on your Hue lights when your robot starts a cleaning job.\n", "trigger_channel": "iRobot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "irobot.robot_start"}, "trigger_details": [{"section": "Trigger fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nTime the robot started.", "description": "Time the robot started.", "details": {"Slug": "iso_timestamp", "Filter code": "Irobot.robotStart.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet turns on your Hue light when Withings Sleep detects that you get out of bed.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": NaN, "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "abode", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "abode.turn_on_switch", "Filter code method": "Abode.turnOnSwitch.skip(string?: reason)", "Runtime method": "runAction(\"abode.turn_on_switch\", {})"}, "action_details": [{"section": "Action fields", "title": "Select switch\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Slug": "select_switch", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Find out how phone calls influence your behavior", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.receive_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.receiveAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.receiveAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.receiveAPhoneCall.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.receiveAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.receiveAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "Always scanning Soundcloud for something new but like to listen on Spotify? Enter a search term and when this Applet finds a new track on the former, it'll automatically add it to a playlist on the latter (if it's available). Be specific in your search to get the best results! ", "trigger_channel": "SoundCloud", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "soundcloud.new_track_from_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Search query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "search_query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Soundcloud.newTrackFromSearch.Title", "Type": "String", "Example": "A cool track"}}, {"section": "Ingredients", "title": "Description\nThe track's description. May contain HTML.", "description": "The track's description. May contain HTML.", "details": {"Slug": "Description", "Filter code": "Soundcloud.newTrackFromSearch.Description", "Type": "String", "Example": "This track is sweet"}}, {"section": "Ingredients", "title": "Tags\nThe track's tags, comma seperated.", "description": "The track's tags, comma seperated.", "details": {"Slug": "Tags", "Filter code": "Soundcloud.newTrackFromSearch.Tags", "Type": "String", "Example": "killer, noise"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the tracks's Soundcloud page.", "description": "The URL to the tracks's Soundcloud page.", "details": {"Slug": "TrackUrl", "Filter code": "Soundcloud.newTrackFromSearch.TrackUrl", "Type": "String", "Example": "http://soundcloud.com/ribbonmusic/john-maus-believer"}}, {"section": "Ingredients", "title": "Username\nThe name of the user who uploaded the track.", "description": "The name of the user who uploaded the track.", "details": {"Slug": "Username", "Filter code": "Soundcloud.newTrackFromSearch.Username", "Type": "String", "Example": "gaga"}}, {"section": "Ingredients", "title": "User profile url\nThe URL to the profile of the user who uploaded the track.", "description": "The URL to the profile of the user who uploaded the track.", "details": {"Slug": "UserProfileUrl", "Filter code": "Soundcloud.newTrackFromSearch.UserProfileUrl", "Type": "String", "Example": "http://soundcloud.com/gaga-digi"}}, {"section": "Ingredients", "title": "Image url\nURL to the track's image file.", "description": "URL to the track's image file.", "details": {"Slug": "ImageUrl", "Filter code": "Soundcloud.newTrackFromSearch.ImageUrl", "Type": "String", "Example": "http://w1.sndcdn.com/jD1KgNMbSVyv_m.png"}}, {"section": "Ingredients", "title": "Embed code\nHTML embed code for this track.", "description": "HTML embed code for this track.", "details": {"Slug": "EmbedCode", "Filter code": "Soundcloud.newTrackFromSearch.EmbedCode", "Type": "String", "Example": "<object height='81' width='100%'> <param name='movie'..."}}, {"section": "Ingredients", "title": "Created at\nDate and time the track was uploaded.", "description": "Date and time the track was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "Soundcloud.newTrackFromSearch.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "TrackId", "Filter code": "Soundcloud.newTrackFromSearch.TrackId", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "User\nThe ID of the user who uploaded the track.", "description": "The ID of the user who uploaded the track.", "details": {"Slug": "UserId", "Filter code": "Soundcloud.newTrackFromSearch.UserId", "Type": "String", "Example": "123"}}], "action_channel": "Spotify", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "spotify.add_a_track_to_a_playlist_by_track_id", "Filter code method": "Spotify.addATrackToAPlaylistByTrackId.skip(string?: reason)", "Runtime method": "runAction(\"spotify.add_a_track_to_a_playlist_by_track_id\", {})"}, "action_details": [{"section": "Action fields", "title": "Playlist\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Playlist name", "Helper text": "Must be a playlist owned by you. If a playlist with the name given can't be found, a new private playlist will be created.", "Slug": "playlist", "Required": "true", "Can have default value": "true", "Filter code method": "Spotify.addATrackToAPlaylistByTrackId.setPlaylist(string: playlist)"}}, {"section": "Action fields", "title": "Track\nText input > Other", "description": "Text input > Other", "details": {"Label": "Track ID", "Slug": "track_id", "Required": "false", "Can have default value": "true", "Filter code method": "Spotify.addATrackToAPlaylistByTrackId.setTrack(string: track_id)"}}], "filter_code": NaN}
{"original_description": "Record my air quality data whenever the chosen sensor breaches the target threshold.", "trigger_channel": "uHoo", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "uhoo.sensor_notification"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which uHoo?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Sensor\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which air quality parameter?", "Slug": "sensor", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold\nText input", "description": "Text input", "details": {"Label": "What is the target level?", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Sign\nDropdown list", "description": "Dropdown list", "details": {"Label": "Trigger alert when above or below target level?", "Slug": "sign", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Uhoo.sensorNotification.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Uhoo name\nThis is the name of your uHoo.", "description": "This is the name of your uHoo.", "details": {"Slug": "uhoo_name", "Filter code": "Uhoo.sensorNotification.UhooName", "Type": "String", "Example": "My Home"}}, {"section": "Ingredients", "title": "Sensor name\nThis is the parameter that triggered the alert.", "description": "This is the parameter that triggered the alert.", "details": {"Slug": "sensor", "Filter code": "Uhoo.sensorNotification.SensorName", "Type": "String", "Example": "Temperature"}}, {"section": "Ingredients", "title": "Sensor value\nThis is the parameter value when alert happened.", "description": "This is the parameter value when alert happened.", "details": {"Slug": "sensor_data", "Filter code": "Uhoo.sensorNotification.SensorValue", "Type": "String", "Example": "23.5"}}, {"section": "Ingredients", "title": "Sensor unit\nThis is the parameter unit.", "description": "This is the parameter unit.", "details": {"Slug": "sensor_unit", "Filter code": "Uhoo.sensorNotification.SensorUnit", "Type": "String", "Example": "°C"}}, {"section": "Ingredients", "title": "My threshold\nThis is the target level you set to trigger the alert.", "description": "This is the target level you set to trigger the alert.", "details": {"Slug": "my_threshold", "Filter code": "Uhoo.sensorNotification.MyThreshold", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Above or below\nThis tells you whether alert was sent when it's above or below your threshold", "description": "This tells you whether alert was sent when it's above or below your threshold", "details": {"Slug": "trigger_condition", "Filter code": "Uhoo.sensorNotification.AboveOrBelow", "Type": "String", "Example": "above"}}, {"section": "Ingredients", "title": "Data temperature\nThis is the Temperature value", "description": "This is the Temperature value", "details": {"Slug": "data_temp", "Filter code": "Uhoo.sensorNotification.DataTemperature", "Type": "String", "Example": "23.4"}}, {"section": "Ingredients", "title": "Data humidity\nThis is the Relative Humidity in %", "description": "This is the Relative Humidity in %", "details": {"Slug": "data_humidity", "Filter code": "Uhoo.sensorNotification.DataHumidity", "Type": "String", "Example": "56.7"}}, {"section": "Ingredients", "title": "Data pm25\nThis is the PM2.5 level in ug/m3", "description": "This is the PM2.5 level in ug/m3", "details": {"Slug": "data_dust", "Filter code": "Uhoo.sensorNotification.DataPm25", "Type": "String", "Example": "12.3"}}, {"section": "Ingredients", "title": "Data co2\nThis is the Carbon Dioxide (CO2) level in ppm", "description": "This is the Carbon Dioxide (CO2) level in ppm", "details": {"Slug": "data_co2", "Filter code": "Uhoo.sensorNotification.DataCo2", "Type": "String", "Example": "437"}}, {"section": "Ingredients", "title": "Data co\nThis is the Carbon Monoxide (CO) level in ppm", "description": "This is the Carbon Monoxide (CO) level in ppm", "details": {"Slug": "data_co", "Filter code": "Uhoo.sensorNotification.DataCo", "Type": "String", "Example": "1.3"}}, {"section": "Ingredients", "title": "Data tvoc\nThis is the TVOC level in ppb", "description": "This is the TVOC level in ppb", "details": {"Slug": "data_voc", "Filter code": "Uhoo.sensorNotification.DataTvoc", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Data no2\nThis is the Nitrogen Dioxide (NO2) level in ppb", "description": "This is the Nitrogen Dioxide (NO2) level in ppb", "details": {"Slug": "data_no2", "Filter code": "Uhoo.sensorNotification.DataNo2", "Type": "String", "Example": "12"}}, {"section": "Ingredients", "title": "Data ozone\nThis is the Ozone level in ppb", "description": "This is the Ozone level in ppb", "details": {"Slug": "data_ozone", "Filter code": "Uhoo.sensorNotification.DataOzone", "Type": "String", "Example": "10"}}, {"section": "Ingredients", "title": "Data air pressure\nThis is the Air Pressure level in hPa", "description": "This is the Air Pressure level in hPa", "details": {"Slug": "data_airpressure", "Filter code": "Uhoo.sensorNotification.DataAirPressure", "Type": "String", "Example": "1013.0"}}, {"section": "Ingredients", "title": "Data virus index\nThis is the uHoo Virus Index", "description": "This is the uHoo Virus Index", "details": {"Slug": "data_virusindex", "Filter code": "Uhoo.sensorNotification.DataVirusIndex", "Type": "String", "Example": "7"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Toggle your LIFX lights on and off by pressing the pusher on your Kronaby watch.", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.toggle", "Filter code method": "Lifx.toggle.skip(string?: reason)", "Runtime method": "runAction(\"lifx.toggle\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want to toggle with a duration? Specify it here. Example: &quot;transition_duration: 5&quot; for a 5 second fade duration. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.toggle.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Find out how phone calls influence your behavior", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.place_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.placeAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.placeAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "To number\nThe number that received the call.", "description": "The number that received the call.", "details": {"Slug": "ToNumber", "Filter code": "AndroidPhone.placeAPhoneCall.ToNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.placeAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.placeAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "Turns on motion detection at the same time every weekday.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Wyze", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wyzecam.turn_on_alarm", "Filter code method": "Wyzecam.turnOnAlarm.skip(string?: reason)", "Runtime method": "runAction(\"wyzecam.turn_on_alarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have a product's night light turn on after sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "iDevices", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "idevices.turn_nightlight_off", "Filter code method": "Idevices.turnNightlightOff.skip(string?: reason)", "Runtime method": "runAction(\"idevices.turn_nightlight_off\", {})"}, "action_details": [{"section": "Action fields", "title": "What device\nDropdown list", "description": "Dropdown list", "details": {"Label": "What product's night light?", "Slug": "what_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Get your home to automatically light up when the sun goes down.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "On, off or toggle Yeelight.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.on_off", "Filter code method": "Yeelight.onOff.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "On off option\nDropdown list", "description": "Dropdown list", "details": {"Label": "On, off or toggle?", "Slug": "on_off_option", "Required": "true", "Can have default value": "true", "Filter code method": "Yeelight.onOff.setOn Off Option(string: on_off_option)"}}], "filter_code": NaN}
{"original_description": "See what impacts how often you bookmark items", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to turn Philips Hue Lights ON or OFF.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.toggle_all_hue", "Filter code method": "Hue.toggleAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.toggle_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "See what impacts the number of your notes", "trigger_channel": "Evernote", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "evernote.new_note_in_notebook"}, "trigger_details": [{"section": "Trigger fields", "title": "Notebook\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which notebook?", "Slug": "notebook", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Title\nThe note title.", "description": "The note title.", "details": {"Slug": "Title", "Filter code": "Evernote.newNoteInNotebook.Title", "Type": "String", "Example": "A great note about taking notes"}}, {"section": "Ingredients", "title": "Body html\nThe HTML version of the note body.", "description": "The HTML version of the note body.", "details": {"Slug": "BodyHTML", "Filter code": "Evernote.newNoteInNotebook.BodyHTML", "Type": "String", "Example": "<p>Connect Evernote to hundreds of apps</p>"}}, {"section": "Ingredients", "title": "Public url\nThe public URL of the note.", "description": "The public URL of the note.", "details": {"Slug": "PublicUrl", "Filter code": "Evernote.newNoteInNotebook.PublicUrl", "Type": "String", "Example": "https://www.evernote.com/shard/s1/sh/426e2836-4a46-47fa-8436-a56f15b33341/522ef3d7500cd208c03f34883968609f"}}, {"section": "Ingredients", "title": "Tags\nThe note's tags, comma separated.", "description": "The note's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Evernote.newNoteInNotebook.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Created at\nDate and time the note was created.", "description": "Date and time the note was created.", "details": {"Slug": "CreatedAt", "Filter code": "Evernote.newNoteInNotebook.CreatedAt", "Type": "String", "Example": "October 24, 2015 at 11:11PM"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "When the UV Index is between 3 to 5 outside, it is considered a \"moderate\" risk of harm from unprotected sun exposure. Be prepared and wear protection!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_humidity_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Humidity\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Humidity (%)", "Slug": "humidity", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentHumidityRisesAbove.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentHumidityRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentHumidityRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentHumidityRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentHumidityRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentHumidityRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_rich_notification", "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Helper text": "Optional, bold text above the message", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Helper text": "Optional, link may open in a browser or installed app", "Slug": "link_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Find out how your videos correlate with other lifestyle events", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_video_by_you_instagram"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewVideoByYouInstagram.Caption", "Type": "String", "Example": "A cool video"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the video's Instagram page.", "description": "The short URL to the video's Instagram page.", "details": {"Slug": "URL", "Filter code": "Instagram.anyNewVideoByYouInstagram.URL", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Video source url\nURL to the video file.", "description": "URL to the video file.", "details": {"Slug": "VideoSourceURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.VideoSourceURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4"}}, {"section": "Ingredients", "title": "Image thumbnail url\nURL to the video's thumbnail image.", "description": "URL to the video's thumbnail image.", "details": {"Slug": "ImageThumbnailURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.ImageThumbnailURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the video was taken.", "description": "Date and time the video was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewVideoByYouInstagram.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the video.", "description": "The HTML embed code for the video.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewVideoByYouInstagram.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "Turn on or off your BG Home device when the sun sets in your area.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "BG Home", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "BG_HOME.powerState", "Filter code method": "BGHOME.powerState.skip(string?: reason)", "Runtime method": "runAction(\"BG_HOME.powerState\", {})"}, "action_details": [{"section": "Action fields", "title": "Deviceinfo\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Helper text": "choose device", "Slug": "deviceinfo", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Powercontrol changepowerstate string\nDropdown list", "description": "Dropdown list", "details": {"Label": "On of off?", "Slug": "PowerControl_ChangePowerState_string", "Required": "true", "Can have default value": "true", "Filter code method": "BGHOME.powerState.setPower Control Change Power State String(string: PowerControl_ChangePowerState_string)"}}], "filter_code": NaN}
{"original_description": "When your Arlo detects motion turn on a My Leviton Light", "trigger_channel": "Arlo", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "arlo.motion"}, "trigger_details": [{"section": "Trigger fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "device_name", "Filter code": "Arlo.motion.DeviceName", "Type": "String", "Example": "48B14C740AD5E"}}, {"section": "Ingredients", "title": "Detection time\nDate and time of motion event detection.", "description": "Date and time of motion event detection.", "details": {"Slug": "detected_at", "Filter code": "Arlo.motion.DetectionTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "My Leviton", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "my_leviton.toggle_switch", "Filter code method": "MyLeviton.toggleSwitch.skip(string?: reason)", "Runtime method": "runAction(\"my_leviton.toggle_switch\", {})"}, "action_details": [{"section": "Action fields", "title": "Name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Power\nDropdown list", "description": "Dropdown list", "details": {"Label": "Would you like to toggle the device, or turn it on or off?", "Slug": "power", "Required": "false", "Can have default value": "true", "Filter code method": "MyLeviton.toggleSwitch.setPower(string: power)"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to turn ON Lifx Lights.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.turn_on", "Filter code method": "Lifx.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"lifx.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fade in duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Fade in duration", "Helper text": "How long should it take for the lights to fade in.", "Slug": "fade_in_duration", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not available? Specify them here. Example: &quot;color: #ff0000; brightness: 0.3; fade_in_duration: 12&quot; for red at 30% brightness, 12 second fade in. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.turnOn.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to turn Philips Hue Lights ON.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Checks the Weather Underground service for the current UV Index based on your threshold, and then sets the Aurora to a color you choose.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_humidity_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Humidity\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Humidity (%)", "Slug": "humidity", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentHumidityRisesAbove.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentHumidityRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentHumidityRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentHumidityRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentHumidityRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentHumidityRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.change_color_request", "Filter code method": "Nanoleaf.changeColorRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.change_color_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which color?", "Helper text": "Set the color value in hex (00FF00) or by name (Green). The hash (#) is not required for hex value input.", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Nanoleaf.changeColorRequest.setValue(string: value)"}}], "filter_code": NaN}
{"original_description": "Automatically turn your lights on at sunset by overriding your on / off zone.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Genius Hub", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "genius_hub.zone_override_on_off", "Filter code method": "GeniusHub.zoneOverrideOnOff.skip(string?: reason)", "Runtime method": "runAction(\"genius_hub.zone_override_on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Zone\nDropdown list", "description": "Dropdown list", "details": {"Label": "Zone", "Slug": "zone", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temp\nDropdown list", "description": "Dropdown list", "details": {"Label": "On or off?", "Slug": "temp", "Required": "true", "Can have default value": "true", "Filter code method": "GeniusHub.zoneOverrideOnOff.setTemp(string: temp)"}}, {"section": "Action fields", "title": "Duration\nText input > Other", "description": "Text input > Other", "details": {"Label": "Duration", "Helper text": "How many minutes do you want to override for?", "Slug": "duration", "Required": "true", "Can have default value": "true", "Filter code method": "GeniusHub.zoneOverrideOnOff.setDuration(string: duration)"}}], "filter_code": NaN}
{"original_description": "Turn on neoplug at sunset", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Heatmiser", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "heatmiser.turn_plug_on", "Filter code method": "Heatmiser.turnPlugOn.skip(string?: reason)", "Runtime method": "runAction(\"heatmiser.turn_plug_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Which neo plug\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which neoPlug?", "Slug": "which_neo_plug", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Receive recurrent notifications on all Triby", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Invoxia Triby", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "invoxia_triby.send_an_image_to_every_triby", "Filter code method": "InvoxiaTriby.sendAnImageToEveryTriby.skip(string?: reason)", "Runtime method": "runAction(\"invoxia_triby.send_an_image_to_every_triby\", {})"}, "action_details": [{"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "What image URL?", "Helper text": "This has to be the URL of an image file (png, jpeg, bmp).", "Slug": "image_url", "Required": "true", "Can have default value": "true", "Filter code method": "InvoxiaTriby.sendAnImageToEveryTriby.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Automatically turn on your lights to deter intruders, welcome you home or light the way during a midnight fridge raid. If you want to have your Philips hue lights turn on when motion is detected, try this!", "trigger_channel": "mydlink", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mydlink.motionDetection"}, "trigger_details": [{"section": "Trigger fields", "title": "Mydlink no\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "mydlink_no", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Mydlink.motionDetection.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe device reporting the detection.", "description": "The device reporting the detection.", "details": {"Slug": "device_name", "Filter code": "Mydlink.motionDetection.DeviceName", "Type": "String", "Example": "Living room camera"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on a specified product when the current outside temperature drops below a set temperature.\n", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "iDevices", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "idevices.turn_device_on", "Filter code method": "Idevices.turnDeviceOn.skip(string?: reason)", "Runtime method": "runAction(\"idevices.turn_device_on\", {})"}, "action_details": [{"section": "Action fields", "title": "What device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which product?", "Slug": "what_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use your local weather to determine when it's getting hot and turn on your A/C with Ambi Climate.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Ambi Climate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ambiclimate.device_mode_comfort", "Filter code method": "Ambiclimate.deviceModeComfort.skip(string?: reason)", "Runtime method": "runAction(\"ambiclimate.device_mode_comfort\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which A/C?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet turns on your Yeelight when Withings Sleep detects that you get out of bed.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.on_off", "Filter code method": "Yeelight.onOff.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "On off option\nDropdown list", "description": "Dropdown list", "details": {"Label": "On, off or toggle?", "Slug": "on_off_option", "Required": "true", "Can have default value": "true", "Filter code method": "Yeelight.onOff.setOn Off Option(string: on_off_option)"}}], "filter_code": NaN}
{"original_description": "This applet lets Apilio know that the sun has set at your place, so that you can use this information in your Conditions and Logicblocks.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.boolean_variable_to_true_updates", "Filter code method": "Apilio.booleanVariableToTrueUpdates.skip(string?: reason)", "Runtime method": "runAction(\"apilio.boolean_variable_to_true_updates\", {})"}, "action_details": [{"section": "Action fields", "title": "Variable identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio variable do you want to update to true?", "Slug": "variable_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet lets Apilio know that the sun has risen at your place, so that you can use this information in your Conditions and Logicblocks.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Apilio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "apilio.boolean_variable_to_true_updates", "Filter code method": "Apilio.booleanVariableToTrueUpdates.skip(string?: reason)", "Runtime method": "runAction(\"apilio.boolean_variable_to_true_updates\", {})"}, "action_details": [{"section": "Action fields", "title": "Variable identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Apilio variable do you want to update to true?", "Slug": "variable_identifier", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Don't miss out on a good deal, get alerts directly to your phone any time a new game is on sale on Itch.io.", "trigger_channel": "Itch.io", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "itchio.recent_games_on_sales"}, "trigger_details": [{"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Itchio.recentGamesOnSales.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Itchio.recentGamesOnSales.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Itchio.recentGamesOnSales.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Itchio.recentGamesOnSales.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Itchio.recentGamesOnSales.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Run a shortcut in Futurehome turning ON multiple garden lights at Sunset", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Futurehome", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "futurehome.run_shortcut", "Filter code method": "Futurehome.runShortcut.skip(string?: reason)", "Runtime method": "runAction(\"futurehome.run_shortcut\", {})"}, "action_details": [{"section": "Action fields", "title": "Shortcut\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which shortcut?", "Slug": "shortcut", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Configure a Nexia automation to turn on your Hue lights.", "trigger_channel": "Nexia", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nexia.nexia_automation"}, "trigger_details": [{"section": "Trigger fields", "title": "Nexia automation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which automation?", "Helper text": "This automation must be configured in Nexia to have &quot;Notify IFTTT&quot; as it's action.", "Slug": "nexia_automation", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nexia.nexiaAutomation.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Nexia automation name\nThe name of your Nexia automation", "description": "The name of your Nexia automation", "details": {"Slug": "nexia_automation_name", "Filter code": "Nexia.nexiaAutomation.NexiaAutomationName", "Type": "String", "Example": "\"My First Automation\""}}, {"section": "Ingredients", "title": "House name\nThe name of the house of your automation", "description": "The name of the house of your automation", "details": {"Slug": "house_name", "Filter code": "Nexia.nexiaAutomation.HouseName", "Type": "String", "Example": "\"Home\""}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on heat pump to heat when outside temperature reaches the value you specify.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "FUJITSU GENERAL LIMITED", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "fujitsu_general_limited.setOperModeAndTemp", "Filter code method": "FujitsuGeneralLimited.setOperModeAndTemp.skip(string?: reason)", "Runtime method": "runAction(\"fujitsu_general_limited.setOperModeAndTemp\", {})"}, "action_details": [{"section": "Action fields", "title": "Dsn\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device name", "Helper text": "Which Air Conditioner?", "Slug": "dsn", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Operation mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Operation Mode you want to set?", "Helper text": "Which Operation Mode you want to set?", "Slug": "operation_mode", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Adjust temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "What is the temperature you want to set?", "Helper text": "Please select &quot;---&quot; if you set &quot;OFF&quot; or &quot;Fan&quot; Mode. Temperature can be set between 64F~88F (18C~30C)", "Slug": "adjust_temperature", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turn on my Nanoleaf lights when my SmartThings sensor detects motion. Works best if the motion sensor is in the same room as the lights =)", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.any_new_motion_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Detected at\nThe date and time motion was sensed.", "description": "The date and time motion was sensed.", "details": {"Slug": "DetectedAt", "Filter code": "SmartthingsV2.anyNewMotionSmartthings.DetectedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.anyNewMotionSmartthings.DeviceName", "Type": "String", "Example": "Bedroom sensor"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.turn_on_request", "Filter code method": "Nanoleaf.turnOnRequest.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.turn_on_request\", {})"}, "action_details": [{"section": "Action fields", "title": "My devices\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "my_devices", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Find out how your photos correlate with other lifestyle events", "trigger_channel": "Tumblr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tumblr.new_photo_post"}, "trigger_details": [{"section": "Trigger fields", "title": "Tumblelog\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tumblelog", "Helper text": "Enter the tumblelog name that this trigger should fire for", "Slug": "tumblelog", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Post body text\nThe post's body (text only)", "description": "The post's body (text only)", "details": {"Slug": "post_body_text", "Filter code": "Tumblr.newPhotoPost.PostBodyText", "Type": "String", "Example": "This is the body of a post. Neat."}}, {"section": "Ingredients", "title": "Url\nThe post URL", "description": "The post URL", "details": {"Slug": "url", "Filter code": "Tumblr.newPhotoPost.Url", "Type": "Web URL", "Example": "https://staff.tumblr.com/post/659803739627094017"}}, {"section": "Ingredients", "title": "Post body html\nThe post's body (HTML)", "description": "The post's body (HTML)", "details": {"Slug": "post_body_html", "Filter code": "Tumblr.newPhotoPost.PostBodyHtml", "Type": "String", "Example": "<figure class=\"tmblr-full\"><img src=\"https://64.media.tumblr.com/a-photo.jpg\"></figure><p>This is an HTML body.</p>"}}, {"section": "Ingredients", "title": "Thumbnail url\nThe thumbnail image URL for the post", "description": "The thumbnail image URL for the post", "details": {"Slug": "thumbnail_url", "Filter code": "Tumblr.newPhotoPost.ThumbnailUrl", "Type": "Web URL", "Example": "https://64.media.tumblr.com/a18c8063bf9d095d99f12b51d3dd1eda/57803298a6ae7123-0a/s1280x1920/fb2fce67958156e2231da15522ddb6850e1559ff.gifv"}}, {"section": "Ingredients", "title": "Full image url\nThe full size image URL", "description": "The full size image URL", "details": {"Slug": "full_image_url", "Filter code": "Tumblr.newPhotoPost.FullImageUrl", "Type": "Image URL", "Example": "https://64.media.tumblr.com/fd654c32f041cb02c757b5646c1cf9e1/a4c5782524284f82-d5/s1280x1920/8e97caae5a975889b3e170e42ea064b68410300a.jpg"}}, {"section": "Ingredients", "title": "Post tags\nThe post's tags", "description": "The post's tags", "details": {"Slug": "post_tags", "Filter code": "Tumblr.newPhotoPost.PostTags", "Type": "String", "Example": "Sky,Earth,Wind,Fire"}}, {"section": "Ingredients", "title": "Post\nThe ID of the post that has been created", "description": "The ID of the post that has been created", "details": {"Slug": "post_id", "Filter code": "Tumblr.newPhotoPost.PostId", "Type": "String", "Example": "123456789"}}, {"section": "Ingredients", "title": "Tumblelog\nThe name of the Tumblelog that published the post", "description": "The name of the Tumblelog that published the post", "details": {"Slug": "tumblelog", "Filter code": "Tumblr.newPhotoPost.Tumblelog", "Type": "String", "Example": "staff"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Tumblr.newPhotoPost.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Welltory", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "welltory.send_event", "Filter code method": "Welltory.sendEvent.skip(string?: reason)", "Runtime method": "runAction(\"welltory.send_event\", {})"}, "action_details": [{"section": "Action fields", "title": "Data source\nDropdown list", "description": "Dropdown list", "details": {"Label": "What service are you tracking from?", "Helper text": "Choose Other if nothing matches", "Slug": "data_source", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Source(string: data_source)"}}, {"section": "Action fields", "title": "Data type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of data?", "Helper text": "Choose Other if nothing matches.", "Slug": "data_type", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setData Type(string: data_type)"}}, {"section": "Action fields", "title": "Datetime\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "When is the data sent?", "Helper text": "Add an ingredient of time which usually ends with -At}", "Slug": "datetime", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setDatetime(string: datetime)"}}, {"section": "Action fields", "title": "Value\nText input > Other", "description": "Text input > Other", "details": {"Label": "How many entries per event?", "Helper text": "Enter 1 for one entry every time an event occurs", "Slug": "value", "Required": "true", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setValue(string: value)"}}, {"section": "Action fields", "title": "Comment\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Briefly describe your applet (optional)", "Helper text": "It will help understand what your applet does if you chose Other service or data type", "Slug": "comment", "Required": "false", "Can have default value": "true", "Filter code method": "Welltory.sendEvent.setComment(string: comment)"}}], "filter_code": NaN}
{"original_description": "Play a specific song on your Android device.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.play_song", "Filter code method": "AndroidDevice.playSong.skip(string?: reason)", "Runtime method": "runAction(\"android_device.play_song\", {})"}, "action_details": [{"section": "Action fields", "title": "Query\nText input > Title", "description": "Text input > Title", "details": {"Label": "Enter a song title", "Helper text": "e.g. Can You Feel The Love Tonight", "Slug": "query", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.playSong.setQuery(string: query)"}}], "filter_code": NaN}
{"original_description": "Turn Hue lights on/off ", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.toggle_all_hue", "Filter code method": "Hue.toggleAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.toggle_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Catch up on your favorite blog in Pocket at your leisure — or use Pocket's text-to-speech function to listen to articles. It's like your own custom podcast! ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Pocket", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "pocket.read_it_later", "Filter code method": "Pocket.readItLater.skip(string?: reason)", "Runtime method": "runAction(\"pocket.read_it_later\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Pocket.readItLater.setUrl(string: url)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Pocket.readItLater.setTags(string: tags)"}}], "filter_code": NaN}
{"original_description": "All you need to do is enter an app's name or the link to its listing on the App Store in the field below and we'll let you know as soon as its price drops.", "trigger_channel": "Apple App Store", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "app_store.app_price_dropped"}, "trigger_details": [{"section": "Trigger fields", "title": "App name or url\nText input", "description": "Text input", "details": {"Label": "Enter an app's name or URL", "Helper text": "E.g. &quot;IFTTT&quot; or &quot;Snapchat.&quot; For best results, paste an app's App Store URL.", "Slug": "app_name_or_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Name\nThe name of the App.", "description": "The name of the App.", "details": {"Slug": "name", "Filter code": "AppStore.appPriceDropped.Name", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Description\nThe description of the App.", "description": "The description of the App.", "details": {"Slug": "description", "Filter code": "AppStore.appPriceDropped.Description", "Type": "String", "Example": "Applets bring your favorite services together to create new experiences..."}}, {"section": "Ingredients", "title": "App store url\nThe URL to the App in the App Store.", "description": "The URL to the App in the App Store.", "details": {"Slug": "app_store_url", "Filter code": "AppStore.appPriceDropped.AppStoreUrl", "Type": "String", "Example": "https://itunes.apple.com/us/app/ifttt/id660944635"}}, {"section": "Ingredients", "title": "Developer\nThe name of the developer of the App.", "description": "The name of the developer of the App.", "details": {"Slug": "developer", "Filter code": "AppStore.appPriceDropped.Developer", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Category\nThe category the App falls under.", "description": "The category the App falls under.", "details": {"Slug": "category", "Filter code": "AppStore.appPriceDropped.Category", "Type": "String", "Example": "Productivity"}}, {"section": "Ingredients", "title": "Price\nThe current price of the App.", "description": "The current price of the App.", "details": {"Slug": "price", "Filter code": "AppStore.appPriceDropped.Price", "Type": "String", "Example": "$9.99"}}, {"section": "Ingredients", "title": "Rating\nThe current rating of the App.", "description": "The current rating of the App.", "details": {"Slug": "rating", "Filter code": "AppStore.appPriceDropped.Rating", "Type": "String", "Example": "5 stars"}}, {"section": "Ingredients", "title": "Screenshot\nThe URL to a screenshot of the App.", "description": "The URL to a screenshot of the App.", "details": {"Slug": "screenshot", "Filter code": "AppStore.appPriceDropped.Screenshot", "Type": "Image URL", "Example": "http://ifttt.com"}}, {"section": "Ingredients", "title": "Icon\nThe URL to an image of the App's icon.", "description": "The URL to an image of the App's icon.", "details": {"Slug": "icon", "Filter code": "AppStore.appPriceDropped.Icon", "Type": "String", "Example": "http://is2.mzstatic.com/image/thumb/Purple111/v4/5c/3d/43/5c3d4327-22d0-45d0-73c6-bbaf56c08902/source/512x512bb.jpg"}}, {"section": "Ingredients", "title": "Version\nThe current version of the App.", "description": "The current version of the App.", "details": {"Slug": "version", "Filter code": "AppStore.appPriceDropped.Version", "Type": "String", "Example": "2.1.3"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "AppStore.appPriceDropped.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Turn your switches, plugs, or lights on and off to make your home look occupied", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_hour_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Minutes past the hour", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyHourAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.toggle", "Filter code method": "Kasa.toggle.skip(string?: reason)", "Runtime method": "runAction(\"kasa.toggle\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to toggle", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Stay on top of the latest businesses in your area by logging them in a Googlesheet!", "trigger_channel": "Yelp", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "yelp.hot_and_new_business"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Business in an area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Sort by\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sort by", "Slug": "sort_by", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Business\nUnique Yelp ID of this business", "description": "Unique Yelp ID of this business", "details": {"Slug": "business_id", "Filter code": "Yelp.hotAndNewBusiness.BusinessId", "Type": "String", "Example": "lJAGnYzku5zSaLnQ_T6_GQ"}}, {"section": "Ingredients", "title": "Business name\nName of the business.", "description": "Name of the business.", "details": {"Slug": "business_name", "Filter code": "Yelp.hotAndNewBusiness.BusinessName", "Type": "String", "Example": "Brenda's French Soul Food"}}, {"section": "Ingredients", "title": "Business category\nList of category titles associated with the business.", "description": "List of category titles associated with the business.", "details": {"Slug": "business_category", "Filter code": "Yelp.hotAndNewBusiness.BusinessCategory", "Type": "String", "Example": "Breakfast & Brunch, Southern, Cajun/Creole"}}, {"section": "Ingredients", "title": "Business image url\nPhoto for this business.", "description": "Photo for this business.", "details": {"Slug": "business_image_url", "Filter code": "Yelp.hotAndNewBusiness.BusinessImageUrl", "Type": "Image URL", "Example": "https://s3-media3.fl.yelpcdn.com/bphoto/sNIJnePGDenUOyewsD8tLg/o.jpg"}}, {"section": "Ingredients", "title": "Business phone\nPhone number of the business.", "description": "Phone number of the business.", "details": {"Slug": "business_phone", "Filter code": "Yelp.hotAndNewBusiness.BusinessPhone", "Type": "String", "Example": "+14153458100"}}, {"section": "Ingredients", "title": "Business address\nLocation of this business", "description": "Location of this business", "details": {"Slug": "business_address", "Filter code": "Yelp.hotAndNewBusiness.BusinessAddress", "Type": "String", "Example": "652 Polk St, San Francisco, CA 94102"}}, {"section": "Ingredients", "title": "Business rating\nRating for this business (value ranges from 1, 1.5, ... 4.5, 5).", "description": "Rating for this business (value ranges from 1, 1.5, ... 4.5, 5).", "details": {"Slug": "business_rating", "Filter code": "Yelp.hotAndNewBusiness.BusinessRating", "Type": "String", "Example": "4.0"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Simply enter a specific app's name or the link to its listing on the App Store and we'll let you know as soon as it releases a new update along with the release notes.", "trigger_channel": "Apple App Store", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "app_store.new_app_version_released"}, "trigger_details": [{"section": "Trigger fields", "title": "App name or url\nText input", "description": "Text input", "details": {"Label": "Enter an app's name or URL", "Helper text": "E.g. &quot;IFTTT&quot; or &quot;Snapchat.&quot; For best results, paste an app's App Store URL.", "Slug": "app_name_or_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Name\nThe name of the App.", "description": "The name of the App.", "details": {"Slug": "name", "Filter code": "AppStore.newAppVersionReleased.Name", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Description\nThe description of the App.", "description": "The description of the App.", "details": {"Slug": "description", "Filter code": "AppStore.newAppVersionReleased.Description", "Type": "String", "Example": "Applets bring your favorite services together to create new experiences..."}}, {"section": "Ingredients", "title": "App store url\nThe URL to the App in the App Store.", "description": "The URL to the App in the App Store.", "details": {"Slug": "app_store_url", "Filter code": "AppStore.newAppVersionReleased.AppStoreUrl", "Type": "String", "Example": "https://itunes.apple.com/us/app/ifttt/id660944635"}}, {"section": "Ingredients", "title": "Developer\nThe name of the developer of the App.", "description": "The name of the developer of the App.", "details": {"Slug": "developer", "Filter code": "AppStore.newAppVersionReleased.Developer", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Category\nThe category the App falls under.", "description": "The category the App falls under.", "details": {"Slug": "category", "Filter code": "AppStore.newAppVersionReleased.Category", "Type": "String", "Example": "Productivity"}}, {"section": "Ingredients", "title": "Price\nThe current price of the App.", "description": "The current price of the App.", "details": {"Slug": "price", "Filter code": "AppStore.newAppVersionReleased.Price", "Type": "String", "Example": "$9.99"}}, {"section": "Ingredients", "title": "Rating\nThe current rating of the App.", "description": "The current rating of the App.", "details": {"Slug": "rating", "Filter code": "AppStore.newAppVersionReleased.Rating", "Type": "String", "Example": "5 stars"}}, {"section": "Ingredients", "title": "Screenshot\nThe URL to a screenshot of the App.", "description": "The URL to a screenshot of the App.", "details": {"Slug": "screenshot", "Filter code": "AppStore.newAppVersionReleased.Screenshot", "Type": "Image URL", "Example": "http://ifttt.com"}}, {"section": "Ingredients", "title": "Icon\nThe URL to an image of the App's icon.", "description": "The URL to an image of the App's icon.", "details": {"Slug": "icon", "Filter code": "AppStore.newAppVersionReleased.Icon", "Type": "String", "Example": "http://is2.mzstatic.com/image/thumb/Purple111/v4/5c/3d/43/5c3d4327-22d0-45d0-73c6-bbaf56c08902/source/512x512bb.jpg"}}, {"section": "Ingredients", "title": "Release notes\nNotes about the new app release.", "description": "Notes about the new app release.", "details": {"Slug": "release_notes", "Filter code": "AppStore.newAppVersionReleased.ReleaseNotes", "Type": "String", "Example": "+ We made some improvements to..."}}, {"section": "Ingredients", "title": "Version\nThe current version of the App.", "description": "The current version of the App.", "details": {"Slug": "version", "Filter code": "AppStore.newAppVersionReleased.Version", "Type": "String", "Example": "2.1.3"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "AppStore.newAppVersionReleased.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Runs every Monday. Save £52 in Week 1 of the year, £51 in Week 2 of the year, and so on!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Monzo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "monzo.pot_deposit", "Filter code method": "Monzo.potDeposit.skip(string?: reason)", "Runtime method": "runAction(\"monzo.pot_deposit\", {})"}, "action_details": [{"section": "Action fields", "title": "Pot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pot", "Helper text": "One of the pots on your Monzo account.", "Slug": "pot", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nText input > Other", "description": "Text input > Other", "details": {"Label": "Amount", "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"}}], "filter_code": "var week_of_year = Meta.currentUserTime.format('w');\nvar week_number = parseInt(week_of_year); \nvar amount= (53-week_number);\nMonzo.potDeposit.setAmount(amount.toFixed(2));\n\n"}
{"original_description": "Mute your Android phone.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Android Device", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_device.mute_device", "Filter code method": "AndroidDevice.muteDevice.skip(string?: reason)", "Runtime method": "runAction(\"android_device.mute_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Vibrate\nDropdown list", "description": "Dropdown list", "details": {"Label": "Vibrate", "Slug": "vibrate", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidDevice.muteDevice.setVibrate(string: vibrate)"}}], "filter_code": NaN}
{"original_description": "Launch into the weekend with a Friday roundup of NY Times reporting on \"NASA\", sent to your inbox. Get it?! 🚀", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_article_matching_search"}, "trigger_details": [{"section": "Trigger fields", "title": "Term\nText input", "description": "Text input", "details": {"Label": "Search for", "Slug": "term", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newArticleMatchingSearch.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newArticleMatchingSearch.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.newArticleMatchingSearch.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.newArticleMatchingSearch.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.newArticleMatchingSearch.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.newArticleMatchingSearch.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Keywords\nA comma separated list of article keywords", "description": "A comma separated list of article keywords", "details": {"Slug": "Keywords", "Filter code": "Nytimes.newArticleMatchingSearch.Keywords", "Type": "String", "Example": "fish, tanks, biology"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.newArticleMatchingSearch.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Enter a specific app's name or the link to its listing on the App Store and we'll add to the spreadsheet as soon as it releases a new update.", "trigger_channel": "Apple App Store", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "app_store.new_app_version_released"}, "trigger_details": [{"section": "Trigger fields", "title": "App name or url\nText input", "description": "Text input", "details": {"Label": "Enter an app's name or URL", "Helper text": "E.g. &quot;IFTTT&quot; or &quot;Snapchat.&quot; For best results, paste an app's App Store URL.", "Slug": "app_name_or_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Name\nThe name of the App.", "description": "The name of the App.", "details": {"Slug": "name", "Filter code": "AppStore.newAppVersionReleased.Name", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Description\nThe description of the App.", "description": "The description of the App.", "details": {"Slug": "description", "Filter code": "AppStore.newAppVersionReleased.Description", "Type": "String", "Example": "Applets bring your favorite services together to create new experiences..."}}, {"section": "Ingredients", "title": "App store url\nThe URL to the App in the App Store.", "description": "The URL to the App in the App Store.", "details": {"Slug": "app_store_url", "Filter code": "AppStore.newAppVersionReleased.AppStoreUrl", "Type": "String", "Example": "https://itunes.apple.com/us/app/ifttt/id660944635"}}, {"section": "Ingredients", "title": "Developer\nThe name of the developer of the App.", "description": "The name of the developer of the App.", "details": {"Slug": "developer", "Filter code": "AppStore.newAppVersionReleased.Developer", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Category\nThe category the App falls under.", "description": "The category the App falls under.", "details": {"Slug": "category", "Filter code": "AppStore.newAppVersionReleased.Category", "Type": "String", "Example": "Productivity"}}, {"section": "Ingredients", "title": "Price\nThe current price of the App.", "description": "The current price of the App.", "details": {"Slug": "price", "Filter code": "AppStore.newAppVersionReleased.Price", "Type": "String", "Example": "$9.99"}}, {"section": "Ingredients", "title": "Rating\nThe current rating of the App.", "description": "The current rating of the App.", "details": {"Slug": "rating", "Filter code": "AppStore.newAppVersionReleased.Rating", "Type": "String", "Example": "5 stars"}}, {"section": "Ingredients", "title": "Screenshot\nThe URL to a screenshot of the App.", "description": "The URL to a screenshot of the App.", "details": {"Slug": "screenshot", "Filter code": "AppStore.newAppVersionReleased.Screenshot", "Type": "Image URL", "Example": "http://ifttt.com"}}, {"section": "Ingredients", "title": "Icon\nThe URL to an image of the App's icon.", "description": "The URL to an image of the App's icon.", "details": {"Slug": "icon", "Filter code": "AppStore.newAppVersionReleased.Icon", "Type": "String", "Example": "http://is2.mzstatic.com/image/thumb/Purple111/v4/5c/3d/43/5c3d4327-22d0-45d0-73c6-bbaf56c08902/source/512x512bb.jpg"}}, {"section": "Ingredients", "title": "Release notes\nNotes about the new app release.", "description": "Notes about the new app release.", "details": {"Slug": "release_notes", "Filter code": "AppStore.newAppVersionReleased.ReleaseNotes", "Type": "String", "Example": "+ We made some improvements to..."}}, {"section": "Ingredients", "title": "Version\nThe current version of the App.", "description": "The current version of the App.", "details": {"Slug": "version", "Filter code": "AppStore.newAppVersionReleased.Version", "Type": "String", "Example": "2.1.3"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "AppStore.newAppVersionReleased.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Changes Hubitat's mode when you tap a button widget on your mobile device.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_mode", "Filter code method": "Hubitat.actionMode.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Helper text": "The new mode.", "Slug": "mode", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Want to make sure to keep up on your favorite articles and videos? Reward yourself with cash once you've archived them!", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_read_item_ril"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newReadItemRil.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newReadItemRil.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newReadItemRil.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newReadItemRil.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newReadItemRil.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newReadItemRil.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal", "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)", "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"}, "action_details": [{"section": "Action fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount to transfer", "Slug": "amount", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Fact Checker tries to uncover the truth behind the headlines. Turn on this Applet and every Monday morning you'll get their latest articles, so you can stay better informed. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Start your week off right with an email full of Star Trek gifs sent to your inbox on Mondays. LLAP, y'all. 🖖", "trigger_channel": "Giphy", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "giphy.search"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Url\nURL to this gif on Giphy", "description": "URL to this gif on Giphy", "details": {"Slug": "url", "Filter code": "Giphy.search.URL", "Type": "Web URL", "Example": "http://giphy.com/posts/dreams-are-real-and-best-with-cats"}}, {"section": "Ingredients", "title": "Image url\nURL to the gif's image if one exists", "description": "URL to the gif's image if one exists", "details": {"Slug": "image_url", "Filter code": "Giphy.search.ImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/9WsTM8zLbys4o/giphy.gif"}}, {"section": "Ingredients", "title": "Tumblr image url\nGIF image URL for posting GIFs on tumblr.", "description": "GIF image URL for posting GIFs on tumblr.", "details": {"Slug": "tumblr_image_url", "Filter code": "Giphy.search.TumblrImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/QT3k4ZWD6XOaA/giphy-tumblr.gif"}}, {"section": "Ingredients", "title": "Email html\nHTML to include an in-line GIF in the body of an email.", "description": "HTML to include an in-line GIF in the body of an email.", "details": {"Slug": "email_html", "Filter code": "Giphy.search.EmailHTML", "Type": "String", "Example": "<a href=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif><img src=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif border='0'/></a><br />via <a href=http://giphy.com/gifs/vhp0BocGjkVjO>giphy.com</a>"}}, {"section": "Ingredients", "title": "Embed code\nIFrame embed code of gif", "description": "IFrame embed code of gif", "details": {"Slug": "embed_code", "Filter code": "Giphy.search.EmbedCode", "Type": "String", "Example": "<iframe src=\"//giphy.com/embed/PfquFkRaRAv5u\" width=\"500\" height=\"391\" frameBorder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"}}, {"section": "Ingredients", "title": "Tags\nNewline separate string of tags of this gif", "description": "Newline separate string of tags of this gif", "details": {"Slug": "tags", "Filter code": "Giphy.search.Tags", "Type": "String", "Example": "cats party"}}, {"section": "Ingredients", "title": "Created date\nDate and time when this gif was created", "description": "Date and time when this gif was created", "details": {"Slug": "created_date", "Filter code": "Giphy.search.CreatedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "This Applet adds your text status updates as an entry in a Google drive spreadsheet. Look back on all your posts, and marvel at your productivity! ", "trigger_channel": "Facebook Pages", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "facebook_pages.new_status_message_by_page"}, "trigger_details": [{"section": "Ingredients", "title": "Page name\nYour Facebook Page's name.", "description": "Your Facebook Page's name.", "details": {"Slug": "PageName", "Filter code": "FacebookPages.newStatusMessageByPage.PageName", "Type": "String", "Example": "The ifttt Office"}}, {"section": "Ingredients", "title": "Message\nStatus message itself.", "description": "Status message itself.", "details": {"Slug": "Message", "Filter code": "FacebookPages.newStatusMessageByPage.Message", "Type": "String", "Example": "Is having an awesome time!"}}, {"section": "Ingredients", "title": "Updated at\nDate and time the status message was created.", "description": "Date and time the status message was created.", "details": {"Slug": "UpdatedAt", "Filter code": "FacebookPages.newStatusMessageByPage.UpdatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Page url\nThe link to the main Facebook page.", "description": "The link to the main Facebook page.", "details": {"Slug": "PageUrl", "Filter code": "FacebookPages.newStatusMessageByPage.PageUrl", "Type": "String", "Example": "http://www.facebook.com/pages/The-ifttt-office/108073145941483"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to turn Philips Hue Lights OFF.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Add your current location and time to a Google Drive spreadsheet by pressing the pusher on your Kronaby watch. (Make sure you enable \"Include location\" in the IFTTT trigger in the Kronaby app).", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Tap a button on your mobile device to set the level of a Hubitat dimmer.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Hubitat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hubitat.action_set_level", "Filter code method": "Hubitat.actionSetLevel.skip(string?: reason)", "Runtime method": "runAction(\"hubitat.action_set_level\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Level\nDropdown list", "description": "Dropdown list", "details": {"Label": "What level?", "Slug": "level", "Required": "true", "Can have default value": "true", "Filter code method": "Hubitat.actionSetLevel.setLevel(string: level)"}}, {"section": "Action fields", "title": "Rate\nText input > Other", "description": "Text input > Other", "details": {"Label": "What rate?", "Helper text": "The rate at which to change the dimming level.", "Slug": "rate", "Required": "false", "Can have default value": "true", "Filter code method": "Hubitat.actionSetLevel.setRate(string: rate)"}}], "filter_code": NaN}
{"original_description": "Stay in the know on the go — get a notification to your mobile phone from the IFTTT app when you get a new entry to your JotForm.", "trigger_channel": "Jotform", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "jotform.latest_form_submission"}, "trigger_details": [{"section": "Trigger fields", "title": "Form\nDropdown list", "description": "Dropdown list", "details": {"Label": "Form", "Helper text": "Choose a form", "Slug": "form_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Question filter\nText input > Other", "description": "Text input > Other", "details": {"Label": "Question Filter", "Helper text": "Optional question filter (label text) e.g. Name, Email, Address", "Slug": "question_filter", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Ip\nThe form respondent's detected IP address.", "description": "The form respondent's detected IP address.", "details": {"Slug": "ip", "Filter code": "Jotform.latestFormSubmission.IP", "Type": "String", "Example": "192.168.0.100"}}, {"section": "Ingredients", "title": "Form title\nThe form title.", "description": "The form title.", "details": {"Slug": "form_title", "Filter code": "Jotform.latestFormSubmission.FormTitle", "Type": "String", "Example": "My Contact Form"}}, {"section": "Ingredients", "title": "Submission date time\nThe date and time of the form submission.", "description": "The date and time of the form submission.", "details": {"Slug": "submission_date_time", "Filter code": "Jotform.latestFormSubmission.SubmissionDateTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Total submissions\nThe total submission count.", "description": "The total submission count.", "details": {"Slug": "total_submissions", "Filter code": "Jotform.latestFormSubmission.TotalSubmissions", "Type": "String", "Example": "8"}}, {"section": "Ingredients", "title": "Form\nA number that uniquely identifies the form.", "description": "A number that uniquely identifies the form.", "details": {"Slug": "form_id", "Filter code": "Jotform.latestFormSubmission.FormID", "Type": "String", "Example": "1234567890"}}, {"section": "Ingredients", "title": "Submission\nA number that uniquely identifies the form submission.", "description": "A number that uniquely identifies the form submission.", "details": {"Slug": "submission_id", "Filter code": "Jotform.latestFormSubmission.SubmissionID", "Type": "String", "Example": "850507727987654321"}}, {"section": "Ingredients", "title": "Rich text data\nThe form data in a tabulated HTML format.", "description": "The form data in a tabulated HTML format.", "details": {"Slug": "rich_text_data", "Filter code": "Jotform.latestFormSubmission.RichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Spreadsheet data\nThe form data in a CSV format.", "description": "The form data in a CSV format.", "details": {"Slug": "spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.SpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "Filtered rich text data\nThe filtered form data in a tabulated HTML format.", "description": "The filtered form data in a tabulated HTML format.", "details": {"Slug": "filtered_rich_text_data", "Filter code": "Jotform.latestFormSubmission.FilteredRichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Filtered spreadsheet data\nThe filtered form data in a CSV format.", "description": "The filtered form data in a CSV format.", "details": {"Slug": "filtered_spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.FilteredSpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "File url\nThe URL of the file(s) uploaded on your form.", "description": "The URL of the file(s) uploaded on your form.", "details": {"Slug": "file_url", "Filter code": "Jotform.latestFormSubmission.FileUrl", "Type": "String", "Example": "http://www.jotform.com/uploads/user/1234567890/9876543210/images.zip"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Button applet used to disarm Blink system.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Disarm SkylinkNet with a press of button!", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SkylinkNet", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "skylinknet.alarm", "Filter code method": "Skylinknet.alarm.skip(string?: reason)", "Runtime method": "runAction(\"skylinknet.alarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Hub\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Hub?", "Slug": "hub_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Key\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hub Password", "Slug": "key", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Alarm\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Mode?", "Slug": "alarm", "Required": "true", "Can have default value": "true", "Filter code method": "Skylinknet.alarm.setAlarm(string: alarm)"}}], "filter_code": NaN}
{"original_description": "With this Applet, you'll always know where to eat and what to do!", "trigger_channel": "Yelp", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "yelp.hot_and_new_business"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Business in an area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Sort by\nDropdown list", "description": "Dropdown list", "details": {"Label": "Sort by", "Slug": "sort_by", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Business\nUnique Yelp ID of this business", "description": "Unique Yelp ID of this business", "details": {"Slug": "business_id", "Filter code": "Yelp.hotAndNewBusiness.BusinessId", "Type": "String", "Example": "lJAGnYzku5zSaLnQ_T6_GQ"}}, {"section": "Ingredients", "title": "Business name\nName of the business.", "description": "Name of the business.", "details": {"Slug": "business_name", "Filter code": "Yelp.hotAndNewBusiness.BusinessName", "Type": "String", "Example": "Brenda's French Soul Food"}}, {"section": "Ingredients", "title": "Business category\nList of category titles associated with the business.", "description": "List of category titles associated with the business.", "details": {"Slug": "business_category", "Filter code": "Yelp.hotAndNewBusiness.BusinessCategory", "Type": "String", "Example": "Breakfast & Brunch, Southern, Cajun/Creole"}}, {"section": "Ingredients", "title": "Business image url\nPhoto for this business.", "description": "Photo for this business.", "details": {"Slug": "business_image_url", "Filter code": "Yelp.hotAndNewBusiness.BusinessImageUrl", "Type": "Image URL", "Example": "https://s3-media3.fl.yelpcdn.com/bphoto/sNIJnePGDenUOyewsD8tLg/o.jpg"}}, {"section": "Ingredients", "title": "Business phone\nPhone number of the business.", "description": "Phone number of the business.", "details": {"Slug": "business_phone", "Filter code": "Yelp.hotAndNewBusiness.BusinessPhone", "Type": "String", "Example": "+14153458100"}}, {"section": "Ingredients", "title": "Business address\nLocation of this business", "description": "Location of this business", "details": {"Slug": "business_address", "Filter code": "Yelp.hotAndNewBusiness.BusinessAddress", "Type": "String", "Example": "652 Polk St, San Francisco, CA 94102"}}, {"section": "Ingredients", "title": "Business rating\nRating for this business (value ranges from 1, 1.5, ... 4.5, 5).", "description": "Rating for this business (value ranges from 1, 1.5, ... 4.5, 5).", "details": {"Slug": "business_rating", "Filter code": "Yelp.hotAndNewBusiness.BusinessRating", "Type": "String", "Example": "4.0"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "When your August lock is unlocked, your Blink System is disarmed", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_unlocked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Unlocked at\nDate and time lock was unlocked.", "description": "Date and time lock was unlocked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockUnlocked.UnlockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who unlocked the lock.", "description": "The user who unlocked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockUnlocked.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockUnlocked.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockUnlocked.HouseName", "Type": "String", "Example": "San Diego Beach House"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who unlocked the lock.", "description": "An image url to the profile photo of the user who unlocked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockUnlocked.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Get the daily weather sent to Discord. This Applet returns results in Celcius.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Discord", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "discord.post_message_to_channel", "Filter code method": "Discord.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"discord.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which Channel?", "Helper text": "Confirm that <a href=\"https://ift.tt/disc_faq\" target=\"_blank\">permissions</a> are granted in your server. If your server isn’t listed, <a href=\"https://ift.tt/disc_server\" target=\"_blank\">reconnect the Discord service</a>.", "Slug": "channel_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Message", "Helper text": "Max limit of 2000 characters. To @mention roles, find the role ID in Discord by running `\\@role`. Ex. 'Hello &lt;@&amp;1234&gt;'", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Discord.postMessageToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Allowable mentions\nDropdown list", "description": "Dropdown list", "details": {"Label": "Allowable mentions", "Helper text": "Allows usage of @everyone, &lt;@&amp;(Role ID)&gt;, and &lt;@(User ID)&gt; in the message body", "Slug": "allowable_mentions", "Required": "true", "Can have default value": "true", "Filter code method": "Discord.postMessageToChannel.setAllowable Mentions(string: allowable_mentions)"}}], "filter_code": NaN}
{"original_description": "Every time you send an email to trigger@applet.ifttt.com from your IFTTT associated email address, the body of that email is forwarded to your IntuiFace experiences.", "trigger_channel": "Email", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "email.send_ifttt_an_email_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Helper text": "e.g. #hashtag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "From\nEmail address of sender.", "description": "Email address of sender.", "details": {"Slug": "From", "Filter code": "Email.sendIftttAnEmailTagged.From", "Type": "String", "Example": "somebody@gmail.com"}}, {"section": "Ingredients", "title": "Attachment temporary url\nThe URL to the first file attachment, if included, that anyone can visit for 30 days.", "description": "The URL to the first file attachment, if included, that anyone can visit for 30 days.", "details": {"Slug": "AttachmentTemporaryUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentTemporaryUrl", "Type": "File URL", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Body\nEmail body, with most signatures stripped out.", "description": "Email body, with most signatures stripped out.", "details": {"Slug": "Body", "Filter code": "Email.sendIftttAnEmailTagged.Body", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Body html\nEmail body HTML, with most signatures stripped out.", "description": "Email body HTML, with most signatures stripped out.", "details": {"Slug": "BodyHTML", "Filter code": "Email.sendIftttAnEmailTagged.BodyHTML", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Subject\nEmail subject line.", "description": "Email subject line.", "details": {"Slug": "Subject", "Filter code": "Email.sendIftttAnEmailTagged.Subject", "Type": "String", "Example": "Hello there"}}, {"section": "Ingredients", "title": "Attachment url\nThe URL to the first file attachment, if included.", "description": "The URL to the first file attachment, if included.", "details": {"Slug": "AttachmentUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentUrl", "Type": "String", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Received at\nDate and time email was received.", "description": "Date and time email was received.", "details": {"Slug": "ReceivedAt", "Filter code": "Email.sendIftttAnEmailTagged.ReceivedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Intuiface", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "intuiface.sendMessage", "Filter code method": "Intuiface.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"intuiface.sendMessage\", {})"}, "action_details": [{"section": "Action fields", "title": "Api key\nText input > Other", "description": "Text input > Other", "details": {"Label": "Credential key", "Helper text": "To get your key, go to the <a href=\"https://myintuiface.intuilab.com/credentialkeys?scope=IFTTT_Webtriggers\" target=\"_blank\">Credential keys page</a> then paste the generated key here.", "Slug": "api_key", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Msg\nText input > Other", "description": "Text input > Other", "details": {"Label": "Message", "Helper text": "Value to send to all selected experiences. For details , go to the <a href=\"http://support.intuilab.com/kb/web-triggers/web-triggers-overview\" target=\"_blank\">Web Triggers Interface Asset page</a>.", "Slug": "msg", "Required": "true", "Can have default value": "true", "Filter code method": "Intuiface.sendMessage.setMsg(string: msg)"}}, {"section": "Action fields", "title": "P1\nText input > Other", "description": "Text input > Other", "details": {"Label": "Parameter 1", "Helper text": "Optional: An additional value that can be sent to all selected experiences.", "Slug": "p1", "Required": "false", "Can have default value": "true", "Filter code method": "Intuiface.sendMessage.setP1(string: p1)"}}, {"section": "Action fields", "title": "P2\nText input > Other", "description": "Text input > Other", "details": {"Label": "Parameter 2", "Helper text": "Optional: An additional value that can be sent to all selected experiences.", "Slug": "p2", "Required": "false", "Can have default value": "true", "Filter code method": "Intuiface.sendMessage.setP2(string: p2)"}}, {"section": "Action fields", "title": "P3\nText input > Other", "description": "Text input > Other", "details": {"Label": "Parameter 3", "Helper text": "Optional: An additional value that can be sent to all selected experiences.", "Slug": "p3", "Required": "false", "Can have default value": "true", "Filter code method": "Intuiface.sendMessage.setP3(string: p3)"}}, {"section": "Action fields", "title": "Xpnames\nText input > Other", "description": "Text input > Other", "details": {"Label": "Experience name(s)", "Helper text": "Optional: Select experience(s) based on their name(s). For multiple experiences, use a comma separated list.", "Slug": "xpNames", "Required": "false", "Can have default value": "true", "Filter code method": "Intuiface.sendMessage.setXp Names(string: xpNames)"}}, {"section": "Action fields", "title": "Devicenames\nText input > Other", "description": "Text input > Other", "details": {"Label": "Player name(s)", "Helper text": "Optional: Select Player(s) based on their device name(s). For multiple Players, use a comma separated list.", "Slug": "deviceNames", "Required": "false", "Can have default value": "true", "Filter code method": "Intuiface.sendMessage.setDevice Names(string: deviceNames)"}}, {"section": "Action fields", "title": "Tags\nText input > Other", "description": "Text input > Other", "details": {"Label": "Player tag(s)", "Helper text": "Optional: Select Player(s) based on their tag(s). For multiple tags, use a comma separated list. Players with one or more matching tags will be selected.", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Intuiface.sendMessage.setTags(string: tags)"}}], "filter_code": NaN}
{"original_description": "Going away for the weekend? Want to make sure to not waste unnecessary energy? Press your Kronaby pusher to set the Nest thermostat at the desired \"away\" temperature. ", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": NaN}
{"original_description": "Buzzfeed's upped their political reporting — stay informed by getting their pieces sent straight to your inbox. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "Automatically save your photos to a folder. Keep in mind, it only works for new photos you post.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Automatically save your photos to a folder. Keep in mind, it only works for new photos you post.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Google Drive", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_drive.upload_file_from_url_google_drive", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.skip(string?: reason)", "Runtime method": "runAction(\"google_drive.upload_file_from_url_google_drive\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with uploadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Choose a time and get detailed info about today's weather in Telegram, come rain or shine.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "If it's raining outside, you'll want change colors inside!", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.ChangeColor", "Filter code method": "Magichue.changeColor.skip(string?: reason)", "Runtime method": "runAction(\"magichue.ChangeColor\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness level", "Slug": "brightness", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Whenever it starts raining, automatically close your garage door to help keep everything dry.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Garageio", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garageio.close_garage_door", "Filter code method": "Garageio.closeGarageDoor.skip(string?: reason)", "Runtime method": "runAction(\"garageio.close_garage_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door to close\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_to_close", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Send the email to trigger@applet.ifttt.com and add the URL of the transfer to the body of the message.", "trigger_channel": "Email", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "email.send_ifttt_an_email_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Helper text": "e.g. #hashtag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "From\nEmail address of sender.", "description": "Email address of sender.", "details": {"Slug": "From", "Filter code": "Email.sendIftttAnEmailTagged.From", "Type": "String", "Example": "somebody@gmail.com"}}, {"section": "Ingredients", "title": "Attachment temporary url\nThe URL to the first file attachment, if included, that anyone can visit for 30 days.", "description": "The URL to the first file attachment, if included, that anyone can visit for 30 days.", "details": {"Slug": "AttachmentTemporaryUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentTemporaryUrl", "Type": "File URL", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Body\nEmail body, with most signatures stripped out.", "description": "Email body, with most signatures stripped out.", "details": {"Slug": "Body", "Filter code": "Email.sendIftttAnEmailTagged.Body", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Body html\nEmail body HTML, with most signatures stripped out.", "description": "Email body HTML, with most signatures stripped out.", "details": {"Slug": "BodyHTML", "Filter code": "Email.sendIftttAnEmailTagged.BodyHTML", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Subject\nEmail subject line.", "description": "Email subject line.", "details": {"Slug": "Subject", "Filter code": "Email.sendIftttAnEmailTagged.Subject", "Type": "String", "Example": "Hello there"}}, {"section": "Ingredients", "title": "Attachment url\nThe URL to the first file attachment, if included.", "description": "The URL to the first file attachment, if included.", "details": {"Slug": "AttachmentUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentUrl", "Type": "String", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Received at\nDate and time email was received.", "description": "Date and time email was received.", "details": {"Slug": "ReceivedAt", "Filter code": "Email.sendIftttAnEmailTagged.ReceivedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "put.io", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "putio.new_transfer", "Filter code method": "Putio.newTransfer.skip(string?: reason)", "Runtime method": "runAction(\"putio.new_transfer\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Other", "description": "Text input > Other", "details": {"Label": "What URL?", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Putio.newTransfer.setUrl(string: url)"}}, {"section": "Action fields", "title": "Folder\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which folder ID?", "Helper text": "File will be downloaded into this folder. Folder ID can be found in the address bar when the folder is open in your browser. If the folder with given ID does not exist, the files will be downloaded into your default download folder.", "Slug": "folder_id", "Required": "false", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Use RainMachine and WUnderground IFTTT services to start a zone with the desired amount of time when the outside temperature rises above the value you provide.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "RainMachine", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "rain_machine.start_zone", "Filter code method": "RainMachine.startZone.skip(string?: reason)", "Runtime method": "runAction(\"rain_machine.start_zone\", {})"}, "action_details": [{"section": "Action fields", "title": "Zone number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which zone number?", "Helper text": "The gardening zone number", "Slug": "zone_number", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Time\nDropdown list", "description": "Dropdown list", "details": {"Label": "For how long?", "Helper text": "Duration in minutes.", "Slug": "time", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Keep your Wordpress fresh and up-to-date with your Instagrams. Note: only works for single photo posts.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "WordPress", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wordpress.create_photo_post_wp", "Filter code method": "Wordpress.createPhotoPostWp.skip(string?: reason)", "Runtime method": "runAction(\"wordpress.create_photo_post_wp\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setTitle(string: title)"}}, {"section": "Action fields", "title": "Source url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "source_url", "Required": "true", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setSource Url(string: source_url)"}}, {"section": "Action fields", "title": "Caption\nText input", "description": "Text input", "details": {"Label": "Caption", "Helper text": "Optional", "Slug": "caption", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setCaption(string: caption)"}}, {"section": "Action fields", "title": "Categories\nText input > Other", "description": "Text input > Other", "details": {"Label": "Categories", "Helper text": "Comma separated", "Slug": "categories", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setCategories(string: categories)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setTags(string: tags)"}}, {"section": "Action fields", "title": "Post status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Post status", "Slug": "post_status", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPhotoPostWp.setPost Status(string: post_status)"}}], "filter_code": NaN}
{"original_description": "Arm Away with a press of a button!", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "SkylinkNet", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "skylinknet.alarm", "Filter code method": "Skylinknet.alarm.skip(string?: reason)", "Runtime method": "runAction(\"skylinknet.alarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Hub\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Hub?", "Slug": "hub_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Key\nText input > Other", "description": "Text input > Other", "details": {"Label": "Hub Password", "Slug": "key", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Alarm\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Mode?", "Slug": "alarm", "Required": "true", "Can have default value": "true", "Filter code method": "Skylinknet.alarm.setAlarm(string: alarm)"}}], "filter_code": NaN}
{"original_description": "Customize this Applet with the date and time you want to be reminded, and you'll get a note so you don't forget to celebrate. ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_year_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Datetime\nText input", "description": "Text input", "details": {"Label": "Date and time", "Slug": "datetime", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyYearOn.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "Use this Recipe to update Google Contacts with any new Verizon Contact to keep them synchronized", "trigger_channel": "Verizon Cloud", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "verizon_cloud.new_contact"}, "trigger_details": [{"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "VerizonCloud.newContact.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Name\nThe name of the contact.", "description": "The name of the contact.", "details": {"Slug": "name", "Filter code": "VerizonCloud.newContact.Name", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Email\nThe email address of the contact.", "description": "The email address of the contact.", "details": {"Slug": "email", "Filter code": "VerizonCloud.newContact.Email", "Type": "String", "Example": "johnsmith@ifttt.com"}}, {"section": "Ingredients", "title": "Phone\nThe phone number of the contact.", "description": "The phone number of the contact.", "details": {"Slug": "phone", "Filter code": "VerizonCloud.newContact.Phone", "Type": "String", "Example": "4155550000"}}], "action_channel": "Google Contacts", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_contacts.create_new_contact", "Filter code method": "GoogleContacts.createNewContact.skip(string?: reason)", "Runtime method": "runAction(\"google_contacts.create_new_contact\", {})"}, "action_details": [{"section": "Action fields", "title": "Full name\nText input > Other", "description": "Text input > Other", "details": {"Label": "Full name", "Helper text": "Required", "Slug": "full_name", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleContacts.createNewContact.setFull Name(string: full_name)"}}, {"section": "Action fields", "title": "Which group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which group?", "Helper text": "Optional group to assign the contact to.", "Slug": "which_group", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "PhoneNumber", "Helper text": "Optional", "Slug": "phone_number", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleContacts.createNewContact.setPhone Number(string: phone_number)"}}, {"section": "Action fields", "title": "Email\nText input > Other", "description": "Text input > Other", "details": {"Label": "Email", "Helper text": "Optional", "Slug": "email", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleContacts.createNewContact.setEmail(string: email)"}}, {"section": "Action fields", "title": "Address\nText input > Other", "description": "Text input > Other", "details": {"Label": "Address", "Helper text": "Optional", "Slug": "address", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleContacts.createNewContact.setAddress(string: address)"}}, {"section": "Action fields", "title": "Job title\nText input > Other", "description": "Text input > Other", "details": {"Label": "Job title", "Helper text": "Optional", "Slug": "job_title", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleContacts.createNewContact.setJob Title(string: job_title)"}}, {"section": "Action fields", "title": "Company\nText input > Other", "description": "Text input > Other", "details": {"Label": "Company", "Helper text": "Optional", "Slug": "company", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleContacts.createNewContact.setCompany(string: company)"}}, {"section": "Action fields", "title": "Notes\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Notes", "Helper text": "Optional", "Slug": "notes", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleContacts.createNewContact.setNotes(string: notes)"}}, {"section": "Action fields", "title": "Upload photo\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo Url", "Helper text": "Optional url to a photo of the new contact", "Slug": "upload_photo", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleContacts.createNewContact.setUpload Photo(string: upload_photo)"}}], "filter_code": NaN}
{"original_description": "Set the color of your smart bulb with a button press", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.change_color_temp", "Filter code method": "Kasa.changeColorTemp.skip(string?: reason)", "Runtime method": "runAction(\"kasa.change_color_temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color Temperature", "Slug": "color_temperature", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setColor Temperature(string: color_temperature)"}}, {"section": "Action fields", "title": "Kelvin\nDropdown list", "description": "Dropdown list", "details": {"Label": "Kelvin", "Helper text": "If set, kelvin value will override the color temperature.", "Slug": "kelvin", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setKelvin(string: kelvin)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setTransition Duration(string: transition_duration)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Provide custom options here. For example : &quot;color_temperature: cool; transition_duration: 3000” for cool and 3 seconds transition duration or “kelvin: 5000; transition_duration: 2000” for temperature of 5000K and 2 seconds transition duration", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "Set smart light bulb color at the press of a button. This works with TP-Link LB130 and LB230 smart wifi light bulbs.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.change_color_temp", "Filter code method": "Kasa.changeColorTemp.skip(string?: reason)", "Runtime method": "runAction(\"kasa.change_color_temp\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color temperature\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color Temperature", "Slug": "color_temperature", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setColor Temperature(string: color_temperature)"}}, {"section": "Action fields", "title": "Kelvin\nDropdown list", "description": "Dropdown list", "details": {"Label": "Kelvin", "Helper text": "If set, kelvin value will override the color temperature.", "Slug": "kelvin", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setKelvin(string: kelvin)"}}, {"section": "Action fields", "title": "Transition duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Transition duration", "Helper text": "How long should it take for the lights to transition between colors.", "Slug": "transition_duration", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setTransition Duration(string: transition_duration)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Provide custom options here. For example : &quot;color_temperature: cool; transition_duration: 3000” for cool and 3 seconds transition duration or “kelvin: 5000; transition_duration: 2000” for temperature of 5000K and 2 seconds transition duration", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Kasa.changeColorTemp.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "All you have to do is paste in a specific RSS Feed in the field below and select the channel you want to keep up-to-date with the latest news", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Slack", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "slack.post_to_channel", "Filter code method": "Slack.postToChannel.skip(string?: reason)", "Runtime method": "runAction(\"slack.post_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which channel?", "Slug": "channel", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle(string: title)"}}, {"section": "Action fields", "title": "Title url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Title URL", "Helper text": "Optional", "Slug": "title_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Sends new posts via your RSS feed to Buffer with an image", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Buffer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "buffer.add_to_buffer_with_photo", "Filter code method": "Buffer.addToBufferWithPhoto.skip(string?: reason)", "Runtime method": "runAction(\"buffer.add_to_buffer_with_photo\", {})"}, "action_details": [{"section": "Action fields", "title": "Photo url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Photo URL", "Slug": "photo_url", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBufferWithPhoto.setPhoto Url(string: photo_url)"}}, {"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Description", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBufferWithPhoto.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "The Library of Congress posts news releases every so often. Stay up-to-date with the latest!", "trigger_channel": "Library of Congress", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "loc.latest_news"}, "trigger_details": [{"section": "Ingredients", "title": "Headline\nThe headline for the latest news.", "description": "The headline for the latest news.", "details": {"Slug": "EntryTitle", "Filter code": "Loc.latestNews.Headline", "Type": "String", "Example": "Latest News: Library of Congress Welcomes Junior Fellows"}}, {"section": "Ingredients", "title": "News url\nThe URL to the news article.", "description": "The URL to the news article.", "details": {"Slug": "EntryUrl", "Filter code": "Loc.latestNews.NewsUrl", "Type": "String", "Example": "https://www.loc.gov/item/prn-17-078/?loclr=ealn"}}, {"section": "Ingredients", "title": "Content html\nThe news content, may contain HTML.", "description": "The news content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Loc.latestNews.ContentHtml", "Type": "String", "Example": "<p><span>The Library of Congress this week welcomed 37 undergraduate..."}}, {"section": "Ingredients", "title": "Published date\nDate the news was published.", "description": "Date the news was published.", "details": {"Slug": "EntryPublished", "Filter code": "Loc.latestNews.PublishedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Lock a door with SmartThings and Blink arms", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.locked_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Locked at\nThe date and time the lock was locked.", "description": "The date and time the lock was locked.", "details": {"Slug": "LockedAt", "Filter code": "SmartthingsV2.lockedSmartthings.LockedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.lockedSmartthings.DeviceName", "Type": "String", "Example": "Bedroom lock"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "The EDF is one of the world's largest environmental organizations. Get an email with the content when they write a new article about the topic you'd like to track. ", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item_matches"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or simple phrase", "Helper text": "Search operators are not supported", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItemMatches.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItemMatches.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItemMatches.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItemMatches.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItemMatches.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItemMatches.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItemMatches.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItemMatches.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "Unlock a door with SmartThings and Blink disarms", "trigger_channel": "SmartThings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "smartthings_v2.locked_smartthings"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Locked at\nThe date and time the lock was locked.", "description": "The date and time the lock was locked.", "details": {"Slug": "LockedAt", "Filter code": "SmartthingsV2.lockedSmartthings.LockedAt", "Type": "String", "Example": "April 1st, 2016 at 12:43PM"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device.", "description": "The name of the device.", "details": {"Slug": "DeviceName", "Filter code": "SmartthingsV2.lockedSmartthings.DeviceName", "Type": "String", "Example": "Bedroom lock"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Automatically add Tumblr photo posts to your Buffer Queue in a jiffy with this Applet.", "trigger_channel": "Tumblr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "tumblr.new_photo_post"}, "trigger_details": [{"section": "Trigger fields", "title": "Tumblelog\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tumblelog", "Helper text": "Enter the tumblelog name that this trigger should fire for", "Slug": "tumblelog", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Post body text\nThe post's body (text only)", "description": "The post's body (text only)", "details": {"Slug": "post_body_text", "Filter code": "Tumblr.newPhotoPost.PostBodyText", "Type": "String", "Example": "This is the body of a post. Neat."}}, {"section": "Ingredients", "title": "Url\nThe post URL", "description": "The post URL", "details": {"Slug": "url", "Filter code": "Tumblr.newPhotoPost.Url", "Type": "Web URL", "Example": "https://staff.tumblr.com/post/659803739627094017"}}, {"section": "Ingredients", "title": "Post body html\nThe post's body (HTML)", "description": "The post's body (HTML)", "details": {"Slug": "post_body_html", "Filter code": "Tumblr.newPhotoPost.PostBodyHtml", "Type": "String", "Example": "<figure class=\"tmblr-full\"><img src=\"https://64.media.tumblr.com/a-photo.jpg\"></figure><p>This is an HTML body.</p>"}}, {"section": "Ingredients", "title": "Thumbnail url\nThe thumbnail image URL for the post", "description": "The thumbnail image URL for the post", "details": {"Slug": "thumbnail_url", "Filter code": "Tumblr.newPhotoPost.ThumbnailUrl", "Type": "Web URL", "Example": "https://64.media.tumblr.com/a18c8063bf9d095d99f12b51d3dd1eda/57803298a6ae7123-0a/s1280x1920/fb2fce67958156e2231da15522ddb6850e1559ff.gifv"}}, {"section": "Ingredients", "title": "Full image url\nThe full size image URL", "description": "The full size image URL", "details": {"Slug": "full_image_url", "Filter code": "Tumblr.newPhotoPost.FullImageUrl", "Type": "Image URL", "Example": "https://64.media.tumblr.com/fd654c32f041cb02c757b5646c1cf9e1/a4c5782524284f82-d5/s1280x1920/8e97caae5a975889b3e170e42ea064b68410300a.jpg"}}, {"section": "Ingredients", "title": "Post tags\nThe post's tags", "description": "The post's tags", "details": {"Slug": "post_tags", "Filter code": "Tumblr.newPhotoPost.PostTags", "Type": "String", "Example": "Sky,Earth,Wind,Fire"}}, {"section": "Ingredients", "title": "Post\nThe ID of the post that has been created", "description": "The ID of the post that has been created", "details": {"Slug": "post_id", "Filter code": "Tumblr.newPhotoPost.PostId", "Type": "String", "Example": "123456789"}}, {"section": "Ingredients", "title": "Tumblelog\nThe name of the Tumblelog that published the post", "description": "The name of the Tumblelog that published the post", "details": {"Slug": "tumblelog", "Filter code": "Tumblr.newPhotoPost.Tumblelog", "Type": "String", "Example": "staff"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Tumblr.newPhotoPost.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Buffer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "buffer.add_to_buffer", "Filter code method": "Buffer.addToBuffer.skip(string?: reason)", "Runtime method": "runAction(\"buffer.add_to_buffer\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Update", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBuffer.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Keep your Wordpress fresh and up-to-date with your Instagram videos.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_video_by_you_instagram"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewVideoByYouInstagram.Caption", "Type": "String", "Example": "A cool video"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the video's Instagram page.", "description": "The short URL to the video's Instagram page.", "details": {"Slug": "URL", "Filter code": "Instagram.anyNewVideoByYouInstagram.URL", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Video source url\nURL to the video file.", "description": "URL to the video file.", "details": {"Slug": "VideoSourceURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.VideoSourceURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4"}}, {"section": "Ingredients", "title": "Image thumbnail url\nURL to the video's thumbnail image.", "description": "URL to the video's thumbnail image.", "details": {"Slug": "ImageThumbnailURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.ImageThumbnailURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the video was taken.", "description": "Date and time the video was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewVideoByYouInstagram.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the video.", "description": "The HTML embed code for the video.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewVideoByYouInstagram.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "WordPress", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wordpress.create_post_wp", "Filter code method": "Wordpress.createPostWp.skip(string?: reason)", "Runtime method": "runAction(\"wordpress.create_post_wp\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setTitle(string: title)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Helper text": "Some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setBody(string: body)"}}, {"section": "Action fields", "title": "Categories\nText input > Other", "description": "Text input > Other", "details": {"Label": "Categories", "Helper text": "Comma separated", "Slug": "categories", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setCategories(string: categories)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Comma separated", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setTags(string: tags)"}}, {"section": "Action fields", "title": "Post status\nDropdown list", "description": "Dropdown list", "details": {"Label": "Post status", "Slug": "post_status", "Required": "false", "Can have default value": "true", "Filter code method": "Wordpress.createPostWp.setPost Status(string: post_status)"}}], "filter_code": NaN}
{"original_description": "With this applet your house is being cleaned by Roomba when activating your all-off function in Niko Home Control", "trigger_channel": "Niko Home Control", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nikohomecontrol.routine_activated"}, "trigger_details": [{"section": "Trigger fields", "title": "Routine\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Routine will be the trigger?", "Helper text": "Select the Routine which will trigger an action when it is activated", "Slug": "routine", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nikohomecontrol.routineActivated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Routine\nThe Routine which was activated.", "description": "The Routine which was activated.", "details": {"Slug": "routine", "Filter code": "Nikohomecontrol.routineActivated.Routine", "Type": "String", "Example": "Party"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.start_robot", "Filter code method": "Irobot.startRobot.skip(string?: reason)", "Runtime method": "runAction(\"irobot.start_robot\", {})"}, "action_details": [{"section": "Action fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Let a friend know you're back in town — and need a ride! Just put in their number and when you check-in near the airport they'll get an SMS from your Android telling them it's time to hop in the car and get you that VIP curbside pickup. ", "trigger_channel": "Foursquare", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "foursquare.new_checkin_by_you_at_location"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input", "description": "Location input", "details": {"Label": "Locate an area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Shout\nShout (message) associated with check-in.", "description": "Shout (message) associated with check-in.", "details": {"Slug": "Shout", "Filter code": "Foursquare.newCheckinByYouAtLocation.Shout", "Type": "String", "Example": "Best muffins ever."}}, {"section": "Ingredients", "title": "Venue name", "description": "", "details": {"Slug": "VenueName", "Filter code": "Foursquare.newCheckinByYouAtLocation.VenueName", "Type": "String", "Example": "The ifttt office"}}, {"section": "Ingredients", "title": "Venue url\nThe short URL to the venue's Foursquare page.", "description": "The short URL to the venue's Foursquare page.", "details": {"Slug": "VenueUrl", "Filter code": "Foursquare.newCheckinByYouAtLocation.VenueUrl", "Type": "String", "Example": "http://4sq.com/cjWcVg"}}, {"section": "Ingredients", "title": "Venue map image url\nA URL to a static map image of the venue's location.", "description": "A URL to a static map image of the venue's location.", "details": {"Slug": "VenueMapImageUrl", "Filter code": "Foursquare.newCheckinByYouAtLocation.VenueMapImageUrl", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.776024,-122.425632&zoom=16&size=420x260&maptype=roadmap&sensor=false&markers=color:red|37.776024,-122.425632"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map at this location.", "description": "The image of the map at this location.", "details": {"Slug": "LocationMapImageUrl", "Filter code": "Foursquare.newCheckinByYouAtLocation.LocationMapImageUrl", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map at this location.", "description": "The link to the map at this location.", "details": {"Slug": "LocationMapUrl", "Filter code": "Foursquare.newCheckinByYouAtLocation.LocationMapUrl", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Checkin date\nDate and time you checked in.", "description": "Date and time you checked in.", "details": {"Slug": "CheckinDate", "Filter code": "Foursquare.newCheckinByYouAtLocation.CheckinDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "Blink Philips Hue light when garage door opens", "trigger_channel": "Garadget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "garadget.door_opens"}, "trigger_details": [{"section": "Trigger fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Garadget.doorOpens.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet creates a button widget that you can use from the home screen of your Android or iOS device. Press the button to close your garage door or gate.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "GarageWiFi & Gates", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garagewifi.close_door", "Filter code method": "Garagewifi.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"garagewifi.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use Weather Underground to close your awning when it's raining to protect it from damage.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Somfy myLink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "somfy_mylink.move", "Filter code method": "SomfyMylink.move.skip(string?: reason)", "Runtime method": "runAction(\"somfy_mylink.move\", {})"}, "action_details": [{"section": "Action fields", "title": "Command\nDropdown list", "description": "Dropdown list", "details": {"Label": "What command ?", "Slug": "command", "Required": "true", "Can have default value": "true", "Filter code method": "SomfyMylink.move.setCommand(string: command)"}}, {"section": "Action fields", "title": "Target\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which connected product ?", "Slug": "target", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When it's sunset, close my blind.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Connector", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dooya_connector.close_blinds", "Filter code method": "DooyaConnector.closeBlinds.skip(string?: reason)", "Runtime method": "runAction(\"dooya_connector.close_blinds\", {})"}, "action_details": [{"section": "Action fields", "title": "Which blinds\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which blind?", "Slug": "which_blinds", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Automatically close garage door at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Garadget", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garadget.close_door", "Filter code method": "Garadget.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"garadget.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Applet closes your door at 7pm daily.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "MyNice", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "mynice.close", "Filter code method": "Mynice.close.skip(string?: reason)", "Runtime method": "runAction(\"mynice.close\", {})"}, "action_details": [{"section": "Action fields", "title": "Automation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which automation?", "Slug": "automation_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use beam to make sure that your garage door is closed by 9pm. This can be used to make sure you do not leave your door open all night accidentally. ", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "beam", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "beam.close_garage_door", "Filter code method": "Beam.closeGarageDoor.skip(string?: reason)", "Runtime method": "runAction(\"beam.close_garage_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door to close\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_to_close", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Automatically closes the garage door at the specified time if left open.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Garadget", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garadget.close_door", "Filter code method": "Garadget.closeDoor.skip(string?: reason)", "Runtime method": "runAction(\"garadget.close_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_id", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Oh no! Your robot is stuck somewhere inside your home. Send yourself an SMS text to remind you to free your robot when you get home. \n", "trigger_channel": "iRobot", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "irobot.robot_stuck"}, "trigger_details": [{"section": "Trigger fields", "title": "Robot name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Robot Name", "Slug": "robot_name", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nThe time the robot got stuck.", "description": "The time the robot got stuck.", "details": {"Slug": "iso_timestamp", "Filter code": "Irobot.robotStuck.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "Receive a notification when your Netatmo registers a temperature drop below a specific amount you choose.\nNote: IFTTT app is needed for this Applet.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.temperature-drops-below"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target temperature", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the temperature", "description": "This is the name of the Netamo device where you are reading the temperature", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.temperatureDropsBelow.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}, {"section": "Ingredients", "title": "Target temperature c\nThe target temperature in degrees Celsius", "description": "The target temperature in degrees Celsius", "details": {"Slug": "TargetTemperatureC", "Filter code": "Netatmo.temperatureDropsBelow.TargetTemperatureC", "Type": "String", "Example": "22.22"}}, {"section": "Ingredients", "title": "Target temperature f\nThe target temperature in degrees Fahrenheit", "description": "The target temperature in degrees Fahrenheit", "details": {"Slug": "TargetTemperatureF", "Filter code": "Netatmo.temperatureDropsBelow.TargetTemperatureF", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Measured temperature c\nThe measured temperature in degrees Celsius", "description": "The measured temperature in degrees Celsius", "details": {"Slug": "MeasuredTemperatureC", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredTemperatureC", "Type": "String", "Example": "22.78"}}, {"section": "Ingredients", "title": "Measured temperature f\nThe measured temperature in degrees Fahrenheit", "description": "The measured temperature in degrees Fahrenheit", "details": {"Slug": "MeasuredTemperatureF", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredTemperatureF", "Type": "String", "Example": "73"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Cold climes now have a silver lining... every time the temperature hits freezing, you’ll save a set amount toward one of your Goals.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal", "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)", "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"}, "action_details": [{"section": "Action fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount to transfer", "Slug": "amount", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Upload details from Android phone calls made to your Unforgettable Me account. These details include: contact name, to number, start time and duration. ", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.place_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.placeAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.placeAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "To number\nThe number that received the call.", "description": "The number that received the call.", "details": {"Slug": "ToNumber", "Filter code": "AndroidPhone.placeAPhoneCall.ToNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.placeAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.placeAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "Upload details from Android phone calls answered to your Unforgettable Me account. These details include: contact name, from number, start time and duration.", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.receive_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.receiveAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.receiveAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.receiveAPhoneCall.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.receiveAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.receiveAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "This Applet automatically saves trending GIFs from Giphy in a Dropbox folder of your choosing.", "trigger_channel": "Giphy", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "giphy.trending"}, "trigger_details": [{"section": "Ingredients", "title": "Url\nURL to this gif on Giphy", "description": "URL to this gif on Giphy", "details": {"Slug": "url", "Filter code": "Giphy.trending.URL", "Type": "Web URL", "Example": "http://giphy.com/posts/dreams-are-real-and-best-with-cats"}}, {"section": "Ingredients", "title": "Image url\nURL to the gif's image if one exists", "description": "URL to the gif's image if one exists", "details": {"Slug": "image_url", "Filter code": "Giphy.trending.ImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/9WsTM8zLbys4o/giphy.gif"}}, {"section": "Ingredients", "title": "Tumblr image url\nGIF Image URL for posting GIFs on tumblr.", "description": "GIF Image URL for posting GIFs on tumblr.", "details": {"Slug": "tumblr_image_url", "Filter code": "Giphy.trending.TumblrImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/QT3k4ZWD6XOaA/giphy-tumblr.gif"}}, {"section": "Ingredients", "title": "Email html\nHTML to include an in-line GIF in the body of an email.", "description": "HTML to include an in-line GIF in the body of an email.", "details": {"Slug": "email_html", "Filter code": "Giphy.trending.EmailHTML", "Type": "String", "Example": "<a href=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif><img src=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif border='0'/></a><br />via <a href=http://giphy.com/gifs/vhp0BocGjkVjO>giphy.com</a>"}}, {"section": "Ingredients", "title": "Embed code\nIFrame embed code of gif", "description": "IFrame embed code of gif", "details": {"Slug": "embed_code", "Filter code": "Giphy.trending.EmbedCode", "Type": "String", "Example": "<iframe src=\"//giphy.com/embed/PfquFkRaRAv5u\" width=\"500\" height=\"391\" frameBorder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"}}, {"section": "Ingredients", "title": "Tags\nNewline separate string of tags of this gif", "description": "Newline separate string of tags of this gif", "details": {"Slug": "tags", "Filter code": "Giphy.trending.Tags", "Type": "String", "Example": "cats party"}}, {"section": "Ingredients", "title": "Created date\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_date", "Filter code": "Giphy.trending.CreatedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Record to Unforgettable Me any new Bitly Bitlink", "trigger_channel": "Bitly", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "bitly.new_public_bitmark_bitly"}, "trigger_details": [{"section": "Ingredients", "title": "Long url\nThe URL that you bitlinked.", "description": "The URL that you bitlinked.", "details": {"Slug": "LongUrl", "Filter code": "Bitly.newPublicBitmarkBitly.LongUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}, {"section": "Ingredients", "title": "Short url\nThe URL that you bitmarked, shortened.", "description": "The URL that you bitmarked, shortened.", "details": {"Slug": "ShortUrl", "Filter code": "Bitly.newPublicBitmarkBitly.ShortUrl", "Type": "String", "Example": "http://bit.ly/axcv3r"}}, {"section": "Ingredients", "title": "Title\nThe bitmark title, usually the page title at that URL.", "description": "The bitmark title, usually the page title at that URL.", "details": {"Slug": "Title", "Filter code": "Bitly.newPublicBitmarkBitly.Title", "Type": "String", "Example": "A blog about ifttt"}}, {"section": "Ingredients", "title": "Tags\nTags comma seperated.", "description": "Tags comma seperated.", "details": {"Slug": "Tags", "Filter code": "Bitly.newPublicBitmarkBitly.Tags", "Type": "String", "Example": "cool, web, interface"}}, {"section": "Ingredients", "title": "Notes\nThe note you leave on a bitmark, blank otherwise.", "description": "The note you leave on a bitmark, blank otherwise.", "details": {"Slug": "Notes", "Filter code": "Bitly.newPublicBitmarkBitly.Notes", "Type": "String", "Example": "So cool!"}}, {"section": "Ingredients", "title": "Created at\nDate and time you created bitmark.", "description": "Date and time you created bitmark.", "details": {"Slug": "CreatedAt", "Filter code": "Bitly.newPublicBitmarkBitly.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "Upload details from Obfuscated Android phone calls made to your Unforgettable Me account. These details include: obfuscated number, start time and duration. ", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.place_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.placeAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.placeAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "To number\nThe number that received the call.", "description": "The number that received the call.", "details": {"Slug": "ToNumber", "Filter code": "AndroidPhone.placeAPhoneCall.ToNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.placeAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.placeAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "Upload details from Obfuscated Android phone calls answered to your Unforgettable Me account. These details include: obfuscated number, start time and duration. ", "trigger_channel": "Android Phone Call", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_phone.receive_a_phone_call"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the call.", "description": "The contact name associated with the call.", "details": {"Slug": "ContactName", "Filter code": "AndroidPhone.receiveAPhoneCall.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the event occurred", "description": "The time the event occurred", "details": {"Slug": "OccurredAt", "Filter code": "AndroidPhone.receiveAPhoneCall.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe phone number that initiated the call.", "description": "The phone number that initiated the call.", "details": {"Slug": "FromNumber", "Filter code": "AndroidPhone.receiveAPhoneCall.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Call length\nThe length of the phone call in seconds", "description": "The length of the phone call in seconds", "details": {"Slug": "CallLength", "Filter code": "AndroidPhone.receiveAPhoneCall.CallLength", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidPhone.receiveAPhoneCall.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "Upload any new Instagram photos to your Unforgettable Me account.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_photo_by_you"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewPhotoByYou.Caption", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the photo's Instagram page.", "description": "The short URL to the photo's Instagram page.", "details": {"Slug": "Url", "Filter code": "Instagram.anyNewPhotoByYou.Url", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Source url\nURL to the image file.", "description": "URL to the image file.", "details": {"Slug": "SourceUrl", "Filter code": "Instagram.anyNewPhotoByYou.SourceUrl", "Type": "String", "Example": "http://distillery.s3.amazonaws.com/media/2011/03/16/f22fa6e93e244449b1177c98e8a7a6cf_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewPhotoByYou.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the photo.", "description": "The HTML embed code for the photo.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewPhotoByYou.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "A great way for quick separating and syncing\nscreenshots from your iPhone to a Dropbox\nfolder named \"IFTTT.\"", "trigger_channel": "iOS Photos", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_photos.ios_new_screenshot"}, "trigger_details": [{"section": "Ingredients", "title": "Temporary public photo url\nA public URL to the photo that anyone can visit for 30 days.", "description": "A public URL to the photo that anyone can visit for 30 days.", "details": {"Slug": "TemporaryPublicPhotoURL", "Filter code": "IosPhotos.iosNewScreenshot.TemporaryPublicPhotoURL", "Type": "Image URL", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Public photo url\nA public URL to the photo that anyone can visit.", "description": "A public URL to the photo that anyone can visit.", "details": {"Slug": "PublicPhotoURL", "Filter code": "IosPhotos.iosNewScreenshot.PublicPhotoURL", "Type": "String", "Example": "https://locker.ifttt.com/public/4bfc930c-ac73-11e2-b086-22000a9730cf"}}, {"section": "Ingredients", "title": "Album name\nThe photo album on your phone that you saved the photo to.", "description": "The photo album on your phone that you saved the photo to.", "details": {"Slug": "AlbumName", "Filter code": "IosPhotos.iosNewScreenshot.AlbumName", "Type": "String", "Example": "Pets"}}, {"section": "Ingredients", "title": "Taken date\nThe time the photo was taken.", "description": "The time the photo was taken.", "details": {"Slug": "TakenDate", "Filter code": "IosPhotos.iosNewScreenshot.TakenDate", "Type": "String", "Example": "April 19, 2013 at 11:01PM"}}], "action_channel": "Dropbox", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dropbox.add_file_from_url", "Filter code method": "Dropbox.addFileFromUrl.skip(string?: reason)", "Runtime method": "runAction(\"dropbox.add_file_from_url\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with downloadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "Optional, no file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Dropbox folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "Dropbox.addFileFromUrl.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Record daily steps from fitbit device", "trigger_channel": "Fitbit", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fitbit.new-daily-activity-summary"}, "trigger_details": [{"section": "Ingredients", "title": "Date\nThe day of activity", "description": "The day of activity", "details": {"Slug": "date", "Filter code": "Fitbit.newDailyActivitySummary.Date", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Total steps\nNumber of steps taken", "description": "Number of steps taken", "details": {"Slug": "total_steps", "Filter code": "Fitbit.newDailyActivitySummary.TotalSteps", "Type": "String", "Example": "10123"}}, {"section": "Ingredients", "title": "Total floors climbed\nNumber of floors climbed", "description": "Number of floors climbed", "details": {"Slug": "total_floors_climbed", "Filter code": "Fitbit.newDailyActivitySummary.TotalFloorsClimbed", "Type": "String", "Example": "10"}}, {"section": "Ingredients", "title": "Total calories burned\nNumber of calories burned from BMR and activity", "description": "Number of calories burned from BMR and activity", "details": {"Slug": "total_calories_burned", "Filter code": "Fitbit.newDailyActivitySummary.TotalCaloriesBurned", "Type": "String", "Example": "2000"}}, {"section": "Ingredients", "title": "Total elevation gained\nDistance climbed", "description": "Distance climbed", "details": {"Slug": "total_elevation_gained", "Filter code": "Fitbit.newDailyActivitySummary.TotalElevationGained", "Type": "String", "Example": "200"}}, {"section": "Ingredients", "title": "Total elevation gained unit\nUnit for elevation gain based on your Fitbit preferences", "description": "Unit for elevation gain based on your Fitbit preferences", "details": {"Slug": "total_elevation_gained_unit", "Filter code": "Fitbit.newDailyActivitySummary.TotalElevationGainedUnit", "Type": "String", "Example": "meters"}}, {"section": "Ingredients", "title": "Total distance covered\nThe total amount of distance covered", "description": "The total amount of distance covered", "details": {"Slug": "total_distance_covered", "Filter code": "Fitbit.newDailyActivitySummary.TotalDistanceCovered", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Total distance covered unit\nUnit for distance covered based on your Fitbit preferences", "description": "Unit for distance covered based on your Fitbit preferences", "details": {"Slug": "total_distance_covered_unit", "Filter code": "Fitbit.newDailyActivitySummary.TotalDistanceCoveredUnit", "Type": "String", "Example": "kilometers"}}, {"section": "Ingredients", "title": "Sedentary minutes\nMinutes in the day you weren't moving much", "description": "Minutes in the day you weren't moving much", "details": {"Slug": "sedentary_minutes", "Filter code": "Fitbit.newDailyActivitySummary.SedentaryMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Lightly active minutes\nMinutes in the day you were moving but not exerting much effort, such as walking", "description": "Minutes in the day you were moving but not exerting much effort, such as walking", "details": {"Slug": "lightly_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.LightlyActiveMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Fairly active minutes\nMinutes in the day you were moving enough to elevate your heart rate", "description": "Minutes in the day you were moving enough to elevate your heart rate", "details": {"Slug": "fairly_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.FairlyActiveMinutes", "Type": "String", "Example": "20"}}, {"section": "Ingredients", "title": "Very active minutes\nMinutes in the day doing cardio workouts and high-intensity activities like jogging and running", "description": "Minutes in the day doing cardio workouts and high-intensity activities like jogging and running", "details": {"Slug": "very_active_minutes", "Filter code": "Fitbit.newDailyActivitySummary.VeryActiveMinutes", "Type": "String", "Example": "20"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "Upload any new Instagram video to your Unforgettable Me account.", "trigger_channel": "Instagram", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "instagram.any_new_video_by_you_instagram"}, "trigger_details": [{"section": "Ingredients", "title": "Caption", "description": "", "details": {"Slug": "Caption", "Filter code": "Instagram.anyNewVideoByYouInstagram.Caption", "Type": "String", "Example": "A cool video"}}, {"section": "Ingredients", "title": "Url\nThe short URL to the video's Instagram page.", "description": "The short URL to the video's Instagram page.", "details": {"Slug": "URL", "Filter code": "Instagram.anyNewVideoByYouInstagram.URL", "Type": "String", "Example": "http://instagr.am/p/CTGBw/"}}, {"section": "Ingredients", "title": "Video source url\nURL to the video file.", "description": "URL to the video file.", "details": {"Slug": "VideoSourceURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.VideoSourceURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_101.mp4"}}, {"section": "Ingredients", "title": "Image thumbnail url\nURL to the video's thumbnail image.", "description": "URL to the video's thumbnail image.", "details": {"Slug": "ImageThumbnailURL", "Filter code": "Instagram.anyNewVideoByYouInstagram.ImageThumbnailURL", "Type": "String", "Example": "http://distilleryimage7.s3.amazonaws.com/a15ba0acddd011e2a9ea22000ae81462_7.jpg"}}, {"section": "Ingredients", "title": "Created at\nDate and time the video was taken.", "description": "Date and time the video was taken.", "details": {"Slug": "CreatedAt", "Filter code": "Instagram.anyNewVideoByYouInstagram.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Embed code\nThe HTML embed code for the video.", "description": "The HTML embed code for the video.", "details": {"Slug": "EmbedCode", "Filter code": "Instagram.anyNewVideoByYouInstagram.EmbedCode", "Type": "String", "Example": "<iframe src=\"http://instagr.am/p/CTGBw/embed\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "Upload any new Flickr public photos to your Unforgettable Me account.", "trigger_channel": "Flickr", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flickr.any_new_public_photo"}, "trigger_details": [{"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Flickr.anyNewPublicPhoto.Title", "Type": "String", "Example": "A cool photo"}}, {"section": "Ingredients", "title": "Description\nOptional photo description.", "description": "Optional photo description.", "details": {"Slug": "Description", "Filter code": "Flickr.anyNewPublicPhoto.Description", "Type": "String", "Example": "Taken at my birthday party!"}}, {"section": "Ingredients", "title": "Flickr url\nThe long URL to the photo's Flickr page.", "description": "The long URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrl", "Filter code": "Flickr.anyNewPublicPhoto.FlickrUrl", "Type": "String", "Example": "http://www.flickr.com/photos/sh4de/5197127926/"}}, {"section": "Ingredients", "title": "Flickr url short\nThe shortened URL to the photo's Flickr page.", "description": "The shortened URL to the photo's Flickr page.", "details": {"Slug": "FlickrUrlShort", "Filter code": "Flickr.anyNewPublicPhoto.FlickrUrlShort", "Type": "String", "Example": "http://flic.kr/p/4mdhBE"}}, {"section": "Ingredients", "title": "Source url\nURL to the largest available flickr image file.", "description": "URL to the largest available flickr image file.", "details": {"Slug": "SourceUrl", "Filter code": "Flickr.anyNewPublicPhoto.SourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Original source url\nURL to the orginal image file if available.", "description": "URL to the orginal image file if available.", "details": {"Slug": "OriginalSourceUrl", "Filter code": "Flickr.anyNewPublicPhoto.OriginalSourceUrl", "Type": "String", "Example": "http://farm5.static.flickr.com/4133/5193728540_55ed27e276_b.jpg"}}, {"section": "Ingredients", "title": "Uploaded date\nDate and time the photo was uploaded.", "description": "Date and time the photo was uploaded.", "details": {"Slug": "UploadedDate", "Filter code": "Flickr.anyNewPublicPhoto.UploadedDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Taken date\nDate and time the photo was taken.", "description": "Date and time the photo was taken.", "details": {"Slug": "TakenDate", "Filter code": "Flickr.anyNewPublicPhoto.TakenDate", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Tags\nTags added to the photo.", "description": "Tags added to the photo.", "details": {"Slug": "Tags", "Filter code": "Flickr.anyNewPublicPhoto.Tags", "Type": "String", "Example": "baby, pumpkin"}}], "action_channel": "Unforgettable Me", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "unforgettable_me.upload_data", "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)", "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"}, "action_details": [{"section": "Action fields", "title": "Body\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Body", "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"}}, {"section": "Action fields", "title": "Augmenter name\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Augmenter Name", "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.", "Slug": "augmenter_name", "Required": "true", "Can have default value": "true", "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"}}], "filter_code": NaN}
{"original_description": "If a stock drops below a set price, buy or sell it!", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.current_price_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Price\nText input > Other", "description": "Text input > Other", "details": {"Label": "Price", "Slug": "price", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.currentPriceDropsBelow.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.currentPriceDropsBelow.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last trade price of the stock.", "description": "The last trade price of the stock.", "details": {"Slug": "Price", "Filter code": "Finance.currentPriceDropsBelow.Price", "Type": "String", "Example": "603.7"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.currentPriceDropsBelow.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.currentPriceDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.place_market_order", "Filter code method": "Alpaca.placeMarketOrder.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.place_market_order\", {})"}, "action_details": [{"section": "Action fields", "title": "Symbol\nText input > Title", "description": "Text input > Title", "details": {"Label": "Symbol", "Helper text": "The symbol to place the order for.", "Slug": "symbol", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSymbol(string: symbol)"}}, {"section": "Action fields", "title": "Side\nDropdown list", "description": "Dropdown list", "details": {"Label": "Side", "Helper text": "The side to place the order for.", "Slug": "side", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSide(string: side)"}}, {"section": "Action fields", "title": "Qty\nText input > Title", "description": "Text input > Title", "details": {"Label": "Quantity", "Helper text": "The number of shares to place the order for.", "Slug": "qty", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setQty(string: qty)"}}], "filter_code": NaN}
{"original_description": "Check the list before you head to the comic book store or the library. Happy reading! ", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_book_on_a_best_seller_list"}, "trigger_details": [{"section": "Trigger fields", "title": "List\nDropdown list", "description": "Dropdown list", "details": {"Label": "Best Sellers List", "Slug": "list", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newBookOnABestSellerList.Title", "Type": "String", "Example": "Thinking, Fast and Slow"}}, {"section": "Ingredients", "title": "Description\nThe book's description", "description": "The book's description", "details": {"Slug": "Description", "Filter code": "Nytimes.newBookOnABestSellerList.Description", "Type": "String", "Example": "The winner of the Nobel in economic science discusses how we make choices..."}}, {"section": "Ingredients", "title": "Book cover image url\nA URL to the book's cover image", "description": "A URL to the book's cover image", "details": {"Slug": "BookCoverImageUrl", "Filter code": "Nytimes.newBookOnABestSellerList.BookCoverImageUrl", "Type": "String", "Example": "http://images.amazon.com/images/P/0553801473.01.LZZZZZZZ.jpg"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newBookOnABestSellerList.Author", "Type": "String", "Example": "Daniel Kahneman"}}, {"section": "Ingredients", "title": "Publisher\nThe name of the book's publisher", "description": "The name of the book's publisher", "details": {"Slug": "Publisher", "Filter code": "Nytimes.newBookOnABestSellerList.Publisher", "Type": "String", "Example": "Farrar, Straus and Giroux"}}, {"section": "Ingredients", "title": "Best seller category", "description": "", "details": {"Slug": "BestSellerCategory", "Filter code": "Nytimes.newBookOnABestSellerList.BestSellerCategory", "Type": "String", "Example": "Business"}}, {"section": "Ingredients", "title": "Rank\nRank this week on the list", "description": "Rank this week on the list", "details": {"Slug": "Rank", "Filter code": "Nytimes.newBookOnABestSellerList.Rank", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Weeks on list\nNumber of weeks on the list", "description": "Number of weeks on the list", "details": {"Slug": "WeeksOnList", "Filter code": "Nytimes.newBookOnABestSellerList.WeeksOnList", "Type": "String", "Example": "23"}}, {"section": "Ingredients", "title": "Best seller listed date\nThe listed date of the book", "description": "The listed date of the book", "details": {"Slug": "BestSellerListedDate", "Filter code": "Nytimes.newBookOnABestSellerList.BestSellerListedDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Isbn\nISBN Number (ISBN 13)", "description": "ISBN Number (ISBN 13)", "details": {"Slug": "ISBN", "Filter code": "Nytimes.newBookOnABestSellerList.ISBN", "Type": "String", "Example": "1726474927483"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Your JotForm online survey form collects all the survey results easily and quickly. This applet collects all the completed forms and automatically backs them up in Google Docs. ", "trigger_channel": "Jotform", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "jotform.latest_form_submission"}, "trigger_details": [{"section": "Trigger fields", "title": "Form\nDropdown list", "description": "Dropdown list", "details": {"Label": "Form", "Helper text": "Choose a form", "Slug": "form_id", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Question filter\nText input > Other", "description": "Text input > Other", "details": {"Label": "Question Filter", "Helper text": "Optional question filter (label text) e.g. Name, Email, Address", "Slug": "question_filter", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Ip\nThe form respondent's detected IP address.", "description": "The form respondent's detected IP address.", "details": {"Slug": "ip", "Filter code": "Jotform.latestFormSubmission.IP", "Type": "String", "Example": "192.168.0.100"}}, {"section": "Ingredients", "title": "Form title\nThe form title.", "description": "The form title.", "details": {"Slug": "form_title", "Filter code": "Jotform.latestFormSubmission.FormTitle", "Type": "String", "Example": "My Contact Form"}}, {"section": "Ingredients", "title": "Submission date time\nThe date and time of the form submission.", "description": "The date and time of the form submission.", "details": {"Slug": "submission_date_time", "Filter code": "Jotform.latestFormSubmission.SubmissionDateTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Total submissions\nThe total submission count.", "description": "The total submission count.", "details": {"Slug": "total_submissions", "Filter code": "Jotform.latestFormSubmission.TotalSubmissions", "Type": "String", "Example": "8"}}, {"section": "Ingredients", "title": "Form\nA number that uniquely identifies the form.", "description": "A number that uniquely identifies the form.", "details": {"Slug": "form_id", "Filter code": "Jotform.latestFormSubmission.FormID", "Type": "String", "Example": "1234567890"}}, {"section": "Ingredients", "title": "Submission\nA number that uniquely identifies the form submission.", "description": "A number that uniquely identifies the form submission.", "details": {"Slug": "submission_id", "Filter code": "Jotform.latestFormSubmission.SubmissionID", "Type": "String", "Example": "850507727987654321"}}, {"section": "Ingredients", "title": "Rich text data\nThe form data in a tabulated HTML format.", "description": "The form data in a tabulated HTML format.", "details": {"Slug": "rich_text_data", "Filter code": "Jotform.latestFormSubmission.RichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Spreadsheet data\nThe form data in a CSV format.", "description": "The form data in a CSV format.", "details": {"Slug": "spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.SpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "Filtered rich text data\nThe filtered form data in a tabulated HTML format.", "description": "The filtered form data in a tabulated HTML format.", "details": {"Slug": "filtered_rich_text_data", "Filter code": "Jotform.latestFormSubmission.FilteredRichTextData", "Type": "String", "Example": "<table><tr><td>E-mail</td>johndoe@mail.com<td></td></tr></table>"}}, {"section": "Ingredients", "title": "Filtered spreadsheet data\nThe filtered form data in a CSV format.", "description": "The filtered form data in a CSV format.", "details": {"Slug": "filtered_spreadsheet_data", "Filter code": "Jotform.latestFormSubmission.FilteredSpreadsheetData", "Type": "String", "Example": "[]"}}, {"section": "Ingredients", "title": "File url\nThe URL of the file(s) uploaded on your form.", "description": "The URL of the file(s) uploaded on your form.", "details": {"Slug": "file_url", "Filter code": "Jotform.latestFormSubmission.FileUrl", "Type": "String", "Example": "http://www.jotform.com/uploads/user/1234567890/9876543210/images.zip"}}], "action_channel": "Google Docs", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_docs.append_to_google_doc", "Filter code method": "GoogleDocs.appendToGoogleDoc.skip(string?: reason)", "Runtime method": "runAction(\"google_docs.append_to_google_doc\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "Document name", "Helper text": "Will create a new file if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Content", "Helper text": "some HTML ok", "Slug": "body", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setBody(string: body)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDocs.appendToGoogleDoc.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Keep your photos in sync. Once they're added to Drive, you can organize them in whatever way you see fit, so you have a complete archive for your business or community. ", "trigger_channel": "Facebook Pages", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "facebook_pages.new_photo_from_page"}, "trigger_details": [{"section": "Ingredients", "title": "Page name\nYour Facebook Page's name.", "description": "Your Facebook Page's name.", "details": {"Slug": "PageName", "Filter code": "FacebookPages.newPhotoFromPage.PageName", "Type": "String", "Example": "The ifttt Office"}}, {"section": "Ingredients", "title": "Link\nThe link to the photo's FacebookPages page, may be private.", "description": "The link to the photo's FacebookPages page, may be private.", "details": {"Slug": "Link", "Filter code": "FacebookPages.newPhotoFromPage.Link", "Type": "String", "Example": "http://www.facebook.com/#!/photo.php?pid=33943077&id=7302486"}}, {"section": "Ingredients", "title": "Image source\nThe URL to the full sized version of the photo itself.", "description": "The URL to the full sized version of the photo itself.", "details": {"Slug": "ImageSource", "Filter code": "FacebookPages.newPhotoFromPage.ImageSource", "Type": "String", "Example": "http://sphotos.ak.fbcdn.net/hphotos-ak-snc1/hs229.snc1/7634_567487423564_7302486_33943077_6068537_n.jpg"}}, {"section": "Ingredients", "title": "Caption\nThe photo's caption.", "description": "The photo's caption.", "details": {"Slug": "Caption", "Filter code": "FacebookPages.newPhotoFromPage.Caption", "Type": "String", "Example": "Wow what a fun night!"}}, {"section": "Ingredients", "title": "Created at\nDate and time photo was uploaded.", "description": "Date and time photo was uploaded.", "details": {"Slug": "CreatedAt", "Filter code": "FacebookPages.newPhotoFromPage.CreatedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Page url\nThe link to the main Facebook Page.", "description": "The link to the main Facebook Page.", "details": {"Slug": "PageUrl", "Filter code": "FacebookPages.newPhotoFromPage.PageUrl", "Type": "String", "Example": "http://www.facebook.com/pages/The-ifttt-office/108073145941483"}}], "action_channel": "Google Drive", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_drive.upload_file_from_url_google_drive", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.skip(string?: reason)", "Runtime method": "runAction(\"google_drive.upload_file_from_url_google_drive\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > File", "description": "Text input > File", "details": {"Label": "File URL", "Helper text": "Works best with uploadable files", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setUrl(string: url)"}}, {"section": "Action fields", "title": "Filename\nText input > File name", "description": "Text input > File name", "details": {"Label": "File name", "Helper text": "No file extension needed", "Slug": "filename", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleDrive.uploadFileFromUrlGoogleDrive.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Add a single row to the bottom of the first worksheet of a Google Sheet you specify.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "Log when the humidity goes low by adding a row in a google spreadsheet.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.humidity-below"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get humidity from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Helper text": "How dry you want it to be when it triggers? Example: 30", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.humidityBelow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Humidity\nThe humidity, in percent.", "description": "The humidity, in percent.", "details": {"Slug": "value", "Filter code": "Airthings.humidityBelow.Humidity", "Type": "String", "Example": "60"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.humidityBelow.Device", "Type": "String", "Example": "Home - Living room"}}], "action_channel": "Google Sheets", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_sheets.append_to_google_spreadsheet", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)", "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"}, "action_details": [{"section": "Action fields", "title": "Filename\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Spreadsheet name", "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist", "Slug": "filename", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"}}, {"section": "Action fields", "title": "Formatted row\nText input", "description": "Text input", "details": {"Label": "Formatted row", "Helper text": "Use “|||” to separate cells", "Slug": "formatted_row", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"}}, {"section": "Action fields", "title": "Path\nText input > Path to a folder", "description": "Text input > Path to a folder", "details": {"Label": "Drive folder path", "Helper text": "Format: some/folder/path (defaults to “IFTTT”)", "Slug": "path", "Required": "false", "Can have default value": "true", "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"}}], "filter_code": NaN}
{"original_description": "If you're interested in reading the latest update notes, consider using this Applet that sends you an email instead of a notification:", "trigger_channel": "Apple App Store", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "app_store.new_app_version_released"}, "trigger_details": [{"section": "Trigger fields", "title": "App name or url\nText input", "description": "Text input", "details": {"Label": "Enter an app's name or URL", "Helper text": "E.g. &quot;IFTTT&quot; or &quot;Snapchat.&quot; For best results, paste an app's App Store URL.", "Slug": "app_name_or_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Name\nThe name of the App.", "description": "The name of the App.", "details": {"Slug": "name", "Filter code": "AppStore.newAppVersionReleased.Name", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Description\nThe description of the App.", "description": "The description of the App.", "details": {"Slug": "description", "Filter code": "AppStore.newAppVersionReleased.Description", "Type": "String", "Example": "Applets bring your favorite services together to create new experiences..."}}, {"section": "Ingredients", "title": "App store url\nThe URL to the App in the App Store.", "description": "The URL to the App in the App Store.", "details": {"Slug": "app_store_url", "Filter code": "AppStore.newAppVersionReleased.AppStoreUrl", "Type": "String", "Example": "https://itunes.apple.com/us/app/ifttt/id660944635"}}, {"section": "Ingredients", "title": "Developer\nThe name of the developer of the App.", "description": "The name of the developer of the App.", "details": {"Slug": "developer", "Filter code": "AppStore.newAppVersionReleased.Developer", "Type": "String", "Example": "IFTTT"}}, {"section": "Ingredients", "title": "Category\nThe category the App falls under.", "description": "The category the App falls under.", "details": {"Slug": "category", "Filter code": "AppStore.newAppVersionReleased.Category", "Type": "String", "Example": "Productivity"}}, {"section": "Ingredients", "title": "Price\nThe current price of the App.", "description": "The current price of the App.", "details": {"Slug": "price", "Filter code": "AppStore.newAppVersionReleased.Price", "Type": "String", "Example": "$9.99"}}, {"section": "Ingredients", "title": "Rating\nThe current rating of the App.", "description": "The current rating of the App.", "details": {"Slug": "rating", "Filter code": "AppStore.newAppVersionReleased.Rating", "Type": "String", "Example": "5 stars"}}, {"section": "Ingredients", "title": "Screenshot\nThe URL to a screenshot of the App.", "description": "The URL to a screenshot of the App.", "details": {"Slug": "screenshot", "Filter code": "AppStore.newAppVersionReleased.Screenshot", "Type": "Image URL", "Example": "http://ifttt.com"}}, {"section": "Ingredients", "title": "Icon\nThe URL to an image of the App's icon.", "description": "The URL to an image of the App's icon.", "details": {"Slug": "icon", "Filter code": "AppStore.newAppVersionReleased.Icon", "Type": "String", "Example": "http://is2.mzstatic.com/image/thumb/Purple111/v4/5c/3d/43/5c3d4327-22d0-45d0-73c6-bbaf56c08902/source/512x512bb.jpg"}}, {"section": "Ingredients", "title": "Release notes\nNotes about the new app release.", "description": "Notes about the new app release.", "details": {"Slug": "release_notes", "Filter code": "AppStore.newAppVersionReleased.ReleaseNotes", "Type": "String", "Example": "+ We made some improvements to..."}}, {"section": "Ingredients", "title": "Version\nThe current version of the App.", "description": "The current version of the App.", "details": {"Slug": "version", "Filter code": "AppStore.newAppVersionReleased.Version", "Type": "String", "Example": "2.1.3"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "AppStore.newAppVersionReleased.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Reward yourself every time you tick off one of your to-dos by saving a set amount toward one of your Goals.", "trigger_channel": "iOS Reminders", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ios_reminders.any_reminder_completed"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe title of the reminder.", "description": "The title of the reminder.", "details": {"Slug": "Title", "Filter code": "IosReminders.anyReminderCompleted.Title", "Type": "String", "Example": "Pick up milk"}}, {"section": "Ingredients", "title": "Notes\nThe note associated with the reminder.", "description": "The note associated with the reminder.", "details": {"Slug": "Notes", "Filter code": "IosReminders.anyReminderCompleted.Notes", "Type": "String", "Example": "Get 1% for Rick"}}, {"section": "Ingredients", "title": "List\nThe name of the list the reminder is in.", "description": "The name of the list the reminder is in.", "details": {"Slug": "List", "Filter code": "IosReminders.anyReminderCompleted.List", "Type": "String", "Example": "Shopping"}}, {"section": "Ingredients", "title": "Priority\nThe priority of the reminder.", "description": "The priority of the reminder.", "details": {"Slug": "Priority", "Filter code": "IosReminders.anyReminderCompleted.Priority", "Type": "String", "Example": "Medium"}}, {"section": "Ingredients", "title": "Created date\nThe date the reminder was created.", "description": "The date the reminder was created.", "details": {"Slug": "CreatedDate", "Filter code": "IosReminders.anyReminderCompleted.CreatedDate", "Type": "String", "Example": "August 23, 2014 at 11:01PM"}}, {"section": "Ingredients", "title": "Completed date\nThe date the reminder was completed.", "description": "The date the reminder was completed.", "details": {"Slug": "CompletedDate", "Filter code": "IosReminders.anyReminderCompleted.CompletedDate", "Type": "String", "Example": "August 23, 2014 at 11:31PM"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal", "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)", "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"}, "action_details": [{"section": "Action fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount to transfer", "Slug": "amount", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Trigger monitors changes in the current weather condition. When current conditions changes to rain, the Trigger fires. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "MESH", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "mesh.events"}, "action_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "filter_code": NaN}
{"original_description": "This Trigger monitors changes in the current weather condition. When current conditions changes to clear, the Trigger fires. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "MESH", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "mesh.events"}, "action_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "filter_code": NaN}
{"original_description": "This Trigger monitors changes in the current weather condition. When current conditions changes to cloudy, the Trigger fires. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "MESH", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "mesh.events"}, "action_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "filter_code": NaN}
{"original_description": "This Trigger monitors changes in the current weather condition. When current conditions changes to snow, the Trigger fires. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "MESH", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "mesh.events"}, "action_details": [{"section": "Trigger fields", "title": "Event\nText input > Other", "description": "Text input > Other", "details": {"Label": "EventID", "Helper text": "Input EventID that you entered in MESH app", "Slug": "event_id", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Text\nThe text contents of the event.", "description": "The text contents of the event.", "details": {"Slug": "text", "Filter code": "Mesh.events.Text", "Type": "String", "Example": "Motion Tag: Detected!"}}, {"section": "Ingredients", "title": "Triggered at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "triggered_at", "Filter code": "Mesh.events.TriggeredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "filter_code": NaN}
{"original_description": "Get the daily weather sent to Discord. This Applet returns results in Fahrenheit.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_weather_at_time"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.currentWeatherAtTime.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.currentWeatherAtTime.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Current temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "current_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.CurrentTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Current temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "current_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.CurrentTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Current condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "current_condition", "Filter code": "Weather.currentWeatherAtTime.CurrentCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Current condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "current_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.CurrentConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Todays condition image url\nThe URL to an image of todays's condition.", "description": "The URL to an image of todays's condition.", "details": {"Slug": "todays_condition_image_url", "Filter code": "Weather.currentWeatherAtTime.TodaysConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentWeatherAtTime.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Todays condition\nToday's weather condition", "description": "Today's weather condition", "details": {"Slug": "todays_condition", "Filter code": "Weather.currentWeatherAtTime.TodaysCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.currentWeatherAtTime.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.currentWeatherAtTime.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Uv index\nThe current UV index, 0-16", "description": "The current UV index, 0-16", "details": {"Slug": "uv_index", "Filter code": "Weather.currentWeatherAtTime.UvIndex", "Type": "String", "Example": "6"}}, {"section": "Ingredients", "title": "Humidity\nThe current humidity level represented as a percentage.", "description": "The current humidity level represented as a percentage.", "details": {"Slug": "humidity", "Filter code": "Weather.currentWeatherAtTime.Humidity", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Wind speed mph\nWind speed in MPH", "description": "Wind speed in MPH", "details": {"Slug": "wind_speed_mph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedMph", "Type": "String", "Example": "5"}}, {"section": "Ingredients", "title": "Wind speed kph\nWind speed in KPH", "description": "Wind speed in KPH", "details": {"Slug": "wind_speed_kph", "Filter code": "Weather.currentWeatherAtTime.WindSpeedKph", "Type": "String", "Example": "7"}}, {"section": "Ingredients", "title": "Wind direction\nWind direction", "description": "Wind direction", "details": {"Slug": "wind_direction", "Filter code": "Weather.currentWeatherAtTime.WindDirection", "Type": "String", "Example": "North"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentWeatherAtTime.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentWeatherAtTime.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Discord", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "discord.post_message_to_channel", "Filter code method": "Discord.postMessageToChannel.skip(string?: reason)", "Runtime method": "runAction(\"discord.post_message_to_channel\", {})"}, "action_details": [{"section": "Action fields", "title": "Channel\nNested dropdown list", "description": "Nested dropdown list", "details": {"Label": "Which Channel?", "Helper text": "Confirm that <a href=\"https://ift.tt/disc_faq\" target=\"_blank\">permissions</a> are granted in your server. If your server isn’t listed, <a href=\"https://ift.tt/disc_server\" target=\"_blank\">reconnect the Discord service</a>.", "Slug": "channel_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Message", "Helper text": "Max limit of 2000 characters. To @mention roles, find the role ID in Discord by running `\\@role`. Ex. 'Hello &lt;@&amp;1234&gt;'", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Discord.postMessageToChannel.setMessage(string: message)"}}, {"section": "Action fields", "title": "Allowable mentions\nDropdown list", "description": "Dropdown list", "details": {"Label": "Allowable mentions", "Helper text": "Allows usage of @everyone, &lt;@&amp;(Role ID)&gt;, and &lt;@(User ID)&gt; in the message body", "Slug": "allowable_mentions", "Required": "true", "Can have default value": "true", "Filter code method": "Discord.postMessageToChannel.setAllowable Mentions(string: allowable_mentions)"}}], "filter_code": NaN}
{"original_description": "Have your LIFX lights automatically turn on at sunset.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.turn_on", "Filter code method": "Lifx.turnOn.skip(string?: reason)", "Runtime method": "runAction(\"lifx.turn_on\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Fade in duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "Fade in duration", "Helper text": "How long should it take for the lights to fade in.", "Slug": "fade_in_duration", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not available? Specify them here. Example: &quot;color: #ff0000; brightness: 0.3; fade_in_duration: 12&quot; for red at 30% brightness, 12 second fade in. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.turnOn.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "If it begins to rain then change the light colors to blue", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "Turn off a light within 15 minutes of the sunrise in your location.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_off", "Filter code method": "Kasa.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn off", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Give your savings a boost every time it gets hot... save a set amount toward one of your Goals every time the temperature where you are exceeds 75℉.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal", "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)", "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"}, "action_details": [{"section": "Action fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount to transfer", "Slug": "amount", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Sets your Nanoleaf Light Panels to a scene at sunset in your region.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.turn_on_scene", "Filter code method": "Nanoleaf.turnOnScene.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.turn_on_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "My scenes\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "my_scenes", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Now falling snow means rising fortunes... save a set amount toward one of your Goals every time it snows.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.tomorrows_forecast_calls_for"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Tomorrows condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "tomorrows_condition", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of tomorrow's condition.", "description": "The URL to an image of tomorrow's condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit", "description": "Tomorrow's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius", "description": "Tomorrow's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit", "description": "Tomorrow's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius", "description": "Tomorrow's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Tomorrows date\nTomorrow's date.", "description": "Tomorrow's date.", "details": {"Slug": "tomorrows_date", "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal", "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)", "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"}, "action_details": [{"section": "Action fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount to transfer", "Slug": "amount", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Husqvarna Automower® is parked until further notice when the temperature drops below 5 °C / 41 °F.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Husqvarna Automower®", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "automower.park_until_further_notice", "Filter code method": "Automower.parkUntilFurtherNotice.skip(string?: reason)", "Runtime method": "runAction(\"automower.park_until_further_notice\", {})"}, "action_details": [{"section": "Action fields", "title": "Automower\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Automower", "Slug": "automower", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Sets your Nanoleaf Light Panels to a Scene at Sunrise in your area.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Nanoleaf Smarter Series", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nanoleaf.turn_on_scene", "Filter code method": "Nanoleaf.turnOnScene.skip(string?: reason)", "Runtime method": "runAction(\"nanoleaf.turn_on_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "My scenes\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "my_scenes", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Have your product turn off at sunrise.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "iDevices", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "idevices.turn_device_off", "Filter code method": "Idevices.turnDeviceOff.skip(string?: reason)", "Runtime method": "runAction(\"idevices.turn_device_off\", {})"}, "action_details": [{"section": "Action fields", "title": "What device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which product?", "Slug": "what_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": NaN, "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "abode", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "abode.turn_on_switch", "Filter code method": "Abode.turnOnSwitch.skip(string?: reason)", "Runtime method": "runAction(\"abode.turn_on_switch\", {})"}, "action_details": [{"section": "Action fields", "title": "Select switch\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which switch?", "Slug": "select_switch", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "雨が降りそうな時にBOCCOがお知らせします。", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "BOCCO", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "bocco.bocco_speak", "Filter code method": "Bocco.boccoSpeak.skip(string?: reason)", "Runtime method": "runAction(\"bocco.bocco_speak\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Helper text": "Select room where you want to speak by BOCCO.", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Bocco.boccoSpeak.setMessage(string: message)"}}, {"section": "Action fields", "title": "Lang\nDropdown list", "description": "Dropdown list", "details": {"Label": "lang", "Slug": "lang", "Required": "true", "Can have default value": "true", "Filter code method": "Bocco.boccoSpeak.setLang(string: lang)"}}], "filter_code": NaN}
{"original_description": "Wenn die Sonne untergeht in deiner Region, dann führe eine Aktion in deiner Qbox aus.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "coqon", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "coqon.simple_rule_action", "Filter code method": "Coqon.simpleRuleAction.skip(string?: reason)", "Runtime method": "runAction(\"coqon.simple_rule_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Action code\nText input > Other", "description": "Text input > Other", "details": {"Label": "action_code", "Helper text": "The code provided by the coqon rule, associating the action to the rule.", "Slug": "action_code", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Have a product's night light turn off at sunrise.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "iDevices", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "idevices.turn_nightlight_off", "Filter code method": "Idevices.turnNightlightOff.skip(string?: reason)", "Runtime method": "runAction(\"idevices.turn_nightlight_off\", {})"}, "action_details": [{"section": "Action fields", "title": "What device\nDropdown list", "description": "Dropdown list", "details": {"Label": "What product's night light?", "Slug": "what_device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When it's sunrise, open my blind.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Connector", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dooya_connector.open_blinds", "Filter code method": "DooyaConnector.openBlinds.skip(string?: reason)", "Runtime method": "runAction(\"dooya_connector.open_blinds\", {})"}, "action_details": [{"section": "Action fields", "title": "Which blinds\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which blind?", "Slug": "which_blinds", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Configure a Nexia automation to run when the outdoor temperature rises above a threshold level.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Nexia", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nexia.nexia_automation"}, "action_details": [{"section": "Trigger fields", "title": "Nexia automation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which automation?", "Helper text": "This automation must be configured in Nexia to have &quot;Notify IFTTT&quot; as it's action.", "Slug": "nexia_automation", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nexia.nexiaAutomation.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Nexia automation name\nThe name of your Nexia automation", "description": "The name of your Nexia automation", "details": {"Slug": "nexia_automation_name", "Filter code": "Nexia.nexiaAutomation.NexiaAutomationName", "Type": "String", "Example": "\"My First Automation\""}}, {"section": "Ingredients", "title": "House name\nThe name of the house of your automation", "description": "The name of the house of your automation", "details": {"Slug": "house_name", "Filter code": "Nexia.nexiaAutomation.HouseName", "Type": "String", "Example": "\"Home\""}}], "filter_code": NaN}
{"original_description": "Receive a notification whenever it starts raining.\nNote: IFTTT app is needed for this Applet.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.rain-has-started"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.rainHasStarted.DeviceName", "Type": "String", "Example": "My Rain gauge"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occured", "description": "The date and time the measurement occured", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.rainHasStarted.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Change the home air conditioning mode to cool when the current temperature exceeds the pre-set value. ", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_temperature_drops_below"}, "trigger_details": [{"section": "Trigger fields", "title": "Temperature\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Temperature", "Slug": "temperature", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Degrees type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "degrees_type", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentTemperatureDropsBelow.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "AirTouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "airtouch.ac_mode", "Filter code method": "Airtouch.acMode.skip(string?: reason)", "Runtime method": "runAction(\"airtouch.ac_mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Ac index\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which air conditioning?", "Slug": "ac_index", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "What mode?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Airtouch.acMode.setMode(string: mode)"}}], "filter_code": NaN}
{"original_description": "Lancer un scénario energeasy connect lorsqu'il commence à pleuvoir. Par exemple, fermez vos volets de 50% pour protéger vos fenêtres de la pluie.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "energeasy connect", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "energeasyconnect.launch_action_group", "Filter code method": "Energeasyconnect.launchActionGroup.skip(string?: reason)", "Runtime method": "runAction(\"energeasyconnect.launch_action_group\", {})"}, "action_details": [{"section": "Action fields", "title": "Action group\nDropdown list", "description": "Dropdown list", "details": {"Label": "Action group", "Helper text": "The action group to launch", "Slug": "action_group", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Arm a tag at your local sunset time", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_sets"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunset at\nThe date and time of today's sunset.", "description": "The date and time of today's sunset.", "details": {"Slug": "sunset_at", "Filter code": "Weather.sunSets.SunsetAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunSets.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunSets.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunSets.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunSets.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunSets.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunSets.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunSets.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunSets.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunSets.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Wireless Tag", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wirelesstag.arm", "Filter code method": "Wirelesstag.arm.skip(string?: reason)", "Runtime method": "runAction(\"wirelesstag.arm\", {})"}, "action_details": [{"section": "Action fields", "title": "Tagid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tag", "Slug": "tagid", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Doormodesetclosed\nDropdown list", "description": "Dropdown list", "details": {"Label": "Define closed angle?", "Helper text": "Only applicable to angle based motion sensor in door/gate mode. If not specified, does not re-define closed angle (requires the tag be armed in door mode at least once)", "Slug": "doorModeSetClosed", "Required": "false", "Can have default value": "true", "Filter code method": "Wirelesstag.arm.setDoor Mode Set Closed(string: doorModeSetClosed)"}}], "filter_code": NaN}
{"original_description": "Nutze COQON um beispielsweise deine Rollläden bei Sonnenaufgang in deiner Region zu fahren oder diverse Beleuchtungen zu schalten.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "coqon", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "coqon.simple_rule_action", "Filter code method": "Coqon.simpleRuleAction.skip(string?: reason)", "Runtime method": "runAction(\"coqon.simple_rule_action\", {})"}, "action_details": [{"section": "Action fields", "title": "Action code\nText input > Other", "description": "Text input > Other", "details": {"Label": "action_code", "Helper text": "The code provided by the coqon rule, associating the action to the rule.", "Slug": "action_code", "Required": "true", "Can have default value": "true"}}], "filter_code": NaN}
{"original_description": "Set my Warmup Smart thermostat to a specific temperature when it is raining outside.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_condition_is"}, "trigger_details": [{"section": "Trigger fields", "title": "Condition\nDropdown list", "description": "Dropdown list", "details": {"Label": "Current condition", "Slug": "condition", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentConditionIs.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentConditionIs.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentConditionIs.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.currentConditionIs.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentConditionIs.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentConditionIs.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Warmup Smart Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "warmup_smart_thermostat.set-temperature", "Filter code method": "WarmupSmartThermostat.setTemperature.skip(string?: reason)", "Runtime method": "runAction(\"warmup_smart_thermostat.set-temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device identifier\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_identifier", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Set temperature to?", "Helper text": "in °C (e.g. 22)", "Slug": "temperature", "Required": "true", "Can have default value": "true", "Filter code method": "WarmupSmartThermostat.setTemperature.setTemperature(string: temperature)"}}], "filter_code": NaN}
{"original_description": "Receive an SMS when the temperature rises above 36°C (97°F)", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.temperature-rises-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target temperature", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.temperatureRisesAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the temperature", "description": "This is the name of the Netamo device where you are reading the temperature", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.temperatureRisesAbove.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}, {"section": "Ingredients", "title": "Target temperature f\nThe target temperature in degrees Fahrenheit", "description": "The target temperature in degrees Fahrenheit", "details": {"Slug": "TargetTemperatureF", "Filter code": "Netatmo.temperatureRisesAbove.TargetTemperatureF", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Target temperature c\nThe target temperature in degrees Celsius", "description": "The target temperature in degrees Celsius", "details": {"Slug": "TargetTemperatureC", "Filter code": "Netatmo.temperatureRisesAbove.TargetTemperatureC", "Type": "String", "Example": "22.22"}}, {"section": "Ingredients", "title": "Measured temperature f\nThe measured temperature in degrees Fahrenheit", "description": "The measured temperature in degrees Fahrenheit", "details": {"Slug": "MeasuredTemperatureF", "Filter code": "Netatmo.temperatureRisesAbove.MeasuredTemperatureF", "Type": "String", "Example": "73"}}, {"section": "Ingredients", "title": "Measured temperature c\nThe measured temperature in degrees Celsius", "description": "The measured temperature in degrees Celsius", "details": {"Slug": "MeasuredTemperatureC", "Filter code": "Netatmo.temperatureRisesAbove.MeasuredTemperatureC", "Type": "String", "Example": "22.78"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Configure a Nexia automation to run when the pollen count rises above a specified level.", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.current_pollen_count_rises_above"}, "trigger_details": [{"section": "Trigger fields", "title": "Count\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Pollen count", "Slug": "count", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pollen count\nThe current pollen count, 0-12", "description": "The current pollen count, 0-12", "details": {"Slug": "pollen_count", "Filter code": "Weather.currentPollenCountRisesAbove.PollenCount", "Type": "String", "Example": "6.2"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.currentPollenCountRisesAbove.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.currentPollenCountRisesAbove.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.currentPollenCountRisesAbove.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.currentPollenCountRisesAbove.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "check_time", "Filter code": "Weather.currentPollenCountRisesAbove.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Nexia", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nexia.nexia_automation"}, "action_details": [{"section": "Trigger fields", "title": "Nexia automation\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which automation?", "Helper text": "This automation must be configured in Nexia to have &quot;Notify IFTTT&quot; as it's action.", "Slug": "nexia_automation", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nexia.nexiaAutomation.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Nexia automation name\nThe name of your Nexia automation", "description": "The name of your Nexia automation", "details": {"Slug": "nexia_automation_name", "Filter code": "Nexia.nexiaAutomation.NexiaAutomationName", "Type": "String", "Example": "\"My First Automation\""}}, {"section": "Ingredients", "title": "House name\nThe name of the house of your automation", "description": "The name of the house of your automation", "details": {"Slug": "house_name", "Filter code": "Nexia.nexiaAutomation.HouseName", "Type": "String", "Example": "\"Home\""}}], "filter_code": NaN}
{"original_description": "Disarm a tag at your local sunrise time", "trigger_channel": "Weather Underground", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "weather.sun_rises"}, "trigger_details": [{"section": "Trigger fields", "title": "Location\nLocation input > Point", "description": "Location input > Point", "details": {"Label": "Location", "Helper text": "Weather in this area", "Slug": "location", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Sunrise at\nThe date and time of today's sunrise.", "description": "The date and time of today's sunrise.", "details": {"Slug": "sunrise_at", "Filter code": "Weather.sunRises.SunriseAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit", "description": "The current temperature in degrees Fahrenheit", "details": {"Slug": "temp_fahrenheit", "Filter code": "Weather.sunRises.TempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Temp celsius\nThe current temperature in degrees Celsius", "description": "The current temperature in degrees Celsius", "details": {"Slug": "temp_celsius", "Filter code": "Weather.sunRises.TempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Condition\nThe current weather condition.", "description": "The current weather condition.", "details": {"Slug": "condition", "Filter code": "Weather.sunRises.Condition", "Type": "String", "Example": "Sunny"}}, {"section": "Ingredients", "title": "Condition image url\nThe URL to an image of the current condition.", "description": "The URL to an image of the current condition.", "details": {"Slug": "condition_image_url", "Filter code": "Weather.sunRises.ConditionImageURL", "Type": "Image URL", "Example": "http://www.ifttt.com/weather/sunny.png"}}, {"section": "Ingredients", "title": "Forecast url\nThe URL to a five day forecast for your location.", "description": "The URL to a five day forecast for your location.", "details": {"Slug": "forecast_url", "Filter code": "Weather.sunRises.ForecastUrl", "Type": "Web URL", "Example": "http://www.weather.com/weather/5-day/GMXX1273"}}, {"section": "Ingredients", "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit", "description": "Today's high temperature in degrees Fahrenheit", "details": {"Slug": "high_temp_fahrenheit", "Filter code": "Weather.sunRises.HighTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "High temp celsius\nToday's high temperature in degrees Celsius", "description": "Today's high temperature in degrees Celsius", "details": {"Slug": "high_temp_celsius", "Filter code": "Weather.sunRises.HighTempCelsius", "Type": "String", "Example": "18"}}, {"section": "Ingredients", "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit", "description": "Today's low temperature in degrees Fahrenheit", "details": {"Slug": "low_temp_fahrenheit", "Filter code": "Weather.sunRises.LowTempFahrenheit", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Low temp celsius\nToday's low temperature in degrees Celsius", "description": "Today's low temperature in degrees Celsius", "details": {"Slug": "low_temp_celsius", "Filter code": "Weather.sunRises.LowTempCelsius", "Type": "String", "Example": "18"}}], "action_channel": "Wireless Tag", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wirelesstag.disarm", "Filter code method": "Wirelesstag.disarm.skip(string?: reason)", "Runtime method": "runAction(\"wirelesstag.disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Tagid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Tag", "Slug": "tagid", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Receive an an SMS when the humidity rises above 60%", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.humidity-rises-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target humidity percentage", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.humidityRisesAbove.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the humidity", "description": "This is the name of the Netamo device where you are reading the humidity", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.humidityRisesAbove.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}, {"section": "Ingredients", "title": "Target humidity\nThe target humidity in percent", "description": "The target humidity in percent", "details": {"Slug": "TargetHumidity", "Filter code": "Netatmo.humidityRisesAbove.TargetHumidity", "Type": "String", "Example": "83"}}, {"section": "Ingredients", "title": "Measured humidity\nThe measured humidity as a percentage", "description": "The measured humidity as a percentage", "details": {"Slug": "MeasuredHumidity", "Filter code": "Netatmo.humidityRisesAbove.MeasuredHumidity", "Type": "String", "Example": "84"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Set your Philips Hue lights to automatically turn blue if the temperature drops below 0° outside.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.temperature-drops-below"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold value\nText input", "description": "Text input", "details": {"Label": "Target temperature", "Slug": "threshold_value", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Threshold units\nDropdown list", "description": "Dropdown list", "details": {"Label": "Degrees in", "Slug": "threshold_units", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occurred", "description": "The date and time the measurement occurred", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThis is the name of the Netamo device where you are reading the temperature", "description": "This is the name of the Netamo device where you are reading the temperature", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.temperatureDropsBelow.DeviceName", "Type": "String", "Example": "My Home - Indoor station"}}, {"section": "Ingredients", "title": "Target temperature c\nThe target temperature in degrees Celsius", "description": "The target temperature in degrees Celsius", "details": {"Slug": "TargetTemperatureC", "Filter code": "Netatmo.temperatureDropsBelow.TargetTemperatureC", "Type": "String", "Example": "22.22"}}, {"section": "Ingredients", "title": "Target temperature f\nThe target temperature in degrees Fahrenheit", "description": "The target temperature in degrees Fahrenheit", "details": {"Slug": "TargetTemperatureF", "Filter code": "Netatmo.temperatureDropsBelow.TargetTemperatureF", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Measured temperature c\nThe measured temperature in degrees Celsius", "description": "The measured temperature in degrees Celsius", "details": {"Slug": "MeasuredTemperatureC", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredTemperatureC", "Type": "String", "Example": "22.78"}}, {"section": "Ingredients", "title": "Measured temperature f\nThe measured temperature in degrees Fahrenheit", "description": "The measured temperature in degrees Fahrenheit", "details": {"Slug": "MeasuredTemperatureF", "Filter code": "Netatmo.temperatureDropsBelow.MeasuredTemperatureF", "Type": "String", "Example": "73"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "Send a sms to your phone when it starts raining.", "trigger_channel": "Netatmo Weather Station", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "netatmo.rain-has-started"}, "trigger_details": [{"section": "Trigger fields", "title": "Measure source\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which station?", "Slug": "measure_source", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device name\nThe name of the Netatmo Rain gauge", "description": "The name of the Netatmo Rain gauge", "details": {"Slug": "DeviceName", "Filter code": "Netatmo.rainHasStarted.DeviceName", "Type": "String", "Example": "My Rain gauge"}}, {"section": "Ingredients", "title": "Measured at\nThe date and time the measurement occured", "description": "The date and time the measurement occured", "details": {"Slug": "MeasuredAt", "Filter code": "Netatmo.rainHasStarted.MeasuredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Send a notification to the IFTTT app when the temperature falls below a given threshold.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.temp-below"}, "trigger_details": [{"section": "Trigger fields", "title": "Unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Measurement unit", "Helper text": "What unit of measurement would you like to receive your temperature in?", "Slug": "unit", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get temperature from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Helper text": "How cold do you want it to be when it triggers? Use the measurement unit you chose. Example: 15", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.tempBelow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Temperature\nThe temperature, in the given measurement unit.", "description": "The temperature, in the given measurement unit.", "details": {"Slug": "value", "Filter code": "Airthings.tempBelow.Temperature", "Type": "String", "Example": "25"}}, {"section": "Ingredients", "title": "Measurement unit\nThe measurement unit for Temperature, C° or F°.", "description": "The measurement unit for Temperature, C° or F°.", "details": {"Slug": "unit", "Filter code": "Airthings.tempBelow.MeasurementUnit", "Type": "String", "Example": "C°"}}, {"section": "Ingredients", "title": "Device\nName of the device", "description": "Name of the device", "details": {"Slug": "device", "Filter code": "Airthings.tempBelow.Device", "Type": "String", "Example": "Home - Living Room"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Get a notification in your IFTTT app when your indoor air humidity is getting above comfort levels. ", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.humidity-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get humidity from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Helper text": "How humid, in percent, do you want it to be when it triggers? Example: 60", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.humidityAbove.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Humidity\nThe humidity, in percent.", "description": "The humidity, in percent.", "details": {"Slug": "value", "Filter code": "Airthings.humidityAbove.Humidity", "Type": "String", "Example": "60"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.humidityAbove.Device", "Type": "String", "Example": "Home - Living room"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Make sure you're the first to see content from your favorite broadcasters.", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.new_video_by_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "What kind of videos\nDropdown list", "description": "Dropdown list", "details": {"Label": "What kind of videos?", "Helper text": "Archived broadcasts, only the highlights, or any.", "Slug": "what_kind_of_videos", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.newVideoByChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Video title\nThe title of the video.", "description": "The title of the video.", "details": {"Slug": "video_title", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoTitle", "Type": "String", "Example": "Twitch Weekly - February 6, 2015"}}, {"section": "Ingredients", "title": "Video description\nThe description of the video.", "description": "The description of the video.", "details": {"Slug": "video_description", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoDescription", "Type": "String", "Example": "Twitch Weekly LIVE on February 6, 2015!"}}, {"section": "Ingredients", "title": "Video preview image\nThe URL to a preview image of the video.", "description": "The URL to a preview image of the video.", "details": {"Slug": "video_preview_image", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoPreviewImage", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Video url\nThe URL to the video on Twitch.", "description": "The URL to the video on Twitch.", "details": {"Slug": "video_url", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Video channel\nThe name of the video's channel", "description": "The name of the video's channel", "details": {"Slug": "video_channel", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoChannel", "Type": "String", "Example": "Twitch"}}, {"section": "Ingredients", "title": "Video channel url\nThe URL to the video's channel on Twitch.", "description": "The URL to the video's channel on Twitch.", "details": {"Slug": "video_channel_url", "Filter code": "Twitch.newVideoByChannelYouFollow.VideoChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Press the pusher to receive a VoIP phone call.", "trigger_channel": "Kronaby", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "kronaby.pusher_pressed"}, "trigger_details": [{"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which press type?", "Helper text": "E.g. Press X2", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Pressed at\nThe time when the pusher was pressed.", "description": "The time when the pusher was pressed.", "details": {"Slug": "pressed_at", "Filter code": "Kronaby.pusherPressed.PressedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Latitude\nThe geographic latitude when the pusher was pressed.", "description": "The geographic latitude when the pusher was pressed.", "details": {"Slug": "latitude", "Filter code": "Kronaby.pusherPressed.Latitude", "Type": "String", "Example": "55.611947"}}, {"section": "Ingredients", "title": "Longitude\nThe geographic longitude when the pusher was pressed.", "description": "The geographic longitude when the pusher was pressed.", "details": {"Slug": "longitude", "Filter code": "Kronaby.pusherPressed.Longitude", "Type": "String", "Example": "12.978337"}}, {"section": "Ingredients", "title": "Press type\nHow the pusher was pressed.", "description": "How the pusher was pressed.", "details": {"Slug": "action", "Filter code": "Kronaby.pusherPressed.PressType", "Type": "String", "Example": "single, double or triple"}}, {"section": "Ingredients", "title": "Map image url\nURL to image showing the location on a map", "description": "URL to image showing the location on a map", "details": {"Slug": "map_image_url", "Filter code": "Kronaby.pusherPressed.MapImageUrl", "Type": "Image URL", "Example": "https://ifttt.apps-kronaby.com/map"}}], "action_channel": "VoIP Calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "voip_calls.call_my_device", "Filter code method": "VoipCalls.callMyDevice.skip(string?: reason)", "Runtime method": "runAction(\"voip_calls.call_my_device\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Voice message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "VoipCalls.callMyDevice.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Reward yourself for your great taste in music... save a set amount to one of your Goals every time you add a track to one of your Spotify playlists.", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_track_added_to_playlist"}, "trigger_details": [{"section": "Trigger fields", "title": "Playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which playlist?", "Helper text": "Only the first 50 playlists shown at <a href=\"https://open.spotify.com/\" target=\"_blank\">open.spotify.com</a> will be displayed here. You can click and drag playlists to reorder them", "Slug": "playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Playlist name\nThe name of the playlist.", "description": "The name of the playlist.", "details": {"Slug": "playlist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.PlaylistName", "Type": "String", "Example": "Mid-2000s Jamz"}}, {"section": "Ingredients", "title": "Added by\nThe name of the user that added this track to the playlist.", "description": "The name of the user that added this track to the playlist.", "details": {"Slug": "added_by", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedBy", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Added at\nThe time at which the track was added to the playlist.", "description": "The time at which the track was added to the playlist.", "details": {"Slug": "added_at", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Qapital", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "qapital.save_toward_goal", "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)", "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"}, "action_details": [{"section": "Action fields", "title": "Goal\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which goal?", "Slug": "goal", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount to transfer", "Slug": "amount", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "You can optionally filter for travel warnings to specific countries below.", "trigger_channel": "Department of State", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "dos.travel_warnings"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by country (optional)", "Helper text": "E.g. North Korea, Spain, Venezuela", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Dos.travelWarnings.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Dos.travelWarnings.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Content html\nThe entry's content, contains HTML.", "description": "The entry's content, contains HTML.", "details": {"Slug": "EntryContent", "Filter code": "Dos.travelWarnings.ContentHtml", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Dos.travelWarnings.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Change two lights at a time using DO button.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "MagicHue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "magichue.ChangeColor", "Filter code method": "Magichue.changeColor.skip(string?: reason)", "Runtime method": "runAction(\"magichue.ChangeColor\", {})"}, "action_details": [{"section": "Action fields", "title": "Which lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "which_lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness level", "Slug": "brightness", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Add a widget to your homescreen to press a button and unlock Sesame.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Sesame by CANDY HOUSE", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sesame.open_sesame", "Filter code method": "Sesame.openSesame.skip(string?: reason)", "Runtime method": "runAction(\"sesame.open_sesame\", {})"}, "action_details": [{"section": "Action fields", "title": "Sesame name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Sesame?", "Helper text": "Choose which Sesame to unlock", "Slug": "sesame_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This Applet is an easy way to organize and prioritize your to-read list. ", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_item_added_pocket"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newItemAddedPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newItemAddedPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newItemAddedPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newItemAddedPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newItemAddedPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newItemAddedPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Trello", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "trello.create_card", "Filter code method": "Trello.createCard.skip(string?: reason)", "Runtime method": "runAction(\"trello.create_card\", {})"}, "action_details": [{"section": "Action fields", "title": "Board\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which board?", "Slug": "board", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "List name\nText input > Other", "description": "Text input > Other", "details": {"Label": "List name", "Helper text": "We'll create a new list if one with this name doesn't exist", "Slug": "list_name", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setList Name(string: list_name)"}}, {"section": "Action fields", "title": "Pos\nDropdown list", "description": "Dropdown list", "details": {"Label": "Position", "Slug": "pos", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setPos(string: pos)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "Trello.createCard.setTitle(string: title)"}}, {"section": "Action fields", "title": "Description\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setDescription(string: description)"}}, {"section": "Action fields", "title": "Members\nText input > Other", "description": "Text input > Other", "details": {"Label": "Assign members", "Helper text": "Optional comma separated list of @usernames to assign to card", "Slug": "members", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setMembers(string: members)"}}, {"section": "Action fields", "title": "Labels\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Apply labels", "Helper text": "Optional comma separated list of label names — labels that do not exist on the board will be ignored", "Slug": "labels", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setLabels(string: labels)"}}, {"section": "Action fields", "title": "Url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Attachment URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Trello.createCard.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Set a time to arm abode into home or away mode each evening", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "abode", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "abode.change_mode", "Filter code method": "Abode.changeMode.skip(string?: reason)", "Runtime method": "runAction(\"abode.change_mode\", {})"}, "action_details": [{"section": "Action fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "true", "Filter code method": "Abode.changeMode.setMode(string: mode)"}}], "filter_code": NaN}
{"original_description": "Toggle a device.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.toggle", "Filter code method": "Kasa.toggle.skip(string?: reason)", "Runtime method": "runAction(\"kasa.toggle\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to toggle", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Send a notification to the IFTTT app when the CO2 level rises above a certain threshold.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.co2-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get CO2 levels from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.co2Above.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Co2 level\nThe CO2 level. In parts per million.", "description": "The CO2 level. In parts per million.", "details": {"Slug": "value", "Filter code": "Airthings.co2Above.Co2Level", "Type": "String", "Example": "120"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.co2Above.Device", "Type": "String", "Example": "Home - Living Room"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "This Applet sends you a notification when the FCC posts a new order. Use a filter keyword to get the most relevant updates.", "trigger_channel": "Federal Communications Commission", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "fcc.order"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Filter by keyword(s) (optional)", "Helper text": "E.g. &quot;Sprint&quot;, &quot;Wireline Competition Bureau&quot;, etc.", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Subject\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Fcc.order.Subject", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Link\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Fcc.order.Link", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Preview content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Fcc.order.PreviewContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Turn off a device.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_off", "Filter code method": "Kasa.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn off", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet creates a button widget that you can use from the home screen of your Android or iOS device. Press the button to open your garage door or gate.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "GarageWiFi & Gates", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "garagewifi.open_door", "Filter code method": "Garagewifi.openDoor.skip(string?: reason)", "Runtime method": "runAction(\"garagewifi.open_door\", {})"}, "action_details": [{"section": "Action fields", "title": "Door number\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which door?", "Slug": "door_number", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Save £1 every time you add a track to a Spotify playlist", "trigger_channel": "Spotify", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "spotify.new_track_added_to_playlist"}, "trigger_details": [{"section": "Trigger fields", "title": "Playlist\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which playlist?", "Helper text": "Only the first 50 playlists shown at <a href=\"https://open.spotify.com/\" target=\"_blank\">open.spotify.com</a> will be displayed here. You can click and drag playlists to reorder them", "Slug": "playlist", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Track name\nThe name of the track.", "description": "The name of the track.", "details": {"Slug": "track_name", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackName", "Type": "String", "Example": "Snow (Hey Oh)"}}, {"section": "Ingredients", "title": "Track url\nThe URL to the track on Spotify.", "description": "The URL to the track on Spotify.", "details": {"Slug": "track_url", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackURL", "Type": "Web URL", "Example": "https://open.spotify.com/track/2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Artist name\nThe artist who performed the track.", "description": "The artist who performed the track.", "details": {"Slug": "artist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.ArtistName", "Type": "String", "Example": "Red Hot Chili Peppers"}}, {"section": "Ingredients", "title": "Album name\nThe album on which the track appears.", "description": "The album on which the track appears.", "details": {"Slug": "album_name", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumName", "Type": "String", "Example": "Stadium Arcadium"}}, {"section": "Ingredients", "title": "Album cover url\nAn image of the album cover art.", "description": "An image of the album cover art.", "details": {"Slug": "album_cover_url", "Filter code": "Spotify.newTrackAddedToPlaylist.AlbumCoverURL", "Type": "Image URL", "Example": "https://i.scdn.co/image/60257f94086dfdcaa9730d3959aab66e1ce89f7d"}}, {"section": "Ingredients", "title": "Playlist name\nThe name of the playlist.", "description": "The name of the playlist.", "details": {"Slug": "playlist_name", "Filter code": "Spotify.newTrackAddedToPlaylist.PlaylistName", "Type": "String", "Example": "Mid-2000s Jamz"}}, {"section": "Ingredients", "title": "Added by\nThe name of the user that added this track to the playlist.", "description": "The name of the user that added this track to the playlist.", "details": {"Slug": "added_by", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedBy", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Added at\nThe time at which the track was added to the playlist.", "description": "The time at which the track was added to the playlist.", "details": {"Slug": "added_at", "Filter code": "Spotify.newTrackAddedToPlaylist.AddedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Track\nThe track's ID.", "description": "The track's ID.", "details": {"Slug": "track_id", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackId", "Type": "String", "Example": "2aibwv5hGXSgw7Yru8IYTO"}}, {"section": "Ingredients", "title": "Track isrc\nISRC code for the track.", "description": "ISRC code for the track.", "details": {"Slug": "track_isrc", "Filter code": "Spotify.newTrackAddedToPlaylist.TrackIsrc", "Type": "String", "Example": "IEAAA1900001"}}], "action_channel": "Dozens", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dozens.save", "Filter code method": "Dozens.save.skip(string?: reason)", "Runtime method": "runAction(\"dozens.save\", {})"}, "action_details": [{"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount", "Helper text": "Specify amount that should be moved to savings account", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Dozens.save.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "A nice visual cue that your Twitch audience is growing! 🙌", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.new_follower_on_your_channel"}, "trigger_details": [{"section": "Ingredients", "title": "Followed at\nDate and time the user followed your Channel.", "description": "Date and time the user followed your Channel.", "details": {"Slug": "created_at", "Filter code": "Twitch.newFollowerOnYourChannel.FollowedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Follower name\nThe name of the user who followed your channel.", "description": "The name of the user who followed your channel.", "details": {"Slug": "follower_name", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerName", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Follower bio\nThe bio of the user that followed you.", "description": "The bio of the user that followed you.", "details": {"Slug": "follower_bio", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerBio", "Type": "String", "Example": "A gaming fanatic from Boston."}}, {"section": "Ingredients", "title": "Follower url\nA url to the follower's profile on Twitch.", "description": "A url to the follower's profile on Twitch.", "details": {"Slug": "follower_url", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Follower count\nThe number of followers of your channel.", "description": "The number of followers of your channel.", "details": {"Slug": "follower_count", "Filter code": "Twitch.newFollowerOnYourChannel.FollowerCount", "Type": "String", "Example": "215780"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "This applet sets a Hue scene when Withings Sleep detects that you get into bed.\n", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_scene", "Filter code method": "Hue.setScene.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Helper text": "Don't see your scenes? Make sure your lights connected to the latest hue app for iOS or Android.", "Slug": "scene", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet sets a Hue scene when Withings Sleep detects that you get out of bed.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedout"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedout.DeviceUser", "Type": "String", "Example": "Bed out has been detected by Tom's Nokia Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got out of bed", "description": "Date and time when you got out of bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedout.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_scene", "Filter code method": "Hue.setScene.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Helper text": "Don't see your scenes? Make sure your lights connected to the latest hue app for iOS or Android.", "Slug": "scene", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Self explanatory", "trigger_channel": "put.io", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "putio.transfer_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of transfer?", "Slug": "type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Putio.transferFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Download url\nFiles can be downloaded from this link.", "description": "Files can be downloaded from this link.", "details": {"Slug": "download_url", "Filter code": "Putio.transferFinished.DownloadUrl", "Type": "File URL", "Example": "https://api.put.io/v2/files/123456/download?oauth_token=XXXXXX"}}, {"section": "Ingredients", "title": "Name\nName of the finished transfer.", "description": "Name of the finished transfer.", "details": {"Slug": "name", "Filter code": "Putio.transferFinished.Name", "Type": "String", "Example": "Big Buck Bunny"}}, {"section": "Ingredients", "title": "View url\nFiles can be viewed from this link.", "description": "Files can be viewed from this link.", "details": {"Slug": "view_url", "Filter code": "Putio.transferFinished.ViewUrl", "Type": "Web URL", "Example": "https://app.put.io/files/123456"}}, {"section": "Ingredients", "title": "File\nID of the transferred file or folder.", "description": "ID of the transferred file or folder.", "details": {"Slug": "file_id", "Filter code": "Putio.transferFinished.FileId", "Type": "String", "Example": "123456"}}, {"section": "Ingredients", "title": "Source\nSource of the transfer.", "description": "Source of the transfer.", "details": {"Slug": "source", "Filter code": "Putio.transferFinished.Source", "Type": "String", "Example": "http://example.com/README.txt"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_notification", "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Activate a selected scene from your account.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.activate_scene", "Filter code method": "Kasa.activateScene.skip(string?: reason)", "Runtime method": "runAction(\"kasa.activate_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Scene", "Helper text": "Select a scene from your account to activate", "Slug": "scene", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Self explanatory", "trigger_channel": "put.io", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "putio.transfer_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of transfer?", "Slug": "type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Putio.transferFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Download url\nFiles can be downloaded from this link.", "description": "Files can be downloaded from this link.", "details": {"Slug": "download_url", "Filter code": "Putio.transferFinished.DownloadUrl", "Type": "File URL", "Example": "https://api.put.io/v2/files/123456/download?oauth_token=XXXXXX"}}, {"section": "Ingredients", "title": "Name\nName of the finished transfer.", "description": "Name of the finished transfer.", "details": {"Slug": "name", "Filter code": "Putio.transferFinished.Name", "Type": "String", "Example": "Big Buck Bunny"}}, {"section": "Ingredients", "title": "View url\nFiles can be viewed from this link.", "description": "Files can be viewed from this link.", "details": {"Slug": "view_url", "Filter code": "Putio.transferFinished.ViewUrl", "Type": "Web URL", "Example": "https://app.put.io/files/123456"}}, {"section": "Ingredients", "title": "File\nID of the transferred file or folder.", "description": "ID of the transferred file or folder.", "details": {"Slug": "file_id", "Filter code": "Putio.transferFinished.FileId", "Type": "String", "Example": "123456"}}, {"section": "Ingredients", "title": "Source\nSource of the transfer.", "description": "Source of the transfer.", "details": {"Slug": "source", "Filter code": "Putio.transferFinished.Source", "Type": "String", "Example": "http://example.com/README.txt"}}], "action_channel": "Telegram", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "telegram.send_message", "Filter code method": "Telegram.sendMessage.skip(string?: reason)", "Runtime method": "runAction(\"telegram.send_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Chat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Target chat", "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.", "Slug": "chat_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Text\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message text", "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setText(string: text)"}}, {"section": "Action fields", "title": "Include web page preview\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include web page preview?", "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.", "Slug": "include_web_page_preview", "Required": "false", "Can have default value": "true", "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"}}], "filter_code": NaN}
{"original_description": "Generate a call to your phone number after sending an E-Mail to trigger@applet.ifttt.com from your registered E-Mail address. Register your phone number at woop.la/ifttt to receive phone calls.", "trigger_channel": "Email", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "email.send_ifttt_an_email_tagged"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Tag", "Helper text": "e.g. #hashtag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "From\nEmail address of sender.", "description": "Email address of sender.", "details": {"Slug": "From", "Filter code": "Email.sendIftttAnEmailTagged.From", "Type": "String", "Example": "somebody@gmail.com"}}, {"section": "Ingredients", "title": "Attachment temporary url\nThe URL to the first file attachment, if included, that anyone can visit for 30 days.", "description": "The URL to the first file attachment, if included, that anyone can visit for 30 days.", "details": {"Slug": "AttachmentTemporaryUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentTemporaryUrl", "Type": "File URL", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Body\nEmail body, with most signatures stripped out.", "description": "Email body, with most signatures stripped out.", "details": {"Slug": "Body", "Filter code": "Email.sendIftttAnEmailTagged.Body", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Body html\nEmail body HTML, with most signatures stripped out.", "description": "Email body HTML, with most signatures stripped out.", "details": {"Slug": "BodyHTML", "Filter code": "Email.sendIftttAnEmailTagged.BodyHTML", "Type": "String", "Example": "Been having a good day so far..."}}, {"section": "Ingredients", "title": "Subject\nEmail subject line.", "description": "Email subject line.", "details": {"Slug": "Subject", "Filter code": "Email.sendIftttAnEmailTagged.Subject", "Type": "String", "Example": "Hello there"}}, {"section": "Ingredients", "title": "Attachment url\nThe URL to the first file attachment, if included.", "description": "The URL to the first file attachment, if included.", "details": {"Slug": "AttachmentUrl", "Filter code": "Email.sendIftttAnEmailTagged.AttachmentUrl", "Type": "String", "Example": "http://media.ifttt.com/emails/363-black_and_white.jpg"}}, {"section": "Ingredients", "title": "Received at\nDate and time email was received.", "description": "Date and time email was received.", "details": {"Slug": "ReceivedAt", "Filter code": "Email.sendIftttAnEmailTagged.ReceivedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "woopla phone calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "woopla.tts_call", "Filter code method": "Woopla.ttsCall.skip(string?: reason)", "Runtime method": "runAction(\"woopla.tts_call\", {})"}, "action_details": [{"section": "Action fields", "title": "Tts\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Text", "Helper text": "Enter the text to be played when call connects.", "Slug": "tts", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCall.setTts(string: tts)"}}, {"section": "Action fields", "title": "Language\nDropdown list", "description": "Dropdown list", "details": {"Label": "Language", "Helper text": "Select text's language.", "Slug": "language", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCall.setLanguage(string: language)"}}], "filter_code": NaN}
{"original_description": "Save £1 every time a book is added to the NYT Bestsellers list", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.new_book_on_a_best_seller_list"}, "trigger_details": [{"section": "Trigger fields", "title": "List\nDropdown list", "description": "Dropdown list", "details": {"Label": "Best Sellers List", "Slug": "list", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.newBookOnABestSellerList.Title", "Type": "String", "Example": "Thinking, Fast and Slow"}}, {"section": "Ingredients", "title": "Description\nThe book's description", "description": "The book's description", "details": {"Slug": "Description", "Filter code": "Nytimes.newBookOnABestSellerList.Description", "Type": "String", "Example": "The winner of the Nobel in economic science discusses how we make choices..."}}, {"section": "Ingredients", "title": "Book cover image url\nA URL to the book's cover image", "description": "A URL to the book's cover image", "details": {"Slug": "BookCoverImageUrl", "Filter code": "Nytimes.newBookOnABestSellerList.BookCoverImageUrl", "Type": "String", "Example": "http://images.amazon.com/images/P/0553801473.01.LZZZZZZZ.jpg"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.newBookOnABestSellerList.Author", "Type": "String", "Example": "Daniel Kahneman"}}, {"section": "Ingredients", "title": "Publisher\nThe name of the book's publisher", "description": "The name of the book's publisher", "details": {"Slug": "Publisher", "Filter code": "Nytimes.newBookOnABestSellerList.Publisher", "Type": "String", "Example": "Farrar, Straus and Giroux"}}, {"section": "Ingredients", "title": "Best seller category", "description": "", "details": {"Slug": "BestSellerCategory", "Filter code": "Nytimes.newBookOnABestSellerList.BestSellerCategory", "Type": "String", "Example": "Business"}}, {"section": "Ingredients", "title": "Rank\nRank this week on the list", "description": "Rank this week on the list", "details": {"Slug": "Rank", "Filter code": "Nytimes.newBookOnABestSellerList.Rank", "Type": "String", "Example": "3"}}, {"section": "Ingredients", "title": "Weeks on list\nNumber of weeks on the list", "description": "Number of weeks on the list", "details": {"Slug": "WeeksOnList", "Filter code": "Nytimes.newBookOnABestSellerList.WeeksOnList", "Type": "String", "Example": "23"}}, {"section": "Ingredients", "title": "Best seller listed date\nThe listed date of the book", "description": "The listed date of the book", "details": {"Slug": "BestSellerListedDate", "Filter code": "Nytimes.newBookOnABestSellerList.BestSellerListedDate", "Type": "Date (ISO8601)", "Example": "2020-07-07"}}, {"section": "Ingredients", "title": "Isbn\nISBN Number (ISBN 13)", "description": "ISBN Number (ISBN 13)", "details": {"Slug": "ISBN", "Filter code": "Nytimes.newBookOnABestSellerList.ISBN", "Type": "String", "Example": "1726474927483"}}], "action_channel": "Dozens", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "dozens.save", "Filter code method": "Dozens.save.skip(string?: reason)", "Runtime method": "runAction(\"dozens.save\", {})"}, "action_details": [{"section": "Action fields", "title": "Amount\nDropdown list", "description": "Dropdown list", "details": {"Label": "Amount", "Helper text": "Specify amount that should be moved to savings account", "Slug": "amount", "Required": "true", "Can have default value": "true", "Filter code method": "Dozens.save.setAmount(string: amount)"}}], "filter_code": NaN}
{"original_description": "Every week, you can automatically add your favorite tracks to a playlist of your choice", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Spotify", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "spotify.add_a_track_to_a_playlist_by_track_id", "Filter code method": "Spotify.addATrackToAPlaylistByTrackId.skip(string?: reason)", "Runtime method": "runAction(\"spotify.add_a_track_to_a_playlist_by_track_id\", {})"}, "action_details": [{"section": "Action fields", "title": "Playlist\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Playlist name", "Helper text": "Must be a playlist owned by you. If a playlist with the name given can't be found, a new private playlist will be created.", "Slug": "playlist", "Required": "true", "Can have default value": "true", "Filter code method": "Spotify.addATrackToAPlaylistByTrackId.setPlaylist(string: playlist)"}}, {"section": "Action fields", "title": "Track\nText input > Other", "description": "Text input > Other", "details": {"Label": "Track ID", "Slug": "track_id", "Required": "false", "Can have default value": "true", "Filter code method": "Spotify.addATrackToAPlaylistByTrackId.setTrack(string: track_id)"}}], "filter_code": NaN}
{"original_description": "Twitch alert! Blink your bulb purple when your favorite streamer goes live (you'll choose the specific channel you follow when you set up the Applet). ", "trigger_channel": "Twitch", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "twitch.stream_going_live_for_channel_you_follow"}, "trigger_details": [{"section": "Trigger fields", "title": "Which channel\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which channel?", "Helper text": "List of channels limited to 100 subscriptions who have recently broadcasted", "Slug": "which_channel", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Game\nThe name of the game being streamed.", "description": "The name of the game being streamed.", "details": {"Slug": "game", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.Game", "Type": "String", "Example": "StarCraft II: Heart of the Swarm"}}, {"section": "Ingredients", "title": "Channel name\nThe name of the channel broadcasting the stream.", "description": "The name of the channel broadcasting the stream.", "details": {"Slug": "channel_name", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelName", "Type": "String", "Example": "John's Channel"}}, {"section": "Ingredients", "title": "Stream preview\nThe URL to an image of a preview of the stream.", "description": "The URL to an image of a preview of the stream.", "details": {"Slug": "stream_preview", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.StreamPreview", "Type": "Image URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Channel url\nThe URL to the channel on Twitch.", "description": "The URL to the channel on Twitch.", "details": {"Slug": "channel_url", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.ChannelUrl", "Type": "Web URL", "Example": "twitch.com/"}}, {"section": "Ingredients", "title": "Current viewers\nThe current number of viewers of the stream.", "description": "The current number of viewers of the stream.", "details": {"Slug": "current_viewers", "Filter code": "Twitch.streamGoingLiveForChannelYouFollow.CurrentViewers", "Type": "String", "Example": "2123"}}], "action_channel": "LIFX", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "lifx.blink", "Filter code method": "Lifx.blink.skip(string?: reason)", "Runtime method": "runAction(\"lifx.blink\", {})"}, "action_details": [{"section": "Action fields", "title": "Selector\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "selector", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nDropdown list", "description": "Dropdown list", "details": {"Label": "Color", "Slug": "color", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Brightness\nDropdown list", "description": "Dropdown list", "details": {"Label": "Brightness", "Slug": "brightness", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Number of blinks\nDropdown list", "description": "Dropdown list", "details": {"Label": "Number of blinks", "Slug": "number_of_blinks", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.blink.setNumber Of Blinks(string: number_of_blinks)"}}, {"section": "Action fields", "title": "Blink if off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on first?", "Helper text": "&quot;Yes&quot; will make your lights blink, even when they are turned off in the app.", "Slug": "blink_if_off", "Required": "true", "Can have default value": "true", "Filter code method": "Lifx.blink.setBlink If Off(string: blink_if_off)"}}, {"section": "Action fields", "title": "Advanced options\nText input > Other", "description": "Text input > Other", "details": {"Label": "Advanced options", "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: green saturation:0.2; number_of_blinks: 6&quot; for 6 pale green blinks. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>", "Slug": "advanced_options", "Required": "false", "Can have default value": "true", "Filter code method": "Lifx.blink.setAdvanced Options(string: advanced_options)"}}], "filter_code": NaN}
{"original_description": "This applet sends a weekly digest email that lists all the transfers for the week. Great if you need those URL's again.", "trigger_channel": "put.io", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "putio.transfer_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of transfer?", "Slug": "type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Putio.transferFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Download url\nFiles can be downloaded from this link.", "description": "Files can be downloaded from this link.", "details": {"Slug": "download_url", "Filter code": "Putio.transferFinished.DownloadUrl", "Type": "File URL", "Example": "https://api.put.io/v2/files/123456/download?oauth_token=XXXXXX"}}, {"section": "Ingredients", "title": "Name\nName of the finished transfer.", "description": "Name of the finished transfer.", "details": {"Slug": "name", "Filter code": "Putio.transferFinished.Name", "Type": "String", "Example": "Big Buck Bunny"}}, {"section": "Ingredients", "title": "View url\nFiles can be viewed from this link.", "description": "Files can be viewed from this link.", "details": {"Slug": "view_url", "Filter code": "Putio.transferFinished.ViewUrl", "Type": "Web URL", "Example": "https://app.put.io/files/123456"}}, {"section": "Ingredients", "title": "File\nID of the transferred file or folder.", "description": "ID of the transferred file or folder.", "details": {"Slug": "file_id", "Filter code": "Putio.transferFinished.FileId", "Type": "String", "Example": "123456"}}, {"section": "Ingredients", "title": "Source\nSource of the transfer.", "description": "Source of the transfer.", "details": {"Slug": "source", "Filter code": "Putio.transferFinished.Source", "Type": "String", "Example": "http://example.com/README.txt"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "Wouldn't Sunday be better if you had koalas waiting in your inbox? Why are you fighting this? 🐨 💙", "trigger_channel": "Giphy", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "giphy.search"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Search for", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Url\nURL to this gif on Giphy", "description": "URL to this gif on Giphy", "details": {"Slug": "url", "Filter code": "Giphy.search.URL", "Type": "Web URL", "Example": "http://giphy.com/posts/dreams-are-real-and-best-with-cats"}}, {"section": "Ingredients", "title": "Image url\nURL to the gif's image if one exists", "description": "URL to the gif's image if one exists", "details": {"Slug": "image_url", "Filter code": "Giphy.search.ImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/9WsTM8zLbys4o/giphy.gif"}}, {"section": "Ingredients", "title": "Tumblr image url\nGIF image URL for posting GIFs on tumblr.", "description": "GIF image URL for posting GIFs on tumblr.", "details": {"Slug": "tumblr_image_url", "Filter code": "Giphy.search.TumblrImageURL", "Type": "Image URL", "Example": "http://media.giphy.com/media/QT3k4ZWD6XOaA/giphy-tumblr.gif"}}, {"section": "Ingredients", "title": "Email html\nHTML to include an in-line GIF in the body of an email.", "description": "HTML to include an in-line GIF in the body of an email.", "details": {"Slug": "email_html", "Filter code": "Giphy.search.EmailHTML", "Type": "String", "Example": "<a href=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif><img src=http://media2.giphy.com/media/vhp0BocGjkVjO/giphy.gif border='0'/></a><br />via <a href=http://giphy.com/gifs/vhp0BocGjkVjO>giphy.com</a>"}}, {"section": "Ingredients", "title": "Embed code\nIFrame embed code of gif", "description": "IFrame embed code of gif", "details": {"Slug": "embed_code", "Filter code": "Giphy.search.EmbedCode", "Type": "String", "Example": "<iframe src=\"//giphy.com/embed/PfquFkRaRAv5u\" width=\"500\" height=\"391\" frameBorder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"}}, {"section": "Ingredients", "title": "Tags\nNewline separate string of tags of this gif", "description": "Newline separate string of tags of this gif", "details": {"Slug": "tags", "Filter code": "Giphy.search.Tags", "Type": "String", "Example": "cats party"}}, {"section": "Ingredients", "title": "Created date\nDate and time when this gif was created", "description": "Date and time when this gif was created", "details": {"Slug": "created_date", "Filter code": "Giphy.search.CreatedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Email Digest", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email_digest.send_weekly_email", "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)", "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Time of day\nDropdown list", "description": "Dropdown list", "details": {"Label": "Time of day", "Slug": "time_of_day", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"}}, {"section": "Action fields", "title": "Day of week\nDropdown list", "description": "Dropdown list", "details": {"Label": "Day of week", "Slug": "day_of_week", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "true", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Message", "Slug": "message", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Item URL", "Helper text": "Optional", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"}}], "filter_code": NaN}
{"original_description": "If a stock rises by 5%, sell it!", "trigger_channel": "Finance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "finance.percentage_rise_stocks"}, "trigger_details": [{"section": "Trigger fields", "title": "Symbol\nText input", "description": "Text input", "details": {"Label": "Ticker symbol", "Slug": "symbol", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Percentage\nText input", "description": "Text input", "details": {"Label": "Percentage increase", "Helper text": "e.g. insert 15 for 15%", "Slug": "percentage", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Stock name\nThe full name of the stock.", "description": "The full name of the stock.", "details": {"Slug": "StockName", "Filter code": "Finance.percentageRiseStocks.StockName", "Type": "String", "Example": "Google Inc."}}, {"section": "Ingredients", "title": "Stock ticker\nThe ticker name of the stock.", "description": "The ticker name of the stock.", "details": {"Slug": "StockTicker", "Filter code": "Finance.percentageRiseStocks.StockTicker", "Type": "String", "Example": "GOOG"}}, {"section": "Ingredients", "title": "Price\nThe last price", "description": "The last price", "details": {"Slug": "Price", "Filter code": "Finance.percentageRiseStocks.Price", "Type": "String", "Example": "89"}}, {"section": "Ingredients", "title": "Info url\nA link to more information about the stock.", "description": "A link to more information about the stock.", "details": {"Slug": "InfoUrl", "Filter code": "Finance.percentageRiseStocks.InfoUrl", "Type": "String", "Example": "http://www.google.com/finance?q=GOOG"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "Finance.percentageRiseStocks.CheckTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Percentage change\nThe percentage change", "description": "The percentage change", "details": {"Slug": "PercentageChange", "Filter code": "Finance.percentageRiseStocks.PercentageChange", "Type": "String", "Example": "42"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.place_market_order", "Filter code method": "Alpaca.placeMarketOrder.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.place_market_order\", {})"}, "action_details": [{"section": "Action fields", "title": "Symbol\nText input > Title", "description": "Text input > Title", "details": {"Label": "Symbol", "Helper text": "The symbol to place the order for.", "Slug": "symbol", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSymbol(string: symbol)"}}, {"section": "Action fields", "title": "Side\nDropdown list", "description": "Dropdown list", "details": {"Label": "Side", "Helper text": "The side to place the order for.", "Slug": "side", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSide(string: side)"}}, {"section": "Action fields", "title": "Qty\nText input > Title", "description": "Text input > Title", "details": {"Label": "Quantity", "Helper text": "The number of shares to place the order for.", "Slug": "qty", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setQty(string: qty)"}}], "filter_code": NaN}
{"original_description": "Turn off the home air conditioning at a specific time.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "AirTouch", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "airtouch.ac_power", "Filter code method": "Airtouch.acPower.skip(string?: reason)", "Runtime method": "runAction(\"airtouch.ac_power\", {})"}, "action_details": [{"section": "Action fields", "title": "Ac index\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which air conditioning?", "Slug": "ac_index", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Power on off\nDropdown list", "description": "Dropdown list", "details": {"Label": "Turn on or turn off?", "Slug": "power_on_off", "Required": "true", "Can have default value": "true", "Filter code method": "Airtouch.acPower.setPower On Off(string: power_on_off)"}}], "filter_code": NaN}
{"original_description": "Self explanatory", "trigger_channel": "put.io", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "putio.transfer_finished"}, "trigger_details": [{"section": "Trigger fields", "title": "Type\nDropdown list", "description": "Dropdown list", "details": {"Label": "What type of transfer?", "Slug": "type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Putio.transferFinished.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Download url\nFiles can be downloaded from this link.", "description": "Files can be downloaded from this link.", "details": {"Slug": "download_url", "Filter code": "Putio.transferFinished.DownloadUrl", "Type": "File URL", "Example": "https://api.put.io/v2/files/123456/download?oauth_token=XXXXXX"}}, {"section": "Ingredients", "title": "Name\nName of the finished transfer.", "description": "Name of the finished transfer.", "details": {"Slug": "name", "Filter code": "Putio.transferFinished.Name", "Type": "String", "Example": "Big Buck Bunny"}}, {"section": "Ingredients", "title": "View url\nFiles can be viewed from this link.", "description": "Files can be viewed from this link.", "details": {"Slug": "view_url", "Filter code": "Putio.transferFinished.ViewUrl", "Type": "Web URL", "Example": "https://app.put.io/files/123456"}}, {"section": "Ingredients", "title": "File\nID of the transferred file or folder.", "description": "ID of the transferred file or folder.", "details": {"Slug": "file_id", "Filter code": "Putio.transferFinished.FileId", "Type": "String", "Example": "123456"}}, {"section": "Ingredients", "title": "Source\nSource of the transfer.", "description": "Source of the transfer.", "details": {"Slug": "source", "Filter code": "Putio.transferFinished.Source", "Type": "String", "Example": "http://example.com/README.txt"}}], "action_channel": "Pushover", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "pushover.send", "Filter code method": "Pushover.send.skip(string?: reason)", "Runtime method": "runAction(\"pushover.send\", {})"}, "action_details": [{"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Pushover.send.setTitle(string: title)"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Pushover.send.setMessage(string: message)"}}, {"section": "Action fields", "title": "Priority\nDropdown list", "description": "Dropdown list", "details": {"Label": "Message Priority", "Slug": "priority", "Required": "false", "Can have default value": "true", "Filter code method": "Pushover.send.setPriority(string: priority)"}}, {"section": "Action fields", "title": "Sound\nDropdown list", "description": "Dropdown list", "details": {"Label": "Message Sound", "Helper text": "Sound to play, overriding your device's default", "Slug": "sound", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Helper text": "URL to display with message", "Slug": "url", "Required": "false", "Can have default value": "true", "Filter code method": "Pushover.send.setUrl(string: url)"}}, {"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device or Group", "Helper text": "Send only to a specific device, or broadcast to a delivery group", "Slug": "device", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Don't be surprised by a flooded basement or busted water heater. Flicker your Philips hue lights as soon as a water leak is detected.", "trigger_channel": "mydlink", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "mydlink.waterDetection"}, "trigger_details": [{"section": "Trigger fields", "title": "Mydlink no\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "mydlink_no", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Mydlink.waterDetection.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device detects the event.", "description": "The name of the device detects the event.", "details": {"Slug": "device_name", "Filter code": "Mydlink.waterDetection.DeviceName", "Type": "String", "Example": "Basement water sensor"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Save new Raindrop.io items to Instapaper", "trigger_channel": "Raindrop.io", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "raindrop.raindrops_all"}, "trigger_details": [{"section": "Ingredients", "title": "Title\nName of bookmark or file", "description": "Name of bookmark or file", "details": {"Slug": "title", "Filter code": "Raindrop.raindropsAll.Title", "Type": "String", "Example": "IFTTT API"}}, {"section": "Ingredients", "title": "Url\nURL of bookmark or file", "description": "URL of bookmark or file", "details": {"Slug": "link", "Filter code": "Raindrop.raindropsAll.Url", "Type": "Web URL", "Example": "https://ifttt.com"}}, {"section": "Ingredients", "title": "Description\nDescription", "description": "Description", "details": {"Slug": "excerpt", "Filter code": "Raindrop.raindropsAll.Description", "Type": "String", "Example": "Great article"}}, {"section": "Ingredients", "title": "Thumbnail url\nThumbnail URL of bookmark or file", "description": "Thumbnail URL of bookmark or file", "details": {"Slug": "cover", "Filter code": "Raindrop.raindropsAll.ThumbnailUrl", "Type": "Image URL", "Example": "https://up.raindrop.io/raindrop/123/thumb.jpg"}}, {"section": "Ingredients", "title": "Tags\nTags", "description": "Tags", "details": {"Slug": "tags", "Filter code": "Raindrop.raindropsAll.Tags", "Type": "String", "Example": "api, ifttt"}}, {"section": "Ingredients", "title": "Created at\nWhen bookmark or file is created", "description": "When bookmark or file is created", "details": {"Slug": "created", "Filter code": "Raindrop.raindropsAll.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Domain\nHostname", "description": "Hostname", "details": {"Slug": "domain", "Filter code": "Raindrop.raindropsAll.Domain", "Type": "String", "Example": "google.com"}}, {"section": "Ingredients", "title": "Id\nBookmark unique ID", "description": "Bookmark unique ID", "details": {"Slug": "id", "Filter code": "Raindrop.raindropsAll.Id", "Type": "String", "Example": "123"}}, {"section": "Ingredients", "title": "Note\nNote", "description": "Note", "details": {"Slug": "note", "Filter code": "Raindrop.raindropsAll.Note", "Type": "String", "Example": "Note"}}], "action_channel": "Instapaper", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "instapaper.save_item", "Filter code method": "Instapaper.saveItem.skip(string?: reason)", "Runtime method": "runAction(\"instapaper.save_item\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setUrl(string: url)"}}, {"section": "Action fields", "title": "Description\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Description", "Helper text": "Optional", "Slug": "description", "Required": "false", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setDescription(string: description)"}}, {"section": "Action fields", "title": "Title\nText input > File name", "description": "Text input > File name", "details": {"Label": "Title", "Helper text": "Optional", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Instapaper.saveItem.setTitle(string: title)"}}, {"section": "Action fields", "title": "Folder\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which folder?", "Helper text": "Optional", "Slug": "folder", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Tags\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Which tags?", "Slug": "tags", "Required": "false", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Save new items from RSS to Raindrop.io", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Raindrop.io", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "raindrop.raindrop", "Filter code method": "Raindrop.raindrop.skip(string?: reason)", "Runtime method": "runAction(\"raindrop.raindrop\", {})"}, "action_details": [{"section": "Action fields", "title": "Link\nText input > Link", "description": "Text input > Link", "details": {"Label": "URL", "Slug": "link", "Required": "true", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setLink(string: link)"}}, {"section": "Action fields", "title": "Collectionid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Collection", "Slug": "collectionId", "Required": "false", "Can have default value": "false"}}, {"section": "Action fields", "title": "Title\nText input > Title", "description": "Text input > Title", "details": {"Label": "Title", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setTitle(string: title)"}}, {"section": "Action fields", "title": "Note\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Note", "Slug": "note", "Required": "false", "Can have default value": "true"}}, {"section": "Action fields", "title": "Excerpt\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Description", "Slug": "excerpt", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setExcerpt(string: excerpt)"}}, {"section": "Action fields", "title": "Cover\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Thumbnail URL", "Slug": "cover", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setCover(string: cover)"}}, {"section": "Action fields", "title": "Tags\nText input > Tags", "description": "Text input > Tags", "details": {"Label": "Tags", "Helper text": "Single or multiple separated by comma", "Slug": "tags", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setTags(string: tags)"}}, {"section": "Action fields", "title": "Created\nText input > ISO 8601 date and time", "description": "Text input > ISO 8601 date and time", "details": {"Label": "Creation date", "Slug": "created", "Required": "false", "Can have default value": "true", "Filter code method": "Raindrop.raindrop.setCreated(string: created)"}}], "filter_code": NaN}
{"original_description": "Flash all of your Hue light bulbs if your abode alarm activates for any reason.", "trigger_channel": "abode", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "abode.alarm_triggered"}, "trigger_details": [{"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Abode.alarmTriggered.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Alarm type\nType of alarm triggered.", "description": "Type of alarm triggered.", "details": {"Slug": "alarm_type", "Filter code": "Abode.alarmTriggered.AlarmType", "Type": "String", "Example": "Fire Alarm Triggered"}}, {"section": "Ingredients", "title": "Device name\nName of device whose alarm is triggered.", "description": "Name of device whose alarm is triggered.", "details": {"Slug": "device_name", "Filter code": "Abode.alarmTriggered.DeviceName", "Type": "String", "Example": "abode Gateway Alarm"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Want to keep an eye on LGBT rights in your state? Enter your state as the keyword when you set  up the Applet — if there's a new post mentioning it on hrc.org, you'll get an email. Want to track more than one state? You can set up multiple versions!", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item_matches"}, "trigger_details": [{"section": "Trigger fields", "title": "Query\nText input > Other", "description": "Text input > Other", "details": {"Label": "Keyword or simple phrase", "Helper text": "Search operators are not supported", "Slug": "query", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItemMatches.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItemMatches.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItemMatches.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItemMatches.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItemMatches.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItemMatches.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItemMatches.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItemMatches.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Email", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "email.send_me_email", "Filter code method": "Email.sendMeEmail.skip(string?: reason)", "Runtime method": "runAction(\"email.send_me_email\", {})"}, "action_details": [{"section": "Action fields", "title": "Subject\nText input > Title", "description": "Text input > Title", "details": {"Label": "Subject", "Slug": "subject", "Required": "true", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setSubject(string: subject)"}}, {"section": "Action fields", "title": "Body\nText input > HTML", "description": "Text input > HTML", "details": {"Label": "Body", "Slug": "body", "Required": "false", "Can have default value": "true", "Filter code method": "Email.sendMeEmail.setBody(string: body)"}}], "filter_code": NaN}
{"original_description": "毎日、指定した日時にBOCCOがリマインドします", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "BOCCO", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "bocco.bocco_speak", "Filter code method": "Bocco.boccoSpeak.skip(string?: reason)", "Runtime method": "runAction(\"bocco.bocco_speak\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "room", "Helper text": "Select room where you want to speak by BOCCO.", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Message\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Bocco.boccoSpeak.setMessage(string: message)"}}, {"section": "Action fields", "title": "Lang\nDropdown list", "description": "Dropdown list", "details": {"Label": "lang", "Slug": "lang", "Required": "true", "Can have default value": "true", "Filter code method": "Bocco.boccoSpeak.setLang(string: lang)"}}], "filter_code": NaN}
{"original_description": "When the Litter-Robot is full, turn the Philips Hue lighting to purple", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "Turn your audio and TV appliances of via Logitec Harmony while activating your NIko Home Control routines", "trigger_channel": "Niko Home Control", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nikohomecontrol.routine_activated"}, "trigger_details": [{"section": "Trigger fields", "title": "Routine\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Routine will be the trigger?", "Helper text": "Select the Routine which will trigger an action when it is activated", "Slug": "routine", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Nikohomecontrol.routineActivated.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Routine\nThe Routine which was activated.", "description": "The Routine which was activated.", "details": {"Slug": "routine", "Filter code": "Nikohomecontrol.routineActivated.Routine", "Type": "String", "Example": "Party"}}], "action_channel": "Harmony", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "harmony.end-activity", "Filter code method": "Harmony.endActivity.skip(string?: reason)", "Runtime method": "runAction(\"harmony.end-activity\", {})"}, "action_details": [{"section": "Action fields", "title": "Activity\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which activity?", "Helper text": "Activities that include locks are not supported", "Slug": "activity", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When there appears a new popular article in a specified section of the New York Times, let Homey announce this as your personal news anchor.", "trigger_channel": "The New York Times", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "nytimes.any_new_popular_article_today"}, "trigger_details": [{"section": "Trigger fields", "title": "Section\nDropdown list", "description": "Dropdown list", "details": {"Label": "Section", "Slug": "section", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title", "description": "", "details": {"Slug": "Title", "Filter code": "Nytimes.anyNewPopularArticleToday.Title", "Type": "String", "Example": "In a fish tank, 'Algae is the worst'"}}, {"section": "Ingredients", "title": "Author\nThe author of the article", "description": "The author of the article", "details": {"Slug": "Author", "Filter code": "Nytimes.anyNewPopularArticleToday.Author", "Type": "String", "Example": "Alexander P. Tibbets"}}, {"section": "Ingredients", "title": "Blurb", "description": "", "details": {"Slug": "Blurb", "Filter code": "Nytimes.anyNewPopularArticleToday.Blurb", "Type": "String", "Example": "This article was written to keep you informed."}}, {"section": "Ingredients", "title": "Article url\nURL to the article", "description": "URL to the article", "details": {"Slug": "ArticleUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ArticleUrl", "Type": "String", "Example": "http://www.nytimes.com/2013/06/19/world/americas/algae-is-the-worst.html"}}, {"section": "Ingredients", "title": "Image url\nURL to the largest available image file.", "description": "URL to the largest available image file.", "details": {"Slug": "ImageUrl", "Filter code": "Nytimes.anyNewPopularArticleToday.ImageUrl", "Type": "String", "Example": "http://graphics8.nytimes.com/images/2013/06/19/world/DIPLO/DIPLO-superJumbo.jpg"}}, {"section": "Ingredients", "title": "Section", "description": "", "details": {"Slug": "Section", "Filter code": "Nytimes.anyNewPopularArticleToday.Section", "Type": "String", "Example": "Sports"}}, {"section": "Ingredients", "title": "Source\nThe source of the article", "description": "The source of the article", "details": {"Slug": "Source", "Filter code": "Nytimes.anyNewPopularArticleToday.Source", "Type": "String", "Example": "AP"}}, {"section": "Ingredients", "title": "Published date\nDate and time the article was published.", "description": "Date and time the article was published.", "details": {"Slug": "PublishedDate", "Filter code": "Nytimes.anyNewPopularArticleToday.PublishedDate", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Homey", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "homey.let_homey_speak", "Filter code method": "Homey.letHomeySpeak.skip(string?: reason)", "Runtime method": "runAction(\"homey.let_homey_speak\", {})"}, "action_details": [{"section": "Action fields", "title": "Which homey\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Homey?", "Slug": "which_homey", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "What text\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What text?", "Slug": "what_text", "Required": "true", "Can have default value": "true", "Filter code method": "Homey.letHomeySpeak.setWhat Text(string: what_text)"}}], "filter_code": NaN}
{"original_description": "This applet turns off your Hue light when Withings Sleep detects that you get into bed.\n", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "This applet turns off your Yeelight when Withings Sleep detects that you get into bed.", "trigger_channel": "Withings Sleep", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "WithingsSleep.bedin"}, "trigger_details": [{"section": "Trigger fields", "title": "Start date\nDropdown list", "description": "Dropdown list", "details": {"Label": "Start time", "Helper text": "Set the start time for when this applet should be activated so, for example, your cat can’t accidentally trigger a response.", "Slug": "start_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "End date\nDropdown list", "description": "Dropdown list", "details": {"Label": "End time", "Helper text": "Set the end time for when this applet should be deactivated.", "Slug": "end_date", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which sensor do you want to use?", "Helper text": "If you have more than one sensor linked to your Withings Health Mate account, you can select which one you want to use.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Device user\nUsername associated to the Withings Sleep", "description": "Username associated to the Withings Sleep", "details": {"Slug": "device_mac", "Filter code": "WithingsSleep.bedin.DeviceUser", "Type": "String", "Example": "Bed in has been detected by Tom's Withings Sleep"}}, {"section": "Ingredients", "title": "Dateand time\nDate and time when you got in bed", "description": "Date and time when you got in bed", "details": {"Slug": "time", "Filter code": "WithingsSleep.bedin.DateandTime", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Yeelight", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "yeelight.on_off", "Filter code method": "Yeelight.onOff.skip(string?: reason)", "Runtime method": "runAction(\"yeelight.on_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "device_id", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "On off option\nDropdown list", "description": "Dropdown list", "details": {"Label": "On, off or toggle?", "Slug": "on_off_option", "Required": "true", "Can have default value": "true", "Filter code method": "Yeelight.onOff.setOn Off Option(string: on_off_option)"}}], "filter_code": NaN}
{"original_description": "When the radon levels reach a level above 100, turn my hue lights red so I can get in some fresh air.", "trigger_channel": "Airthings", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "airthings.radon-above"}, "trigger_details": [{"section": "Trigger fields", "title": "Unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Measurement unit", "Helper text": "What unit of measurement would you like to receive your radon levels in?", "Slug": "unit", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "The device you would like to get radon levels from.", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Threshold\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "Threshold", "Slug": "threshold", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Airthings.radonAbove.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Radon level\nThe radon level. In the measurement unit specified.", "description": "The radon level. In the measurement unit specified.", "details": {"Slug": "value", "Filter code": "Airthings.radonAbove.RadonLevel", "Type": "String", "Example": "120"}}, {"section": "Ingredients", "title": "Measurement unit\nThe unit of measurement used for radon, Bq/m3 or pCi/L.", "description": "The unit of measurement used for radon, Bq/m3 or pCi/L.", "details": {"Slug": "unit", "Filter code": "Airthings.radonAbove.MeasurementUnit", "Type": "String", "Example": "Bq/m3"}}, {"section": "Ingredients", "title": "Device\nName of the device.", "description": "Name of the device.", "details": {"Slug": "device", "Filter code": "Airthings.radonAbove.Device", "Type": "String", "Example": "Home - Living Room"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.set_color_all_hue", "Filter code method": "Hue.setColorAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Color\nText input > Other", "description": "Text input > Other", "details": {"Label": "Color value or name", "Helper text": "Accepts color names or CSS hex codes", "Slug": "color", "Required": "true", "Can have default value": "true", "Filter code method": "Hue.setColorAllHue.setColor(string: color)"}}], "filter_code": NaN}
{"original_description": "When the Litter-Robot cycles, send over the Roomba to vacuum", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "iRobot", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "irobot.clean_by_room", "Filter code method": "Irobot.cleanByRoom.skip(string?: reason)", "Runtime method": "runAction(\"irobot.clean_by_room\", {})"}, "action_details": [{"section": "Action fields", "title": "Room info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which room would you like to clean?", "Slug": "room_info", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Press the iH button on your iHome device to set your Nest Temperature.", "trigger_channel": "iHome Enhance", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "ihome_enhance.enhance_button"}, "trigger_details": [{"section": "Trigger fields", "title": "Button name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Button Name", "Slug": "button_name", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Press\nDropdown list", "description": "Dropdown list", "details": {"Label": "Short or Long Press", "Slug": "press", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "IhomeEnhance.enhanceButton.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Button name\nThis the name of the iHome Enhance Button as defined in your mobile app.", "description": "This the name of the iHome Enhance Button as defined in your mobile app.", "details": {"Slug": "button_name", "Filter code": "IhomeEnhance.enhanceButton.ButtonName", "Type": "String", "Example": "iBT297 Smart Button"}}, {"section": "Ingredients", "title": "Time\nTime that event was created", "description": "Time that event was created", "details": {"Slug": "time", "Filter code": "IhomeEnhance.enhanceButton.Time", "Type": "String", "Example": "04:47:33 PM"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": NaN}
{"original_description": "Send automated birthday wishes via phone call. Better than E-Mail :-)", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_year_on"}, "trigger_details": [{"section": "Trigger fields", "title": "Datetime\nText input", "description": "Text input", "details": {"Label": "Date and time", "Slug": "datetime", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyYearOn.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "woopla phone calls", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "woopla.tts_call_any", "Filter code method": "Woopla.ttsCallAny.skip(string?: reason)", "Runtime method": "runAction(\"woopla.tts_call_any\", {})"}, "action_details": [{"section": "Action fields", "title": "Tts\nText input > Long text", "description": "Text input > Long text", "details": {"Label": "Text", "Helper text": "Enter the text to be played when call connects.", "Slug": "tts", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCallAny.setTts(string: tts)"}}, {"section": "Action fields", "title": "Language\nDropdown list", "description": "Dropdown list", "details": {"Label": "Language", "Helper text": "Select text's language.", "Slug": "language", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCallAny.setLanguage(string: language)"}}, {"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone Number", "Helper text": "The phone number to call. International dialing format. Prefix with +. No zeros. Example: +4917098765432", "Slug": "phone_number", "Required": "true", "Can have default value": "true", "Filter code method": "Woopla.ttsCallAny.setPhone Number(string: phone_number)"}}], "filter_code": NaN}
{"original_description": "In addition to your LifeShield alarm siren, you can blink the Hue lights as a visual alert when an alarm is going off. You may select a specific alarm type or all alarm events. For all alarm events, specify '(All)' for the Event Type. Next, select by name which Hue lights to blink. ", "trigger_channel": "Blue by ADT", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "bluebyadt.alarm"}, "trigger_details": [{"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type?", "Slug": "event_type", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Timestamp\nDate and time alarm occurred.", "description": "Date and time alarm occurred.", "details": {"Slug": "timestamp", "Filter code": "Bluebyadt.alarm.Timestamp", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Event type\nThe EventType describes the type of alarm that occurred.", "description": "The EventType describes the type of alarm that occurred.", "details": {"Slug": "event_type", "Filter code": "Bluebyadt.alarm.EventType", "Type": "String", "Example": "Fire"}}, {"section": "Ingredients", "title": "Formatted message\nThe FormattedMessage provides a user-friendly description of the event", "description": "The FormattedMessage provides a user-friendly description of the event", "details": {"Slug": "formatted_message", "Filter code": "Bluebyadt.alarm.FormattedMessage", "Type": "String", "Example": "Medical Alarm"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.blink_all_hue", "Filter code method": "Hue.blinkAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.blink_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Play Stream", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_stream", "Filter code method": "Sonos.playStream.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_stream\", {})"}, "action_details": [{"section": "Action fields", "title": "Url\nText input > Link", "description": "Text input > Link", "details": {"Label": "What do you want to play?", "Helper text": "Enter the URL of the audio stream you want to play", "Slug": "url", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playStream.setUrl(string: url)"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Name\nText input > Title", "description": "Text input > Title", "details": {"Label": "What name do you want to show for this stream?", "Slug": "name", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.playStream.setName(string: name)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "What image do you want to show for this stream?", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.playStream.setImage Url(string: image_url)"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playStream.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Press this button to buy/sell stocks. You can customize which stock to buy or sell and set the quantity.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.place_market_order", "Filter code method": "Alpaca.placeMarketOrder.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.place_market_order\", {})"}, "action_details": [{"section": "Action fields", "title": "Symbol\nText input > Title", "description": "Text input > Title", "details": {"Label": "Symbol", "Helper text": "The symbol to place the order for.", "Slug": "symbol", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSymbol(string: symbol)"}}, {"section": "Action fields", "title": "Side\nDropdown list", "description": "Dropdown list", "details": {"Label": "Side", "Helper text": "The side to place the order for.", "Slug": "side", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setSide(string: side)"}}, {"section": "Action fields", "title": "Qty\nText input > Title", "description": "Text input > Title", "details": {"Label": "Quantity", "Helper text": "The number of shares to place the order for.", "Slug": "qty", "Required": "true", "Can have default value": "true", "Filter code method": "Alpaca.placeMarketOrder.setQty(string: qty)"}}], "filter_code": NaN}
{"original_description": "Turn off your lights when it is time for bed", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "TP-Link Kasa", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "kasa.turn_off", "Filter code method": "Kasa.turnOff.skip(string?: reason)", "Runtime method": "runAction(\"kasa.turn_off\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Device", "Helper text": "Select a device from your account to turn off", "Slug": "device", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "When your August lock is engaged, your Blink System is armed", "trigger_channel": "August", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "augusthome.lock_locked"}, "trigger_details": [{"section": "Trigger fields", "title": "Which lock\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lock?", "Helper text": "Format w/ house name and lock name", "Slug": "which_lock", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Locked at\nDate and time lock was locked.", "description": "Date and time lock was locked.", "details": {"Slug": "created_at", "Filter code": "Augusthome.lockLocked.LockedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "User\nThe user who locked the lock.", "description": "The user who locked the lock.", "details": {"Slug": "user", "Filter code": "Augusthome.lockLocked.User", "Type": "String", "Example": "John Smith"}}, {"section": "Ingredients", "title": "Lock name\nThe name of the lock.", "description": "The name of the lock.", "details": {"Slug": "lock_name", "Filter code": "Augusthome.lockLocked.LockName", "Type": "String", "Example": "Front Door"}}, {"section": "Ingredients", "title": "House name\nThe name of the house associated with the lock.", "description": "The name of the house associated with the lock.", "details": {"Slug": "house_name", "Filter code": "Augusthome.lockLocked.HouseName", "Type": "String", "Example": "San Diego beach house"}}, {"section": "Ingredients", "title": "User photo\nAn image url to the profile photo of the user who locked the lock.", "description": "An image url to the profile photo of the user who locked the lock.", "details": {"Slug": "user_photo", "Filter code": "Augusthome.lockLocked.UserPhoto", "Type": "Image URL", "Example": "blah.com"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Save energy by making sure that your hue lights are off at midnight each night.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.turn_off_all_hue", "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Set an everyday cleaning cycle for your Neato Robot using your calendar", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Neato", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "neato.start_cleaning", "Filter code method": "Neato.startCleaning.skip(string?: reason)", "Runtime method": "runAction(\"neato.start_cleaning\", {})"}, "action_details": [{"section": "Action fields", "title": "Select a robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Select a robot", "Slug": "select_a_robot", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Tell Ambi Climate you're feeling comfortable via button, either through your mobile or smart watch.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Ambi Climate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ambiclimate.feedback", "Filter code method": "Ambiclimate.feedback.skip(string?: reason)", "Runtime method": "runAction(\"ambiclimate.feedback\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Feedback\nDropdown list", "description": "Dropdown list", "details": {"Label": "feedback", "Slug": "feedback", "Required": "true", "Can have default value": "true", "Filter code method": "Ambiclimate.feedback.setFeedback(string: feedback)"}}], "filter_code": NaN}
{"original_description": "Whenever you \"Share\" something via Pocket, it'll go straight to your Buffer Queue.", "trigger_channel": "Pocket", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "pocket.new_tagged_item_pocket"}, "trigger_details": [{"section": "Trigger fields", "title": "Tag\nText input > Other", "description": "Text input > Other", "details": {"Label": "Single tag", "Slug": "tag", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Title\nThe item's title.", "description": "The item's title.", "details": {"Slug": "Title", "Filter code": "Pocket.newTaggedItemPocket.Title", "Type": "String", "Example": "My first blog post"}}, {"section": "Ingredients", "title": "Url\nThe item's URL.", "description": "The item's URL.", "details": {"Slug": "Url", "Filter code": "Pocket.newTaggedItemPocket.Url", "Type": "String", "Example": "http://blog.ifttt.com"}}, {"section": "Ingredients", "title": "Excerpt\nThe item's excerpt.", "description": "The item's excerpt.", "details": {"Slug": "Excerpt", "Filter code": "Pocket.newTaggedItemPocket.Excerpt", "Type": "String", "Example": "This is an article about something cool."}}, {"section": "Ingredients", "title": "Image url\nA URL to this item's image.", "description": "A URL to this item's image.", "details": {"Slug": "ImageUrl", "Filter code": "Pocket.newTaggedItemPocket.ImageUrl", "Type": "String", "Example": "http://blogs.seattleweekly.com/reverb/assets_c/2012/07/the%20cure-thumb-500x330.jpg"}}, {"section": "Ingredients", "title": "Tags\nThe item's tags, comma separated.", "description": "The item's tags, comma separated.", "details": {"Slug": "Tags", "Filter code": "Pocket.newTaggedItemPocket.Tags", "Type": "String", "Example": "neato, cool, video"}}, {"section": "Ingredients", "title": "Added at\nDate and time item was added.", "description": "Date and time item was added.", "details": {"Slug": "AddedAt", "Filter code": "Pocket.newTaggedItemPocket.AddedAt", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Buffer", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "buffer.add_to_buffer", "Filter code method": "Buffer.addToBuffer.skip(string?: reason)", "Runtime method": "runAction(\"buffer.add_to_buffer\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Update", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "Buffer.addToBuffer.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Tell Ambi Climate you're feeling cold via button, either through your mobile or smart watch.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Ambi Climate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ambiclimate.feedback", "Filter code method": "Ambiclimate.feedback.skip(string?: reason)", "Runtime method": "runAction(\"ambiclimate.feedback\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Feedback\nDropdown list", "description": "Dropdown list", "details": {"Label": "feedback", "Slug": "feedback", "Required": "true", "Can have default value": "true", "Filter code method": "Ambiclimate.feedback.setFeedback(string: feedback)"}}], "filter_code": NaN}
{"original_description": "Tell Ambi Climate you're feeling hot via button, either through your mobile or smart watch.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Ambi Climate", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "ambiclimate.feedback", "Filter code method": "Ambiclimate.feedback.skip(string?: reason)", "Runtime method": "runAction(\"ambiclimate.feedback\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Feedback\nDropdown list", "description": "Dropdown list", "details": {"Label": "feedback", "Slug": "feedback", "Required": "true", "Can have default value": "true", "Filter code method": "Ambiclimate.feedback.setFeedback(string: feedback)"}}], "filter_code": NaN}
{"original_description": "Volume Down", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.increase_volume", "Filter code method": "Sonos.increaseVolume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.increase_volume\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to change the volume?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Change volume for this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.increaseVolume.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Receive an Android SMS when the Litter-Robot waste drawer is full", "trigger_channel": "Litter-Robot by Whisker", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "whisker.lr3_events"}, "trigger_details": [{"section": "Trigger fields", "title": "Litter robot\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Litter-Robot?", "Slug": "litter_robot", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Event type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Event Type", "Slug": "event_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Whisker.lr3Events.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Litter robot name\nThe name of your litter robot.", "description": "The name of your litter robot.", "details": {"Slug": "litter_robot_name", "Filter code": "Whisker.lr3Events.LitterRobotName", "Type": "String", "Example": "My Litter Robot"}}], "action_channel": "Android SMS", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "android_messages.send_a_message", "Filter code method": "AndroidMessages.sendAMessage.skip(string?: reason)", "Runtime method": "runAction(\"android_messages.send_a_message\", {})"}, "action_details": [{"section": "Action fields", "title": "Phone number\nText input > Other", "description": "Text input > Other", "details": {"Label": "Phone number", "Helper text": "Experiment with including or excluding the country code depending on your device and carrier settings.", "Slug": "phone_number", "Required": "true", "Can have default value": "true"}}, {"section": "Action fields", "title": "Text\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "text", "Required": "true", "Can have default value": "true", "Filter code method": "AndroidMessages.sendAMessage.setText(string: text)"}}], "filter_code": NaN}
{"original_description": "Arms Blink Security System when the Hubitat mode changes.", "trigger_channel": "Hubitat", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hubitat.trigger_mode"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe new mode.", "description": "The new mode.", "details": {"Slug": "val", "Filter code": "Hubitat.triggerMode.Mode", "Type": "String", "Example": "Day"}}, {"section": "Ingredients", "title": "Changed at\nDate/Time the mode changed.", "description": "Date/Time the mode changed.", "details": {"Slug": "time", "Filter code": "Hubitat.triggerMode.ChangedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Arms Arlo when the Hubitat mode changes.", "trigger_channel": "Hubitat", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hubitat.trigger_mode"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe new mode.", "description": "The new mode.", "details": {"Slug": "val", "Filter code": "Hubitat.triggerMode.Mode", "Type": "String", "Example": "Day"}}, {"section": "Ingredients", "title": "Changed at\nDate/Time the mode changed.", "description": "Date/Time the mode changed.", "details": {"Slug": "time", "Filter code": "Hubitat.triggerMode.ChangedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Arlo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "arlo.arm", "Filter code method": "Arlo.arm.skip(string?: reason)", "Runtime method": "runAction(\"arlo.arm\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Disarms Blink Security System when the Hubitat mode changes.", "trigger_channel": "Hubitat", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hubitat.trigger_mode"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe new mode.", "description": "The new mode.", "details": {"Slug": "val", "Filter code": "Hubitat.triggerMode.Mode", "Type": "String", "Example": "Day"}}, {"section": "Ingredients", "title": "Changed at\nDate/Time the mode changed.", "description": "Date/Time the mode changed.", "details": {"Slug": "time", "Filter code": "Hubitat.triggerMode.ChangedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Disarms Arlo when the Hubitat mode changes.", "trigger_channel": "Hubitat", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "hubitat.trigger_mode"}, "trigger_details": [{"section": "Trigger fields", "title": "Mode\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which mode?", "Slug": "mode", "Required": "true", "Can have default value": "false"}}, {"section": "Ingredients", "title": "Mode\nThe new mode.", "description": "The new mode.", "details": {"Slug": "val", "Filter code": "Hubitat.triggerMode.Mode", "Type": "String", "Example": "Day"}}, {"section": "Ingredients", "title": "Changed at\nDate/Time the mode changed.", "description": "Date/Time the mode changed.", "details": {"Slug": "time", "Filter code": "Hubitat.triggerMode.ChangedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Arlo", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "arlo.disarm", "Filter code method": "Arlo.disarm.skip(string?: reason)", "Runtime method": "runAction(\"arlo.disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Device name\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "device_name", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Receive notifications whenever there is news about the Tokyo Olympics.", "trigger_channel": "RSS Feed", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "feed.new_feed_item"}, "trigger_details": [{"section": "Trigger fields", "title": "Feed url\nText input > Other", "description": "Text input > Other", "details": {"Label": "Feed URL", "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>", "Slug": "feed_url", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Entry title\nThe entry's title.", "description": "The entry's title.", "details": {"Slug": "EntryTitle", "Filter code": "Feed.newFeedItem.EntryTitle", "Type": "String", "Example": "Launch Day!"}}, {"section": "Ingredients", "title": "Entry url\nThe entry's URL.", "description": "The entry's URL.", "details": {"Slug": "EntryUrl", "Filter code": "Feed.newFeedItem.EntryUrl", "Type": "String", "Example": "http://blog.ifttt.com/coming-soon"}}, {"section": "Ingredients", "title": "Entry author\nThe entry's author name.", "description": "The entry's author name.", "details": {"Slug": "EntryAuthor", "Filter code": "Feed.newFeedItem.EntryAuthor", "Type": "String", "Example": "Linden Tibbets"}}, {"section": "Ingredients", "title": "Entry content\nThe entry's content, may contain HTML.", "description": "The entry's content, may contain HTML.", "details": {"Slug": "EntryContent", "Filter code": "Feed.newFeedItem.EntryContent", "Type": "String", "Example": "Well here we are on, blah, blah..."}}, {"section": "Ingredients", "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.", "details": {"Slug": "EntryImageUrl", "Filter code": "Feed.newFeedItem.EntryImageUrl", "Type": "String", "Example": "http://ifttt.com/images/no_image_card.png"}}, {"section": "Ingredients", "title": "Entry published\nDate entry was created.", "description": "Date entry was created.", "details": {"Slug": "EntryPublished", "Filter code": "Feed.newFeedItem.EntryPublished", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Feed title\nThe title of the feed.", "description": "The title of the feed.", "details": {"Slug": "FeedTitle", "Filter code": "Feed.newFeedItem.FeedTitle", "Type": "String", "Example": "ifttt Blog"}}, {"section": "Ingredients", "title": "Feed url\nURL to the feed's regular page.", "description": "URL to the feed's regular page.", "details": {"Slug": "FeedUrl", "Filter code": "Feed.newFeedItem.FeedUrl", "Type": "String", "Example": "http://blog.ifttt.com/"}}], "action_channel": "Notifications", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "if_notifications.send_rich_notification", "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)", "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input", "description": "Text input", "details": {"Label": "Message", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"}}, {"section": "Action fields", "title": "Title\nText input > Document title", "description": "Text input > Document title", "details": {"Label": "Title", "Helper text": "Optional, bold text above the message", "Slug": "title", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"}}, {"section": "Action fields", "title": "Link url\nText input > Link", "description": "Text input > Link", "details": {"Label": "Link URL", "Helper text": "Optional, link may open in a browser or installed app", "Slug": "link_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"}}, {"section": "Action fields", "title": "Image url\nText input > Photo", "description": "Text input > Photo", "details": {"Label": "Image URL", "Helper text": "Optional", "Slug": "image_url", "Required": "false", "Can have default value": "true", "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"}}], "filter_code": NaN}
{"original_description": "Quand je reçois un SMS sur mon Smartphone il est affiché sur l'écran où est branché ma Bbox Miami.", "trigger_channel": "Android SMS", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "android_messages.received_a_message"}, "trigger_details": [{"section": "Ingredients", "title": "Contact name\nThe contact name associated with the message.", "description": "The contact name associated with the message.", "details": {"Slug": "ContactName", "Filter code": "AndroidMessages.receivedAMessage.ContactName", "Type": "String", "Example": "Jon Snow"}}, {"section": "Ingredients", "title": "Text\nThe text of the message", "description": "The text of the message", "details": {"Slug": "Text", "Filter code": "AndroidMessages.receivedAMessage.Text", "Type": "String", "Example": "Hey there! How's it going?"}}, {"section": "Ingredients", "title": "Occurred at\nThe time the message was received.", "description": "The time the message was received.", "details": {"Slug": "OccurredAt", "Filter code": "AndroidMessages.receivedAMessage.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "From number\nThe number that sent the message", "description": "The number that sent the message", "details": {"Slug": "FromNumber", "Filter code": "AndroidMessages.receivedAMessage.FromNumber", "Type": "String", "Example": "14155551234"}}, {"section": "Ingredients", "title": "Device name\nThe name of the device on which the event occurred.", "description": "The name of the device on which the event occurred.", "details": {"Slug": "device_name", "Filter code": "AndroidMessages.receivedAMessage.DeviceName", "Type": "String", "Example": "Google Pixel 7"}}], "action_channel": "Bbox Miami", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "bbox_miami.send_toast", "Filter code method": "BboxMiami.sendToast.skip(string?: reason)", "Runtime method": "runAction(\"bbox_miami.send_toast\", {})"}, "action_details": [{"section": "Action fields", "title": "Message\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "What message would you like to send?", "Helper text": "This message will be sent to your Bbox Miami", "Slug": "message", "Required": "true", "Can have default value": "true", "Filter code method": "BboxMiami.sendToast.setMessage(string: message)"}}], "filter_code": NaN}
{"original_description": "Pause", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.pause", "Filter code method": "Sonos.pause.skip(string?: reason)", "Runtime method": "runAction(\"sonos.pause\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to pause?", "Helper text": "Select room. The group containing this room will pause playback.", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Pause entire household?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.pause.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Play Favorite", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.play_favorite", "Filter code method": "Sonos.playFavorite.skip(string?: reason)", "Runtime method": "runAction(\"sonos.play_favorite\", {})"}, "action_details": [{"section": "Action fields", "title": "Favorite\nDropdown list", "description": "Dropdown list", "details": {"Label": "What favorite do you want to play?", "Helper text": "Choose a Sonos Favorite", "Slug": "favorite", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to play?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Play in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.playFavorite.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Resume", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.resume", "Filter code method": "Sonos.resume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.resume\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to resume?", "Helper text": "Select room. The group containing this room will resume playback.", "Slug": "room", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Volume Up", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.increase_volume", "Filter code method": "Sonos.increaseVolume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.increase_volume\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to change the volume?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Change volume for this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.increaseVolume.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Mute", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.mute", "Filter code method": "Sonos.mute.skip(string?: reason)", "Runtime method": "runAction(\"sonos.mute\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to mute?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Mute in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.mute.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Skip to next track", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.next_track", "Filter code method": "Sonos.nextTrack.skip(string?: reason)", "Runtime method": "runAction(\"sonos.next_track\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to skip?", "Helper text": "Select room. The group containing this room will skip to the next track.", "Slug": "room", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Flicボタンをダブルクリックすると、風景をランダムに切り替えます。", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Atmoph", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "atmoph.change_view", "Filter code method": "Atmoph.changeView.skip(string?: reason)", "Runtime method": "runAction(\"atmoph.change_view\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Flicボタンを長押しすると、Atmoph Window にカレンダーを表示します。もう一度長押しすると消えます。", "trigger_channel": "Flic", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "flic.click"}, "trigger_details": [{"section": "Trigger fields", "title": "Button uuid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Name", "Helper text": "The name of the Flic you want to trigger.", "Slug": "button_uuid", "Required": "true", "Can have default value": "false"}}, {"section": "Trigger fields", "title": "Click type\nDropdown list", "description": "Dropdown list", "details": {"Label": "Flic Click Type", "Slug": "click_type", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Longitude\nLongitude of the button press.", "description": "Longitude of the button press.", "details": {"Slug": "longitude", "Filter code": "Flic.click.Longitude", "Type": "String", "Example": "18.0649000"}}, {"section": "Ingredients", "title": "Latitude\nLatitude of the button press.", "description": "Latitude of the button press.", "details": {"Slug": "latitude", "Filter code": "Flic.click.Latitude", "Type": "String", "Example": "59.3325800"}}, {"section": "Ingredients", "title": "Clicked at\nDate and time Flic was clicked.", "description": "Date and time Flic was clicked.", "details": {"Slug": "created_at", "Filter code": "Flic.click.ClickedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.", "description": "The click type of the event: 'click', 'double_click' or 'hold'.", "details": {"Slug": "click_type", "Filter code": "Flic.click.ClickType", "Type": "String", "Example": "double_click"}}], "action_channel": "Atmoph", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "atmoph.show_calendar", "Filter code method": "Atmoph.showCalendar.skip(string?: reason)", "Runtime method": "runAction(\"atmoph.show_calendar\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "Set Volume", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.set_volume", "Filter code method": "Sonos.setVolume.skip(string?: reason)", "Runtime method": "runAction(\"sonos.set_volume\", {})"}, "action_details": [{"section": "Action fields", "title": "Volume\nText input > Other", "description": "Text input > Other", "details": {"Label": "What level do want the volume to be?", "Helper text": "It doesn't just go to 11. It goes way beyond 11 - enter any value between 0 (total silence) and 100 (maximum overdrive)", "Slug": "volume", "Required": "true", "Can have default value": "true", "Filter code method": "Sonos.setVolume.setVolume(string: volume)"}}, {"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to set the volume?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Set the volume for this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.setVolume.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Unmute", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Sonos", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "sonos.mute", "Filter code method": "Sonos.mute.skip(string?: reason)", "Runtime method": "runAction(\"sonos.mute\", {})"}, "action_details": [{"section": "Action fields", "title": "Room\nDropdown list", "description": "Dropdown list", "details": {"Label": "Where do you want to mute?", "Helper text": "Select room", "Slug": "room", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Include grouped rooms\nDropdown list", "description": "Dropdown list", "details": {"Label": "Include grouped rooms?", "Helper text": "Mute in this room only, or include grouped rooms?", "Slug": "include_grouped_rooms", "Required": "false", "Can have default value": "true", "Filter code method": "Sonos.mute.setInclude Grouped Rooms(string: include_grouped_rooms)"}}], "filter_code": NaN}
{"original_description": "Set a Nest Thermostat to the temperature you specify.", "trigger_channel": "Knocki", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "knocki.knocki"}, "trigger_details": [{"section": "Trigger fields", "title": "Code\nText input > Regular expression", "description": "Text input > Regular expression", "details": {"Label": "ID", "Helper text": "Create a unique ID with no spaces. This ID is used to reference this trigger from the Knocki app.", "Slug": "code", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Knocki.knocki.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Device\nYour Device ID", "description": "Your Device ID", "details": {"Slug": "device", "Filter code": "Knocki.knocki.Device", "Type": "String", "Example": "KNC1-W-00000088"}}, {"section": "Ingredients", "title": "Gesture\nName of gesture", "description": "Name of gesture", "details": {"Slug": "gesture", "Filter code": "Knocki.knocki.Gesture", "Type": "String", "Example": "Triple Knock"}}, {"section": "Ingredients", "title": "Pattern\nGesture Pattern", "description": "Gesture Pattern", "details": {"Slug": "pattern", "Filter code": "Knocki.knocki.Pattern", "Type": "String", "Example": "***"}}], "action_channel": "Google Nest Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "google_nest_thermostat.set_hot_temperature", "Filter code method": "GoogleNestThermostat.setHotTemperature.skip(string?: reason)", "Runtime method": "runAction(\"google_nest_thermostat.set_hot_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Device\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Thermostat?", "Helper text": "Select your Nest Thermostat", "Slug": "device", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Temperature unit\nDropdown list", "description": "Dropdown list", "details": {"Label": "Celcius or Fahrenheit", "Helper text": "Select the unit of temperature", "Slug": "temperature_unit", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setTemperature Unit(string: temperature_unit)"}}, {"section": "Action fields", "title": "Degrees\nText input > Short text", "description": "Text input > Short text", "details": {"Label": "Temperature", "Helper text": "Temperature value", "Slug": "degrees", "Required": "true", "Can have default value": "true", "Filter code method": "GoogleNestThermostat.setHotTemperature.setDegrees(string: degrees)"}}], "filter_code": NaN}
{"original_description": "Good Morning!", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_day_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyDayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}], "action_channel": "Hager IoT", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hager_iot.run_scene", "Filter code method": "HagerIot.runScene.skip(string?: reason)", "Runtime method": "runAction(\"hager_iot.run_scene\", {})"}, "action_details": [{"section": "Action fields", "title": "Scene\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which scene?", "Slug": "scene", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Use this applet to run a Q Command to toggle a HUE Philips lamp", "trigger_channel": "Das Keyboard Q", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "daskeyboardq.deviceZoneAction"}, "trigger_details": [{"section": "Trigger fields", "title": "Pid\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which device?", "Slug": "pid", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Iot zone\nText input > Other", "description": "Text input > Other", "details": {"Label": "Which zone?", "Helper text": "The name of a zone that you created in Q Command Center", "Slug": "iot_zone", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Action\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which action?", "Helper text": "The action that is being sent", "Slug": "action", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Created at\nDate and time event was created.", "description": "Date and time event was created.", "details": {"Slug": "created_at", "Filter code": "Daskeyboardq.deviceZoneAction.CreatedAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}, {"section": "Ingredients", "title": "Zone name\nThe zone that is being controlled", "description": "The zone that is being controlled", "details": {"Slug": "iot_zone", "Filter code": "Daskeyboardq.deviceZoneAction.ZoneName", "Type": "String", "Example": "Living Room"}}, {"section": "Ingredients", "title": "Action value\nThe value that is being set.", "description": "The value that is being set.", "details": {"Slug": "action_value", "Filter code": "Daskeyboardq.deviceZoneAction.ActionValue", "Type": "String", "Example": "72"}}, {"section": "Ingredients", "title": "Device type\nThe type of device that was triggered.", "description": "The type of device that was triggered.", "details": {"Slug": "pid", "Filter code": "Daskeyboardq.deviceZoneAction.DeviceType", "Type": "String", "Example": "IOT_LIGHTING"}}, {"section": "Ingredients", "title": "Action type\nThe type of action that was triggered.", "description": "The type of action that was triggered.", "details": {"Slug": "action", "Filter code": "Daskeyboardq.deviceZoneAction.ActionType", "Type": "String", "Example": "set_value"}}], "action_channel": "Philips Hue", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "hue.toggle_all_hue", "Filter code method": "Hue.toggleAllHue.skip(string?: reason)", "Runtime method": "runAction(\"hue.toggle_all_hue\", {})"}, "action_details": [{"section": "Action fields", "title": "Lights\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which lights?", "Slug": "lights", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Press this button to cancel all orders that are currently open.", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Alpaca", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "alpaca.cancel_open_orders", "Filter code method": "Alpaca.cancelOpenOrders.skip(string?: reason)", "Runtime method": "runAction(\"alpaca.cancel_open_orders\", {})"}, "action_details": [], "filter_code": NaN}
{"original_description": "One-button widget/trigger to set a Nuheat thermostat to a user-defined temperature indefinitely. ", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "nVent Nuheat Signature Thermostat", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "nVent_Nuheat.set_temperature", "Filter code method": "NVentNuheat.setTemperature.skip(string?: reason)", "Runtime method": "runAction(\"nVent_Nuheat.set_temperature\", {})"}, "action_details": [{"section": "Action fields", "title": "Thermostat\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which thermostat?", "Helper text": "The thermostat to set the temperature for", "Slug": "thermostat", "Required": "true", "Can have default value": "false"}}, {"section": "Action fields", "title": "Scale\nDropdown list", "description": "Dropdown list", "details": {"Label": "What scale?", "Helper text": "Celsius or fahrenheit", "Slug": "scale", "Required": "true", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setScale(string: scale)"}}, {"section": "Action fields", "title": "Setpoint temperature\nText input > Other", "description": "Text input > Other", "details": {"Label": "What setpoint temperature?", "Helper text": "The setpoint temperature", "Slug": "setpoint_temperature", "Required": "true", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setSetpoint Temperature(string: setpoint_temperature)"}}, {"section": "Action fields", "title": "Duration\nDropdown list", "description": "Dropdown list", "details": {"Label": "What duration?", "Helper text": "The time to hold the temperature until", "Slug": "duration", "Required": "false", "Can have default value": "true", "Filter code method": "NVentNuheat.setTemperature.setDuration(string: duration)"}}], "filter_code": NaN}
{"original_description": "Button applet allows you to arm Blink. ", "trigger_channel": "Button widget", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "do_button.do_button_new_command_common"}, "trigger_details": [{"section": "Ingredients", "title": "Share url\nThe link to the Share page for the button press.", "description": "The link to the Share page for the button press.", "details": {"Slug": "ShareURL", "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL", "Type": "String", "Example": "https://ifttt.com/share/McFwJfDH9Ns"}}, {"section": "Ingredients", "title": "Latitude\nThe latitude of the location of the button press.", "description": "The latitude of the location of the button press.", "details": {"Slug": "Latitude", "Filter code": "DoButton.doButtonNewCommandCommon.Latitude", "Type": "String", "Example": "37.82666360000001"}}, {"section": "Ingredients", "title": "Longitude\nThe longitude of the location of the button press.", "description": "The longitude of the location of the button press.", "details": {"Slug": "Longitude", "Filter code": "DoButton.doButtonNewCommandCommon.Longitude", "Type": "String", "Example": "-122.42301220000003"}}, {"section": "Ingredients", "title": "Location map url\nThe link to the map of the location of the button press.", "description": "The link to the map of the location of the button press.", "details": {"Slug": "LocationMapURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL", "Type": "String", "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"}}, {"section": "Ingredients", "title": "Location map image url\nThe image of the map of the location of the button press.", "description": "The image of the map of the location of the button press.", "details": {"Slug": "LocationMapImageURL", "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL", "Type": "String", "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"}}, {"section": "Ingredients", "title": "Occurred at\nThe date and time you pressed the button.", "description": "The date and time you pressed the button.", "details": {"Slug": "OccurredAt", "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt", "Type": "Date with time (ISO8601)", "Example": "2020-07-08T04:17:06+05:00"}}], "action_channel": "Blink", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "blink.network_disarm", "Filter code method": "Blink.networkDisarm.skip(string?: reason)", "Runtime method": "runAction(\"blink.network_disarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Network\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which system?", "Helper text": "Select which system you would like to disarm.", "Slug": "network", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
{"original_description": "Turns off motion detection at the same time every weekday.", "trigger_channel": "Date & Time", "trigger_permission_id": "", "trigger_developer_info": {"API endpoint slug": "date_and_time.every_weekday_at"}, "trigger_details": [{"section": "Trigger fields", "title": "Time\nText input", "description": "Text input", "details": {"Label": "Time of day", "Slug": "time", "Required": "true", "Can have default value": "true"}}, {"section": "Trigger fields", "title": "Weekdays\nCheckboxes", "description": "Checkboxes", "details": {"Label": "Days of the week", "Slug": "weekdays", "Required": "true", "Can have default value": "true"}}, {"section": "Ingredients", "title": "Check time\nDate and time this trigger was checked.", "description": "Date and time this trigger was checked.", "details": {"Slug": "CheckTime", "Filter code": "DateAndTime.everyWeekdayAt.CheckTime", "Type": "String", "Example": "August 23, 2010 at 11:01PM"}}, {"section": "Ingredients", "title": "Day of week\nDay of the week this trigger was checked.", "description": "Day of the week this trigger was checked.", "details": {"Slug": "DayOfWeek", "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek", "Type": "String", "Example": "Friday"}}], "action_channel": "Wyze", "action_permission_id": "", "action_developer_info": {"API endpoint slug": "wyzecam.turn_off_alarm", "Filter code method": "Wyzecam.turnOffAlarm.skip(string?: reason)", "Runtime method": "runAction(\"wyzecam.turn_off_alarm\", {})"}, "action_details": [{"section": "Action fields", "title": "Serialize device info\nDropdown list", "description": "Dropdown list", "details": {"Label": "Which Device", "Slug": "serialize_device_info", "Required": "true", "Can have default value": "false"}}], "filter_code": NaN}
