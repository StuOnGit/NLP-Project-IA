[
  {
    "original_description": "When weather forecast plan rain, move down my shutters in domovea",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.tomorrows_forecast_calls_for"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Condition\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Condition",
          "Slug": "condition",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Tomorrows condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "tomorrows_condition",
          "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of tomorrow's condition.",
        "description": "The URL to an image of tomorrow's condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit",
        "description": "Tomorrow's high temperature in degrees Fahrenheit",
        "details": {
          "Slug": "high_temp_fahrenheit",
          "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius",
        "description": "Tomorrow's high temperature in degrees Celsius",
        "details": {
          "Slug": "high_temp_celsius",
          "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit",
        "description": "Tomorrow's low temperature in degrees Fahrenheit",
        "details": {
          "Slug": "low_temp_fahrenheit",
          "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius",
        "description": "Tomorrow's low temperature in degrees Celsius",
        "details": {
          "Slug": "low_temp_celsius",
          "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Tomorrows date\nTomorrow's date.",
        "description": "Tomorrow's date.",
        "details": {
          "Slug": "tomorrows_date",
          "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate",
          "Type": "Date (ISO8601)",
          "Example": "2020-07-07"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      }
    ],
    "action_channel": "domovea",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "domovea.shade_close",
      "Filter code method": "Domovea.shadeClose.skip(string?: reason)",
      "Runtime method": "runAction(\"domovea.shade_close\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which shades?",
          "Slug": "device_id",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "When Logitech Pop is pressed, turn on a light in domovea",
    "trigger_channel": "Logitech POP",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "logitech_pop.short_press"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Switch\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which button?",
          "Slug": "switch",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Trigger condition\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Trigger option?",
          "Slug": "trigger_condition",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Trigger source\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Trigger source?",
          "Slug": "trigger_source",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Button\nThis is the unique identifier of the pressed button.",
        "description": "This is the unique identifier of the pressed button.",
        "details": {
          "Slug": "button_id",
          "Filter code": "LogitechPop.shortPress.ButtonId",
          "Type": "String",
          "Example": "a0:e6:f8:8c:f5:33"
        }
      },
      {
        "section": "Ingredients",
        "title": "Battery\nThis is the current battery level of the pressed button.",
        "description": "This is the current battery level of the pressed button.",
        "details": {
          "Slug": "battery",
          "Filter code": "LogitechPop.shortPress.Battery",
          "Type": "String",
          "Example": "100"
        }
      },
      {
        "section": "Ingredients",
        "title": "Source\nThis is the trigger source, either a physical button or an app.",
        "description": "This is the trigger source, either a physical button or an app.",
        "details": {
          "Slug": "src",
          "Filter code": "LogitechPop.shortPress.Source",
          "Type": "String",
          "Example": "btn or app"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "created_at",
          "Filter code": "LogitechPop.shortPress.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Name\nName of the Logi Button.",
        "description": "Name of the Logi Button.",
        "details": {
          "Slug": "button_name",
          "Filter code": "LogitechPop.shortPress.Name",
          "Type": "String",
          "Example": "Living Room"
        }
      }
    ],
    "action_channel": "domovea",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "domovea.switch_on",
      "Filter code method": "Domovea.switchOn.skip(string?: reason)",
      "Runtime method": "runAction(\"domovea.switch_on\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which device?",
          "Slug": "device_id",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "TP-Link Kasa lights will turn fuschia when the Litter-Robot waste drawer is full.",
    "trigger_channel": "Litter-Robot by Whisker",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "whisker.lr3_events"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Litter robot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Litter-Robot?",
          "Slug": "litter_robot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Event type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Event Type",
          "Slug": "event_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Whisker.lr3Events.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Litter robot name\nThe name of your litter robot.",
        "description": "The name of your litter robot.",
        "details": {
          "Slug": "litter_robot_name",
          "Filter code": "Whisker.lr3Events.LitterRobotName",
          "Type": "String",
          "Example": "My Litter Robot"
        }
      }
    ],
    "action_channel": "TP-Link Kasa",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "kasa.change_color_temp",
      "Filter code method": "Kasa.changeColorTemp.skip(string?: reason)",
      "Runtime method": "runAction(\"kasa.change_color_temp\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Device",
          "Slug": "device",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Color temperature\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Color Temperature",
          "Slug": "color_temperature",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Kasa.changeColorTemp.setColor Temperature(string: color_temperature)"
        }
      },
      {
        "section": "Action fields",
        "title": "Kelvin\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Kelvin",
          "Helper text": "If set, kelvin value will override the color temperature.",
          "Slug": "kelvin",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Kasa.changeColorTemp.setKelvin(string: kelvin)"
        }
      },
      {
        "section": "Action fields",
        "title": "Transition duration\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Transition duration",
          "Helper text": "How long should it take for the lights to transition between colors.",
          "Slug": "transition_duration",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Kasa.changeColorTemp.setTransition Duration(string: transition_duration)"
        }
      },
      {
        "section": "Action fields",
        "title": "Advanced options\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Advanced options",
          "Helper text": "Provide custom options here. For example : &quot;color_temperature: cool; transition_duration: 3000” for cool and 3 seconds transition duration or “kelvin: 5000; transition_duration: 2000” for temperature of 5000K and 2 seconds transition duration",
          "Slug": "advanced_options",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Kasa.changeColorTemp.setAdvanced Options(string: advanced_options)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Commuting in Chicago? This Applet posts to a Slack channel of your choosing when there's an alert affecting the pink line during your weekday commute to work (7-10am).",
    "trigger_channel": "Chicago Transit Authority",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "cta.new_orange_line_alert"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Alert title\nThe alert's title.",
        "description": "The alert's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "Cta.newOrangeLineAlert.AlertTitle",
          "Type": "String",
          "Example": "Elevator at Cumberland Temporarily Out-of-Service (Elevator Status)"
        }
      },
      {
        "section": "Ingredients",
        "title": "Alert url\nThe alert's URL.",
        "description": "The alert's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "Cta.newOrangeLineAlert.AlertUrl",
          "Type": "String",
          "Example": "http://ift.tt/2q1oEoI"
        }
      },
      {
        "section": "Ingredients",
        "title": "Alert content\nThe alert's content.",
        "description": "The alert's content.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "Cta.newOrangeLineAlert.AlertContent",
          "Type": "String",
          "Example": "(Tue, May 9 2017 5:43 PM to TBD) The mezzanine-to-platform elevator at Cumberland (Blue Line) is temporarily out-of-service."
        }
      },
      {
        "section": "Ingredients",
        "title": "Alert published\nDate alert was created.",
        "description": "Date alert was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "Cta.newOrangeLineAlert.AlertPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Slack",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "slack.post_to_channel",
      "Filter code method": "Slack.postToChannel.skip(string?: reason)",
      "Runtime method": "runAction(\"slack.post_to_channel\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Channel\nNested dropdown list",
        "description": "Nested dropdown list",
        "details": {
          "Label": "Which channel?",
          "Slug": "channel",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Helper text": "Optional",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Title URL",
          "Helper text": "Optional",
          "Slug": "title_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"
        }
      },
      {
        "section": "Action fields",
        "title": "Image url\nText input > Photo",
        "description": "Text input > Photo",
        "details": {
          "Label": "Thumbnail URL",
          "Helper text": "Optional",
          "Slug": "image_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"
        }
      }
    ],
    "filter_code": "var Hour = Meta.currentUserTime.hour()\r\nvar Day = Meta.currentUserTime.day()\r\n\r\n// Skip outside of 7-10am\r\nif (Hour <7 || Hour > 10) {\r\n  Slack.postToChannel.skip(\"Outside of morning commuting hours\")\r\n}\r\n\r\n// Skip on weekends\r\nif (Day == 6 || Day == 7) {\r\n  Slack.postToChannel.skip(\"Not a weekday\")\r\n}\r\n\r\n\r\n"
  },
  {
    "original_description": "Huge fan of a particular Twitch user? Enter their username and track the channels they follow! You'll be sent a push notification and the channel information will be logged in a Google Drive spreadsheet when a new channel is followed by that user.",
    "trigger_channel": "Twitch",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "twitch.followed_new_channel"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Followed at\nDate and time you followed the Channel.",
        "description": "Date and time you followed the Channel.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Twitch.followedNewChannel.FollowedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Channel name\nThe name of the channel you followed.",
        "description": "The name of the channel you followed.",
        "details": {
          "Slug": "channel_name",
          "Filter code": "Twitch.followedNewChannel.ChannelName",
          "Type": "String",
          "Example": "Gaming Talk Shows"
        }
      },
      {
        "section": "Ingredients",
        "title": "Channel logo\nA url to the image of the channel logo.",
        "description": "A url to the image of the channel logo.",
        "details": {
          "Slug": "channel_logo",
          "Filter code": "Twitch.followedNewChannel.ChannelLogo",
          "Type": "Image URL",
          "Example": "twitch.com/"
        }
      },
      {
        "section": "Ingredients",
        "title": "Channel url\nThe URL to the channel on Twitch.",
        "description": "The URL to the channel on Twitch.",
        "details": {
          "Slug": "channel_url",
          "Filter code": "Twitch.followedNewChannel.ChannelUrl",
          "Type": "Web URL",
          "Example": "twitch.com/"
        }
      },
      {
        "section": "Ingredients",
        "title": "Follower count\nThe number of channel followers.",
        "description": "The number of channel followers.",
        "details": {
          "Slug": "channel_followers",
          "Filter code": "Twitch.followedNewChannel.FollowerCount",
          "Type": "String",
          "Example": "215780"
        }
      },
      {
        "section": "Ingredients",
        "title": "List of follows\nA URL to a list of the channels that you follow.",
        "description": "A URL to a list of the channels that you follow.",
        "details": {
          "Slug": "list_of_follows",
          "Filter code": "Twitch.followedNewChannel.ListOfFollows",
          "Type": "Web URL",
          "Example": "twitch.com/"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_notification",
      "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get an notification when the device's CO2 level exceeds the specified threshold, which is the average for 5 minutes.",
    "trigger_channel": "Huma-i",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "Huma_i.huma_carbon_dioxide_alert_trigger"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Huma-i?",
          "Helper text": "Humai Device",
          "Slug": "device_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Threshold\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which CO₂ threshold?",
          "Helper text": "CO₂ Level (AQI Base)",
          "Slug": "threshold",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "createdat",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Co2\nCO2",
        "description": "CO2",
        "details": {
          "Slug": "co2",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.Co2",
          "Type": "String",
          "Example": "CO2"
        }
      },
      {
        "section": "Ingredients",
        "title": "Voc\nVOC",
        "description": "VOC",
        "details": {
          "Slug": "voc",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.Voc",
          "Type": "String",
          "Example": "VOC"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pm2\nPM2.5",
        "description": "PM2.5",
        "details": {
          "Slug": "pm25",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.Pm2",
          "Type": "String",
          "Example": "PM2.5"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pm1\nPM1.0",
        "description": "PM1.0",
        "details": {
          "Slug": "pm10",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.Pm1",
          "Type": "String",
          "Example": "PM1.0"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temperature\nTemperature",
        "description": "Temperature",
        "details": {
          "Slug": "temperature",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.Temperature",
          "Type": "String",
          "Example": "Temperature"
        }
      },
      {
        "section": "Ingredients",
        "title": "Humidity\nHumidity",
        "description": "Humidity",
        "details": {
          "Slug": "humidity",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.Humidity",
          "Type": "String",
          "Example": "Humidity"
        }
      },
      {
        "section": "Ingredients",
        "title": "Home name\nHomeName",
        "description": "HomeName",
        "details": {
          "Slug": "homename",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.HomeName",
          "Type": "String",
          "Example": "HomeName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Room name\nRoomName",
        "description": "RoomName",
        "details": {
          "Slug": "roomname",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.RoomName",
          "Type": "String",
          "Example": "RoomName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nDeviceName",
        "description": "DeviceName",
        "details": {
          "Slug": "devicename",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.DeviceName",
          "Type": "String",
          "Example": "DeviceName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Threshold\nThreshold Message",
        "description": "Threshold Message",
        "details": {
          "Slug": "threshold",
          "Filter code": "HumaI.humaCarbonDioxideAlertTrigger.Threshold",
          "Type": "String",
          "Example": "Threshold Message"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_notification",
      "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Do you also have environmental allergies? Get notified in advance. Average pollen count is between 4.9-7.2",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.current_pollen_count_rises_above"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Count\nText input > Regular expression",
        "description": "Text input > Regular expression",
        "details": {
          "Label": "Pollen count",
          "Slug": "count",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pollen count\nThe current pollen count, 0-12",
        "description": "The current pollen count, 0-12",
        "details": {
          "Slug": "pollen_count",
          "Filter code": "Weather.currentPollenCountRisesAbove.PollenCount",
          "Type": "String",
          "Example": "6.2"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.currentPollenCountRisesAbove.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.currentPollenCountRisesAbove.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.currentPollenCountRisesAbove.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.currentPollenCountRisesAbove.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "check_time",
          "Filter code": "Weather.currentPollenCountRisesAbove.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_notification",
      "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Don't miss those first snow flakes! Get notified with a gentle blink of your LIFX lights.",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.current_condition_is"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Condition\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Current condition",
          "Slug": "condition",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.currentConditionIs.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.currentConditionIs.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.currentConditionIs.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of the current condition.",
        "description": "The URL to an image of the current condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.currentConditionIs.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.currentConditionIs.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "check_time",
          "Filter code": "Weather.currentConditionIs.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "LIFX",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "lifx.blink",
      "Filter code method": "Lifx.blink.skip(string?: reason)",
      "Runtime method": "runAction(\"lifx.blink\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Selector\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which lights?",
          "Slug": "selector",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Color\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Color",
          "Slug": "color",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Brightness\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Brightness",
          "Slug": "brightness",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Number of blinks\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Number of blinks",
          "Slug": "number_of_blinks",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Lifx.blink.setNumber Of Blinks(string: number_of_blinks)"
        }
      },
      {
        "section": "Action fields",
        "title": "Blink if off\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Turn on first?",
          "Helper text": "&quot;Yes&quot; will make your lights blink, even when they are turned off in the app.",
          "Slug": "blink_if_off",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Lifx.blink.setBlink If Off(string: blink_if_off)"
        }
      },
      {
        "section": "Action fields",
        "title": "Advanced options\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Advanced options",
          "Helper text": "Want an option that's not in the dropdown? Specify them here. Example: &quot;color: green saturation:0.2; number_of_blinks: 6&quot; for 6 pale green blinks. <a href=\"https://support.lifx.com/hc/en-us/articles/204881760\" target=\"_blank\">More info</a>",
          "Slug": "advanced_options",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Lifx.blink.setAdvanced Options(string: advanced_options)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get an notification when the device's VOC level exceeds the specified threshold, which is the average for 5 minutes.",
    "trigger_channel": "Huma-i",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "Huma_i.huma_voc_alert_trigger"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Huma-i?",
          "Helper text": "Humai Device",
          "Slug": "device_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Threshold\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which VOC threshold",
          "Helper text": "VOC Level(AQI Base)",
          "Slug": "threshold",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "createdat",
          "Filter code": "HumaI.humaVocAlertTrigger.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Co2\nCO2",
        "description": "CO2",
        "details": {
          "Slug": "co2",
          "Filter code": "HumaI.humaVocAlertTrigger.Co2",
          "Type": "String",
          "Example": "CO2"
        }
      },
      {
        "section": "Ingredients",
        "title": "Voc\nVoc",
        "description": "Voc",
        "details": {
          "Slug": "voc",
          "Filter code": "HumaI.humaVocAlertTrigger.Voc",
          "Type": "String",
          "Example": "Voc"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pm2\nPM2.5",
        "description": "PM2.5",
        "details": {
          "Slug": "pm25",
          "Filter code": "HumaI.humaVocAlertTrigger.Pm2",
          "Type": "String",
          "Example": "PM2.5"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pm1\nPM1.0",
        "description": "PM1.0",
        "details": {
          "Slug": "pm10",
          "Filter code": "HumaI.humaVocAlertTrigger.Pm1",
          "Type": "String",
          "Example": "PM1.0"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temperature\nTemperature",
        "description": "Temperature",
        "details": {
          "Slug": "temperature",
          "Filter code": "HumaI.humaVocAlertTrigger.Temperature",
          "Type": "String",
          "Example": "Temperature"
        }
      },
      {
        "section": "Ingredients",
        "title": "Humidity\nHumidity",
        "description": "Humidity",
        "details": {
          "Slug": "humidity",
          "Filter code": "HumaI.humaVocAlertTrigger.Humidity",
          "Type": "String",
          "Example": "Humidity"
        }
      },
      {
        "section": "Ingredients",
        "title": "Home name\nHomeName",
        "description": "HomeName",
        "details": {
          "Slug": "homename",
          "Filter code": "HumaI.humaVocAlertTrigger.HomeName",
          "Type": "String",
          "Example": "HomeName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Room name\nRoomName",
        "description": "RoomName",
        "details": {
          "Slug": "roomname",
          "Filter code": "HumaI.humaVocAlertTrigger.RoomName",
          "Type": "String",
          "Example": "RoomName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nDeviceName",
        "description": "DeviceName",
        "details": {
          "Slug": "devicename",
          "Filter code": "HumaI.humaVocAlertTrigger.DeviceName",
          "Type": "String",
          "Example": "DeviceName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Threshold\nThreshold Message",
        "description": "Threshold Message",
        "details": {
          "Slug": "threshold",
          "Filter code": "HumaI.humaVocAlertTrigger.Threshold",
          "Type": "String",
          "Example": "Threshold Message"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_notification",
      "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get a message when the device's AQI level exceeds the specified threshold, which is the average for 5 minutes.",
    "trigger_channel": "Huma-i",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "Huma_i.huma_dust_level_alert_trigger"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Huma-i?",
          "Helper text": "Humai Device",
          "Slug": "device_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Threshold\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which dust level threshold?",
          "Helper text": "PM2.5(AQI Base)",
          "Slug": "threshold",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "createdat",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Co2\nCO2",
        "description": "CO2",
        "details": {
          "Slug": "co2",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Co2",
          "Type": "String",
          "Example": "CO2"
        }
      },
      {
        "section": "Ingredients",
        "title": "Voc\nVoc",
        "description": "Voc",
        "details": {
          "Slug": "voc",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Voc",
          "Type": "String",
          "Example": "Voc"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pm2\nPM2.5",
        "description": "PM2.5",
        "details": {
          "Slug": "pm25",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Pm2",
          "Type": "String",
          "Example": "PM2.5"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pm1\nPM1.0",
        "description": "PM1.0",
        "details": {
          "Slug": "pm10",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Pm1",
          "Type": "String",
          "Example": "PM1.0"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temperature\nTemperature",
        "description": "Temperature",
        "details": {
          "Slug": "temperature",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Temperature",
          "Type": "String",
          "Example": "Temperature"
        }
      },
      {
        "section": "Ingredients",
        "title": "Humidity\nHumidity",
        "description": "Humidity",
        "details": {
          "Slug": "humidity",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Humidity",
          "Type": "String",
          "Example": "Humidity"
        }
      },
      {
        "section": "Ingredients",
        "title": "Home name\nHomeName",
        "description": "HomeName",
        "details": {
          "Slug": "homename",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.HomeName",
          "Type": "String",
          "Example": "HomeName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Room name\nRoomName",
        "description": "RoomName",
        "details": {
          "Slug": "roomname",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.RoomName",
          "Type": "String",
          "Example": "RoomName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nDeviceName",
        "description": "DeviceName",
        "details": {
          "Slug": "devicename",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.DeviceName",
          "Type": "String",
          "Example": "DeviceName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Threshold\nThreshold Message",
        "description": "Threshold Message",
        "details": {
          "Slug": "threshold",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Threshold",
          "Type": "String",
          "Example": "Threshold Message"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_notification",
      "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get an notification when the device's PM2.5 level exceeds the specified threshold, which is the average for 5 minutes.",
    "trigger_channel": "Huma-i",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "Huma_i.huma_dust_level_alert_trigger"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Huma-i?",
          "Helper text": "Humai Device",
          "Slug": "device_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Threshold\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which dust level threshold?",
          "Helper text": "PM2.5(AQI Base)",
          "Slug": "threshold",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "createdat",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Co2\nCO2",
        "description": "CO2",
        "details": {
          "Slug": "co2",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Co2",
          "Type": "String",
          "Example": "CO2"
        }
      },
      {
        "section": "Ingredients",
        "title": "Voc\nVoc",
        "description": "Voc",
        "details": {
          "Slug": "voc",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Voc",
          "Type": "String",
          "Example": "Voc"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pm2\nPM2.5",
        "description": "PM2.5",
        "details": {
          "Slug": "pm25",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Pm2",
          "Type": "String",
          "Example": "PM2.5"
        }
      },
      {
        "section": "Ingredients",
        "title": "Pm1\nPM1.0",
        "description": "PM1.0",
        "details": {
          "Slug": "pm10",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Pm1",
          "Type": "String",
          "Example": "PM1.0"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temperature\nTemperature",
        "description": "Temperature",
        "details": {
          "Slug": "temperature",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Temperature",
          "Type": "String",
          "Example": "Temperature"
        }
      },
      {
        "section": "Ingredients",
        "title": "Humidity\nHumidity",
        "description": "Humidity",
        "details": {
          "Slug": "humidity",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Humidity",
          "Type": "String",
          "Example": "Humidity"
        }
      },
      {
        "section": "Ingredients",
        "title": "Home name\nHomeName",
        "description": "HomeName",
        "details": {
          "Slug": "homename",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.HomeName",
          "Type": "String",
          "Example": "HomeName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Room name\nRoomName",
        "description": "RoomName",
        "details": {
          "Slug": "roomname",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.RoomName",
          "Type": "String",
          "Example": "RoomName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nDeviceName",
        "description": "DeviceName",
        "details": {
          "Slug": "devicename",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.DeviceName",
          "Type": "String",
          "Example": "DeviceName"
        }
      },
      {
        "section": "Ingredients",
        "title": "Threshold\nThreshold Message",
        "description": "Threshold Message",
        "details": {
          "Slug": "threshold",
          "Filter code": "HumaI.humaDustLevelAlertTrigger.Threshold",
          "Type": "String",
          "Example": "Threshold Message"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_notification",
      "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get notified when Wyze detects sound",
    "trigger_channel": "Wyze",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "wyzecam.sound_trigger"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Serialize device info\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device",
          "Slug": "serialize_device_info",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Sound detected\nSound alarm sensed on your wyze camera.",
        "description": "Sound alarm sensed on your wyze camera.",
        "details": {
          "Slug": "TriggerMessage",
          "Filter code": "Wyzecam.soundTrigger.SoundDetected",
          "Type": "String",
          "Example": "Sound alarm sensed on your wyze camera."
        }
      },
      {
        "section": "Ingredients",
        "title": "Trigger time\nTime when sound is triggered.",
        "description": "Time when sound is triggered.",
        "details": {
          "Slug": "trigger_time",
          "Filter code": "Wyzecam.soundTrigger.TriggerTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Routee",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "routee.send_sms",
      "Filter code method": "Routee.sendSms.skip(string?: reason)",
      "Runtime method": "runAction(\"routee.send_sms\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Message",
          "Helper text": "The content of the SMS",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "From\nText input > Notification",
        "description": "Text input > Notification",
        "details": {
          "Label": "From",
          "Helper text": "The sender id of the message",
          "Slug": "from",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setFrom(string: from)"
        }
      },
      {
        "section": "Action fields",
        "title": "To\nText input > Notification",
        "description": "Text input > Notification",
        "details": {
          "Label": "To",
          "Helper text": "The recipient of the message",
          "Slug": "to",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setTo(string: to)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get notified of a Phyn alert by changing the color of your Hue bulb.",
    "trigger_channel": "Phyn",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "phyn.alert_raised"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which home?",
          "Slug": "device_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Alert type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which type of alert?",
          "Helper text": "Alert type",
          "Slug": "alert_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Phyn.alertRaised.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Home name\nName of the home for which the alert is detected.",
        "description": "Name of the home for which the alert is detected.",
        "details": {
          "Slug": "home_name",
          "Filter code": "Phyn.alertRaised.HomeName",
          "Type": "String",
          "Example": "Vacation home"
        }
      },
      {
        "section": "Ingredients",
        "title": "Alert type\nType of the alert detected.",
        "description": "Type of the alert detected.",
        "details": {
          "Slug": "alert_type",
          "Filter code": "Phyn.alertRaised.AlertType",
          "Type": "String",
          "Example": "Leak alert"
        }
      },
      {
        "section": "Ingredients",
        "title": "Alert time\nThe time when this alert is detected.",
        "description": "The time when this alert is detected.",
        "details": {
          "Slug": "alert_time",
          "Filter code": "Phyn.alertRaised.AlertTime",
          "Type": "String",
          "Example": "2019-08-07 16:10 PM PST"
        }
      },
      {
        "section": "Ingredients",
        "title": "Suggested fixtures\nThe fixtures associated with a leak alert.",
        "description": "The fixtures associated with a leak alert.",
        "details": {
          "Slug": "suggested_fixtures",
          "Filter code": "Phyn.alertRaised.SuggestedFixtures",
          "Type": "String",
          "Example": "'sink, shower'"
        }
      }
    ],
    "action_channel": "Philips Hue",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "hue.set_color_all_hue",
      "Filter code method": "Hue.setColorAllHue.skip(string?: reason)",
      "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Lights\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which lights?",
          "Slug": "lights",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Color\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Color value or name",
          "Helper text": "Accepts color names or CSS hex codes",
          "Slug": "color",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Hue.setColorAllHue.setColor(string: color)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Your whole Tribe and all your Watchers are immediately notified when alarm is raised.\r\n\r\nYou can continue to communicate in Zuluhood and check instantly if everyone is ok and who is coming to check on your home.",
    "trigger_channel": "Wyze",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "wyzecam.smoke_trigger"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Serialize device info\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device",
          "Slug": "serialize_device_info",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Smoke detected\nSmoke alarm detected on your wyze camera.",
        "description": "Smoke alarm detected on your wyze camera.",
        "details": {
          "Slug": "TriggerMessage",
          "Filter code": "Wyzecam.smokeTrigger.SmokeDetected",
          "Type": "String",
          "Example": "Smoke alarm detected on your wyze camera."
        }
      },
      {
        "section": "Ingredients",
        "title": "Trigger time\nTime when smoke is triggered.",
        "description": "Time when smoke is triggered.",
        "details": {
          "Slug": "trigger_time",
          "Filter code": "Wyzecam.smokeTrigger.TriggerTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Zuluhood",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "zuluhood.raise_alarm",
      "Filter code method": "Zuluhood.raiseAlarm.skip(string?: reason)",
      "Runtime method": "runAction(\"zuluhood.raise_alarm\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Home\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select home",
          "Slug": "home",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Type",
          "Slug": "type",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get notified when tomorrow’s weather forecast calls for specific conditions e.g. rain, snow, cloudy, clear",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.tomorrows_forecast_calls_for"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Condition\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Condition",
          "Slug": "condition",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Tomorrows condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "tomorrows_condition",
          "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsCondition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of tomorrow's condition.",
        "description": "The URL to an image of tomorrow's condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.tomorrowsForecastCallsFor.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "High temp fahrenheit\nTomorrow's high temperature in degrees Fahrenheit",
        "description": "Tomorrow's high temperature in degrees Fahrenheit",
        "details": {
          "Slug": "high_temp_fahrenheit",
          "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "High temp celsius\nTomorrow's high temperature in degrees Celsius",
        "description": "Tomorrow's high temperature in degrees Celsius",
        "details": {
          "Slug": "high_temp_celsius",
          "Filter code": "Weather.tomorrowsForecastCallsFor.HighTempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Low temp fahrenheit\nTomorrow's low temperature in degrees Fahrenheit",
        "description": "Tomorrow's low temperature in degrees Fahrenheit",
        "details": {
          "Slug": "low_temp_fahrenheit",
          "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Low temp celsius\nTomorrow's low temperature in degrees Celsius",
        "description": "Tomorrow's low temperature in degrees Celsius",
        "details": {
          "Slug": "low_temp_celsius",
          "Filter code": "Weather.tomorrowsForecastCallsFor.LowTempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Tomorrows date\nTomorrow's date.",
        "description": "Tomorrow's date.",
        "details": {
          "Slug": "tomorrows_date",
          "Filter code": "Weather.tomorrowsForecastCallsFor.TomorrowsDate",
          "Type": "Date (ISO8601)",
          "Example": "2020-07-07"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.tomorrowsForecastCallsFor.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      }
    ],
    "action_channel": "Routee",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "routee.send_sms",
      "Filter code method": "Routee.sendSms.skip(string?: reason)",
      "Runtime method": "runAction(\"routee.send_sms\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Message",
          "Helper text": "The content of the SMS",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "From\nText input > Notification",
        "description": "Text input > Notification",
        "details": {
          "Label": "From",
          "Helper text": "The sender id of the message",
          "Slug": "from",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setFrom(string: from)"
        }
      },
      {
        "section": "Action fields",
        "title": "To\nText input > Notification",
        "description": "Text input > Notification",
        "details": {
          "Label": "To",
          "Helper text": "The recipient of the message",
          "Slug": "to",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setTo(string: to)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get notified on specific time and days of the week",
    "trigger_channel": "Date & Time",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "date_and_time.every_weekday_at"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Time\nText input",
        "description": "Text input",
        "details": {
          "Label": "Time of day",
          "Slug": "time",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Weekdays\nCheckboxes",
        "description": "Checkboxes",
        "details": {
          "Label": "Days of the week",
          "Slug": "weekdays",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "DateAndTime.everyWeekdayAt.CheckTime",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Day of week\nDay of the week this trigger was checked.",
        "description": "Day of the week this trigger was checked.",
        "details": {
          "Slug": "DayOfWeek",
          "Filter code": "DateAndTime.everyWeekdayAt.DayOfWeek",
          "Type": "String",
          "Example": "Friday"
        }
      }
    ],
    "action_channel": "Routee",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "routee.send_sms",
      "Filter code method": "Routee.sendSms.skip(string?: reason)",
      "Runtime method": "runAction(\"routee.send_sms\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Message",
          "Helper text": "The content of the SMS",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "From\nText input > Notification",
        "description": "Text input > Notification",
        "details": {
          "Label": "From",
          "Helper text": "The sender id of the message",
          "Slug": "from",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setFrom(string: from)"
        }
      },
      {
        "section": "Action fields",
        "title": "To\nText input > Notification",
        "description": "Text input > Notification",
        "details": {
          "Label": "To",
          "Helper text": "The recipient of the message",
          "Slug": "to",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Routee.sendSms.setTo(string: to)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Every time your SmartThings device detects a door open, you'll hear a message in your Orion group.",
    "trigger_channel": "SmartThings",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "smartthings_v2.opened_smartthings"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which device?",
          "Slug": "device",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Opened at\nThe date and time sensor was opened.",
        "description": "The date and time sensor was opened.",
        "details": {
          "Slug": "OpenedAt",
          "Filter code": "SmartthingsV2.openedSmartthings.OpenedAt",
          "Type": "String",
          "Example": "April 1st, 2023 at 12:43PM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nThe name of the device.",
        "description": "The name of the device.",
        "details": {
          "Slug": "DeviceName",
          "Filter code": "SmartthingsV2.openedSmartthings.DeviceName",
          "Type": "String",
          "Example": "Bedroom contact"
        }
      }
    ],
    "action_channel": "Orion - Voice for Teams",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "orion.send_voice_message",
      "Filter code method": "Orion.sendVoiceMessage.skip(string?: reason)",
      "Runtime method": "runAction(\"orion.send_voice_message\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Group\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which group?",
          "Helper text": "The Orion group where you'll hear your message.",
          "Slug": "group",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "User\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Who hears it?",
          "Helper text": "Select whether everyone in the group should hear the message, or just you.",
          "Slug": "user",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "What to say?",
          "Helper text": "This is the message that you'll hear in your group.",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Orion.sendVoiceMessage.setMessage(string: message)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Get notified by your blinking Philips Hue Christmas lights that your Home Connect Washer cycle is complete and your Christmas table cloth is ready to go in the dryer",
    "trigger_channel": "Home Connect Washer",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "hc_washer.washer_cycle_finished"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Ha\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which washer?",
          "Slug": "ha_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "created_at",
          "Filter code": "HcWasher.washerCycleFinished.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Philips Hue",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "hue.blink_all_hue",
      "Filter code method": "Hue.blinkAllHue.skip(string?: reason)",
      "Runtime method": "runAction(\"hue.blink_all_hue\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Lights\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which lights?",
          "Slug": "lights",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Your whole Tribe and all your Watchers are immediately notified if your Scout Alarm is triggered.\r\n\r\nYou can continue to communicate in Zuluhood and check instantly if everyone is ok and who is coming to check on your home.",
    "trigger_channel": "Scout Alarm",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "scoutalarm.mode_alarming"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Mode\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which mode?",
          "Slug": "mode_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Name\nName of mode.",
        "description": "Name of mode.",
        "details": {
          "Slug": "name",
          "Filter code": "Scoutalarm.modeAlarming.Name",
          "Type": "String",
          "Example": "Away"
        }
      },
      {
        "section": "Ingredients",
        "title": "Event\nState of Mode.",
        "description": "State of Mode.",
        "details": {
          "Slug": "event",
          "Filter code": "Scoutalarm.modeAlarming.Event",
          "Type": "String",
          "Example": "Alarmed"
        }
      },
      {
        "section": "Ingredients",
        "title": "Formatted text\nText shown in activity feed.",
        "description": "Text shown in activity feed.",
        "details": {
          "Slug": "formatted_text",
          "Filter code": "Scoutalarm.modeAlarming.FormattedText",
          "Type": "String",
          "Example": "Active Alarm in Away mode"
        }
      },
      {
        "section": "Ingredients",
        "title": "By\nThe name of the person or thing that triggered the alarm.",
        "description": "The name of the person or thing that triggered the alarm.",
        "details": {
          "Slug": "by",
          "Filter code": "Scoutalarm.modeAlarming.By",
          "Type": "String",
          "Example": "Dave via IFTTT"
        }
      },
      {
        "section": "Ingredients",
        "title": "At\nDate and time alarm was triggered.",
        "description": "Date and time alarm was triggered.",
        "details": {
          "Slug": "at",
          "Filter code": "Scoutalarm.modeAlarming.At",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Zuluhood",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "zuluhood.raise_alarm",
      "Filter code method": "Zuluhood.raiseAlarm.skip(string?: reason)",
      "Runtime method": "runAction(\"zuluhood.raise_alarm\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Home\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select home",
          "Slug": "home",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Type",
          "Slug": "type",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Your whole Tribe and all your Watchers are immediately notified if your Arlo camera detects a motion.\r\n\r\nYou can continue to communicate in Zuluhood and check instantly if everyone is ok and who is coming to check on your home.",
    "trigger_channel": "Arlo",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "arlo.motion"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device name\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device?",
          "Slug": "device_name",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nThe name of the device.",
        "description": "The name of the device.",
        "details": {
          "Slug": "device_name",
          "Filter code": "Arlo.motion.DeviceName",
          "Type": "String",
          "Example": "48B14C740AD5E"
        }
      },
      {
        "section": "Ingredients",
        "title": "Detection time\nDate and time of motion event detection.",
        "description": "Date and time of motion event detection.",
        "details": {
          "Slug": "detected_at",
          "Filter code": "Arlo.motion.DetectionTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Zuluhood",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "zuluhood.raise_alarm",
      "Filter code method": "Zuluhood.raiseAlarm.skip(string?: reason)",
      "Runtime method": "runAction(\"zuluhood.raise_alarm\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Home\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select home",
          "Slug": "home",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Type",
          "Slug": "type",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Your whole Tribe and all your Watchers are immediately notified if your Abode alarm is raised.\r\n\r\nYou can continue to communicate in Zuluhood and check instantly if everyone is ok and who is coming to check on your home.",
    "trigger_channel": "abode",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "abode.alarm_triggered"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Abode.alarmTriggered.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Alarm type\nType of alarm triggered.",
        "description": "Type of alarm triggered.",
        "details": {
          "Slug": "alarm_type",
          "Filter code": "Abode.alarmTriggered.AlarmType",
          "Type": "String",
          "Example": "Fire Alarm Triggered"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nName of device whose alarm is triggered.",
        "description": "Name of device whose alarm is triggered.",
        "details": {
          "Slug": "device_name",
          "Filter code": "Abode.alarmTriggered.DeviceName",
          "Type": "String",
          "Example": "abode Gateway Alarm"
        }
      }
    ],
    "action_channel": "Zuluhood",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "zuluhood.raise_alarm",
      "Filter code method": "Zuluhood.raiseAlarm.skip(string?: reason)",
      "Runtime method": "runAction(\"zuluhood.raise_alarm\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Home\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select home",
          "Slug": "home",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Type",
          "Slug": "type",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Your whole Tribe and all your Watchers are immediately notified when alarm is raised.\r\n\r\nYou can continue to communicate in Zuluhood and check instantly if everyone is ok and who is coming to check on your home.",
    "trigger_channel": "Blue by ADT",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "bluebyadt.alarm"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Event type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Event Type?",
          "Slug": "event_type",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Timestamp\nDate and time alarm occurred.",
        "description": "Date and time alarm occurred.",
        "details": {
          "Slug": "timestamp",
          "Filter code": "Bluebyadt.alarm.Timestamp",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Event type\nThe EventType describes the type of alarm that occurred.",
        "description": "The EventType describes the type of alarm that occurred.",
        "details": {
          "Slug": "event_type",
          "Filter code": "Bluebyadt.alarm.EventType",
          "Type": "String",
          "Example": "Fire"
        }
      },
      {
        "section": "Ingredients",
        "title": "Formatted message\nThe FormattedMessage provides a user-friendly description of the event",
        "description": "The FormattedMessage provides a user-friendly description of the event",
        "details": {
          "Slug": "formatted_message",
          "Filter code": "Bluebyadt.alarm.FormattedMessage",
          "Type": "String",
          "Example": "Medical Alarm"
        }
      }
    ],
    "action_channel": "Zuluhood",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "zuluhood.raise_alarm",
      "Filter code method": "Zuluhood.raiseAlarm.skip(string?: reason)",
      "Runtime method": "runAction(\"zuluhood.raise_alarm\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Home\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select home",
          "Slug": "home",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Type",
          "Slug": "type",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Your whole Tribe and all your Watchers are immediately notified when alarm is raised.\r\n\r\nYou can continue to communicate in Zuluhood and check instantly if everyone is ok and who is coming to check on your home.",
    "trigger_channel": "Wyze",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "wyzecam.co_trigger"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Serialize device info\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device",
          "Slug": "serialize_device_info",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Co detected\nCO alarm detected on your wyze camera.",
        "description": "CO alarm detected on your wyze camera.",
        "details": {
          "Slug": "TriggerMessage",
          "Filter code": "Wyzecam.coTrigger.CoDetected",
          "Type": "String",
          "Example": "CO alarm detected on your wyze camera."
        }
      },
      {
        "section": "Ingredients",
        "title": "Trigger time\nTime when CO is triggered.",
        "description": "Time when CO is triggered.",
        "details": {
          "Slug": "trigger_time",
          "Filter code": "Wyzecam.coTrigger.TriggerTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Zuluhood",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "zuluhood.raise_alarm",
      "Filter code method": "Zuluhood.raiseAlarm.skip(string?: reason)",
      "Runtime method": "runAction(\"zuluhood.raise_alarm\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Home\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select home",
          "Slug": "home",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Type",
          "Slug": "type",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Use this applet to create a button on your phone or smart watch that triggers your robot to clean a specific room. For robots with Imprint™ Smart Mapping technology.",
    "trigger_channel": "Button widget",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "do_button.do_button_new_command_common"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Share url\nThe link to the Share page for the button press.",
        "description": "The link to the Share page for the button press.",
        "details": {
          "Slug": "ShareURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL",
          "Type": "String",
          "Example": "https://ifttt.com/share/McFwJfDH9Ns"
        }
      },
      {
        "section": "Ingredients",
        "title": "Latitude\nThe latitude of the location of the button press.",
        "description": "The latitude of the location of the button press.",
        "details": {
          "Slug": "Latitude",
          "Filter code": "DoButton.doButtonNewCommandCommon.Latitude",
          "Type": "String",
          "Example": "37.82666360000001"
        }
      },
      {
        "section": "Ingredients",
        "title": "Longitude\nThe longitude of the location of the button press.",
        "description": "The longitude of the location of the button press.",
        "details": {
          "Slug": "Longitude",
          "Filter code": "DoButton.doButtonNewCommandCommon.Longitude",
          "Type": "String",
          "Example": "-122.42301220000003"
        }
      },
      {
        "section": "Ingredients",
        "title": "Location map url\nThe link to the map of the location of the button press.",
        "description": "The link to the map of the location of the button press.",
        "details": {
          "Slug": "LocationMapURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL",
          "Type": "String",
          "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"
        }
      },
      {
        "section": "Ingredients",
        "title": "Location map image url\nThe image of the map of the location of the button press.",
        "description": "The image of the map of the location of the button press.",
        "details": {
          "Slug": "LocationMapImageURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL",
          "Type": "String",
          "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"
        }
      },
      {
        "section": "Ingredients",
        "title": "Occurred at\nThe date and time you pressed the button.",
        "description": "The date and time you pressed the button.",
        "details": {
          "Slug": "OccurredAt",
          "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "iRobot",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "irobot.clean_by_room",
      "Filter code method": "Irobot.cleanByRoom.skip(string?: reason)",
      "Runtime method": "runAction(\"irobot.clean_by_room\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Room info\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which room would you like to clean?",
          "Slug": "room_info",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Record NPR story.",
    "trigger_channel": "NPR",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "npr.news_story_published"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Category\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select a category",
          "Slug": "category",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story title\nThe story's title.",
        "description": "The story's title.",
        "details": {
          "Slug": "story_title",
          "Filter code": "Npr.newsStoryPublished.StoryTitle",
          "Type": "String",
          "Example": "From The 'Inside Out,' A Lively Look Inside A Young Mind"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story excerpt\nThe story's excerpt.",
        "description": "The story's excerpt.",
        "details": {
          "Slug": "story_excerpt",
          "Filter code": "Npr.newsStoryPublished.StoryExcerpt",
          "Type": "String",
          "Example": "Pixar's latest creation, which takes place inside a young girl's mind, is visually ambitious, emotionally affecting, and ultimately very wise."
        }
      },
      {
        "section": "Ingredients",
        "title": "Story url\nThe URL to the story.",
        "description": "The URL to the story.",
        "details": {
          "Slug": "story_url",
          "Filter code": "Npr.newsStoryPublished.StoryURL",
          "Type": "String",
          "Example": "http://www.npr.org/2015/06/18/414701069/from-the-inside-out-a-lively-look-inside-a-young-mind?utm_medium=RSS&utm_campaign=storiesfromnpr"
        }
      },
      {
        "section": "Ingredients",
        "title": "Category\nThe story's category.",
        "description": "The story's category.",
        "details": {
          "Slug": "category",
          "Filter code": "Npr.newsStoryPublished.Category",
          "Type": "String",
          "Example": "People & Places"
        }
      },
      {
        "section": "Ingredients",
        "title": "Published at\nDate and time the story was published.",
        "description": "Date and time the story was published.",
        "details": {
          "Slug": "published_at",
          "Filter code": "Npr.newsStoryPublished.PublishedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Unforgettable Me",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "unforgettable_me.upload_data",
      "Filter code method": "UnforgettableMe.uploadData.skip(string?: reason)",
      "Runtime method": "runAction(\"unforgettable_me.upload_data\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Body\nText input > Long text",
        "description": "Text input > Long text",
        "details": {
          "Label": "Body",
          "Helper text": "This field must be in json format. If possible include a &quot;start_date&quot; and &quot;end_date&quot; fields, otherwise Unforgettable Me will assign a these dates based on when the data arrives to the Unforegettable Me servers.",
          "Slug": "body",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "UnforgettableMe.uploadData.setBody(string: body)"
        }
      },
      {
        "section": "Action fields",
        "title": "Augmenter name\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Augmenter Name",
          "Helper text": "Add a informative augmenter name (a label) that you will use to find this data at Unforgettable Me. For example, you might use &quot;GmailMessage&quot; or &quot;AndroidSMSReceived&quot;. Note, use CamelCase with no spaces.",
          "Slug": "augmenter_name",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "UnforgettableMe.uploadData.setAugmenter Name(string: augmenter_name)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Choose a category and automatically share NPR stores to a Telegram chat.",
    "trigger_channel": "NPR",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "npr.news_story_published"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Category\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select a category",
          "Slug": "category",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story title\nThe story's title.",
        "description": "The story's title.",
        "details": {
          "Slug": "story_title",
          "Filter code": "Npr.newsStoryPublished.StoryTitle",
          "Type": "String",
          "Example": "From The 'Inside Out,' A Lively Look Inside A Young Mind"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story excerpt\nThe story's excerpt.",
        "description": "The story's excerpt.",
        "details": {
          "Slug": "story_excerpt",
          "Filter code": "Npr.newsStoryPublished.StoryExcerpt",
          "Type": "String",
          "Example": "Pixar's latest creation, which takes place inside a young girl's mind, is visually ambitious, emotionally affecting, and ultimately very wise."
        }
      },
      {
        "section": "Ingredients",
        "title": "Story url\nThe URL to the story.",
        "description": "The URL to the story.",
        "details": {
          "Slug": "story_url",
          "Filter code": "Npr.newsStoryPublished.StoryURL",
          "Type": "String",
          "Example": "http://www.npr.org/2015/06/18/414701069/from-the-inside-out-a-lively-look-inside-a-young-mind?utm_medium=RSS&utm_campaign=storiesfromnpr"
        }
      },
      {
        "section": "Ingredients",
        "title": "Category\nThe story's category.",
        "description": "The story's category.",
        "details": {
          "Slug": "category",
          "Filter code": "Npr.newsStoryPublished.Category",
          "Type": "String",
          "Example": "People & Places"
        }
      },
      {
        "section": "Ingredients",
        "title": "Published at\nDate and time the story was published.",
        "description": "Date and time the story was published.",
        "details": {
          "Slug": "published_at",
          "Filter code": "Npr.newsStoryPublished.PublishedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Telegram",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "telegram.send_message",
      "Filter code method": "Telegram.sendMessage.skip(string?: reason)",
      "Runtime method": "runAction(\"telegram.send_message\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Chat\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Target chat",
          "Helper text": "Use the <a href=\"https://telegram.me/ifttt\" target=\"_blank\">@IFTTT</a> bot on Telegram to connect new <a href=\"https://telegram.me/ifttt?startgroup=c\" target=\"_blank\">groups</a> or <a href=\"https://telegram.me/ifttt?start=c\" target=\"_blank\">channels</a>.",
          "Slug": "chat_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Text\nText input > HTML",
        "description": "Text input > HTML",
        "details": {
          "Label": "Message text",
          "Helper text": "Some HTML tags are supported: b, i, a, br, pre, code.",
          "Slug": "text",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Telegram.sendMessage.setText(string: text)"
        }
      },
      {
        "section": "Action fields",
        "title": "Include web page preview\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Include web page preview?",
          "Helper text": "Telegram will check the first URL in the text to include a small preview of the page. Disabled by default.",
          "Slug": "include_web_page_preview",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Telegram.sendMessage.setInclude Web Page Preview(string: include_web_page_preview)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Choose a category and you'll a daily email digest with the stories that are important to you.",
    "trigger_channel": "NPR",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "npr.news_story_published"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Category\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select a category",
          "Slug": "category",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story title\nThe story's title.",
        "description": "The story's title.",
        "details": {
          "Slug": "story_title",
          "Filter code": "Npr.newsStoryPublished.StoryTitle",
          "Type": "String",
          "Example": "From The 'Inside Out,' A Lively Look Inside A Young Mind"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story excerpt\nThe story's excerpt.",
        "description": "The story's excerpt.",
        "details": {
          "Slug": "story_excerpt",
          "Filter code": "Npr.newsStoryPublished.StoryExcerpt",
          "Type": "String",
          "Example": "Pixar's latest creation, which takes place inside a young girl's mind, is visually ambitious, emotionally affecting, and ultimately very wise."
        }
      },
      {
        "section": "Ingredients",
        "title": "Story url\nThe URL to the story.",
        "description": "The URL to the story.",
        "details": {
          "Slug": "story_url",
          "Filter code": "Npr.newsStoryPublished.StoryURL",
          "Type": "String",
          "Example": "http://www.npr.org/2015/06/18/414701069/from-the-inside-out-a-lively-look-inside-a-young-mind?utm_medium=RSS&utm_campaign=storiesfromnpr"
        }
      },
      {
        "section": "Ingredients",
        "title": "Category\nThe story's category.",
        "description": "The story's category.",
        "details": {
          "Slug": "category",
          "Filter code": "Npr.newsStoryPublished.Category",
          "Type": "String",
          "Example": "People & Places"
        }
      },
      {
        "section": "Ingredients",
        "title": "Published at\nDate and time the story was published.",
        "description": "Date and time the story was published.",
        "details": {
          "Slug": "published_at",
          "Filter code": "Npr.newsStoryPublished.PublishedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Email Digest",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "email_digest.send_daily_email",
      "Filter code method": "EmailDigest.sendDailyEmail.skip(string?: reason)",
      "Runtime method": "runAction(\"email_digest.send_daily_email\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Time of day\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Time of day",
          "Slug": "time_of_day",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendDailyEmail.setTime Of Day(string: time_of_day)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Slug": "title",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendDailyEmail.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input > HTML",
        "description": "Text input > HTML",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendDailyEmail.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Item URL",
          "Helper text": "Optional",
          "Slug": "url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendDailyEmail.setUrl(string: url)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Automatically share stories from NPR to a Slack channel. Select what categories of stories you'd like shared and what Slack channel you'd like them posted in.",
    "trigger_channel": "NPR",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "npr.news_story_published"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Category\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select a category",
          "Slug": "category",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story title\nThe story's title.",
        "description": "The story's title.",
        "details": {
          "Slug": "story_title",
          "Filter code": "Npr.newsStoryPublished.StoryTitle",
          "Type": "String",
          "Example": "From The 'Inside Out,' A Lively Look Inside A Young Mind"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story excerpt\nThe story's excerpt.",
        "description": "The story's excerpt.",
        "details": {
          "Slug": "story_excerpt",
          "Filter code": "Npr.newsStoryPublished.StoryExcerpt",
          "Type": "String",
          "Example": "Pixar's latest creation, which takes place inside a young girl's mind, is visually ambitious, emotionally affecting, and ultimately very wise."
        }
      },
      {
        "section": "Ingredients",
        "title": "Story url\nThe URL to the story.",
        "description": "The URL to the story.",
        "details": {
          "Slug": "story_url",
          "Filter code": "Npr.newsStoryPublished.StoryURL",
          "Type": "String",
          "Example": "http://www.npr.org/2015/06/18/414701069/from-the-inside-out-a-lively-look-inside-a-young-mind?utm_medium=RSS&utm_campaign=storiesfromnpr"
        }
      },
      {
        "section": "Ingredients",
        "title": "Category\nThe story's category.",
        "description": "The story's category.",
        "details": {
          "Slug": "category",
          "Filter code": "Npr.newsStoryPublished.Category",
          "Type": "String",
          "Example": "People & Places"
        }
      },
      {
        "section": "Ingredients",
        "title": "Published at\nDate and time the story was published.",
        "description": "Date and time the story was published.",
        "details": {
          "Slug": "published_at",
          "Filter code": "Npr.newsStoryPublished.PublishedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Slack",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "slack.post_to_channel",
      "Filter code method": "Slack.postToChannel.skip(string?: reason)",
      "Runtime method": "runAction(\"slack.post_to_channel\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Channel\nNested dropdown list",
        "description": "Nested dropdown list",
        "details": {
          "Label": "Which channel?",
          "Slug": "channel",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Helper text": "Optional",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Title URL",
          "Helper text": "Optional",
          "Slug": "title_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"
        }
      },
      {
        "section": "Action fields",
        "title": "Image url\nText input > Photo",
        "description": "Text input > Photo",
        "details": {
          "Label": "Thumbnail URL",
          "Helper text": "Optional",
          "Slug": "image_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Never miss a story! Choose an NPR category then automatically save stories to your iOS reading list.",
    "trigger_channel": "NPR",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "npr.news_story_published"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Category\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select a category",
          "Slug": "category",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story title\nThe story's title.",
        "description": "The story's title.",
        "details": {
          "Slug": "story_title",
          "Filter code": "Npr.newsStoryPublished.StoryTitle",
          "Type": "String",
          "Example": "From The 'Inside Out,' A Lively Look Inside A Young Mind"
        }
      },
      {
        "section": "Ingredients",
        "title": "Story excerpt\nThe story's excerpt.",
        "description": "The story's excerpt.",
        "details": {
          "Slug": "story_excerpt",
          "Filter code": "Npr.newsStoryPublished.StoryExcerpt",
          "Type": "String",
          "Example": "Pixar's latest creation, which takes place inside a young girl's mind, is visually ambitious, emotionally affecting, and ultimately very wise."
        }
      },
      {
        "section": "Ingredients",
        "title": "Story url\nThe URL to the story.",
        "description": "The URL to the story.",
        "details": {
          "Slug": "story_url",
          "Filter code": "Npr.newsStoryPublished.StoryURL",
          "Type": "String",
          "Example": "http://www.npr.org/2015/06/18/414701069/from-the-inside-out-a-lively-look-inside-a-young-mind?utm_medium=RSS&utm_campaign=storiesfromnpr"
        }
      },
      {
        "section": "Ingredients",
        "title": "Category\nThe story's category.",
        "description": "The story's category.",
        "details": {
          "Slug": "category",
          "Filter code": "Npr.newsStoryPublished.Category",
          "Type": "String",
          "Example": "People & Places"
        }
      },
      {
        "section": "Ingredients",
        "title": "Published at\nDate and time the story was published.",
        "description": "Date and time the story was published.",
        "details": {
          "Slug": "published_at",
          "Filter code": "Npr.newsStoryPublished.PublishedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "iOS Reading List",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "ios_reading_list.create_reading_list_item",
      "Filter code method": "IosReadingList.createReadingListItem.skip(string?: reason)",
      "Runtime method": "runAction(\"ios_reading_list.create_reading_list_item\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "IosReadingList.createReadingListItem.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "URL",
          "Slug": "url",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IosReadingList.createReadingListItem.setUrl(string: url)"
        }
      },
      {
        "section": "Action fields",
        "title": "Preview text\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Preview text",
          "Slug": "preview_text",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "IosReadingList.createReadingListItem.setPreview Text(string: preview_text)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Use this applet to withdraw a fixed amount from a pot each day.",
    "trigger_channel": "Date & Time",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "date_and_time.every_day_at"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Time\nText input",
        "description": "Text input",
        "details": {
          "Label": "Time",
          "Slug": "time",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "DateAndTime.everyDayAt.CheckTime",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_withdraw",
      "Filter code method": "Monzo.potWithdraw.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_withdraw\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potWithdraw.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Whenever it rains, this applet will move some money to your main account from a pot of your choice.",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.current_condition_is"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Condition\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Current condition",
          "Slug": "condition",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.currentConditionIs.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.currentConditionIs.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.currentConditionIs.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of the current condition.",
        "description": "The URL to an image of the current condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.currentConditionIs.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.currentConditionIs.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "check_time",
          "Filter code": "Weather.currentConditionIs.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_withdraw",
      "Filter code method": "Monzo.potWithdraw.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_withdraw\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potWithdraw.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "A savings challenge that takes today's date, adds up the numbers, and saves the total in a Pot. For example, 24th May 2019 would be 24 + 5 + 19 = 48p. This will move the money into your Pot at 8am every day.",
    "trigger_channel": "Date & Time",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "date_and_time.every_day_at"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Time\nText input",
        "description": "Text input",
        "details": {
          "Label": "Time",
          "Slug": "time",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "DateAndTime.everyDayAt.CheckTime",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_deposit",
      "Filter code method": "Monzo.potDeposit.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_deposit\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": "// if the date is 22/05/2019, we should deposit 46p (22 + 5 + 19)\r\n\r\nvar momentObject = Meta.currentUserTime\r\n\r\nvar date_of_month = momentObject.date()\r\nvar month = momentObject.month() + 1\r\nvar year = Number(momentObject.format(\"YY\"))\r\n\r\nvar depositAmount = ((date_of_month + month + year) / 100).toFixed(2)\r\nvar depositAmountString = depositAmount.toString()\r\n\r\nMonzo.potDeposit.setAmount(depositAmountString);\r\n\r\n"
  },
  {
    "original_description": "Connect Fitbit to Monzo and save money in the pot of your choice for every day that you hit your step goals.",
    "trigger_channel": "Fitbit",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "fitbit.daily-step-goal"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Step goal\nYour daily step goal",
        "description": "Your daily step goal",
        "details": {
          "Slug": "StepGoal",
          "Filter code": "Fitbit.dailyStepGoal.StepGoal",
          "Type": "String",
          "Example": "10000"
        }
      },
      {
        "section": "Ingredients",
        "title": "Steps\nNumber of steps you have taken",
        "description": "Number of steps you have taken",
        "details": {
          "Slug": "Steps",
          "Filter code": "Fitbit.dailyStepGoal.Steps",
          "Type": "String",
          "Example": "12546"
        }
      },
      {
        "section": "Ingredients",
        "title": "Date achieved\nDate you achieved your step goal",
        "description": "Date you achieved your step goal",
        "details": {
          "Slug": "DateAchieved",
          "Filter code": "Fitbit.dailyStepGoal.DateAchieved",
          "Type": "Date (ISO8601)",
          "Example": "2020-07-07"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_deposit",
      "Filter code method": "Monzo.potDeposit.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_deposit\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "The UK's version of summer is approaching! Take on our Summer Savings Challenge. Whenever the temperature goes above 20 degrees, you'll save £2 into a pot of your choice. You can customise the temperature and amount, if you like!",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.current_temperature_drops_below"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Temperature\nText input > Regular expression",
        "description": "Text input > Regular expression",
        "details": {
          "Label": "Temperature",
          "Slug": "temperature",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Degrees type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Degrees in",
          "Slug": "degrees_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.currentTemperatureDropsBelow.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of the current condition.",
        "description": "The URL to an image of the current condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "check_time",
          "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_deposit",
      "Filter code method": "Monzo.potDeposit.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_deposit\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "The great British winter is coming! So take on our Winter Savings Challenge. Whenever the temperature drops below 10 degrees, you'll save £2 into a pot of your choice. You can customise the amount too, if you like!",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.current_temperature_drops_below"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Temperature\nText input > Regular expression",
        "description": "Text input > Regular expression",
        "details": {
          "Label": "Temperature",
          "Slug": "temperature",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Degrees type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Degrees in",
          "Slug": "degrees_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.currentTemperatureDropsBelow.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of the current condition.",
        "description": "The URL to an image of the current condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "check_time",
          "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_deposit",
      "Filter code method": "Monzo.potDeposit.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_deposit\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Gradually increase the amount you're saving each day to a pot of your choice. On 1st January, you'll save 1p. On 2nd January, you'll save 2p. This goes right up to £3.65 (or £3.66 😁) on the last day of the year!\r\n\r\nFeel free to jump in part way through the year, and see how far you get!\r\n\r\nThe challenge resets automatically on January 1st every year.",
    "trigger_channel": "Date & Time",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "date_and_time.every_day_at"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Time\nText input",
        "description": "Text input",
        "details": {
          "Label": "Time",
          "Slug": "time",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "DateAndTime.everyDayAt.CheckTime",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_deposit",
      "Filter code method": "Monzo.potDeposit.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_deposit\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": "var day_of_year = Meta.currentUserTime.format('DDD');\r\nvar amount = parseInt(day_of_year) / 100;\r\nMonzo.potDeposit.setAmount(amount.toFixed(2));\r\n\r\n"
  },
  {
    "original_description": "This applet will reward you 1p for every 10 metres you cycle or run, from a pot of your choice, using Strava.",
    "trigger_channel": "Strava",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "strava.new_activity_by_you"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Activity type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which activity?",
          "Slug": "activity_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time the activity was completed.",
        "description": "Date and time the activity was completed.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Strava.newActivityByYou.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Activity type\nThe type of activity completed.",
        "description": "The type of activity completed.",
        "details": {
          "Slug": "activity_type",
          "Filter code": "Strava.newActivityByYou.ActivityType",
          "Type": "String",
          "Example": "Ride"
        }
      },
      {
        "section": "Ingredients",
        "title": "Name\nThe name of the activity.",
        "description": "The name of the activity.",
        "details": {
          "Slug": "name",
          "Filter code": "Strava.newActivityByYou.Name",
          "Type": "String",
          "Example": "Evening Ride"
        }
      },
      {
        "section": "Ingredients",
        "title": "Distance meters\nDistance moved in meters.",
        "description": "Distance moved in meters.",
        "details": {
          "Slug": "distance",
          "Filter code": "Strava.newActivityByYou.DistanceMeters",
          "Type": "String",
          "Example": "4475.4"
        }
      },
      {
        "section": "Ingredients",
        "title": "Elapsed time\nTotal duration of the activity.",
        "description": "Total duration of the activity.",
        "details": {
          "Slug": "elapsed_time",
          "Filter code": "Strava.newActivityByYou.ElapsedTime",
          "Type": "String",
          "Example": "22 minutes, 13 seconds"
        }
      },
      {
        "section": "Ingredients",
        "title": "Elapsed time in seconds\nTotal duration of the activity in seconds.",
        "description": "Total duration of the activity in seconds.",
        "details": {
          "Slug": "elapsed_time_in_seconds",
          "Filter code": "Strava.newActivityByYou.ElapsedTimeInSeconds",
          "Type": "String",
          "Example": "1333"
        }
      },
      {
        "section": "Ingredients",
        "title": "Link to activity\nThe URL to the activity on Strava.",
        "description": "The URL to the activity on Strava.",
        "details": {
          "Slug": "link_to_activity",
          "Filter code": "Strava.newActivityByYou.LinkToActivity",
          "Type": "Web URL",
          "Example": "http://www.strava.com/activities/144461028"
        }
      },
      {
        "section": "Ingredients",
        "title": "Route map image url\nURL to a map image of the route.",
        "description": "URL to a map image of the route.",
        "details": {
          "Slug": "route_map_image_url",
          "Filter code": "Strava.newActivityByYou.RouteMapImageUrl",
          "Type": "Image URL",
          "Example": "https://maps.googleapis.com/maps/api/staticmap?size=400x400&path=weight:3|color:0xFC4C02FF|enc:{qreFj}bjVZQ"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_withdraw",
      "Filter code method": "Monzo.potWithdraw.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_withdraw\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potWithdraw.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": "var distance = parseInt(Strava.newActivityByYou.DistanceMeters);\r\nvar amount = distance/1000;\r\nMonzo.potWithdraw.setAmount(amount.toFixed(2));\r\n\r\n"
  },
  {
    "original_description": "The great British winter is coming! So take on our Winter Savings Challenge. Whenever the temperature drops below 10 degrees, you'll save £2 into a pot of your choice. You can customise the temperature and amount, if you like!",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.current_temperature_drops_below"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Temperature\nText input > Regular expression",
        "description": "Text input > Regular expression",
        "details": {
          "Label": "Temperature",
          "Slug": "temperature",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Degrees type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Degrees in",
          "Slug": "degrees_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.currentTemperatureDropsBelow.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of the current condition.",
        "description": "The URL to an image of the current condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "check_time",
          "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_deposit",
      "Filter code method": "Monzo.potDeposit.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_deposit\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Stay up to date on all things Harry Potter and the wizarding world by getting updates whenever there's a new story published in the MuggleNet RSS feed.",
    "trigger_channel": "RSS Feed",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "feed.new_feed_item"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Feed url\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Feed URL",
          "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>",
          "Slug": "feed_url",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "Feed.newFeedItem.EntryTitle",
          "Type": "String",
          "Example": "Launch Day!"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "Feed.newFeedItem.EntryUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/coming-soon"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry author\nThe entry's author name.",
        "description": "The entry's author name.",
        "details": {
          "Slug": "EntryAuthor",
          "Filter code": "Feed.newFeedItem.EntryAuthor",
          "Type": "String",
          "Example": "Linden Tibbets"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry content\nThe entry's content, may contain HTML.",
        "description": "The entry's content, may contain HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "Feed.newFeedItem.EntryContent",
          "Type": "String",
          "Example": "Well here we are on, blah, blah..."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.",
        "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.",
        "details": {
          "Slug": "EntryImageUrl",
          "Filter code": "Feed.newFeedItem.EntryImageUrl",
          "Type": "String",
          "Example": "http://ifttt.com/images/no_image_card.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "Feed.newFeedItem.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Feed title\nThe title of the feed.",
        "description": "The title of the feed.",
        "details": {
          "Slug": "FeedTitle",
          "Filter code": "Feed.newFeedItem.FeedTitle",
          "Type": "String",
          "Example": "ifttt Blog"
        }
      },
      {
        "section": "Ingredients",
        "title": "Feed url\nURL to the feed's regular page.",
        "description": "URL to the feed's regular page.",
        "details": {
          "Slug": "FeedUrl",
          "Filter code": "Feed.newFeedItem.FeedUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_rich_notification",
      "Filter code method": "IfNotifications.sendRichNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_rich_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendRichNotification.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Document title",
        "description": "Text input > Document title",
        "details": {
          "Label": "Title",
          "Helper text": "Optional, bold text above the message",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendRichNotification.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Link url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Link URL",
          "Helper text": "Optional, link may open in a browser or installed app",
          "Slug": "link_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendRichNotification.setLink Url(string: link_url)"
        }
      },
      {
        "section": "Action fields",
        "title": "Image url\nText input > Photo",
        "description": "Text input > Photo",
        "details": {
          "Label": "Image URL",
          "Helper text": "Optional",
          "Slug": "image_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendRichNotification.setImage Url(string: image_url)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Celebrate Earth Day on April 22nd with a Boost to your child's Give pot. You can then choose an environmental charity together they might like to donate this money towards! ",
    "trigger_channel": "Date & Time",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "date_and_time.every_year_on"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Datetime\nText input",
        "description": "Text input",
        "details": {
          "Label": "Date and time",
          "Slug": "datetime",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "DateAndTime.everyYearOn.CheckTime",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "RoosterMoney",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "roostermoney.boost",
      "Filter code method": "Roostermoney.boost.skip(string?: reason)",
      "Runtime method": "runAction(\"roostermoney.boost\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "If you want it to boost 10.00 enter 10. Do not include the currency character.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setAmount(string: amount)"
        }
      },
      {
        "section": "Action fields",
        "title": "Child\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Child",
          "Slug": "child",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setPot(string: pot)"
        }
      },
      {
        "section": "Action fields",
        "title": "Description\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Description",
          "Helper text": "Description to show in transaction history",
          "Slug": "description",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setDescription(string: description)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Celebrate International Children's Day on November 20th with a Boost to your child's Give pot. You can then choose a children's charity together they might like to donate this money towards! \r\n\r\n",
    "trigger_channel": "Date & Time",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "date_and_time.every_year_on"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Datetime\nText input",
        "description": "Text input",
        "details": {
          "Label": "Date and time",
          "Slug": "datetime",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "DateAndTime.everyYearOn.CheckTime",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "RoosterMoney",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "roostermoney.boost",
      "Filter code method": "Roostermoney.boost.skip(string?: reason)",
      "Runtime method": "runAction(\"roostermoney.boost\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "If you want it to boost 10.00 enter 10. Do not include the currency character.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setAmount(string: amount)"
        }
      },
      {
        "section": "Action fields",
        "title": "Child\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Child",
          "Slug": "child",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setPot(string: pot)"
        }
      },
      {
        "section": "Action fields",
        "title": "Description\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Description",
          "Helper text": "Description to show in transaction history",
          "Slug": "description",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setDescription(string: description)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Walk for charity! You can boost your child's Give pot an amount whenever they reach their daily step goal. Their steps can help them raise some money for a charity of their choosing.",
    "trigger_channel": "Fitbit",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "fitbit.daily-step-goal"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Step goal\nYour daily step goal",
        "description": "Your daily step goal",
        "details": {
          "Slug": "StepGoal",
          "Filter code": "Fitbit.dailyStepGoal.StepGoal",
          "Type": "String",
          "Example": "10000"
        }
      },
      {
        "section": "Ingredients",
        "title": "Steps\nNumber of steps you have taken",
        "description": "Number of steps you have taken",
        "details": {
          "Slug": "Steps",
          "Filter code": "Fitbit.dailyStepGoal.Steps",
          "Type": "String",
          "Example": "12546"
        }
      },
      {
        "section": "Ingredients",
        "title": "Date achieved\nDate you achieved your step goal",
        "description": "Date you achieved your step goal",
        "details": {
          "Slug": "DateAchieved",
          "Filter code": "Fitbit.dailyStepGoal.DateAchieved",
          "Type": "Date (ISO8601)",
          "Example": "2020-07-07"
        }
      }
    ],
    "action_channel": "RoosterMoney",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "roostermoney.boost",
      "Filter code method": "Roostermoney.boost.skip(string?: reason)",
      "Runtime method": "runAction(\"roostermoney.boost\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "If you want it to boost 10.00 enter 10. Do not include the currency character.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setAmount(string: amount)"
        }
      },
      {
        "section": "Action fields",
        "title": "Child\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Child",
          "Slug": "child",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setPot(string: pot)"
        }
      },
      {
        "section": "Action fields",
        "title": "Description\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Description",
          "Helper text": "Description to show in transaction history",
          "Slug": "description",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setDescription(string: description)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "At sunrise, your Mr. Coffee will automatically begin to brew a fresh pot of coffee.",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.sun_rises"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Sunrise at\nThe date and time of today's sunrise.",
        "description": "The date and time of today's sunrise.",
        "details": {
          "Slug": "sunrise_at",
          "Filter code": "Weather.sunRises.SunriseAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.sunRises.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.sunRises.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.sunRises.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of the current condition.",
        "description": "The URL to an image of the current condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.sunRises.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.sunRises.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "High temp fahrenheit\nToday's high temperature in degrees Fahrenheit",
        "description": "Today's high temperature in degrees Fahrenheit",
        "details": {
          "Slug": "high_temp_fahrenheit",
          "Filter code": "Weather.sunRises.HighTempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "High temp celsius\nToday's high temperature in degrees Celsius",
        "description": "Today's high temperature in degrees Celsius",
        "details": {
          "Slug": "high_temp_celsius",
          "Filter code": "Weather.sunRises.HighTempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Low temp fahrenheit\nToday's low temperature in degrees Fahrenheit",
        "description": "Today's low temperature in degrees Fahrenheit",
        "details": {
          "Slug": "low_temp_fahrenheit",
          "Filter code": "Weather.sunRises.LowTempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Low temp celsius\nToday's low temperature in degrees Celsius",
        "description": "Today's low temperature in degrees Celsius",
        "details": {
          "Slug": "low_temp_celsius",
          "Filter code": "Weather.sunRises.LowTempCelsius",
          "Type": "String",
          "Example": "18"
        }
      }
    ],
    "action_channel": "WeMo Coffeemaker",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "wemo_coffeemaker.attribute_coffeeMakerBrewMode",
      "Filter code method": "WemoCoffeemaker.attributeCoffeeMakerBrewMode.skip(string?: reason)",
      "Runtime method": "runAction(\"wemo_coffeemaker.attribute_coffeeMakerBrewMode\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Macaddress\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which device?",
          "Helper text": "Name of WeMo Coffee Maker.",
          "Slug": "macaddress",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Save a set amount toward one of your Goals every time you reach your Fitbit step goal.",
    "trigger_channel": "Fitbit",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "fitbit.daily-step-goal"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Step goal\nYour daily step goal",
        "description": "Your daily step goal",
        "details": {
          "Slug": "StepGoal",
          "Filter code": "Fitbit.dailyStepGoal.StepGoal",
          "Type": "String",
          "Example": "10000"
        }
      },
      {
        "section": "Ingredients",
        "title": "Steps\nNumber of steps you have taken",
        "description": "Number of steps you have taken",
        "details": {
          "Slug": "Steps",
          "Filter code": "Fitbit.dailyStepGoal.Steps",
          "Type": "String",
          "Example": "12546"
        }
      },
      {
        "section": "Ingredients",
        "title": "Date achieved\nDate you achieved your step goal",
        "description": "Date you achieved your step goal",
        "details": {
          "Slug": "DateAchieved",
          "Filter code": "Fitbit.dailyStepGoal.DateAchieved",
          "Type": "Date (ISO8601)",
          "Example": "2020-07-07"
        }
      }
    ],
    "action_channel": "Qapital",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "qapital.save_toward_goal",
      "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)",
      "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Goal\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which goal?",
          "Slug": "goal",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Amount to transfer",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Always hitting public transit delays or traffic? Customize this message and then keep this widget handy — when you press it, it'll tell the Slack channel you choose that you're hitting delays, but will be there soon. ",
    "trigger_channel": "Button widget",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "do_button.do_button_new_command_common"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Share url\nThe link to the Share page for the button press.",
        "description": "The link to the Share page for the button press.",
        "details": {
          "Slug": "ShareURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL",
          "Type": "String",
          "Example": "https://ifttt.com/share/McFwJfDH9Ns"
        }
      },
      {
        "section": "Ingredients",
        "title": "Latitude\nThe latitude of the location of the button press.",
        "description": "The latitude of the location of the button press.",
        "details": {
          "Slug": "Latitude",
          "Filter code": "DoButton.doButtonNewCommandCommon.Latitude",
          "Type": "String",
          "Example": "37.82666360000001"
        }
      },
      {
        "section": "Ingredients",
        "title": "Longitude\nThe longitude of the location of the button press.",
        "description": "The longitude of the location of the button press.",
        "details": {
          "Slug": "Longitude",
          "Filter code": "DoButton.doButtonNewCommandCommon.Longitude",
          "Type": "String",
          "Example": "-122.42301220000003"
        }
      },
      {
        "section": "Ingredients",
        "title": "Location map url\nThe link to the map of the location of the button press.",
        "description": "The link to the map of the location of the button press.",
        "details": {
          "Slug": "LocationMapURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL",
          "Type": "String",
          "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"
        }
      },
      {
        "section": "Ingredients",
        "title": "Location map image url\nThe image of the map of the location of the button press.",
        "description": "The image of the map of the location of the button press.",
        "details": {
          "Slug": "LocationMapImageURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL",
          "Type": "String",
          "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"
        }
      },
      {
        "section": "Ingredients",
        "title": "Occurred at\nThe date and time you pressed the button.",
        "description": "The date and time you pressed the button.",
        "details": {
          "Slug": "OccurredAt",
          "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Slack",
    "action_permission_id": "",
    "action_developer_info": {},
    "action_details": [],
    "filter_code": ""
  },
  {
    "original_description": "Automatically re-post any pinned messages from Discord into a Slack channel of your choice.",
    "trigger_channel": "Discord",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "discord.new_message_in_channel"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Channel\nNested dropdown list",
        "description": "Nested dropdown list",
        "details": {
          "Label": "Which channel?",
          "Helper text": "Confirm that <a href=\"https://ift.tt/disc_faq\" target=\"_blank\">permissions</a> are granted in your server. If your server isn’t listed, <a href=\"https://ift.tt/disc_server\" target=\"_blank\">reconnect the Discord service</a>.",
          "Slug": "channel_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time when the message was posted.",
        "description": "Date and time when the message was posted.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Discord.newMessageInChannel.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Message\nThe contents of the message.",
        "description": "The contents of the message.",
        "details": {
          "Slug": "message",
          "Filter code": "Discord.newMessageInChannel.Message",
          "Type": "String",
          "Example": "Hey everyone 👋"
        }
      },
      {
        "section": "Ingredients",
        "title": "Author\nThe author of the message.",
        "description": "The author of the message.",
        "details": {
          "Slug": "author",
          "Filter code": "Discord.newMessageInChannel.Author",
          "Type": "String",
          "Example": "username123"
        }
      },
      {
        "section": "Ingredients",
        "title": "Link to message\nThis is a link to the message in Discord.",
        "description": "This is a link to the message in Discord.",
        "details": {
          "Slug": "link_to_message",
          "Filter code": "Discord.newMessageInChannel.LinkToMessage",
          "Type": "Web URL",
          "Example": "https://discord.com/channels/833856998537166918/833856998537166921/1181411805982105631"
        }
      }
    ],
    "action_channel": "Slack",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "slack.post_to_channel",
      "Filter code method": "Slack.postToChannel.skip(string?: reason)",
      "Runtime method": "runAction(\"slack.post_to_channel\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Channel\nNested dropdown list",
        "description": "Nested dropdown list",
        "details": {
          "Label": "Which channel?",
          "Slug": "channel",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Helper text": "Optional",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Title URL",
          "Helper text": "Optional",
          "Slug": "title_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"
        }
      },
      {
        "section": "Action fields",
        "title": "Image url\nText input > Photo",
        "description": "Text input > Photo",
        "details": {
          "Label": "Thumbnail URL",
          "Helper text": "Optional",
          "Slug": "image_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "When a leak is detected by the Lyric Wi-Fi water leak and freeze detector it will turn on your chosen lights and make them Blue",
    "trigger_channel": "Honeywell Home",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "honeywell_lyric.water_leak"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "System\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select your system",
          "Slug": "system",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "created_at",
          "Filter code": "HoneywellLyric.waterLeak.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nThe name of the leak detector being monitored",
        "description": "The name of the leak detector being monitored",
        "details": {
          "Slug": "device_name",
          "Filter code": "HoneywellLyric.waterLeak.DeviceName",
          "Type": "String",
          "Example": "Washing machine"
        }
      }
    ],
    "action_channel": "Philips Hue",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "hue.set_color_all_hue",
      "Filter code method": "Hue.setColorAllHue.skip(string?: reason)",
      "Runtime method": "runAction(\"hue.set_color_all_hue\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Lights\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which lights?",
          "Slug": "lights",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Color\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Color value or name",
          "Helper text": "Accepts color names or CSS hex codes",
          "Slug": "color",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Hue.setColorAllHue.setColor(string: color)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "The WWF is world’s leading conservation organization, active in 100 countries. Their mission is to \"protect life on our planet — including our own.\" Read up on their insights and actions in Pocket at your leisure — this Applet will save their new stories to your queue.\r\n\r\n",
    "trigger_channel": "RSS Feed",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "feed.new_feed_item"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Feed url\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Feed URL",
          "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>",
          "Slug": "feed_url",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "Feed.newFeedItem.EntryTitle",
          "Type": "String",
          "Example": "Launch Day!"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "Feed.newFeedItem.EntryUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/coming-soon"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry author\nThe entry's author name.",
        "description": "The entry's author name.",
        "details": {
          "Slug": "EntryAuthor",
          "Filter code": "Feed.newFeedItem.EntryAuthor",
          "Type": "String",
          "Example": "Linden Tibbets"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry content\nThe entry's content, may contain HTML.",
        "description": "The entry's content, may contain HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "Feed.newFeedItem.EntryContent",
          "Type": "String",
          "Example": "Well here we are on, blah, blah..."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.",
        "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.",
        "details": {
          "Slug": "EntryImageUrl",
          "Filter code": "Feed.newFeedItem.EntryImageUrl",
          "Type": "String",
          "Example": "http://ifttt.com/images/no_image_card.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "Feed.newFeedItem.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Feed title\nThe title of the feed.",
        "description": "The title of the feed.",
        "details": {
          "Slug": "FeedTitle",
          "Filter code": "Feed.newFeedItem.FeedTitle",
          "Type": "String",
          "Example": "ifttt Blog"
        }
      },
      {
        "section": "Ingredients",
        "title": "Feed url\nURL to the feed's regular page.",
        "description": "URL to the feed's regular page.",
        "details": {
          "Slug": "FeedUrl",
          "Filter code": "Feed.newFeedItem.FeedUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/"
        }
      }
    ],
    "action_channel": "Pocket",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "pocket.read_it_later",
      "Filter code method": "Pocket.readItLater.skip(string?: reason)",
      "Runtime method": "runAction(\"pocket.read_it_later\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "URL",
          "Slug": "url",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Pocket.readItLater.setUrl(string: url)"
        }
      },
      {
        "section": "Action fields",
        "title": "Tags\nText input > Tags",
        "description": "Text input > Tags",
        "details": {
          "Label": "Tags",
          "Helper text": "Comma separated",
          "Slug": "tags",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Pocket.readItLater.setTags(string: tags)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Do you regularly check in with your community to ask for feedback or remind them of an event? This Applet auto-posts a message every month to help you stay consistent.",
    "trigger_channel": "Date & Time",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "date_and_time.every_month_on_the"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Month day\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Day of the month",
          "Slug": "month_day",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Time\nText input",
        "description": "Text input",
        "details": {
          "Label": "Time of day",
          "Slug": "time",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "DateAndTime.everyMonthOnThe.CheckTime",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Facebook Pages",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "facebook_pages.create_status_message_page",
      "Filter code method": "FacebookPages.createStatusMessagePage.skip(string?: reason)",
      "Runtime method": "runAction(\"facebook_pages.create_status_message_page\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Status message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "FacebookPages.createStatusMessagePage.setMessage(string: message)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "This Applet lets your team know via Slack when there's a systemwide service alert on KC Metro between the hours of 7-10am.",
    "trigger_channel": "King County Metro",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "king_county_metro.new_metro_alert_from_king_county_metro"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "KingCountyMetro.newMetroAlertFromKingCountyMetro.EntryTitle",
          "Type": "String",
          "Example": "Transit Alert Correction – Ride Metro to weekend events; note service revisions due to events, the Memorial Day holiday & Tuesday’s closure of the South Bellevue P&R"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "KingCountyMetro.newMetroAlertFromKingCountyMetro.EntryUrl",
          "Type": "String",
          "Example": "https://content.govdelivery.com/accounts/WAKING/bulletins/19d5d2d"
        }
      },
      {
        "section": "Ingredients",
        "title": "Content html\nThe entry's content, contains HTML.",
        "description": "The entry's content, contains HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "KingCountyMetro.newMetroAlertFromKingCountyMetro.ContentHtml",
          "Type": "String",
          "Example": "<p><font face=\"\"arial,helvetica,sans-serif\"\" size=\"\"3\"\">While riding Metro to most events remains a reliable and cost-effective way to go, Metro Transit service <a href=\"\"http://kingcounty.gov/depts/transportation/news/2017/20170524-Memorial-Day-transit.."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "KingCountyMetro.newMetroAlertFromKingCountyMetro.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Slack",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "slack.post_to_channel",
      "Filter code method": "Slack.postToChannel.skip(string?: reason)",
      "Runtime method": "runAction(\"slack.post_to_channel\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Channel\nNested dropdown list",
        "description": "Nested dropdown list",
        "details": {
          "Label": "Which channel?",
          "Slug": "channel",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Helper text": "Optional",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Title URL",
          "Helper text": "Optional",
          "Slug": "title_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"
        }
      },
      {
        "section": "Action fields",
        "title": "Image url\nText input > Photo",
        "description": "Text input > Photo",
        "details": {
          "Label": "Thumbnail URL",
          "Helper text": "Optional",
          "Slug": "image_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"
        }
      }
    ],
    "filter_code": "var Hour = Meta.currentUserTime.hour()\r\n\r\n// Skip outside of 7-10am\r\nif (Hour < 7 || Hour > 10) {\r\n  Slack.postToChannel.skip(\"Outside of commuting hours\")\r\n}\r\n\r\n\r\n"
  },
  {
    "original_description": "This Applet sends you a notification from the IFTTT app when there's a service alert on the Rapid Ride C line between 7-10am.",
    "trigger_channel": "King County Metro",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "king_county_metro.new_service_alert_on_rapid_ride_a_line"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryTitle",
          "Type": "String",
          "Example": "Launch Day!"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/coming-soon"
        }
      },
      {
        "section": "Ingredients",
        "title": "Content html\nThe entry's content, may contain HTML.",
        "description": "The entry's content, may contain HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.ContentHtml",
          "Type": "String",
          "Example": "Well here we are on, blah, blah..."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_notification",
      "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"
        }
      }
    ],
    "filter_code": "var Hour = Meta.currentUserTime.hour()\r\n\r\nif (Hour < 7 || Hour > 10) {\r\n  IfNotifications.sendNotification.skip(\"Not during the morning commute\")\r\n}\r\n\r\n\r\n"
  },
  {
    "original_description": "This Applet sends you a notification when there's a service alert on Rapid Ride E line between the hours of 7-10am and 5-7pm.",
    "trigger_channel": "King County Metro",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "king_county_metro.new_service_alert_on_rapid_ride_a_line"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryTitle",
          "Type": "String",
          "Example": "Launch Day!"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/coming-soon"
        }
      },
      {
        "section": "Ingredients",
        "title": "Content html\nThe entry's content, may contain HTML.",
        "description": "The entry's content, may contain HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.ContentHtml",
          "Type": "String",
          "Example": "Well here we are on, blah, blah..."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Notifications",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "if_notifications.send_notification",
      "Filter code method": "IfNotifications.sendNotification.skip(string?: reason)",
      "Runtime method": "runAction(\"if_notifications.send_notification\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "IfNotifications.sendNotification.setMessage(string: message)"
        }
      }
    ],
    "filter_code": "var Hour = Meta.currentUserTime.hour()\r\n\r\n// Skip outside of 7-10am and 5-7pm\r\nif (Hour <7 || (Hour > 10 && Hour < 17) || Hour > 19) {\r\n  IfNotifications.sendNotification.skip(\"Outside of commuting hours\")\r\n}\r\n\r\n\r\n"
  },
  {
    "original_description": "This Applet posts to a Slack channel when there's a service alert on Rapid Ride D line between the hours of 7-10am.",
    "trigger_channel": "King County Metro",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "king_county_metro.new_service_alert_on_rapid_ride_a_line"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryTitle",
          "Type": "String",
          "Example": "Launch Day!"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/coming-soon"
        }
      },
      {
        "section": "Ingredients",
        "title": "Content html\nThe entry's content, may contain HTML.",
        "description": "The entry's content, may contain HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.ContentHtml",
          "Type": "String",
          "Example": "Well here we are on, blah, blah..."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "KingCountyMetro.newServiceAlertOnRapidRideALine.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Slack",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "slack.post_to_channel",
      "Filter code method": "Slack.postToChannel.skip(string?: reason)",
      "Runtime method": "runAction(\"slack.post_to_channel\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Channel\nNested dropdown list",
        "description": "Nested dropdown list",
        "details": {
          "Label": "Which channel?",
          "Slug": "channel",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input",
        "description": "Text input",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Helper text": "Optional",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Title URL",
          "Helper text": "Optional",
          "Slug": "title_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setTitle Url(string: title_url)"
        }
      },
      {
        "section": "Action fields",
        "title": "Image url\nText input > Photo",
        "description": "Text input > Photo",
        "details": {
          "Label": "Thumbnail URL",
          "Helper text": "Optional",
          "Slug": "image_url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Slack.postToChannel.setImage Url(string: image_url)"
        }
      }
    ],
    "filter_code": "var Hour = Meta.currentUserTime.hour()\r\n\r\n// Skip outside of 7-10am and 5-7pm\r\nif (Hour < 7 || Hour > 10) {\r\n  Slack.postToChannel.skip(\"Outside of commuting hours\")\r\n}\r\n\r\n\r\n"
  },
  {
    "original_description": "This connection will Start dishwasher when electricity price is low in your area.",
    "trigger_channel": "True Energy Smart Home Denmark",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "True_Energy_DK.electricity_price_cheap"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Area\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select Region",
          "Helper text": "Region you wish to monitor",
          "Slug": "area",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Region\nDenmark Region being monitored",
        "description": "Denmark Region being monitored",
        "details": {
          "Slug": "area",
          "Filter code": "TrueEnergyDK.electricityPriceCheap.Region",
          "Type": "String",
          "Example": "West Denmark"
        }
      },
      {
        "section": "Ingredients",
        "title": "Valid from\nTime at which electricity price changes",
        "description": "Time at which electricity price changes",
        "details": {
          "Slug": "valid_from",
          "Filter code": "TrueEnergyDK.electricityPriceCheap.ValidFrom",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Price\nElectricity price per kWh in DKK",
        "description": "Electricity price per kWh in DKK",
        "details": {
          "Slug": "price",
          "Filter code": "TrueEnergyDK.electricityPriceCheap.Price",
          "Type": "String",
          "Example": "167.17"
        }
      },
      {
        "section": "Ingredients",
        "title": "Co2 emission\nCO2 emission per kWh in grams",
        "description": "CO2 emission per kWh in grams",
        "details": {
          "Slug": "co2_emission",
          "Filter code": "TrueEnergyDK.electricityPriceCheap.Co2Emission",
          "Type": "String",
          "Example": "108.77"
        }
      }
    ],
    "action_channel": "Home Connect Dishwasher",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "hc_dishwasher.dishwasher_turn_on",
      "Filter code method": "HcDishwasher.dishwasherTurnOn.skip(string?: reason)",
      "Runtime method": "runAction(\"hc_dishwasher.dishwasher_turn_on\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Ha\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which dishwasher?",
          "Slug": "ha_id",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "This creates a widget you can add to the home screen on your phone. When you press it,  a specific device you choose will get a faster internet connection on your TP-Link network.",
    "trigger_channel": "Button widget",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "do_button.do_button_new_command_common"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Share url\nThe link to the Share page for the button press.",
        "description": "The link to the Share page for the button press.",
        "details": {
          "Slug": "ShareURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.ShareURL",
          "Type": "String",
          "Example": "https://ifttt.com/share/McFwJfDH9Ns"
        }
      },
      {
        "section": "Ingredients",
        "title": "Latitude\nThe latitude of the location of the button press.",
        "description": "The latitude of the location of the button press.",
        "details": {
          "Slug": "Latitude",
          "Filter code": "DoButton.doButtonNewCommandCommon.Latitude",
          "Type": "String",
          "Example": "37.82666360000001"
        }
      },
      {
        "section": "Ingredients",
        "title": "Longitude\nThe longitude of the location of the button press.",
        "description": "The longitude of the location of the button press.",
        "details": {
          "Slug": "Longitude",
          "Filter code": "DoButton.doButtonNewCommandCommon.Longitude",
          "Type": "String",
          "Example": "-122.42301220000003"
        }
      },
      {
        "section": "Ingredients",
        "title": "Location map url\nThe link to the map of the location of the button press.",
        "description": "The link to the map of the location of the button press.",
        "details": {
          "Slug": "LocationMapURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapURL",
          "Type": "String",
          "Example": "https://maps.google.com/?ll=37.78308,-122.417236667&z=21"
        }
      },
      {
        "section": "Ingredients",
        "title": "Location map image url\nThe image of the map of the location of the button press.",
        "description": "The image of the map of the location of the button press.",
        "details": {
          "Slug": "LocationMapImageURL",
          "Filter code": "DoButton.doButtonNewCommandCommon.LocationMapImageURL",
          "Type": "String",
          "Example": "http://maps.google.com/maps/api/staticmap?center=37.78308,-122.417236667&zoom=21&size=710x440&maptype=roadmap&sensor=false&markers=color:red%7C37.78308,-122.417236667"
        }
      },
      {
        "section": "Ingredients",
        "title": "Occurred at\nThe date and time you pressed the button.",
        "description": "The date and time you pressed the button.",
        "details": {
          "Slug": "OccurredAt",
          "Filter code": "DoButton.doButtonNewCommandCommon.OccurredAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "TP-Link Router",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "tplink_router.prioritize_device",
      "Filter code method": "TplinkRouter.prioritizeDevice.skip(string?: reason)",
      "Runtime method": "runAction(\"tplink_router.prioritize_device\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Device name\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device?",
          "Helper text": "The name of the device to be prioritized.",
          "Slug": "device_name",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Duration of priority\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Duration of Priority",
          "Helper text": "The length of time the specified device will be prioritized for.",
          "Slug": "duration_of_priority",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Guarantee a faster internet connection for your Arlo each time a motion event is detected so you can find out what's happened right away.",
    "trigger_channel": "Arlo",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "arlo.motion"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device name\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device?",
          "Slug": "device_name",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nThe name of the device.",
        "description": "The name of the device.",
        "details": {
          "Slug": "device_name",
          "Filter code": "Arlo.motion.DeviceName",
          "Type": "String",
          "Example": "48B14C740AD5E"
        }
      },
      {
        "section": "Ingredients",
        "title": "Detection time\nDate and time of motion event detection.",
        "description": "Date and time of motion event detection.",
        "details": {
          "Slug": "detected_at",
          "Filter code": "Arlo.motion.DetectionTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "TP-Link Router",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "tplink_router.prioritize_device",
      "Filter code method": "TplinkRouter.prioritizeDevice.skip(string?: reason)",
      "Runtime method": "runAction(\"tplink_router.prioritize_device\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Device name\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device?",
          "Helper text": "The name of the device to be prioritized.",
          "Slug": "device_name",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Duration of priority\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Duration of Priority",
          "Helper text": "The length of time the specified device will be prioritized for.",
          "Slug": "duration_of_priority",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Guarantee a faster internet connection for your Arlo each time a sound event is detected so you can find out what's happened right away.",
    "trigger_channel": "Arlo",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "arlo.audio"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Device name\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device?",
          "Slug": "device_name",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Device name\nThe name of the device.",
        "description": "The name of the device.",
        "details": {
          "Slug": "device_name",
          "Filter code": "Arlo.audio.DeviceName",
          "Type": "String",
          "Example": "48B14C740AD5E"
        }
      },
      {
        "section": "Ingredients",
        "title": "Detected at\nDate and time of audio event detection.",
        "description": "Date and time of audio event detection.",
        "details": {
          "Slug": "detected_at",
          "Filter code": "Arlo.audio.DetectedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "TP-Link Router",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "tplink_router.prioritize_device",
      "Filter code method": "TplinkRouter.prioritizeDevice.skip(string?: reason)",
      "Runtime method": "runAction(\"tplink_router.prioritize_device\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Device name\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which Device?",
          "Helper text": "The name of the device to be prioritized.",
          "Slug": "device_name",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Duration of priority\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Duration of Priority",
          "Helper text": "The length of time the specified device will be prioritized for.",
          "Slug": "duration_of_priority",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "This Applet will locate and copy over any new event added from an iOS Calendar to a Google Calendar you choose.",
    "trigger_channel": "iOS Calendar",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "ios_calendar.new_calendar_event_in_calendar"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Calendar name\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Calendar name",
          "Slug": "calendar_name",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Title\nTitle of the calendar event.",
        "description": "Title of the calendar event.",
        "details": {
          "Slug": "Title",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Title",
          "Type": "String",
          "Example": "Coffee with Max"
        }
      },
      {
        "section": "Ingredients",
        "title": "Start date\nThe date the event starts.",
        "description": "The date the event starts.",
        "details": {
          "Slug": "StartDate",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.StartDate",
          "Type": "String",
          "Example": "February 9th, 2017 at 10:30AM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Invitees\nA comma-separated list of people invited to the event.",
        "description": "A comma-separated list of people invited to the event.",
        "details": {
          "Slug": "Invitees",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Invitees",
          "Type": "String",
          "Example": "Eric, Jon, Max, and Zhe"
        }
      },
      {
        "section": "Ingredients",
        "title": "Organizer\nThe organizer of the event, if any.",
        "description": "The organizer of the event, if any.",
        "details": {
          "Slug": "Organizer",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Organizer",
          "Type": "String",
          "Example": "Max Meyers"
        }
      },
      {
        "section": "Ingredients",
        "title": "Location\nThe location of the event, if any.",
        "description": "The location of the event, if any.",
        "details": {
          "Slug": "Location",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Location",
          "Type": "String",
          "Example": "Machine Coffee & Deli"
        }
      },
      {
        "section": "Ingredients",
        "title": "Notes\nThe notes associated with the event, if any.",
        "description": "The notes associated with the event, if any.",
        "details": {
          "Slug": "Notes",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Notes",
          "Type": "String",
          "Example": "Let's get together and talk!"
        }
      },
      {
        "section": "Ingredients",
        "title": "Date created\nThe date the event was added to the calendar.",
        "description": "The date the event was added to the calendar.",
        "details": {
          "Slug": "DateCreated",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.DateCreated",
          "Type": "String",
          "Example": "February 6th, 2017 at 3:00PM"
        }
      },
      {
        "section": "Ingredients",
        "title": "End date\nThe date the event ends.",
        "description": "The date the event ends.",
        "details": {
          "Slug": "EndDate",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.EndDate",
          "Type": "String",
          "Example": "February 9th, 2017 at 11:00AM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Calendar name\nThe name of the event's calendar.",
        "description": "The name of the event's calendar.",
        "details": {
          "Slug": "CalendarName",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.CalendarName",
          "Type": "String",
          "Example": "Personal"
        }
      },
      {
        "section": "Ingredients",
        "title": "Url\nThe URL associated with the event, if any.",
        "description": "The URL associated with the event, if any.",
        "details": {
          "Slug": "URL",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.URL",
          "Type": "String",
          "Example": "https://ifttt.com"
        }
      }
    ],
    "action_channel": "Google Calendar",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "google_calendar.add_detailed_event",
      "Filter code method": "GoogleCalendar.addDetailedEvent.skip(string?: reason)",
      "Runtime method": "runAction(\"google_calendar.add_detailed_event\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Calendar\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which calendar?",
          "Slug": "calendar",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Start time\nText input > ISO 8601 date and time",
        "description": "Text input > ISO 8601 date and time",
        "details": {
          "Label": "Start time",
          "Helper text": "Ex. 10AM, Next Monday at 3PM.",
          "Slug": "start_time",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setStart Time(string: start_time)"
        }
      },
      {
        "section": "Action fields",
        "title": "End time\nText input > ISO 8601 date and time",
        "description": "Text input > ISO 8601 date and time",
        "details": {
          "Label": "End time",
          "Slug": "end_time",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setEnd Time(string: end_time)"
        }
      },
      {
        "section": "Action fields",
        "title": "All day\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "All day?",
          "Helper text": "No by default. All day events will only consider the date in the start time and end time fields.",
          "Slug": "all_day",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setAll Day(string: all_day)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Helper text": "Optional",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Description\nText input > Long text",
        "description": "Text input > Long text",
        "details": {
          "Label": "Description",
          "Helper text": "Optional",
          "Slug": "description",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setDescription(string: description)"
        }
      },
      {
        "section": "Action fields",
        "title": "Location\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Location",
          "Helper text": "Optional",
          "Slug": "location",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setLocation(string: location)"
        }
      },
      {
        "section": "Action fields",
        "title": "Attendees\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Attendees",
          "Helper text": "Optional comma separated list of attendee emails",
          "Slug": "attendees",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setAttendees(string: attendees)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "This Applet will locate and copy over any new event added from the iOS Calendar you choose to the Google Calendar you choose. Stay in sync!",
    "trigger_channel": "iOS Calendar",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "ios_calendar.new_calendar_event_in_calendar"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Calendar name\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Calendar name",
          "Slug": "calendar_name",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Title\nTitle of the calendar event.",
        "description": "Title of the calendar event.",
        "details": {
          "Slug": "Title",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Title",
          "Type": "String",
          "Example": "Coffee with Max"
        }
      },
      {
        "section": "Ingredients",
        "title": "Start date\nThe date the event starts.",
        "description": "The date the event starts.",
        "details": {
          "Slug": "StartDate",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.StartDate",
          "Type": "String",
          "Example": "February 9th, 2017 at 10:30AM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Invitees\nA comma-separated list of people invited to the event.",
        "description": "A comma-separated list of people invited to the event.",
        "details": {
          "Slug": "Invitees",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Invitees",
          "Type": "String",
          "Example": "Eric, Jon, Max, and Zhe"
        }
      },
      {
        "section": "Ingredients",
        "title": "Organizer\nThe organizer of the event, if any.",
        "description": "The organizer of the event, if any.",
        "details": {
          "Slug": "Organizer",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Organizer",
          "Type": "String",
          "Example": "Max Meyers"
        }
      },
      {
        "section": "Ingredients",
        "title": "Location\nThe location of the event, if any.",
        "description": "The location of the event, if any.",
        "details": {
          "Slug": "Location",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Location",
          "Type": "String",
          "Example": "Machine Coffee & Deli"
        }
      },
      {
        "section": "Ingredients",
        "title": "Notes\nThe notes associated with the event, if any.",
        "description": "The notes associated with the event, if any.",
        "details": {
          "Slug": "Notes",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.Notes",
          "Type": "String",
          "Example": "Let's get together and talk!"
        }
      },
      {
        "section": "Ingredients",
        "title": "Date created\nThe date the event was added to the calendar.",
        "description": "The date the event was added to the calendar.",
        "details": {
          "Slug": "DateCreated",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.DateCreated",
          "Type": "String",
          "Example": "February 6th, 2017 at 3:00PM"
        }
      },
      {
        "section": "Ingredients",
        "title": "End date\nThe date the event ends.",
        "description": "The date the event ends.",
        "details": {
          "Slug": "EndDate",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.EndDate",
          "Type": "String",
          "Example": "February 9th, 2017 at 11:00AM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Calendar name\nThe name of the event's calendar.",
        "description": "The name of the event's calendar.",
        "details": {
          "Slug": "CalendarName",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.CalendarName",
          "Type": "String",
          "Example": "Personal"
        }
      },
      {
        "section": "Ingredients",
        "title": "Url\nThe URL associated with the event, if any.",
        "description": "The URL associated with the event, if any.",
        "details": {
          "Slug": "URL",
          "Filter code": "IosCalendar.newCalendarEventInCalendar.URL",
          "Type": "String",
          "Example": "https://ifttt.com"
        }
      }
    ],
    "action_channel": "Google Calendar",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "google_calendar.add_detailed_event",
      "Filter code method": "GoogleCalendar.addDetailedEvent.skip(string?: reason)",
      "Runtime method": "runAction(\"google_calendar.add_detailed_event\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Calendar\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which calendar?",
          "Slug": "calendar",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Start time\nText input > ISO 8601 date and time",
        "description": "Text input > ISO 8601 date and time",
        "details": {
          "Label": "Start time",
          "Helper text": "Ex. 10AM, Next Monday at 3PM.",
          "Slug": "start_time",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setStart Time(string: start_time)"
        }
      },
      {
        "section": "Action fields",
        "title": "End time\nText input > ISO 8601 date and time",
        "description": "Text input > ISO 8601 date and time",
        "details": {
          "Label": "End time",
          "Slug": "end_time",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setEnd Time(string: end_time)"
        }
      },
      {
        "section": "Action fields",
        "title": "All day\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "All day?",
          "Helper text": "No by default. All day events will only consider the date in the start time and end time fields.",
          "Slug": "all_day",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setAll Day(string: all_day)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Helper text": "Optional",
          "Slug": "title",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Description\nText input > Long text",
        "description": "Text input > Long text",
        "details": {
          "Label": "Description",
          "Helper text": "Optional",
          "Slug": "description",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setDescription(string: description)"
        }
      },
      {
        "section": "Action fields",
        "title": "Location\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Location",
          "Helper text": "Optional",
          "Slug": "location",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setLocation(string: location)"
        }
      },
      {
        "section": "Action fields",
        "title": "Attendees\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Attendees",
          "Helper text": "Optional comma separated list of attendee emails",
          "Slug": "attendees",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleCalendar.addDetailedEvent.setAttendees(string: attendees)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "When electricity prices are high, reduce energy consumption buy adjusting the freezer temperature to a bit warmer. ",
    "trigger_channel": "True Energy Smart Home Denmark",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "True_Energy_DK.electricity_price_expensive"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Area\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Select Region",
          "Helper text": "Region you wish to monitor",
          "Slug": "area",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Region\nDenmark Region being monitored",
        "description": "Denmark Region being monitored",
        "details": {
          "Slug": "area",
          "Filter code": "TrueEnergyDK.electricityPriceExpensive.Region",
          "Type": "String",
          "Example": "West Denmark"
        }
      },
      {
        "section": "Ingredients",
        "title": "Valid from\nTime at which electricity price changes",
        "description": "Time at which electricity price changes",
        "details": {
          "Slug": "valid_from",
          "Filter code": "TrueEnergyDK.electricityPriceExpensive.ValidFrom",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Price\nElectricity price per kWh in DKK",
        "description": "Electricity price per kWh in DKK",
        "details": {
          "Slug": "price",
          "Filter code": "TrueEnergyDK.electricityPriceExpensive.Price",
          "Type": "String",
          "Example": "167.17"
        }
      },
      {
        "section": "Ingredients",
        "title": "Co2 emission\nCO2 emission per kWh in grams",
        "description": "CO2 emission per kWh in grams",
        "details": {
          "Slug": "co2_emission",
          "Filter code": "TrueEnergyDK.electricityPriceExpensive.Co2Emission",
          "Type": "String",
          "Example": "108.77"
        }
      }
    ],
    "action_channel": "Home Connect Fridge Freezer",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "hc_fridge.freezer_set_temperature",
      "Filter code method": "HcFridge.freezerSetTemperature.skip(string?: reason)",
      "Runtime method": "runAction(\"hc_fridge.freezer_set_temperature\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Ha\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which fridge?",
          "Helper text": "Please note that your fridge freezer has to be connected to be listed.",
          "Slug": "ha_id",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Temperature\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Temperature",
          "Helper text": "Please note that not every temperature is supported by the appliance. For more information please check your user manual.",
          "Slug": "temperature",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Change Nexus Home AC modes when temperature reduces",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.current_temperature_drops_below"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Temperature\nText input > Regular expression",
        "description": "Text input > Regular expression",
        "details": {
          "Label": "Temperature",
          "Slug": "temperature",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Degrees type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Degrees in",
          "Slug": "degrees_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.currentTemperatureDropsBelow.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.currentTemperatureDropsBelow.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.currentTemperatureDropsBelow.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of the current condition.",
        "description": "The URL to an image of the current condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.currentTemperatureDropsBelow.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.currentTemperatureDropsBelow.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "check_time",
          "Filter code": "Weather.currentTemperatureDropsBelow.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Brilliant Nexus",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "brilliant_nexus.ACExecution",
      "Filter code method": "BrilliantNexus.acExecution.skip(string?: reason)",
      "Runtime method": "runAction(\"brilliant_nexus.ACExecution\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Device name\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Device Name",
          "Helper text": "Name of the AC device which you have created in Brilliant Nexus",
          "Slug": "device_name",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Mode\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Mode",
          "Helper text": "Select the Mode which you want to set it too",
          "Slug": "mode",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "BrilliantNexus.acExecution.setMode(string: mode)"
        }
      },
      {
        "section": "Action fields",
        "title": "Temperature\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Temperature",
          "Helper text": "Set the AC temperature you want to set it for the mode",
          "Slug": "temperature",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "BrilliantNexus.acExecution.setTemperature(string: temperature)"
        }
      },
      {
        "section": "Action fields",
        "title": "Fan speed\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Fan speed",
          "Helper text": "set your fan speed for the AC on selected mode",
          "Slug": "fan_speed",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "BrilliantNexus.acExecution.setFan Speed(string: fan_speed)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Every time you achieve your daily step goal with Fitbit it will be displayed on your Glance Clock.",
    "trigger_channel": "Fitbit",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "fitbit.daily-step-goal"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Step goal\nYour daily step goal",
        "description": "Your daily step goal",
        "details": {
          "Slug": "StepGoal",
          "Filter code": "Fitbit.dailyStepGoal.StepGoal",
          "Type": "String",
          "Example": "10000"
        }
      },
      {
        "section": "Ingredients",
        "title": "Steps\nNumber of steps you have taken",
        "description": "Number of steps you have taken",
        "details": {
          "Slug": "Steps",
          "Filter code": "Fitbit.dailyStepGoal.Steps",
          "Type": "String",
          "Example": "12546"
        }
      },
      {
        "section": "Ingredients",
        "title": "Date achieved\nDate you achieved your step goal",
        "description": "Date you achieved your step goal",
        "details": {
          "Slug": "DateAchieved",
          "Filter code": "Fitbit.dailyStepGoal.DateAchieved",
          "Type": "Date (ISO8601)",
          "Example": "2020-07-07"
        }
      }
    ],
    "action_channel": "Glance clock",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "glanceclock.notice",
      "Filter code method": "Glanceclock.notice.skip(string?: reason)",
      "Runtime method": "runAction(\"glanceclock.notice\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Clock\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Clock",
          "Slug": "clock",
          "Required": "false",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Text\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Message",
          "Slug": "text",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Glanceclock.notice.setText(string: text)"
        }
      },
      {
        "section": "Action fields",
        "title": "Sound\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Sound",
          "Slug": "sound",
          "Required": "false",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Animation\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Animation Type",
          "Slug": "animation",
          "Required": "false",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Color\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Animation Color",
          "Slug": "color",
          "Required": "false",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Every time your Fitbit daily calorie burn goal is achieved, a Signal will be sent to your Das Keyboard.",
    "trigger_channel": "Fitbit",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "fitbit.daily-calorie-burn-goal"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Calorie burn goal\nYour daily calorie burn goal",
        "description": "Your daily calorie burn goal",
        "details": {
          "Slug": "CalorieBurnGoal",
          "Filter code": "Fitbit.dailyCalorieBurnGoal.CalorieBurnGoal",
          "Type": "String",
          "Example": "2000"
        }
      },
      {
        "section": "Ingredients",
        "title": "Calories burned\nNumber of calories burned",
        "description": "Number of calories burned",
        "details": {
          "Slug": "CaloriesBurned",
          "Filter code": "Fitbit.dailyCalorieBurnGoal.CaloriesBurned",
          "Type": "String",
          "Example": "2123"
        }
      },
      {
        "section": "Ingredients",
        "title": "Date achieved\nDate you achieved your calorie burn goal",
        "description": "Date you achieved your calorie burn goal",
        "details": {
          "Slug": "DateAchieved",
          "Filter code": "Fitbit.dailyCalorieBurnGoal.DateAchieved",
          "Type": "Date (ISO8601)",
          "Example": "2020-07-07"
        }
      }
    ],
    "action_channel": "Das Keyboard Q",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "daskeyboardq.signals",
      "Filter code method": "Daskeyboardq.signals.skip(string?: reason)",
      "Runtime method": "runAction(\"daskeyboardq.signals\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Name\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Name",
          "Helper text": "Name of the Signal",
          "Slug": "name",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Daskeyboardq.signals.setName(string: name)"
        }
      },
      {
        "section": "Action fields",
        "title": "Zone\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Zone",
          "Helper text": "Key which will be colored when the Signal is received",
          "Slug": "zone",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Color\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Color",
          "Slug": "color",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input > Short text",
        "description": "Text input > Short text",
        "details": {
          "Label": "Message",
          "Helper text": "Message of the Signal",
          "Slug": "message",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Daskeyboardq.signals.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Effect\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Effect",
          "Helper text": "The effect is how your color will be displayed",
          "Slug": "effect",
          "Required": "false",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Device",
          "Slug": "device",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Save energy and money during SmartHours critical pricing events. ",
    "trigger_channel": "SmartHours™️",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "oge.price_changes"
    },
    "trigger_details": [
      {
        "section": "Ingredients",
        "title": "Price changed at\nDate and time the price changed.",
        "description": "Date and time the price changed.",
        "details": {
          "Slug": "price_changed_at",
          "Filter code": "Oge.priceChanges.PriceChangedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Smart hours price\nCurrent price level (can be low, standard, high or critical).",
        "description": "Current price level (can be low, standard, high or critical).",
        "details": {
          "Slug": "smart_hours_price",
          "Filter code": "Oge.priceChanges.SmartHoursPrice",
          "Type": "String",
          "Example": "standard"
        }
      }
    ],
    "action_channel": "Aquanta",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "aquanta.away",
      "Filter code method": "Aquanta.away.skip(string?: reason)",
      "Runtime method": "runAction(\"aquanta.away\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Device\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "What device should be put into Away?",
          "Slug": "device",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Start\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "When should the Away start?",
          "Helper text": "Optional delay before the Away starts. For instance: '1 hour', '15 mins', or '2 days'. Leave blank for immediately.",
          "Slug": "start",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Aquanta.away.setStart(string: start)"
        }
      },
      {
        "section": "Action fields",
        "title": "End\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "How long should Away last?",
          "Helper text": "Duration of Away. For example: '2 hours', '1 day', or '15 mins'",
          "Slug": "end",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Aquanta.away.setEnd(string: end)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Are your kids receiving cash gifts this Christmas? You can schedule a Christmas boost to deliver your child's gift money on the big day, so you don't have to wake up as early as Santa!",
    "trigger_channel": "Date & Time",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "date_and_time.every_year_on"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Datetime\nText input",
        "description": "Text input",
        "details": {
          "Label": "Date and time",
          "Slug": "datetime",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "DateAndTime.everyYearOn.CheckTime",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "RoosterMoney",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "roostermoney.boost",
      "Filter code method": "Roostermoney.boost.skip(string?: reason)",
      "Runtime method": "runAction(\"roostermoney.boost\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "If you want it to boost 10.00 enter 10. Do not include the currency character.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setAmount(string: amount)"
        }
      },
      {
        "section": "Action fields",
        "title": "Child\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Child",
          "Slug": "child",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setPot(string: pot)"
        }
      },
      {
        "section": "Action fields",
        "title": "Description\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Description",
          "Helper text": "Description to show in transaction history",
          "Slug": "description",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "Roostermoney.boost.setDescription(string: description)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Hit your fitness goals and your financial goals at the same time! Specify the type of activity (run or ride) and the amount you'd like to save when you set up the Applet. ",
    "trigger_channel": "Strava",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "strava.new_activity_by_you"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Activity type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which activity?",
          "Slug": "activity_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time the activity was completed.",
        "description": "Date and time the activity was completed.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Strava.newActivityByYou.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Activity type\nThe type of activity completed.",
        "description": "The type of activity completed.",
        "details": {
          "Slug": "activity_type",
          "Filter code": "Strava.newActivityByYou.ActivityType",
          "Type": "String",
          "Example": "Ride"
        }
      },
      {
        "section": "Ingredients",
        "title": "Name\nThe name of the activity.",
        "description": "The name of the activity.",
        "details": {
          "Slug": "name",
          "Filter code": "Strava.newActivityByYou.Name",
          "Type": "String",
          "Example": "Evening Ride"
        }
      },
      {
        "section": "Ingredients",
        "title": "Distance meters\nDistance moved in meters.",
        "description": "Distance moved in meters.",
        "details": {
          "Slug": "distance",
          "Filter code": "Strava.newActivityByYou.DistanceMeters",
          "Type": "String",
          "Example": "4475.4"
        }
      },
      {
        "section": "Ingredients",
        "title": "Elapsed time\nTotal duration of the activity.",
        "description": "Total duration of the activity.",
        "details": {
          "Slug": "elapsed_time",
          "Filter code": "Strava.newActivityByYou.ElapsedTime",
          "Type": "String",
          "Example": "22 minutes, 13 seconds"
        }
      },
      {
        "section": "Ingredients",
        "title": "Elapsed time in seconds\nTotal duration of the activity in seconds.",
        "description": "Total duration of the activity in seconds.",
        "details": {
          "Slug": "elapsed_time_in_seconds",
          "Filter code": "Strava.newActivityByYou.ElapsedTimeInSeconds",
          "Type": "String",
          "Example": "1333"
        }
      },
      {
        "section": "Ingredients",
        "title": "Link to activity\nThe URL to the activity on Strava.",
        "description": "The URL to the activity on Strava.",
        "details": {
          "Slug": "link_to_activity",
          "Filter code": "Strava.newActivityByYou.LinkToActivity",
          "Type": "Web URL",
          "Example": "http://www.strava.com/activities/144461028"
        }
      },
      {
        "section": "Ingredients",
        "title": "Route map image url\nURL to a map image of the route.",
        "description": "URL to a map image of the route.",
        "details": {
          "Slug": "route_map_image_url",
          "Filter code": "Strava.newActivityByYou.RouteMapImageUrl",
          "Type": "Image URL",
          "Example": "https://maps.googleapis.com/maps/api/staticmap?size=400x400&path=weight:3|color:0xFC4C02FF|enc:{qreFj}bjVZQ"
        }
      }
    ],
    "action_channel": "Qapital",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "qapital.save_toward_goal",
      "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)",
      "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Goal\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which goal?",
          "Slug": "goal",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Amount to transfer",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "What's your money worth? Compare any two currencies — every day the new rate will be logged to a Google spreadsheet. Great for trip planning!",
    "trigger_channel": "Finance",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "finance.currency_exchange_rate_stocks"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Input currency\nNested dropdown list",
        "description": "Nested dropdown list",
        "details": {
          "Label": "Input currency",
          "Slug": "input_currency",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Output currency\nNested dropdown list",
        "description": "Nested dropdown list",
        "details": {
          "Label": "Output currency",
          "Slug": "output_currency",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Time\nText input",
        "description": "Text input",
        "details": {
          "Label": "Time",
          "Helper text": "Based on your time zone settings",
          "Slug": "time",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Input currency\nThe symbol for the input currency.",
        "description": "The symbol for the input currency.",
        "details": {
          "Slug": "InputCurrency",
          "Filter code": "Finance.currencyExchangeRateStocks.InputCurrency",
          "Type": "String",
          "Example": "USD"
        }
      },
      {
        "section": "Ingredients",
        "title": "Output currency\nThe symbol for the output currency.",
        "description": "The symbol for the output currency.",
        "details": {
          "Slug": "OutputCurrency",
          "Filter code": "Finance.currencyExchangeRateStocks.OutputCurrency",
          "Type": "String",
          "Example": "EUR"
        }
      },
      {
        "section": "Ingredients",
        "title": "Exchange rate\nThe exchange rate between currencies.",
        "description": "The exchange rate between currencies.",
        "details": {
          "Slug": "ExchangeRate",
          "Filter code": "Finance.currencyExchangeRateStocks.ExchangeRate",
          "Type": "String",
          "Example": "0.75416"
        }
      },
      {
        "section": "Ingredients",
        "title": "Info url\nA link to more information about the exchange rate.",
        "description": "A link to more information about the exchange rate.",
        "details": {
          "Slug": "InfoUrl",
          "Filter code": "Finance.currencyExchangeRateStocks.InfoUrl",
          "Type": "String",
          "Example": "http://finance.yahoo.com/q/bc?s=USDEUR=X"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "CheckTime",
          "Filter code": "Finance.currencyExchangeRateStocks.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Google Docs",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "google_docs.append_to_google_doc",
      "Filter code method": "GoogleDocs.appendToGoogleDoc.skip(string?: reason)",
      "Runtime method": "runAction(\"google_docs.append_to_google_doc\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Filename\nText input > File name",
        "description": "Text input > File name",
        "details": {
          "Label": "Document name",
          "Helper text": "Will create a new file if one with this title doesn’t exist",
          "Slug": "filename",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "GoogleDocs.appendToGoogleDoc.setFilename(string: filename)"
        }
      },
      {
        "section": "Action fields",
        "title": "Body\nText input > HTML",
        "description": "Text input > HTML",
        "details": {
          "Label": "Content",
          "Helper text": "some HTML ok",
          "Slug": "body",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "GoogleDocs.appendToGoogleDoc.setBody(string: body)"
        }
      },
      {
        "section": "Action fields",
        "title": "Path\nText input > Path to a folder",
        "description": "Text input > Path to a folder",
        "details": {
          "Label": "Drive folder path",
          "Helper text": "Format: some/folder/path (defaults to “IFTTT”)",
          "Slug": "path",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleDocs.appendToGoogleDoc.setPath(string: path)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Whenever it rains at a place of your choice, this Applet will move some money into one of your Monzo pots",
    "trigger_channel": "Weather Underground",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "weather.current_condition_is"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Condition\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Current condition",
          "Slug": "condition",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Location\nLocation input > Point",
        "description": "Location input > Point",
        "details": {
          "Label": "Location",
          "Helper text": "Weather in this area",
          "Slug": "location",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp fahrenheit\nThe current temperature in degrees Fahrenheit",
        "description": "The current temperature in degrees Fahrenheit",
        "details": {
          "Slug": "temp_fahrenheit",
          "Filter code": "Weather.currentConditionIs.TempFahrenheit",
          "Type": "String",
          "Example": "72"
        }
      },
      {
        "section": "Ingredients",
        "title": "Temp celsius\nThe current temperature in degrees Celsius",
        "description": "The current temperature in degrees Celsius",
        "details": {
          "Slug": "temp_celsius",
          "Filter code": "Weather.currentConditionIs.TempCelsius",
          "Type": "String",
          "Example": "18"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition\nThe current weather condition.",
        "description": "The current weather condition.",
        "details": {
          "Slug": "condition",
          "Filter code": "Weather.currentConditionIs.Condition",
          "Type": "String",
          "Example": "Sunny"
        }
      },
      {
        "section": "Ingredients",
        "title": "Condition image url\nThe URL to an image of the current condition.",
        "description": "The URL to an image of the current condition.",
        "details": {
          "Slug": "condition_image_url",
          "Filter code": "Weather.currentConditionIs.ConditionImageURL",
          "Type": "Image URL",
          "Example": "http://www.ifttt.com/weather/sunny.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Forecast url\nThe URL to a five day forecast for your location.",
        "description": "The URL to a five day forecast for your location.",
        "details": {
          "Slug": "forecast_url",
          "Filter code": "Weather.currentConditionIs.ForecastUrl",
          "Type": "Web URL",
          "Example": "http://www.weather.com/weather/5-day/GMXX1273"
        }
      },
      {
        "section": "Ingredients",
        "title": "Check time\nDate and time this trigger was checked.",
        "description": "Date and time this trigger was checked.",
        "details": {
          "Slug": "check_time",
          "Filter code": "Weather.currentConditionIs.CheckTime",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      }
    ],
    "action_channel": "Monzo",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "monzo.pot_deposit",
      "Filter code method": "Monzo.potDeposit.skip(string?: reason)",
      "Runtime method": "runAction(\"monzo.pot_deposit\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Helper text": "One of the pots on your Monzo account.",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Amount",
          "Helper text": "The amount in GBP (£) to move. For example, &quot;5&quot; for £5 or &quot;0.33&quot; for 33p. Don't include the currency symbol.",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "Monzo.potDeposit.setAmount(string: amount)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Blink the Phillips Hue lights when your child has money removed.",
    "trigger_channel": "RoosterMoney",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "roostermoney.boosted"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Child\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Child",
          "Slug": "child",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Pot\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Pot",
          "Slug": "pot",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Roostermoney.boosted.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Amount\nThe amount they were boosted",
        "description": "The amount they were boosted",
        "details": {
          "Slug": "amount",
          "Filter code": "Roostermoney.boosted.Amount",
          "Type": "String",
          "Example": "£1.23"
        }
      }
    ],
    "action_channel": "Philips Hue",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "hue.blink_all_hue",
      "Filter code method": "Hue.blinkAllHue.skip(string?: reason)",
      "Runtime method": "runAction(\"hue.blink_all_hue\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Lights\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which lights?",
          "Slug": "lights",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "The Center is a nonpartisan, independent, nonprofit research group that tracks money in US politics. Stay in the know on their findings and news with an email in your inbox every Wednesday morning. ",
    "trigger_channel": "RSS Feed",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "feed.new_feed_item"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Feed url\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Feed URL",
          "Helper text": "for feed URL requirements, <a class=\"open-native\" href=\"https://help.ifttt.com/hc/en-us/articles/115010396768-My-RSS-feed-is-not-working-correctly\" target=\"_blank\">visit the help page</a>",
          "Slug": "feed_url",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "Feed.newFeedItem.EntryTitle",
          "Type": "String",
          "Example": "Launch Day!"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "Feed.newFeedItem.EntryUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/coming-soon"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry author\nThe entry's author name.",
        "description": "The entry's author name.",
        "details": {
          "Slug": "EntryAuthor",
          "Filter code": "Feed.newFeedItem.EntryAuthor",
          "Type": "String",
          "Example": "Linden Tibbets"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry content\nThe entry's content, may contain HTML.",
        "description": "The entry's content, may contain HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "Feed.newFeedItem.EntryContent",
          "Type": "String",
          "Example": "Well here we are on, blah, blah..."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry image url\nURL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.",
        "description": "URL for the first image in the entry. If the entry doesn't have an image will point to a placeholder image.",
        "details": {
          "Slug": "EntryImageUrl",
          "Filter code": "Feed.newFeedItem.EntryImageUrl",
          "Type": "String",
          "Example": "http://ifttt.com/images/no_image_card.png"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "Feed.newFeedItem.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      },
      {
        "section": "Ingredients",
        "title": "Feed title\nThe title of the feed.",
        "description": "The title of the feed.",
        "details": {
          "Slug": "FeedTitle",
          "Filter code": "Feed.newFeedItem.FeedTitle",
          "Type": "String",
          "Example": "ifttt Blog"
        }
      },
      {
        "section": "Ingredients",
        "title": "Feed url\nURL to the feed's regular page.",
        "description": "URL to the feed's regular page.",
        "details": {
          "Slug": "FeedUrl",
          "Filter code": "Feed.newFeedItem.FeedUrl",
          "Type": "String",
          "Example": "http://blog.ifttt.com/"
        }
      }
    ],
    "action_channel": "Email Digest",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "email_digest.send_weekly_email",
      "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)",
      "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Time of day\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Time of day",
          "Slug": "time_of_day",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"
        }
      },
      {
        "section": "Action fields",
        "title": "Day of week\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Day of week",
          "Slug": "day_of_week",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Slug": "title",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input > HTML",
        "description": "Text input > HTML",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Item URL",
          "Helper text": "Optional",
          "Slug": "url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Turn off your lights when your vehicle exits a Geo-Circle, so that you can save energy and money when you're not home.",
    "trigger_channel": "Bouncie",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "bouncie.geo_circle_exit"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Circle\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Circle",
          "Helper text": "The circle that was exited",
          "Slug": "circle",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Ingredients",
        "title": "Created at\nDate and time event was created.",
        "description": "Date and time event was created.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Bouncie.geoCircleExit.CreatedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Time\nThe time the bouncie device recorded the breach.",
        "description": "The time the bouncie device recorded the breach.",
        "details": {
          "Slug": "time",
          "Filter code": "Bouncie.geoCircleExit.Time",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Vehicle name\nThe vehicle name of the vehicle that exited.",
        "description": "The vehicle name of the vehicle that exited.",
        "details": {
          "Slug": "vehicle_name",
          "Filter code": "Bouncie.geoCircleExit.VehicleName",
          "Type": "String",
          "Example": "Marley's Fiat"
        }
      },
      {
        "section": "Ingredients",
        "title": "Circle name\nThe name of the circle that was exited",
        "description": "The name of the circle that was exited",
        "details": {
          "Slug": "circle_name",
          "Filter code": "Bouncie.geoCircleExit.CircleName",
          "Type": "String",
          "Example": "Home"
        }
      }
    ],
    "action_channel": "Philips Hue",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "hue.turn_off_all_hue",
      "Filter code method": "Hue.turnOffAllHue.skip(string?: reason)",
      "Runtime method": "runAction(\"hue.turn_off_all_hue\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Lights\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which lights?",
          "Slug": "lights",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Choose the cheaper lunch? Skipped the daily Starbucks? Click Flic to save the money for your travel instead! ",
    "trigger_channel": "Flic",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "flic.click"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Button uuid\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Flic Name",
          "Helper text": "The name of the Flic you want to trigger.",
          "Slug": "button_uuid",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Trigger fields",
        "title": "Click type\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Flic Click Type",
          "Slug": "click_type",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Longitude\nLongitude of the button press.",
        "description": "Longitude of the button press.",
        "details": {
          "Slug": "longitude",
          "Filter code": "Flic.click.Longitude",
          "Type": "String",
          "Example": "18.0649000"
        }
      },
      {
        "section": "Ingredients",
        "title": "Latitude\nLatitude of the button press.",
        "description": "Latitude of the button press.",
        "details": {
          "Slug": "latitude",
          "Filter code": "Flic.click.Latitude",
          "Type": "String",
          "Example": "59.3325800"
        }
      },
      {
        "section": "Ingredients",
        "title": "Clicked at\nDate and time Flic was clicked.",
        "description": "Date and time Flic was clicked.",
        "details": {
          "Slug": "created_at",
          "Filter code": "Flic.click.ClickedAt",
          "Type": "Date with time (ISO8601)",
          "Example": "2020-07-08T04:17:06+05:00"
        }
      },
      {
        "section": "Ingredients",
        "title": "Click type\nThe click type of the event: 'click', 'double_click' or 'hold'.",
        "description": "The click type of the event: 'click', 'double_click' or 'hold'.",
        "details": {
          "Slug": "click_type",
          "Filter code": "Flic.click.ClickType",
          "Type": "String",
          "Example": "double_click"
        }
      }
    ],
    "action_channel": "Qapital",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "qapital.save_toward_goal",
      "Filter code method": "Qapital.saveTowardGoal.skip(string?: reason)",
      "Runtime method": "runAction(\"qapital.save_toward_goal\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Goal\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Which goal?",
          "Slug": "goal",
          "Required": "true",
          "Can have default value": "false"
        }
      },
      {
        "section": "Action fields",
        "title": "Amount\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Amount to transfer",
          "Slug": "amount",
          "Required": "true",
          "Can have default value": "false"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "This Applet sends you a list of new BEA data weekly so you can catch up on the latest without crowding your inbox.",
    "trigger_channel": "Bureau of Economic Analysis",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "bea.new_data_from_the_bea"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Query\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Filter by keyword (optional)",
          "Slug": "query",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "Bea.newDataFromTheBea.EntryTitle",
          "Type": "String",
          "Example": "Personal Income and Outlays, April 2017"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "Bea.newDataFromTheBea.EntryUrl",
          "Type": "String",
          "Example": "https://www.bea.gov/newsreleases/national/pi/2017/pi0417.htm"
        }
      },
      {
        "section": "Ingredients",
        "title": "Preview content\nA preview of the entry's content, contains HTML.",
        "description": "A preview of the entry's content, contains HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "Bea.newDataFromTheBea.PreviewContent",
          "Type": "String",
          "Example": "Personal income increased $58.4 billion (0.4 percent) in April according to estimates released today by the Bureau of Economic Analysis. Disposable personal income (DPI) increased $56.5 billion (0.4 percent) and personal consumption expenditures (PCE)..."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "Bea.newDataFromTheBea.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Email Digest",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "email_digest.send_weekly_email",
      "Filter code method": "EmailDigest.sendWeeklyEmail.skip(string?: reason)",
      "Runtime method": "runAction(\"email_digest.send_weekly_email\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Time of day\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Time of day",
          "Slug": "time_of_day",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setTime Of Day(string: time_of_day)"
        }
      },
      {
        "section": "Action fields",
        "title": "Day of week\nDropdown list",
        "description": "Dropdown list",
        "details": {
          "Label": "Day of week",
          "Slug": "day_of_week",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setDay Of Week(string: day_of_week)"
        }
      },
      {
        "section": "Action fields",
        "title": "Title\nText input > Title",
        "description": "Text input > Title",
        "details": {
          "Label": "Title",
          "Slug": "title",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setTitle(string: title)"
        }
      },
      {
        "section": "Action fields",
        "title": "Message\nText input > HTML",
        "description": "Text input > HTML",
        "details": {
          "Label": "Message",
          "Slug": "message",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setMessage(string: message)"
        }
      },
      {
        "section": "Action fields",
        "title": "Url\nText input > Link",
        "description": "Text input > Link",
        "details": {
          "Label": "Item URL",
          "Helper text": "Optional",
          "Slug": "url",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "EmailDigest.sendWeeklyEmail.setUrl(string: url)"
        }
      }
    ],
    "filter_code": ""
  },
  {
    "original_description": "Keep a tracker of BEA releases. This Applet adds a new row whenever new data is published.",
    "trigger_channel": "Bureau of Economic Analysis",
    "trigger_permission_id": "",
    "trigger_developer_info": {
      "API endpoint slug": "bea.new_data_from_the_bea"
    },
    "trigger_details": [
      {
        "section": "Trigger fields",
        "title": "Query\nText input > Other",
        "description": "Text input > Other",
        "details": {
          "Label": "Filter by keyword (optional)",
          "Slug": "query",
          "Required": "true",
          "Can have default value": "true"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry title\nThe entry's title.",
        "description": "The entry's title.",
        "details": {
          "Slug": "EntryTitle",
          "Filter code": "Bea.newDataFromTheBea.EntryTitle",
          "Type": "String",
          "Example": "Personal Income and Outlays, April 2017"
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry url\nThe entry's URL.",
        "description": "The entry's URL.",
        "details": {
          "Slug": "EntryUrl",
          "Filter code": "Bea.newDataFromTheBea.EntryUrl",
          "Type": "String",
          "Example": "https://www.bea.gov/newsreleases/national/pi/2017/pi0417.htm"
        }
      },
      {
        "section": "Ingredients",
        "title": "Preview content\nA preview of the entry's content, contains HTML.",
        "description": "A preview of the entry's content, contains HTML.",
        "details": {
          "Slug": "EntryContent",
          "Filter code": "Bea.newDataFromTheBea.PreviewContent",
          "Type": "String",
          "Example": "Personal income increased $58.4 billion (0.4 percent) in April according to estimates released today by the Bureau of Economic Analysis. Disposable personal income (DPI) increased $56.5 billion (0.4 percent) and personal consumption expenditures (PCE)..."
        }
      },
      {
        "section": "Ingredients",
        "title": "Entry published\nDate entry was created.",
        "description": "Date entry was created.",
        "details": {
          "Slug": "EntryPublished",
          "Filter code": "Bea.newDataFromTheBea.EntryPublished",
          "Type": "String",
          "Example": "August 23, 2010 at 11:01PM"
        }
      }
    ],
    "action_channel": "Google Sheets",
    "action_permission_id": "",
    "action_developer_info": {
      "API endpoint slug": "google_sheets.append_to_google_spreadsheet",
      "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.skip(string?: reason)",
      "Runtime method": "runAction(\"google_sheets.append_to_google_spreadsheet\", {})"
    },
    "action_details": [
      {
        "section": "Action fields",
        "title": "Filename\nText input > Document title",
        "description": "Text input > Document title",
        "details": {
          "Label": "Spreadsheet name",
          "Helper text": "Will create a new spreadsheet if one with this title doesn’t exist",
          "Slug": "filename",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFilename(string: filename)"
        }
      },
      {
        "section": "Action fields",
        "title": "Formatted row\nText input",
        "description": "Text input",
        "details": {
          "Label": "Formatted row",
          "Helper text": "Use “|||” to separate cells",
          "Slug": "formatted_row",
          "Required": "true",
          "Can have default value": "true",
          "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setFormatted Row(string: formatted_row)"
        }
      },
      {
        "section": "Action fields",
        "title": "Path\nText input > Path to a folder",
        "description": "Text input > Path to a folder",
        "details": {
          "Label": "Drive folder path",
          "Helper text": "Format: some/folder/path (defaults to “IFTTT”)",
          "Slug": "path",
          "Required": "false",
          "Can have default value": "true",
          "Filter code method": "GoogleSheets.appendToGoogleSpreadsheet.setPath(string: path)"
        }
      }
    ],
    "filter_code": ""
  }
]